#pragma once
#include <cstdint>
#include "!GlobalTypes.hpp"

// /////////////////////////////////////////////////////////////
// Binary: server.dll
// Classes count: 6,586 (Allocated) | 6,656 (Unallocated)
// Enums count: 3 (Allocated) | 36 (Unallocated)
// Created using source2gen - github.com/neverlosecc/source2gen
// /////////////////////////////////////////////////////////////

// Registered binary: server.dll (project 'server')
// Enumerator count: 3
// Alignment: 4
// Size: 0x4
enum class CDOTA_BaseNPC_AghsFort_Watch_Tower__ExitDirection_t : std::uint32_t
{
	EXIT_DIRECTION_LEFT = 0x0,
	EXIT_DIRECTION_TOP = 0x1,
	EXIT_DIRECTION_RIGHT = 0x2,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 4
// Alignment: 4
// Size: 0x4
enum class CLogicBranchList__LogicBranchListenerLastState_t : std::uint32_t
{
	LOGIC_BRANCH_LISTENER_NOT_INIT = 0x0,
	LOGIC_BRANCH_LISTENER_ALL_TRUE = 0x1,
	LOGIC_BRANCH_LISTENER_ALL_FALSE = 0x2,
	LOGIC_BRANCH_LISTENER_MIXED = 0x3,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 3
// Alignment: 4
// Size: 0x4
enum class CFuncMover__Move_t : std::uint32_t
{
	MOVE_LOOP = 0x0,
	MOVE_OSCILLATE = 0x1,
	MOVE_STOP_AT_END = 0x2,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 31
// Alignment: 4
// Size: 0x4
enum class ELanguage : std::uint32_t
{
	k_Lang_None = 0xffffffff,
	k_Lang_First = 0x0,
	k_Lang_English = 0x0,
	k_Lang_German = 0x1,
	k_Lang_French = 0x2,
	k_Lang_Italian = 0x3,
	k_Lang_Korean = 0x4,
	k_Lang_Spanish = 0x5,
	k_Lang_Simplified_Chinese = 0x6,
	k_Lang_Traditional_Chinese = 0x7,
	k_Lang_Russian = 0x8,
	k_Lang_Thai = 0x9,
	k_Lang_Japanese = 0xa,
	k_Lang_Portuguese = 0xb,
	k_Lang_Polish = 0xc,
	k_Lang_Danish = 0xd,
	k_Lang_Dutch = 0xe,
	k_Lang_Finnish = 0xf,
	k_Lang_Norwegian = 0x10,
	k_Lang_Swedish = 0x11,
	k_Lang_Hungarian = 0x12,
	k_Lang_Czech = 0x13,
	k_Lang_Romanian = 0x14,
	k_Lang_Turkish = 0x15,
	k_Lang_Brazilian = 0x16,
	k_Lang_Bulgarian = 0x17,
	k_Lang_Greek = 0x18,
	k_Lang_Ukrainian = 0x19,
	k_Lang_Latam_Spanish = 0x1a,
	k_Lang_Vietnamese = 0x1b,
	k_Lang_MAX = 0x1c,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 2
// Alignment: 4
// Size: 0x4
enum class SceneOnPlayerDeath_t : std::uint32_t
{
	SCENE_ONPLAYERDEATH_DO_NOTHING = 0x0,
	SCENE_ONPLAYERDEATH_CANCEL = 0x1,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 3
// Alignment: 4
// Size: 0x4
enum class LessonPanelLayoutFileTypes_t : std::uint32_t
{
	LAYOUT_HAND_DEFAULT = 0x0,
	LAYOUT_WORLD_DEFAULT = 0x1,
	LAYOUT_CUSTOM = 0x2,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 3
// Alignment: 4
// Size: 0x4
enum class Explosions : std::uint32_t
{
	expRandom = 0x0,
	expDirected = 0x1,
	expUsePrecise = 0x2,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 4
// Alignment: 4
// Size: 0x4
enum class TrainOrientationType_t : std::uint32_t
{
	TrainOrientation_Fixed = 0x0,
	TrainOrientation_AtPathTracks = 0x1,
	TrainOrientation_LinearBlend = 0x2,
	TrainOrientation_EaseInEaseOut = 0x3,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 12
// Alignment: 2
// Size: 0x2
enum class SoundTypes_t : std::uint16_t
{
	SOUND_NONE = 0x0,
	SOUND_COMBAT = 0x1,
	SOUND_PLAYER = 0x2,
	SOUND_DANGER = 0x3,
	SOUND_BULLET_IMPACT = 0x4,
	SOUND_THUMPER = 0x5,
	SOUND_PHYSICS_DANGER = 0x6,
	SOUND_MOVE_AWAY = 0x7,
	SOUND_PLAYER_VEHICLE = 0x8,
	SOUND_GLASS_BREAK = 0x9,
	SOUND_PHYSICS_OBJECT = 0xa,
	NUM_AI_SOUND_TYPES = 0xb,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 3
// Alignment: 4
// Size: 0x4
enum class CreatureAbilityType : std::uint32_t
{
	CREATURE_ABILITY_OFFENSIVE = 0x0,
	CREATURE_ABILITY_DEFENSIVE = 0x1,
	CREATURE_ABILITY_ESCAPE = 0x2,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 5
// Alignment: 4
// Size: 0x4
enum class CHeadLookParams__HeadLookPriority_t : std::uint32_t
{
	BORING = 0x0,
	INTERESTING = 0x1,
	IMPORTANT = 0x2,
	CRITICAL = 0x3,
	MANDATORY = 0x4,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 5
// Alignment: 4
// Size: 0x4
enum class IBody__PostureType : std::uint32_t
{
	STAND = 0x0,
	CROUCH = 0x1,
	SIT = 0x2,
	CRAWL = 0x3,
	LIE = 0x4,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 8
// Alignment: 4
// Size: 0x4
enum class MLBot_MessageId : std::uint32_t
{
	mlbot_MatchMetadata = 0x1,
	mlbot_TickBoundary = 0x2,
	mlbot_TeamState_Radiant = 0x3,
	mlbot_TeamState_Radiant_Delta = 0x4,
	mlbot_TeamState_Dire = 0x5,
	mlbot_TeamState_Dire_Delta = 0x6,
	mlbot_PlayerCommand = 0x7,
	mlbot_PlayerOrder = 0x8,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 12
// Alignment: 4
// Size: 0x4
enum class Materials : std::uint32_t
{
	matGlass = 0x0,
	matWood = 0x1,
	matMetal = 0x2,
	matFlesh = 0x3,
	matCinderBlock = 0x4,
	matCeilingTile = 0x5,
	matComputer = 0x6,
	matUnbreakableGlass = 0x7,
	matRocks = 0x8,
	matWeb = 0x9,
	matNone = 0xa,
	matLastMaterial = 0xb,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 9
// Alignment: 2
// Size: 0x2
enum class SoundFlags_t : std::uint16_t
{
	// MPropertySuppressEnumerator
	// MEnumeratorIsNotAFlag
	SOUND_FLAGS_NONE = 0x0,
	SOUND_FLAG_GUNFIRE = 0x1,
	SOUND_FLAG_COMBINE_ONLY = 0x2,
	SOUND_FLAG_REACT_TO_SOURCE = 0x4,
	SOUND_FLAG_EXPLOSION = 0x8,
	SOUND_FLAG_EXCLUDE_COMBINE = 0x10,
	SOUND_FLAG_DANGER_APPROACH = 0x20,
	SOUND_FLAG_ALLIES_ONLY = 0x40,
	SOUND_FLAG_PANIC_NPCS = 0x80,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 2
// Alignment: 4
// Size: 0x4
enum class filter_t : std::uint32_t
{
	FILTER_AND = 0x0,
	FILTER_OR = 0x1,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 5
// Alignment: 4
// Size: 0x4
enum class Touch_t : std::uint32_t
{
	touch_none = 0x0,
	touch_player_only = 0x1,
	touch_npc_only = 0x2,
	touch_player_or_npc = 0x3,
	touch_player_or_npc_or_physicsprop = 0x4,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 3
// Alignment: 4
// Size: 0x4
enum class TrainVelocityType_t : std::uint32_t
{
	TrainVelocity_Instantaneous = 0x0,
	TrainVelocity_LinearBlend = 0x1,
	TrainVelocity_EaseInEaseOut = 0x2,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 3
// Alignment: 4
// Size: 0x4
enum class EntFinderMethod_t : std::uint32_t
{
	ENT_FIND_METHOD_NEAREST = 0x0,
	ENT_FIND_METHOD_FARTHEST = 0x1,
	ENT_FIND_METHOD_RANDOM = 0x2,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 3
// Alignment: 4
// Size: 0x4
enum class ForcedCrouchState_t : std::uint32_t
{
	FORCEDCROUCH_NONE = 0x0,
	FORCEDCROUCH_CROUCHED = 0x1,
	FORCEDCROUCH_UNCROUCHED = 0x2,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 8
// Alignment: 4
// Size: 0x4
enum class TOGGLE_STATE : std::uint32_t
{
	TS_AT_TOP = 0x0,
	TS_AT_BOTTOM = 0x1,
	TS_GOING_UP = 0x2,
	TS_GOING_DOWN = 0x3,
	DOOR_OPEN = 0x0,
	DOOR_CLOSED = 0x1,
	DOOR_OPENING = 0x2,
	DOOR_CLOSING = 0x3,
};

// Registered binary: server.dll (project 'navlib')
// Enumerator count: 20
// Alignment: 4
// Size: 0x4
enum class NavAttributeEnum : std::uint32_t
{
	NAV_MESH_AVOID = 0x80,
	NAV_MESH_STAIRS = 0x1000,
	NAV_MESH_NON_ZUP = 0x8000,
	NAV_MESH_SHORT_HEIGHT = 0x10000,
	NAV_MESH_NON_ZUP_TRANSITION = 0x20000,
	NAV_MESH_CROUCH = 0x10000,
	NAV_MESH_JUMP = 0x2,
	NAV_MESH_PRECISE = 0x4,
	NAV_MESH_NO_JUMP = 0x8,
	NAV_MESH_STOP = 0x10,
	NAV_MESH_RUN = 0x20,
	NAV_MESH_WALK = 0x40,
	NAV_MESH_TRANSIENT = 0x100,
	NAV_MESH_DONT_HIDE = 0x200,
	NAV_MESH_STAND = 0x400,
	NAV_MESH_NO_HOSTAGES = 0x800,
	NAV_MESH_NO_MERGE = 0x2000,
	NAV_MESH_OBSTACLE_TOP = 0x4000,
	NAV_ATTR_FIRST_GAME_INDEX = 0x13,
	NAV_ATTR_LAST_INDEX = 0x1f,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 3
// Alignment: 4
// Size: 0x4
enum class MoveLinearAuthoredPos_t : std::uint32_t
{
	MOVELINEAR_AUTHORED_AT_START_POSITION = 0x0,
	MOVELINEAR_AUTHORED_AT_OPEN_POSITION = 0x1,
	MOVELINEAR_AUTHORED_AT_CLOSED_POSITION = 0x2,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 12
// Alignment: 4
// Size: 0x4
enum class Hull_t : std::uint32_t
{
	HULL_HUMAN = 0x0,
	HULL_SMALL_CENTERED = 0x1,
	HULL_WIDE_HUMAN = 0x2,
	HULL_TINY = 0x3,
	HULL_MEDIUM = 0x4,
	HULL_TINY_CENTERED = 0x5,
	HULL_LARGE = 0x6,
	HULL_LARGE_CENTERED = 0x7,
	HULL_MEDIUM_TALL = 0x8,
	HULL_SMALL = 0x9,
	NUM_HULLS = 0xa,
	HULL_NONE = 0xb,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 4
// Alignment: 4
// Size: 0x4
enum class ScriptedMoveType_t : std::uint32_t
{
	SCRIPTED_MOVETYPE_NONE = 0x0,
	SCRIPTED_MOVETYPE_TO_WITH_DURATION = 0x1,
	SCRIPTED_MOVETYPE_TO_WITH_MOVESPEED = 0x2,
	SCRIPTED_MOVETYPE_SWEEP_TO_AT_MOVEMENT_SPEED = 0x3,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 6
// Alignment: 4
// Size: 0x4
enum class PetCoopStates_t : std::uint32_t
{
	COOP_IGNORE = 0x0,
	COOPTELEPORT_START_PERFORMING = 0x1,
	COOPTELEPORT_PLAY_ENDANIM = 0x2,
	COOPTELEPORT_PLAY_EXITANIM = 0x3,
	COOP_WARD_OBSERVER = 0x4,
	COOP_WARD_SENTRY = 0x5,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 2
// Alignment: 4
// Size: 0x4
enum class ScriptedConflictResponse_t : std::uint32_t
{
	SS_CONFLICT_ENQUEUE = 0x0,
	SS_CONFLICT_INTERRUPT = 0x1,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 4
// Alignment: 4
// Size: 0x4
enum class EPoorNetworkConditionsType : std::uint32_t
{
	k_EPoorNetworkConditions_None = 0x0,
	k_EPoorNetworkConditions_Unknown = 0x1,
	k_EPoorNetworkConditions_MassDisconnect = 0x2,
	k_EPoorNetworkConditions_ExcessBadQosIntervals = 0x3,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 3
// Alignment: 4
// Size: 0x4
enum class TrackOrientationType_t : std::uint32_t
{
	TrackOrientation_Fixed = 0x0,
	TrackOrientation_FacePath = 0x1,
	TrackOrientation_FacePathAngles = 0x2,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 5
// Alignment: 4
// Size: 0x4
enum class ObstructionRelationshipClass_t : std::uint32_t
{
	DOTA_OBSTRUCTION_RELATIONSHIP_NONE = 0x0,
	DOTA_OBSTRUCTION_RELATIONSHIP_BUILDING = 0x1,
	DOTA_OBSTRUCTION_RELATIONSHIP_PLAYER_CONTROLLED = 0x2,
	DOTA_OBSTRUCTION_RELATIONSHIP_NPC = 0x3,
	DOTA_OBSTRUCTION_RELATIONSHIP_LAST = 0x4,
};

// Registered binary: server.dll (project 'navlib')
// Enumerator count: 5
// Alignment: 4
// Size: 0x4
enum class NavDirType : std::uint32_t
{
	NORTH = 0x0,
	EAST = 0x1,
	SOUTH = 0x2,
	WEST = 0x3,
	NUM_NAV_DIR_TYPE_DIRECTIONS = 0x4,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 3
// Alignment: 4
// Size: 0x4
enum class SimpleConstraintSoundProfile__SimpleConstraintsSoundProfileKeypoints_t : std::uint32_t
{
	kMIN_THRESHOLD = 0x0,
	kMIN_FULL = 0x1,
	kHIGHWATER = 0x2,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 1
// Alignment: 4
// Size: 0x4
enum class navproperties_t : std::uint32_t
{
	NAV_IGNORE = 0x1,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 3
// Alignment: 4
// Size: 0x4
enum class eSplinePushType : std::uint32_t
{
	// MPropertyFriendlyName "Along Spline Direction"
	k_eSplinePushAlong = 0x0,
	// MPropertyFriendlyName "Away from closest point"
	k_eSplinePushAway = 0x1,
	// MPropertyFriendlyName "Towards closest point"
	k_eSplinePushTowards = 0x2,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 3
// Alignment: 4
// Size: 0x4
enum class TRAIN_CODE : std::uint32_t
{
	TRAIN_SAFE = 0x0,
	TRAIN_BLOCKING = 0x1,
	TRAIN_FOLLOWING = 0x2,
};

// Registered binary: server.dll (project 'server')
// Enumerator count: 3
// Alignment: 4
// Size: 0x4
enum class EOverrideBlockLOS_t : std::uint32_t
{
	BLOCK_LOS_DEFAULT = 0x0,
	BLOCK_LOS_FORCE_FALSE = 0x1,
	BLOCK_LOS_FORCE_TRUE = 0x2,
};

struct GameTime_t;
struct PlayerID_t;
struct CEntityIOOutput;
struct ParticleIndex_t;
struct fogparams_t;
struct CountdownTimer;
struct CDOTA_BaseNPC;
struct CSkeletonInstance;
struct CPathSimple;
struct attrib_definition_index_t;
struct CBaseAnimatingOverlayController;
struct CDOTABehaviorMoveTo;
struct fogplayerparams_t;
struct audioparams_t;
struct CNetworkVarChainer;
struct CGameSceneNode;
struct CModelState;
struct CBaseAnimGraphController;
struct GameTick_t;
struct CDOTA_ModifierManager;
struct CLocomotionBase;
struct IBody;
struct CUnitOrders;
struct CDOTA_UnitInventory;
struct CLocalNPCObstructionsCache;
struct item_definition_index_t;
struct CPhysicsShake;
struct CPathKeyFrame;
struct itemid_t;
struct AbilityID_t;
struct AttachmentHandle_t;
struct GuildID_t;
struct CEconItemView;
struct CPathTrack;
struct CFuncTrackTrain;
struct CSoundPatch;
struct HSequence;
struct IChoreoServices;
struct PhysicsRagdollPose_t;
struct CDOTA_Tree;
struct ragdoll_t;
struct CDOTABaseAbility;
struct CDOTA_ArcanaDataEntity_DrowRanger;
struct CDOTA_ArcanaDataEntity_FacelessVoid;
struct CDOTA_ArcanaDataEntity_Razor;
struct CDOTA_Buff;
struct AmmoIndex_t;
struct CDotaEntityFilterFlags;
struct dynpitchvol_t;
struct ModelConfigHandle_t;
struct CModifierParams;
struct CDOTA_BaseNPC_Hero::KillInfo_t;
struct sLoadoutItem;
struct CDOTAMusicProbabilityEntry;
struct CNetworkedSequenceOperation;
struct sky3dparams_t;
struct CSkyCamera;
struct CPointCamera;
struct CDOTASpectatorGraphManager;
struct CAttributeManager;
struct CDOTAGameRules;
struct CMotorController;
struct CInButtonState;
struct CSkillFloat;
struct ConstraintSoundInfo;
struct CLightComponent;
struct CRenderComponent;
struct CHitboxComponent;
struct CCollisionProperty;
struct CGlowProperty;
struct CNetworkViewOffsetVector;
struct sSpiritInfo;
struct PeriodicResourceID_t;
struct CDOTA_TeamCommander;
struct CConstantForceController;
struct CBaseAnimatingController;
struct TrackedStatID_t;
struct TrackedStatValue_t;
struct CDOTAGameManager;
struct CAttributeContainer;
struct VPhysicsCollisionAttribute_t;
struct CavernCrawlMapVariant_t;
struct CSequenceTransitioner2;
struct ChangeAccessorFieldPathIndex_t;
struct CEntityIdentity;
struct style_index_t;
struct CAttributeList;
struct CPlayer_WeaponServices;
struct CPlayer_ItemServices;
struct CPlayer_AutoaimServices;
struct CPlayer_ObserverServices;
struct CPlayer_WaterServices;
struct CPlayer_UseServices;
struct CPlayer_FlashlightServices;
struct CPlayer_CameraServices;
struct CPlayer_MovementServices;
struct CAI_Expresser;
struct CDOTA_CreepKillInfo;
struct constraint_hingeparams_t;
struct CScriptComponent;
struct LeagueID_t;
struct DOTA_AssassinMinigameNetworkState;
struct MatchID_t;
struct EngineCountdownTimer;
struct CEntityInstance;
struct CGameSceneNodeHandle;
struct CNetworkOriginCellCoordQuantizedVector;
struct CBodyComponent;
struct CNetworkTransmitComponent;
struct CNetworkVelocityVector;
struct AISound_t;
struct CBaseFlex;
struct VelocitySampler;
struct SimpleConstraintSoundProfile;
struct INextBotReply;
struct CRR_Response;
struct ResponseFollowup;
struct CResponseCriteriaSet;

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BigThunderLizard_Slam : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Blessings_Debuff_Duration_Increase : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// Is Abstract
// MNetworkAssumeNotNetworkable
class CDOTA_Buff_Item : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'entity2')
// Alignment: 8
// Size: 0x38
// Has VTable
// Construct disallowed
// MConstructibleClassBase
// 
// MNetworkVarNames "CEntityIdentity * m_pEntity"
// MNetworkVarNames "CScriptComponent::Storage_t m_CScriptComponent"
class CEntityInstance
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkDisable
	CUtlSymbolLarge m_iszPrivateVScripts; // 0x8	
	// MNetworkEnable
	// MNetworkPriority "56"
	CEntityIdentity* m_pEntity; // 0x10	
private:
	[[maybe_unused]] uint8_t __pad0018[0x10]; // 0x18
public:
	// MNetworkEnable
	// MNetworkDisable
	CScriptComponent* m_CScriptComponent; // 0x28	
	bool m_bVisibleinPVS; // 0x30	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkExcludeByName "m_bClientSideRagdoll"
// MNetworkExcludeByName "m_iMaxHealth"
// MNetworkExcludeByUserGroup "Water"
// MNetworkExcludeByUserGroup "Player"
// MNetworkExcludeByUserGroup "LocalPlayerExclusive"
// MNetworkExcludeByName "m_spawnflags"
// MNetworkExcludeByName "m_bTakesDamage"
// MNetworkExcludeByName "m_nTakeDamageFlags"
// MNetworkExcludeByName "m_flSpeed"
// MNetworkVarNames "CBodyComponent::Storage_t m_CBodyComponent"
// MNetworkVarNames "int32 m_iHealth"
// MNetworkVarNames "int32 m_iMaxHealth"
// MNetworkVarNames "uint8 m_lifeState"
// MNetworkVarNames "DamageOptions_t m_takedamage"
// MNetworkVarNames "bool m_bTakesDamage"
// MNetworkVarNames "TakeDamageFlags_t m_nTakeDamageFlags"
// MNetworkVarNames "bool m_bIsPlatform"
// MNetworkVarNames "MoveCollide_t m_MoveCollide"
// MNetworkVarNames "MoveType_t m_MoveType"
// MNetworkVarNames "EntitySubclassID_t m_nSubclassID"
// MNetworkVarNames "float32 m_flAnimTime"
// MNetworkVarNames "float32 m_flSimulationTime"
// MNetworkVarNames "GameTime_t m_flCreateTime"
// MNetworkVarNames "bool m_bClientSideRagdoll"
// MNetworkVarNames "uint8 m_ubInterpolationFrame"
// MNetworkVarNames "uint8 m_iTeamNum"
// MNetworkVarNames "float m_flSpeed"
// MNetworkVarNames "uint32 m_spawnflags"
// MNetworkVarNames "GameTick_t m_nNextThinkTick"
// MNetworkVarNames "uint32 m_fFlags"
// MNetworkVarNames "CNetworkVelocityVector m_vecVelocity"
// MNetworkVarNames "CHandle< CBaseEntity> m_hEffectEntity"
// MNetworkVarNames "CHandle< CBaseEntity> m_hOwnerEntity"
// MNetworkVarNames "uint32 m_fEffects"
// MNetworkVarNames "CHandle< CBaseEntity> m_hGroundEntity"
// MNetworkVarNames "int m_nGroundBodyIndex"
// MNetworkVarNames "float32 m_flFriction"
// MNetworkVarNames "float32 m_flElasticity"
// MNetworkVarNames "float32 m_flGravityScale"
// MNetworkVarNames "float32 m_flTimeScale"
// MNetworkVarNames "float m_flWaterLevel"
// MNetworkVarNames "bool m_bAnimatedEveryTick"
// MNetworkVarNames "GameTime_t m_flNavIgnoreUntilTime"
class CBaseEntity : public CEntityInstance
{
public:
	// MNetworkEnable
	// MNetworkUserGroup "CBodyComponent"
	// MNetworkAlias "CBodyComponent"
	// MNetworkTypeAlias "CBodyComponent"
	// MNetworkPriority "48"
	CBodyComponent* m_CBodyComponent; // 0x38	
	CNetworkTransmitComponent m_NetworkTransmitComponent; // 0x40	
private:
	[[maybe_unused]] uint8_t __pad01e0[0x40]; // 0x1e0
public:
	CUtlVector< thinkfunc_t > m_aThinkFunctions; // 0x220	
	int32_t m_iCurrentThinkContext; // 0x238	
	GameTick_t m_nLastThinkTick; // 0x23c	
	bool m_bDisabledContextThinks; // 0x240	
private:
	[[maybe_unused]] uint8_t __pad0241[0xf]; // 0x241
public:
	CBitVec< 64 > m_isSteadyState; // 0x250	
	float m_lastNetworkChange; // 0x258	
private:
	[[maybe_unused]] uint8_t __pad025c[0xc]; // 0x25c
public:
	CUtlVector< ResponseContext_t > m_ResponseContexts; // 0x268	
	CUtlSymbolLarge m_iszResponseContext; // 0x280	
private:
	[[maybe_unused]] uint8_t __pad0288[0x20]; // 0x288
public:
	// MNetworkEnable
	// MNetworkSerializer "ClampHealth"
	// MNetworkUserGroup "Player"
	// MNetworkPriority "32"
	int32_t m_iHealth; // 0x2a8	
	// MNetworkEnable
	int32_t m_iMaxHealth; // 0x2ac	
	// MNetworkEnable
	// MNetworkUserGroup "Player"
	// MNetworkPriority "32"
	uint8_t m_lifeState; // 0x2b0	
private:
	[[maybe_unused]] uint8_t __pad02b1[0x3]; // 0x2b1
public:
	float m_flDamageAccumulator; // 0x2b4	
	// MNetworkEnable
	DamageOptions_t m_takedamage; // 0x2b8	
	// MNetworkEnable
	bool m_bTakesDamage; // 0x2b9	
private:
	[[maybe_unused]] uint8_t __pad02ba[0x2]; // 0x2ba
public:
	// MNetworkEnable
	TakeDamageFlags_t m_nTakeDamageFlags; // 0x2bc	
	// MNetworkEnable
	bool m_bIsPlatform; // 0x2c0	
private:
	[[maybe_unused]] uint8_t __pad02c1[0x1]; // 0x2c1
public:
	// MNetworkEnable
	MoveCollide_t m_MoveCollide; // 0x2c2	
	// MNetworkEnable
	MoveType_t m_MoveType; // 0x2c3	
	MoveType_t m_nActualMoveType; // 0x2c4	
	uint8_t m_nWaterTouch; // 0x2c5	
	uint8_t m_nSlimeTouch; // 0x2c6	
	bool m_bRestoreInHierarchy; // 0x2c7	
	CUtlSymbolLarge m_target; // 0x2c8	
	CHandle< CBaseFilter > m_hDamageFilter; // 0x2d0	
private:
	[[maybe_unused]] uint8_t __pad02d4[0x4]; // 0x2d4
public:
	CUtlSymbolLarge m_iszDamageFilterName; // 0x2d8	
	float m_flMoveDoneTime; // 0x2e0	
	// MNetworkEnable
	// MNetworkSendProxyRecipientsFilter
	CUtlStringToken m_nSubclassID; // 0x2e4	
private:
	[[maybe_unused]] uint8_t __pad02e8[0x8]; // 0x2e8
public:
	// MNetworkEnable
	// MNetworkPriority "0"
	// MNetworkSerializer "animTimeSerializer"
	// MNetworkSendProxyRecipientsFilter
	float m_flAnimTime; // 0x2f0	
	// MNetworkEnable
	// MNetworkPriority "1"
	// MNetworkSerializer "simulationTimeSerializer"
	// MNetworkSendProxyRecipientsFilter
	float m_flSimulationTime; // 0x2f4	
	// MNetworkEnable
	GameTime_t m_flCreateTime; // 0x2f8	
	// MNetworkEnable
	bool m_bClientSideRagdoll; // 0x2fc	
	// MNetworkEnable
	uint8_t m_ubInterpolationFrame; // 0x2fd	
private:
	[[maybe_unused]] uint8_t __pad02fe[0x2]; // 0x2fe
public:
	Vector m_vPrevVPhysicsUpdatePos; // 0x300	
	// MNetworkEnable
	uint8_t m_iTeamNum; // 0x30c	
private:
	[[maybe_unused]] uint8_t __pad030d[0x3]; // 0x30d
public:
	CUtlSymbolLarge m_iGlobalname; // 0x310	
	int32_t m_iSentToClients; // 0x318	
	// MNetworkEnable
	float m_flSpeed; // 0x31c	
	CUtlString m_sUniqueHammerID; // 0x320	
	// MNetworkEnable
	uint32_t m_spawnflags; // 0x328	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	GameTick_t m_nNextThinkTick; // 0x32c	
	int32_t m_nSimulationTick; // 0x330	
private:
	[[maybe_unused]] uint8_t __pad0334[0x4]; // 0x334
public:
	CEntityIOOutput m_OnKilled; // 0x338	
	// MNetworkEnable
	// MNetworkPriority "32"
	// MNetworkUserGroup "Player"
	uint32_t m_fFlags; // 0x360	
	Vector m_vecAbsVelocity; // 0x364	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	// MNetworkPriority "32"
	CNetworkVelocityVector m_vecVelocity; // 0x370	
private:
	[[maybe_unused]] uint8_t __pad0398[0x8]; // 0x398
public:
	int32_t m_nPushEnumCount; // 0x3a0	
private:
	[[maybe_unused]] uint8_t __pad03a4[0x4]; // 0x3a4
public:
	CCollisionProperty* m_pCollision; // 0x3a8	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hEffectEntity; // 0x3b0	
	// MNetworkEnable
	// MNetworkPriority "32"
	CHandle< CBaseEntity > m_hOwnerEntity; // 0x3b4	
	// MNetworkEnable
	// MNetworkChangeCallback "OnEffectsChanged"
	uint32_t m_fEffects; // 0x3b8	
	// MNetworkEnable
	// MNetworkPriority "32"
	// MNetworkUserGroup "Player"
	CHandle< CBaseEntity > m_hGroundEntity; // 0x3bc	
	// MNetworkEnable
	// MNetworkPriority "32"
	// MNetworkUserGroup "Player"
	int32_t m_nGroundBodyIndex; // 0x3c0	
	// MNetworkEnable
	// MNetworkBitCount "8"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "4,000000"
	// MNetworkEncodeFlags "1"
	// MNetworkUserGroup "LocalPlayerExclusive"
	float m_flFriction; // 0x3c4	
	// MNetworkEnable
	// MNetworkEncoder "coord"
	float m_flElasticity; // 0x3c8	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	float m_flGravityScale; // 0x3cc	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	float m_flTimeScale; // 0x3d0	
	// MNetworkEnable
	// MNetworkUserGroup "Water"
	// MNetworkBitCount "8"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "1,000000"
	// MNetworkEncodeFlags "8"
	float m_flWaterLevel; // 0x3d4	
	// MNetworkEnable
	bool m_bAnimatedEveryTick; // 0x3d8	
	bool m_bDisableLowViolence; // 0x3d9	
	uint8_t m_nWaterType; // 0x3da	
private:
	[[maybe_unused]] uint8_t __pad03db[0x1]; // 0x3db
public:
	int32_t m_iEFlags; // 0x3dc	
	CEntityIOOutput m_OnUser1; // 0x3e0	
	CEntityIOOutput m_OnUser2; // 0x408	
	CEntityIOOutput m_OnUser3; // 0x430	
	CEntityIOOutput m_OnUser4; // 0x458	
	int32_t m_iInitialTeamNum; // 0x480	
	// MNetworkEnable
	GameTime_t m_flNavIgnoreUntilTime; // 0x484	
	QAngle m_vecAngVelocity; // 0x488	
	bool m_bNetworkQuantizeOriginAndAngles; // 0x494	
	bool m_bLagCompensate; // 0x495	
private:
	[[maybe_unused]] uint8_t __pad0496[0x2]; // 0x496
public:
	float m_flOverriddenFriction; // 0x498	
	CHandle< CBaseEntity > m_pBlocker; // 0x49c	
	float m_flLocalTime; // 0x4a0	
	float m_flVPhysicsUpdateLocalTime; // 0x4a4	
	
	// Static fields:
	static Relationship_t** &Get_sm_DefaultRelationship(){return *reinterpret_cast<Relationship_t***>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBaseEntity")->GetStaticFields()[0]->m_pInstance);};
	static bool &Get_sm_bAccurateTriggerBboxChecks(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBaseEntity")->GetStaticFields()[1]->m_pInstance);};
	static bool &Get_sm_bDisableTouchFuncs(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBaseEntity")->GetStaticFields()[2]->m_pInstance);};
	static bool &Get_m_bAllowPrecache(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBaseEntity")->GetStaticFields()[3]->m_pInstance);};
	static bool &Get_s_bAbsQueriesValid(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBaseEntity")->GetStaticFields()[4]->m_pInstance);};
	static bool &Get_s_bPreventingSetAnimRunAnimEvents(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBaseEntity")->GetStaticFields()[5]->m_pInstance);};
	static int32_t &Get_m_nPredictionRandomSeed(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBaseEntity")->GetStaticFields()[6]->m_pInstance);};
	static int32_t &Get_m_nPredictionRandomSeedServer(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBaseEntity")->GetStaticFields()[7]->m_pInstance);};
	static CBasePlayerController* &Get_m_pPredictionPlayerController(){return *reinterpret_cast<CBasePlayerController**>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBaseEntity")->GetStaticFields()[8]->m_pInstance);};
	static bool &Get_sm_bDatadescValidating(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBaseEntity")->GetStaticFields()[9]->m_pInstance);};
	
	// Datamap fields:
	// CUtlSymbolLarge m_iszPrivateVScripts; // 0x8
	// void m_CScriptComponent; // 0x28
	// CUtlSymbolLarge subclass_name; // 0x7fffffff
	// void m_pSubclassVData; // 0x2e8
	// void* m_think; // 0x260
	// void* m_pfnTouch; // 0x288
	// void* m_pfnUse; // 0x290
	// void* m_pfnBlocked; // 0x298
	// void* m_pfnMoveDone; // 0x2a0
	// int32_t InputSetTeam; // 0x0
	// void InputKill; // 0x0
	// void InputKillHierarchy; // 0x0
	// int32_t InputUse; // 0x0
	// bool InputAlternativeSorting; // 0x0
	// CUtlSymbolLarge InputSetParent; // 0x0
	// CUtlSymbolLarge InputSetParentAttachment; // 0x0
	// CUtlSymbolLarge InputSetParentAttachmentMaintainOffset; // 0x0
	// void InputClearParent; // 0x0
	// CUtlSymbolLarge InputFollowEntity; // 0x0
	// CUtlSymbolLarge InputSetDamageFilter; // 0x0
	// void InputEnableDamageForces; // 0x0
	// void InputDisableDamageForces; // 0x0
	// CUtlSymbolLarge InputDispatchResponse; // 0x0
	// CUtlSymbolLarge InputAddContext; // 0x0
	// CUtlSymbolLarge InputRemoveContext; // 0x0
	// void InputClearContext; // 0x0
	// CUtlSymbolLarge InputAddAttribute; // 0x0
	// CUtlSymbolLarge InputRemoveAttribute; // 0x0
	// void InputDisableShadow; // 0x0
	// void InputEnableShadow; // 0x0
	// CUtlSymbolLarge InputFireUser1; // 0x0
	// CUtlSymbolLarge InputFireUser2; // 0x0
	// CUtlSymbolLarge InputFireUser3; // 0x0
	// CUtlSymbolLarge InputFireUser4; // 0x0
	// CUtlSymbolLarge InputChangeSubclass; // 0x0
	// void InputPlatformEnable; // 0x0
	// void InputPlatformDisable; // 0x0
	// void CBaseEntitySUB_Remove; // 0x0
	// void CBaseEntitySUB_RemoveIfUncarried; // 0x0
	// void CBaseEntitySUB_DoNothing; // 0x0
	// void CBaseEntitySUB_Vanish; // 0x0
	// void CBaseEntitySUB_CallUseToggle; // 0x0
	// void CBaseEntitySUB_KillSelf; // 0x0
	// void CBaseEntitySUB_KillSelfIfUncarried; // 0x0
	// void CBaseEntityFrictionRevertThink; // 0x0
	// void CBaseEntityFakeScriptThinkFunc; // 0x0
	// void CBaseEntityClearNavIgnoreContentsThink; // 0x0
	// void m_pGameSceneNode; // 0x248
	// void m_nEntityType; // 0x2c1
	// QAngle angles; // 0x7fffffff
	// Vector origin; // 0x7fffffff
	// CStrongHandle< InfoForResourceTypeCModel > model; // 0x7fffffff
	// CUtlString ownername; // 0x7fffffff
	// int32_t disableshadows; // 0x7fffffff
	// int32_t disablereceiveshadows; // 0x7fffffff
	// int32_t nodamageforces; // 0x7fffffff
	// float angle; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Skywrath_Mage_Mystic_Flare : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t damage; // 0x133c	
	float duration; // 0x1340	
	float damage_interval; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Magnataur_Skewer_Slow : public CDOTA_Buff
{
public:
	int32_t slow_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Meepo_Divided_We_Stand : public CDOTA_Buff
{
public:
	float respawn; // 0x1338	
	float magic_resist; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkExcludeByName "m_angRotation"
// MNetworkExcludeByName "m_blinktoggle"
// MNetworkExcludeByName "m_cellX"
// MNetworkExcludeByName "m_cellY"
// MNetworkExcludeByName "m_cellZ"
// MNetworkExcludeByName "m_flAnimTime"
// MNetworkExcludeByUserGroup "m_flCycle"
// MNetworkExcludeByName "m_flEncodedController"
// MNetworkExcludeByName "m_flPoseParameter"
// MNetworkExcludeByName "m_flSimulationTime"
// MNetworkExcludeByName "m_flexWeight"
// MNetworkExcludeByName "m_nForceBone"
// MNetworkExcludeByName "m_nHitboxSet"
// MNetworkExcludeByName "m_baseLayer.m_hSequence"
// MNetworkExcludeByName "m_vecForce"
// MNetworkExcludeByName "m_vecMaxs"
// MNetworkExcludeByName "m_vecMins"
// MNetworkExcludeByName "m_vecOrigin"
// MNetworkExcludeByName "m_vecSpecifiedSurroundingMaxs"
// MNetworkExcludeByName "m_vecSpecifiedSurroundingMins"
// MNetworkExcludeByName "m_vLookTargetPosition"
// MNetworkExcludeByUserGroup "overlay_vars"
// MNetworkExcludeByName "m_hOwnerEntity"
// MNetworkExcludeByName "m_hParent"
// MNetworkExcludeByName "m_flCreateTime"
// MNetworkExcludeByName "m_flScale"
// MNetworkVarNames "bool m_bRefCountsModifiers"
// MNetworkVarNames "bool m_bHidden"
// MNetworkVarNames "bool m_bActivated"
// MNetworkVarNames "AbilityBarType_t m_nAbilityBarType"
// MNetworkVarNames "int m_iDirtyButtons"
// MNetworkVarNames "int m_iLevel"
// MNetworkVarNames "bool m_bToggleState"
// MNetworkVarNames "bool m_bInAbilityPhase"
// MNetworkVarNames "float m_flAbilityMuteDuration"
// MNetworkVarNames "float m_fCooldown"
// MNetworkVarNames "float m_flCooldownLength"
// MNetworkVarNames "int m_iManaCost"
// MNetworkVarNames "bool m_bAutoCastState"
// MNetworkVarNames "bool m_bAltCastState"
// MNetworkVarNames "GameTime_t m_flChannelStartTime"
// MNetworkVarNames "GameTime_t m_flCastStartTime"
// MNetworkVarNames "bool m_bInIndefiniteCooldown"
// MNetworkVarNames "bool m_bFrozenCooldown"
// MNetworkVarNames "float m_flOverrideCastPoint"
// MNetworkVarNames "bool m_bStolen"
// MNetworkVarNames "bool m_bReplicated"
// MNetworkVarNames "bool m_bStealable"
// MNetworkVarNames "int m_nAbilityCurrentCharges"
// MNetworkVarNames "float m_fAbilityChargeRestoreTimeRemaining"
// MNetworkVarNames "bool m_bUpgradeRecommended"
// MNetworkVarNames "int m_nMaxLevelOverride"
// MNetworkVarNames "float m_flTotalExtendedChannelTime"
class CDOTABaseAbility : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x8]; // 0x4a8
public:
	int32_t m_iAbilityIndex; // 0x4b0	
	int32_t m_nStolenActivity; // 0x4b4	
	bool m_bChanneling; // 0x4b8	
	bool m_bReflection; // 0x4b9	
	// MNetworkEnable
	bool m_bRefCountsModifiers; // 0x4ba	
private:
	[[maybe_unused]] uint8_t __pad04bb[0x1]; // 0x4bb
public:
	int32_t m_iModifierRefCount; // 0x4bc	
	bool m_bWantsToNeutralCast; // 0x4c0	
private:
	[[maybe_unused]] uint8_t __pad04c1[0x3]; // 0x4c1
public:
	CHandle< CBaseEntity > m_hNeutralCastTarget; // 0x4c4	
	bool m_bServerOnlyAbility; // 0x4c8	
	bool m_bGrantedAbilityChargesFromScepter; // 0x4c9	
	bool m_bGrantedAbilityChargesFromShard; // 0x4ca	
	bool m_bIsDefaultHeroAbility; // 0x4cb	
	bool m_bConsiderOvershootInGetCastRange; // 0x4cc	
private:
	[[maybe_unused]] uint8_t __pad04cd[0x3]; // 0x4cd
public:
	float m_flExtendChannelTime; // 0x4d0	
	// MNetworkEnable
	bool m_bHidden; // 0x4d4	
	// MNetworkEnable
	bool m_bActivated; // 0x4d5	
private:
	[[maybe_unused]] uint8_t __pad04d6[0x2]; // 0x4d6
public:
	// MNetworkEnable
	AbilityBarType_t m_nAbilityBarType; // 0x4d8	
	// MNetworkEnable
	int32_t m_iDirtyButtons; // 0x4dc	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iLevel; // 0x4e0	
	// MNetworkEnable
	bool m_bToggleState; // 0x4e4	
	// MNetworkEnable
	// MNetworkPriority "32"
	bool m_bInAbilityPhase; // 0x4e5	
private:
	[[maybe_unused]] uint8_t __pad04e6[0x2]; // 0x4e6
public:
	// MNetworkEnable
	float m_flAbilityMuteDuration; // 0x4e8	
	// MNetworkEnable
	// MNetworkPriority "32"
	float m_fCooldown; // 0x4ec	
	// MNetworkEnable
	// MNetworkBitCount "15"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "1024,000000"
	float m_flCooldownLength; // 0x4f0	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iManaCost; // 0x4f4	
	// MNetworkEnable
	// MNetworkPriority "32"
	bool m_bAutoCastState; // 0x4f8	
	// MNetworkEnable
	// MNetworkPriority "32"
	bool m_bAltCastState; // 0x4f9	
private:
	[[maybe_unused]] uint8_t __pad04fa[0x2]; // 0x4fa
public:
	// MNetworkEnable
	GameTime_t m_flChannelStartTime; // 0x4fc	
	// MNetworkEnable
	GameTime_t m_flCastStartTime; // 0x500	
	// MNetworkEnable
	bool m_bInIndefiniteCooldown; // 0x504	
	// MNetworkEnable
	bool m_bFrozenCooldown; // 0x505	
private:
	[[maybe_unused]] uint8_t __pad0506[0x2]; // 0x506
public:
	int32_t m_nFrozenCooldownStack; // 0x508	
	// MNetworkEnable
	float m_flOverrideCastPoint; // 0x50c	
	// MNetworkEnable
	bool m_bStolen; // 0x510	
	// MNetworkEnable
	bool m_bReplicated; // 0x511	
	// MNetworkEnable
	bool m_bStealable; // 0x512	
private:
	[[maybe_unused]] uint8_t __pad0513[0x1]; // 0x513
public:
	// MNetworkEnable
	int32_t m_nAbilityCurrentCharges; // 0x514	
	// MNetworkEnable
	// MNetworkPriority "32"
	float m_fAbilityChargeRestoreTimeRemaining; // 0x518	
	// MNetworkEnable
	bool m_bUpgradeRecommended; // 0x51c	
private:
	[[maybe_unused]] uint8_t __pad051d[0x3]; // 0x51d
public:
	// MNetworkEnable
	int32_t m_nMaxLevelOverride; // 0x520	
	// MNetworkEnable
	float m_flTotalExtendedChannelTime; // 0x524	
	CHandle< CBaseEntity > m_hReflectionCause; // 0x528	
private:
	[[maybe_unused]] uint8_t __pad052c[0x24]; // 0x52c
public:
	CHandle< CBaseEntity > m_pReflectionSourceAbility; // 0x550	
private:
	[[maybe_unused]] uint8_t __pad0554[0xc]; // 0x554
public:
	item_definition_index_t m_nBackedByEconItemIndex; // 0x560	
private:
	[[maybe_unused]] uint8_t __pad0564[0xd]; // 0x564
public:
	bool m_bAltCastOrdered; // 0x571	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Broodmother_SpinWeb_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_bCombinable"
// MNetworkVarNames "bool m_bPermanent"
// MNetworkVarNames "bool m_bStackable"
// MNetworkVarNames "int m_iStackableMax"
// MNetworkVarNames "bool m_bRecipe"
// MNetworkVarNames "bool m_bRecipeConsumesCharges"
// MNetworkVarNames "int m_iSharability"
// MNetworkVarNames "bool m_bDroppable"
// MNetworkVarNames "bool m_bPurchasable"
// MNetworkVarNames "bool m_bSellable"
// MNetworkVarNames "bool m_bInitiallySellable"
// MNetworkVarNames "bool m_bForceUnsellable"
// MNetworkVarNames "bool m_bRequiresCharges"
// MNetworkVarNames "bool m_bKillable"
// MNetworkVarNames "bool m_bGloballyCombinable"
// MNetworkVarNames "bool m_bDisassemblable"
// MNetworkVarNames "bool m_bIsNeutralDrop"
// MNetworkVarNames "int m_nNeutralDropTeam"
// MNetworkVarNames "bool m_bAlertable"
// MNetworkVarNames "int m_iInitialCharges"
// MNetworkVarNames "bool m_bCastOnPickup"
// MNetworkVarNames "bool m_bOnlyPlayerHeroPickup"
// MNetworkVarNames "bool m_bCreepHeroPickup"
// MNetworkVarNames "bool m_bCanBeUsedOutOfInventory"
// MNetworkVarNames "bool m_bItemEnabled"
// MNetworkVarNames "GameTime_t m_flEnableTime"
// MNetworkVarNames "GameTime_t m_flReclaimTime"
// MNetworkVarNames "bool m_bDisplayOwnership"
// MNetworkVarNames "bool m_bShowOnMinimap"
// MNetworkVarNames "float m_flMinimapIconSize"
// MNetworkVarNames "bool m_bIsUpgradeable"
// MNetworkVarNames "int m_nUpgradeProgress"
// MNetworkVarNames "int m_nUpgradeGoal"
// MNetworkVarNames "uint8 m_vecPreGameTransferPlayerIDs"
// MNetworkVarNames "GameTime_t m_flPurchaseTime"
// MNetworkVarNames "GameTime_t m_flAssembledTime"
// MNetworkVarNames "int m_iCurrentCharges"
// MNetworkVarNames "int m_iValuelessCharges"
// MNetworkVarNames "int m_iSecondaryCharges"
// MNetworkVarNames "bool m_bCombineLocked"
// MNetworkVarNames "PlayerID_t m_iPlayerOwnerID"
// MNetworkVarNames "bool m_bPurchasedWhileDead"
class CDOTA_Item : public CDOTABaseAbility
{
public:
	int32_t m_iState; // 0x578	
	int32_t m_CastAnimation; // 0x57c	
	// MNetworkEnable
	bool m_bCombinable; // 0x580	
	// MNetworkEnable
	// MNetworkPriority "32"
	bool m_bPermanent; // 0x581	
	// MNetworkEnable
	// MNetworkPriority "32"
	bool m_bStackable; // 0x582	
private:
	[[maybe_unused]] uint8_t __pad0583[0x1]; // 0x583
public:
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iStackableMax; // 0x584	
	// MNetworkEnable
	bool m_bRecipe; // 0x588	
	// MNetworkEnable
	bool m_bRecipeConsumesCharges; // 0x589	
private:
	[[maybe_unused]] uint8_t __pad058a[0x2]; // 0x58a
public:
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iSharability; // 0x58c	
	// MNetworkEnable
	bool m_bDroppable; // 0x590	
	// MNetworkEnable
	bool m_bPurchasable; // 0x591	
	// MNetworkEnable
	bool m_bSellable; // 0x592	
	// MNetworkEnable
	bool m_bInitiallySellable; // 0x593	
	// MNetworkEnable
	bool m_bForceUnsellable; // 0x594	
	// MNetworkEnable
	bool m_bRequiresCharges; // 0x595	
	// MNetworkEnable
	bool m_bKillable; // 0x596	
	// MNetworkEnable
	bool m_bGloballyCombinable; // 0x597	
	// MNetworkEnable
	bool m_bDisassemblable; // 0x598	
	bool m_bNeverDisassemble; // 0x599	
	bool m_bIsTempestDoubleClonable; // 0x59a	
	// MNetworkEnable
	bool m_bIsNeutralDrop; // 0x59b	
	// MNetworkEnable
	int32_t m_nNeutralDropTeam; // 0x59c	
	// MNetworkEnable
	bool m_bAlertable; // 0x5a0	
private:
	[[maybe_unused]] uint8_t __pad05a1[0x3]; // 0x5a1
public:
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iInitialCharges; // 0x5a4	
	// MNetworkEnable
	bool m_bCastOnPickup; // 0x5a8	
	// MNetworkEnable
	bool m_bOnlyPlayerHeroPickup; // 0x5a9	
	// MNetworkEnable
	bool m_bCreepHeroPickup; // 0x5aa	
	// MNetworkEnable
	bool m_bCanBeUsedOutOfInventory; // 0x5ab	
	// MNetworkEnable
	bool m_bItemEnabled; // 0x5ac	
private:
	[[maybe_unused]] uint8_t __pad05ad[0x3]; // 0x5ad
public:
	// MNetworkEnable
	// MNetworkPriority "32"
	GameTime_t m_flEnableTime; // 0x5b0	
	// MNetworkEnable
	GameTime_t m_flReclaimTime; // 0x5b4	
	// MNetworkEnable
	bool m_bDisplayOwnership; // 0x5b8	
	// MNetworkEnable
	bool m_bShowOnMinimap; // 0x5b9	
private:
	[[maybe_unused]] uint8_t __pad05ba[0x2]; // 0x5ba
public:
	// MNetworkEnable
	float m_flMinimapIconSize; // 0x5bc	
	// MNetworkEnable
	bool m_bIsUpgradeable; // 0x5c0	
private:
	[[maybe_unused]] uint8_t __pad05c1[0x3]; // 0x5c1
public:
	// MNetworkEnable
	int32_t m_nUpgradeProgress; // 0x5c4	
	// MNetworkEnable
	int32_t m_nUpgradeGoal; // 0x5c8	
private:
	[[maybe_unused]] uint8_t __pad05cc[0x4]; // 0x5cc
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< uint8 > m_vecPreGameTransferPlayerIDs; // 0x5d0	
	bool m_bStackWithOtherOwners; // 0x5e8	
	bool m_bTemporarilyUncombinable; // 0x5e9	
	bool m_bHasCommentedOnEquip; // 0x5ea	
private:
	[[maybe_unused]] uint8_t __pad05eb[0x1]; // 0x5eb
public:
	int32_t m_iDeclarationFlags; // 0x5ec	
	bool m_bCreatedByDisassemble; // 0x5f0	
	bool m_bHasMixedOwnership; // 0x5f1	
	bool m_bIsClonedItemProxy; // 0x5f2	
	bool m_bNeutralItemRequestDrop; // 0x5f3	
	// MNetworkEnable
	// MNetworkPriority "32"
	GameTime_t m_flPurchaseTime; // 0x5f4	
	// MNetworkEnable
	GameTime_t m_flAssembledTime; // 0x5f8	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iCurrentCharges; // 0x5fc	
	// MNetworkEnable
	int32_t m_iValuelessCharges; // 0x600	
	// MNetworkEnable
	int32_t m_iSecondaryCharges; // 0x604	
	// MNetworkEnable
	bool m_bCombineLocked; // 0x608	
private:
	[[maybe_unused]] uint8_t __pad0609[0x3]; // 0x609
public:
	CHandle< CDOTA_Item_Physical > m_hContainer; // 0x60c	
	// MNetworkEnable
	PlayerID_t m_iPlayerOwnerID; // 0x610	
	// MNetworkEnable
	bool m_bPurchasedWhileDead; // 0x614	
private:
	[[maybe_unused]] uint8_t __pad0615[0x3]; // 0x615
public:
	int32_t m_nCombineVersion; // 0x618	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Warlock_Fatal_Bonds : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_FatalBondsEntities; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_Intrinsic : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Roshan_SpellBlock : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Ursa_Enrage : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tinker_Warp_Grenade : public CDOTA_Buff
{
public:
	int32_t range_reduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tinker_HeatSeekingMissile : public CDOTABaseAbility
{
public:
	int32_t m_nTargetsKilled; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Puck_PhaseShift_AttackBonus : public CDOTA_Buff
{
public:
	int32_t shard_bonus_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DrowRanger_Marksmanship_Aura_Bonus : public CDOTA_Buff
{
public:
	int32_t agility_multiplier; // 0x1338	
	float agility_multiplier_ally; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rune_Shield : public CDOTA_Buff
{
public:
	int32_t damage_absorb; // 0x1338	
	bool m_bStartedTimer; // 0x133c	
private:
	[[maybe_unused]] uint8_t __pad133d[0x3]; // 0x133d
public:
	int32_t m_nDamageAbsorbed; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Wraith_King_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ogre_Magi_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Range_150 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13f8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkIncludeByName "m_iTeamNum"
// MNetworkVarNames "DataTeamPlayer_t m_vecDataTeam"
// MNetworkVarNames "uint64 m_bWorldTreeState"
// MNetworkVarNames "TreeModelReplacement_t m_vecWorldTreeModelReplacements"
// MNetworkVarNames "Vector2D m_vDesiredWardPlacement"
// MNetworkVarNames "int m_nEnemyStartingPosition"
// MNetworkVarNames "int m_nCaptainInspectedHeroID"
// MNetworkVarNames "float m_flSuggestedWardWeights"
// MNetworkVarNames "uint8 m_nSuggestedWardIndexes"
// MNetworkVarNames "int m_iSuggestedLanes"
// MNetworkVarNames "float m_iSuggestedLaneWeights"
// MNetworkVarNames "bool m_bSuggestedLaneRoam"
// MNetworkVarNames "bool m_bSuggestedLaneJungle"
// MNetworkVarNames "TierNeutralInfo_t m_vecNeutralItemsTierInfo"
// MNetworkVarNames "EHANDLE m_vecNeutralStashItems"
// MNetworkVarNames "AbilityID_t m_vecNeutralItemsConsumed"
// MNetworkVarNames "PingConfirmationState_t m_PingConfirmationStates"
// MNetworkVarNames "EHANDLE m_vecKnownClearCamps"
// MNetworkVarNames "Vector2D m_vPossibleWardPlacement"
// MNetworkVarNames "float m_vPossibleWardRadii"
// MNetworkVarNames "DOTATeleportInfo_t m_vecTrackedTeleports"
class CDOTA_DataNonSpectator : public CBaseEntity
{
public:
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< DataTeamPlayer_t > m_vecDataTeam; // 0x4a8	
	// MNetworkEnable
	// MNetworkEncoder "fixed64"
	uint64_t m_bWorldTreeState[256]; // 0x4f8	
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< TreeModelReplacement_t > m_vecWorldTreeModelReplacements; // 0xcf8	
	// MNetworkEnable
	Vector2D m_vDesiredWardPlacement[2]; // 0xd48	
	// MNetworkEnable
	int32_t m_nEnemyStartingPosition[5]; // 0xd58	
	// MNetworkEnable
	int32_t m_nCaptainInspectedHeroID; // 0xd6c	
	// MNetworkEnable
	float m_flSuggestedWardWeights[20]; // 0xd70	
	// MNetworkEnable
	uint8_t m_nSuggestedWardIndexes[20]; // 0xdc0	
	// MNetworkEnable
	int32_t m_iSuggestedLanes[5]; // 0xdd4	
	// MNetworkEnable
	float m_iSuggestedLaneWeights[5]; // 0xde8	
	// MNetworkEnable
	bool m_bSuggestedLaneRoam[5]; // 0xdfc	
	// MNetworkEnable
	bool m_bSuggestedLaneJungle[5]; // 0xe01	
private:
	[[maybe_unused]] uint8_t __pad0e06[0x2]; // 0xe06
public:
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< TierNeutralInfo_t > m_vecNeutralItemsTierInfo; // 0xe08	
	// MNetworkEnable
	CNetworkUtlVectorBase< CHandle< CBaseEntity > > m_vecNeutralStashItems; // 0xe58	
	// MNetworkEnable
	CNetworkUtlVectorBase< AbilityID_t > m_vecNeutralItemsConsumed; // 0xe70	
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< PingConfirmationState_t > m_PingConfirmationStates; // 0xe88	
	// MNetworkEnable
	CNetworkUtlVectorBase< CHandle< CBaseEntity > > m_vecKnownClearCamps; // 0xed8	
	// MNetworkEnable
	Vector2D m_vPossibleWardPlacement[100]; // 0xef0	
	// MNetworkEnable
	float m_vPossibleWardRadii[100]; // 0x1210	
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< DOTATeleportInfo_t > m_vecTrackedTeleports; // 0x13a0	
	int32_t m_iTowerKills; // 0x13f0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// Is Abstract
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_CompendiumChallengeEventID"
// MNetworkVarNames "int m_CompendiumChallengeSequenceID"
// MNetworkVarNames "int m_CompendiumChallengeCoinReward"
// MNetworkVarNames "int m_CompendiumChallengeCoinSplash"
// MNetworkVarNames "int m_CompendiumChallengePointReward"
// MNetworkVarNames "bool m_CompendiumChallengeCompleted"
// MNetworkVarNames "bool m_CompendiumChallengeFailed"
// MNetworkVarNames "int m_CompendiumChallengeProgress"
// MNetworkVarNames "int m_QueryIDForProgress"
// MNetworkVarNames "CDOTASubChallengeInfo m_SubChallenges"
// MNetworkVarNames "int m_CompendiumCoinWager"
// MNetworkVarNames "itemid_t m_CompendiumTokenWagerItemID"
// MNetworkVarNames "int m_CompendiumWagerTokenBonusPct"
// MNetworkVarNames "int m_CompendiumCoinWagerResults"
// MNetworkVarNames "int m_CompendiumRankWagers"
// MNetworkVarNames "float m_flWagerTimer"
// MNetworkVarNames "GameTime_t m_flWagerEndTime"
// MNetworkVarNames "CDOTA_PlayerChallengeInfo m_CompendiumChallengeInfo"
// MNetworkVarNames "CDOTA_CombatLogQueryProgress m_PlayerQueryIDs"
// MNetworkVarNames "int m_ProgressForQueryID"
// MNetworkVarNames "int m_GoalForQueryID"
// MNetworkVarNames "int m_PlayerQuestRankPreviouslyCompleted"
// MNetworkVarNames "int m_PlayerQuestRankCompleted"
// MNetworkVarNames "PlayerID_t m_PlayerBountyTarget"
// MNetworkVarNames "GameTime_t m_flPlayerBountyTimestamp"
// MNetworkVarNames "int m_PlayerBountyCount"
class CIngameEvent_Base : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x20]; // 0x4a8
public:
	bool m_bInitialized; // 0x4c8	
private:
	[[maybe_unused]] uint8_t __pad04c9[0x3]; // 0x4c9
public:
	// MNetworkEnable
	int32_t m_CompendiumChallengeEventID[24]; // 0x4cc	
	// MNetworkEnable
	int32_t m_CompendiumChallengeSequenceID[24]; // 0x52c	
	// MNetworkEnable
	int32_t m_CompendiumChallengeCoinReward[24]; // 0x58c	
	// MNetworkEnable
	int32_t m_CompendiumChallengeCoinSplash[24]; // 0x5ec	
	// MNetworkEnable
	int32_t m_CompendiumChallengePointReward[24]; // 0x64c	
	// MNetworkEnable
	// MNetworkChangeCallback "OnClientPlayerChallengeProgressChanged"
	bool m_CompendiumChallengeCompleted[24]; // 0x6ac	
	// MNetworkEnable
	// MNetworkChangeCallback "OnClientPlayerChallengeProgressChanged"
	bool m_CompendiumChallengeFailed[24]; // 0x6c4	
	// MNetworkEnable
	// MNetworkChangeCallback "OnClientPlayerChallengeProgressChanged"
	int32_t m_CompendiumChallengeProgress[24]; // 0x6dc	
	// MNetworkEnable
	int32_t m_QueryIDForProgress[24]; // 0x73c	
private:
	[[maybe_unused]] uint8_t __pad079c[0x4]; // 0x79c
public:
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< CDOTASubChallengeInfo > m_SubChallenges; // 0x7a0	
	// MNetworkEnable
	// MNetworkChangeCallback "OnWagerChanged"
	int32_t m_CompendiumCoinWager[10]; // 0x7f0	
	// MNetworkEnable
	// MNetworkChangeCallback "OnWagerChanged"
	itemid_t m_CompendiumTokenWagerItemID[10]; // 0x818	
	// MNetworkEnable
	// MNetworkChangeCallback "OnWagerChanged"
	int32_t m_CompendiumWagerTokenBonusPct[10]; // 0x868	
	// MNetworkEnable
	int32_t m_CompendiumCoinWagerResults[10]; // 0x890	
	// MNetworkEnable
	// MNetworkChangeCallback "OnWagerChanged"
	int32_t m_CompendiumRankWagers[10]; // 0x8b8	
	// MNetworkEnable
	// MNetworkChangeCallback "OnWagerTimeChanged"
	float m_flWagerTimer; // 0x8e0	
	// MNetworkEnable
	GameTime_t m_flWagerEndTime; // 0x8e4	
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< CDOTA_PlayerChallengeInfo > m_CompendiumChallengeInfo; // 0x8e8	
	// MNetworkEnable
	// MNetworkTypeAlias "DOTA_CombatLogQueryProgress"
	CUtlVectorEmbeddedNetworkVar< CDOTA_CombatLogQueryProgress > m_PlayerQueryIDs; // 0x13a8	
	// MNetworkEnable
	// MNetworkChangeCallback "OnClientPlayerChallengeProgressChanged"
	int32_t m_ProgressForQueryID[100]; // 0x13f8	
	// MNetworkEnable
	int32_t m_GoalForQueryID[100]; // 0x1588	
	// MNetworkEnable
	int32_t m_PlayerQuestRankPreviouslyCompleted[10]; // 0x1718	
	// MNetworkEnable
	// MNetworkChangeCallback "OnClientPlayerQuestRankChanged"
	int32_t m_PlayerQuestRankCompleted[10]; // 0x1740	
	// MNetworkEnable
	PlayerID_t m_PlayerBountyTarget[10]; // 0x1768	
	// MNetworkEnable
	GameTime_t m_flPlayerBountyTimestamp[10]; // 0x1790	
	// MNetworkEnable
	int32_t m_PlayerBountyCount[10]; // 0x17b8	
	bool m_bHasSpentWager[10]; // 0x17e0	
	bool m_bPendingWagerSpend[10]; // 0x17ea	
	bool m_bCavernCrawlActive[24]; // 0x17f4	
	CavernCrawlMapVariant_t m_nCavernCrawlMapVariant[24]; // 0x180c	
	bool m_bCavernHalfCredit; // 0x1824	
	bool m_bBountyReminded[24]; // 0x1825	
	bool m_bBountyAnnounced[24]; // 0x183d	
private:
	[[maybe_unused]] uint8_t __pad1855[0x3]; // 0x1855
public:
	uint32_t m_pCavernCrawlWinnings[24]; // 0x1858	
	uint32_t m_pCavernCrawlPlusShardWinnings[24]; // 0x18b8	
	CUtlVector< DOTACavernCrawlMapResult_t >* m_ppVecCavernCrawlMapResult[24]; // 0x1918	
	int32_t m_event_lobby_updated; // 0x19d8	
};

// Registered binary: server.dll (project 'entity2')
// Alignment: 8
// Size: 0x8
// Has VTable
// Is Abstract
// Has Trivial Destructor
class CEntityComponent
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Stunned : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x58
// Has VTable
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int32 m_iGlowType"
// MNetworkVarNames "int32 m_iGlowTeam"
// MNetworkVarNames "int32 m_nGlowRange"
// MNetworkVarNames "int32 m_nGlowRangeMin"
// MNetworkVarNames "Color m_glowColorOverride"
// MNetworkVarNames "bool m_bFlashing"
// MNetworkVarNames "float m_flGlowTime"
// MNetworkVarNames "float m_flGlowStartTime"
class CGlowProperty
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	Vector m_fGlowColor; // 0x8	
private:
	[[maybe_unused]] uint8_t __pad0014[0x1c]; // 0x14
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnGlowTypeChanged"
	int32_t m_iGlowType; // 0x30	
	// MNetworkEnable
	int32_t m_iGlowTeam; // 0x34	
	// MNetworkEnable
	int32_t m_nGlowRange; // 0x38	
	// MNetworkEnable
	int32_t m_nGlowRangeMin; // 0x3c	
	// MNetworkEnable
	// MNetworkChangeCallback "OnGlowColorChanged"
	Color m_glowColorOverride; // 0x40	
	// MNetworkEnable
	bool m_bFlashing; // 0x44	
private:
	[[maybe_unused]] uint8_t __pad0045[0x3]; // 0x45
public:
	// MNetworkEnable
	float m_flGlowTime; // 0x48	
	// MNetworkEnable
	float m_flGlowStartTime; // 0x4c	
	bool m_bGlowing; // 0x50	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_20_Bash : public CDOTA_Buff
{
public:
	float value; // 0x1338	
	float value2; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Paladin_Sword : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_AetherialHalo_Land : public CDOTA_Buff
{
public:
	int32_t impact_radius; // 0x1338	
	float land_time; // 0x133c	
	float burn_duration; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Blade_Mail : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t bonus_armor; // 0x133c	
	int32_t bonus_intellect; // 0x1340	
	int32_t passive_reflection_constant; // 0x1344	
	int32_t passive_reflection_pct; // 0x1348	
	int32_t active_reflection_pct; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Phoenix_IcarusDiveBurn : public CDOTA_Buff
{
public:
	float burn_tick_interval; // 0x1338	
	int32_t damage_per_second; // 0x133c	
	int32_t slow_movement_speed_pct; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tusk_Launch_Snowball : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Medusa_ManaShield : public CDOTA_Buff
{
public:
	int32_t bonus_mana; // 0x1338	
	float absorption_pct; // 0x133c	
	float damage_per_mana; // 0x1340	
	float illusion_damage_per_mana; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_ChaosKnight_Chaos_Strike : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Chen_DivineFavor : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Jakiro_DualBreath : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitHeroes; // 0x578	
	bool m_bGrantedGem; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Broodmother_Tough : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DeathProphet_SpiritSiphon_Fear : public CDOTA_Buff
{
public:
	Vector m_vOriginal; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PoisonNova_Thinker : public CDOTA_Buff
{
public:
	float m_fCurRadius; // 0x1338	
	GameTime_t m_fLastThink; // 0x133c	
	CUtlVector< CHandle< CBaseEntity > > m_entitiesHit; // 0x1340	
	int32_t speed; // 0x1358	
	int32_t radius; // 0x135c	
	int32_t start_radius; // 0x1360	
	float duration; // 0x1364	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1398
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_Leap : public CDOTA_Buff
{
public:
	float m_flTotalTimeInAir; // 0x1338	
	float m_flInitialVelocity; // 0x133c	
	Vector m_vStartPosition; // 0x1340	
	Vector m_vTargetHorizontalDirection; // 0x134c	
	Vector m_vTargetPosition; // 0x1358	
	float m_flCurrentTimeHoriz; // 0x1364	
	float m_flCurrentTimeVert; // 0x1368	
	bool m_bInterrupted; // 0x136c	
private:
	[[maybe_unused]] uint8_t __pad136d[0x3]; // 0x136d
public:
	float m_flHorizDelayTime; // 0x1370	
	float m_flVertDelayTime; // 0x1374	
	float m_flLeapSequenceDuration; // 0x1378	
	float m_flPlaybackRate; // 0x137c	
	int32_t pounce_distance; // 0x1380	
	float pounce_speed; // 0x1384	
	float pounce_acceleration; // 0x1388	
	float initial_delay; // 0x138c	
	float landing_delay; // 0x1390	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Witch_Doctor_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Axe_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Drow_Ranger_Glacier_Shard : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hObstruction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tutorial_LastHitHelper : public CDOTA_Buff
{
public:
	bool m_bTargetFriendlies; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Mirana_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Omniknight_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Troll_Warlord_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Medusa : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_All_Stats_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Speed_35 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x70
// Has VTable
// 
// MNetworkVarNames "int nType"
// MNetworkVarNames "int nQuestID"
// MNetworkVarNames "int nQuestChallengeID"
// MNetworkVarNames "int nTier"
// MNetworkVarNames "int nParam0"
// MNetworkVarNames "int nParam1"
// MNetworkVarNames "int nSlotID"
// MNetworkVarNames "int nProgress"
// MNetworkVarNames "int nCompletionThreshold"
// MNetworkVarNames "PlayerID_t nPlayerID"
// MNetworkVarNames "int nQueryIndex"
// MNetworkVarNames "int nEventID"
// MNetworkVarNames "int nSequenceID"
// MNetworkVarNames "int nCompleted"
// MNetworkVarNames "int nRank"
class CDOTA_PlayerChallengeInfo
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	int32_t nType; // 0x30	
	// MNetworkEnable
	int32_t nQuestID; // 0x34	
	// MNetworkEnable
	int32_t nQuestChallengeID; // 0x38	
	// MNetworkEnable
	int32_t nTier; // 0x3c	
	// MNetworkEnable
	int32_t nParam0; // 0x40	
	// MNetworkEnable
	int32_t nParam1; // 0x44	
	// MNetworkEnable
	int32_t nSlotID; // 0x48	
	// MNetworkEnable
	int32_t nProgress; // 0x4c	
	// MNetworkEnable
	int32_t nCompletionThreshold; // 0x50	
	// MNetworkEnable
	PlayerID_t nPlayerID; // 0x54	
	// MNetworkEnable
	int32_t nQueryIndex; // 0x58	
	// MNetworkEnable
	int32_t nEventID; // 0x5c	
	// MNetworkEnable
	int32_t nSequenceID; // 0x60	
	// MNetworkEnable
	int32_t nCompleted; // 0x64	
	// MNetworkEnable
	int32_t nRank; // 0x68	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x38
// Has VTable
// Construct allowed
// 
// MNetworkVarNames "int m_nEmpoweredKills"
class CDOTA_ArcanaDataEntity_Razor : public CDOTA_ArcanaDataEntity_Base
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnRazorArcanaChanged"
	int32_t m_nEmpoweredKills; // 0x30	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x28
// Has VTable
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "uint32 m_bvDisabledHitGroups"
class CHitboxComponent : public CEntityComponent
{
private:
	[[maybe_unused]] uint8_t __pad0008[0x1c]; // 0x8
public:
	// MNetworkEnable
	uint32_t m_bvDisabledHitGroups[1]; // 0x24	
	
	// Static fields:
	static EntComponentInfo_t &Get_s_EntComponentInfo(){return *reinterpret_cast<EntComponentInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CHitboxComponent")->GetStaticFields()[0]->m_pInstance);};
	static int32_t &Get_entity_component_error_class_decl_says_referenced_but_impl_is_contained(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CHitboxComponent")->GetStaticFields()[1]->m_pInstance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Corpselord_Revive : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t ticks_to_revive; // 0x133c	
	float tick_interval; // 0x1340	
	CHandle< CDOTA_BaseNPC > m_pReviveTarget; // 0x1344	
	int32_t m_nCurrentTicks; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Quicksilver_Amulet : public CDOTA_Buff_Item
{
public:
	int32_t base_attack; // 0x1338	
	int32_t bonus_attack; // 0x133c	
	int32_t base_movement; // 0x1340	
	int32_t bonus_movement; // 0x1344	
	int32_t projectile_increase; // 0x1348	
	int32_t anim_increase; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Disperser : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1338	
	int32_t bonus_intellect; // 0x133c	
	int32_t bonus_attack_speed; // 0x1340	
	int32_t bonus_damage; // 0x1344	
	float bonus_mana_regen; // 0x1348	
	float damage_per_burn; // 0x134c	
	int32_t feedback_mana_burn; // 0x1350	
	int32_t feedback_mana_burn_illusion_melee; // 0x1354	
	int32_t feedback_mana_burn_illusion_ranged; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hurricane_Pike_Active : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1338	
	float m_flEndTime; // 0x1344	
	float m_flCurTime; // 0x1348	
	float push_length; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Crimson_Guard_Extra : public CDOTA_Buff
{
public:
	int32_t block_chance_active; // 0x1338	
	int32_t block_damage_active; // 0x133c	
	int32_t strength_pct; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_RefresherOrb_Shard : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_WardTrueSight : public CDOTA_Buff
{
public:
	int32_t true_sight_range; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AbyssalUnderlord_DarkRift_Bonus_Health : public CDOTA_Buff
{
public:
	int32_t scepter_health_bonus; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Chaos_Knight_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_AttackVisuals : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Life_Stealer_Ghoul_Frenzy : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Beastmaster_Mark_Of_The_Beast : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VengefulSpirit_Nether_Swap_DamageReduction : public CDOTA_Buff
{
public:
	float damage_reduction; // 0x1338	
	ParticleIndex_t nFXIndex; // 0x133c	
	float damage; // 0x1340	
	int32_t m_nDamageAbsorbed; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13b0
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DrowRanger_Marksmanship_Reduction : public CDOTA_Buff
{
public:
	int32_t split_damage_reduction; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVectorFixedGrowable< int32 > m_vecRecords; // 0x1340	
	CUtlVectorFixedGrowable< GameTime_t > m_vecRecordTimes; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5c0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lua : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x30
// Has VTable
// Has Trivial Destructor
// 
// MNetworkVarNames "uint64 m_nInteractsAs"
// MNetworkVarNames "uint64 m_nInteractsWith"
// MNetworkVarNames "uint64 m_nInteractsExclude"
// MNetworkVarNames "uint32 m_nEntityId"
// MNetworkVarNames "uint32 m_nOwnerId"
// MNetworkVarNames "uint16 m_nHierarchyId"
// MNetworkVarNames "uint8 m_nCollisionGroup"
// MNetworkVarNames "uint8 m_nCollisionFunctionMask"
struct VPhysicsCollisionAttribute_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	uint64_t m_nInteractsAs; // 0x8	
	// MNetworkEnable
	uint64_t m_nInteractsWith; // 0x10	
	// MNetworkEnable
	uint64_t m_nInteractsExclude; // 0x18	
	// MNetworkEnable
	uint32_t m_nEntityId; // 0x20	
	// MNetworkEnable
	uint32_t m_nOwnerId; // 0x24	
	// MNetworkEnable
	uint16_t m_nHierarchyId; // 0x28	
	// MNetworkEnable
	uint8_t m_nCollisionGroup; // 0x2a	
	// MNetworkEnable
	uint8_t m_nCollisionFunctionMask; // 0x2b	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Drow_Ranger_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Necrophos_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Pugna_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Evasion_30 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7c8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CUtlString m_ForcedHUDSkin"
// MNetworkVarNames "int m_nCustomGameForceHeroSelectionId"
// MNetworkVarNames "bool m_bAlwaysShowPlayerInventory"
// MNetworkVarNames "bool m_bGoldSoundDisabled"
// MNetworkVarNames "bool m_bRecommendedItemsDisabled"
// MNetworkVarNames "bool m_bStickyItemDisabled"
// MNetworkVarNames "bool m_bStashPurchasingDisabled"
// MNetworkVarNames "bool m_bFogOfWarDisabled"
// MNetworkVarNames "bool m_bUseUnseenFOW"
// MNetworkVarNames "bool m_bUseCustomBuybackCost"
// MNetworkVarNames "bool m_bUseCustomBuybackCooldown"
// MNetworkVarNames "bool m_bBuybackEnabled"
// MNetworkVarNames "bool m_bUseTurboCouriers"
// MNetworkVarNames "float m_flCameraDistanceOverride"
// MNetworkVarNames "int m_nCameraSmoothCountOverride"
// MNetworkVarNames "CHandle<CDOTA_BaseNPC> m_hOverrideSelectionEntity"
// MNetworkVarNames "bool m_bTopBarTeamValuesOverride"
// MNetworkVarNames "bool m_bTopBarTeamValuesVisible"
// MNetworkVarNames "int m_nTeamGoodGuysTopBarValue"
// MNetworkVarNames "int m_nTeamBadGuysTopBarValue"
// MNetworkVarNames "bool m_bAlwaysShowPlayerNames"
// MNetworkVarNames "bool m_bUseCustomHeroLevels"
// MNetworkVarNames "int m_nCustomXPRequiredToReachNextLevel"
// MNetworkVarNames "bool m_bTowerBackdoorProtectionEnabled"
// MNetworkVarNames "bool m_bBotThinkingEnabled"
// MNetworkVarNames "bool m_bAnnouncerDisabled"
// MNetworkVarNames "bool m_bAnnouncerGameModeAnnounceDisabled"
// MNetworkVarNames "bool m_bDeathTipsDisabled"
// MNetworkVarNames "bool m_bFilterPlayerHeroAvailability"
// MNetworkVarNames "bool m_bKillingSpreeAnnouncerDisabled"
// MNetworkVarNames "float m_flFixedRespawnTime"
// MNetworkVarNames "float m_flBuybackCostScale"
// MNetworkVarNames "float m_flRespawnTimeScale"
// MNetworkVarNames "bool m_bLoseGoldOnDeath"
// MNetworkVarNames "bool m_bKillableTombstones"
// MNetworkVarNames "uint32 m_nHUDVisibilityBits"
// MNetworkVarNames "float m_flMinimumAttackSpeed"
// MNetworkVarNames "float m_flMaximumAttackSpeed"
// MNetworkVarNames "bool m_bIsDaynightCycleDisabled"
// MNetworkVarNames "float m_flDaynightCycleAdvanceRate"
// MNetworkVarNames "bool m_bAreWeatherEffectsDisabled"
// MNetworkVarNames "bool m_bDisableHudFlip"
// MNetworkVarNames "bool m_bEnableFriendlyBuildingMoveTo"
// MNetworkVarNames "bool m_bIsDeathOverlayDisabled"
// MNetworkVarNames "bool m_bIsHudCombatEventsDisabled"
// MNetworkVarNames "CUtlString m_strDefaultStickyItem"
// MNetworkVarNames "CUtlString m_sCustomTerrainWeatherEffect"
// MNetworkVarNames "CUtlString m_strTPScrollSlotItemOverride"
// MNetworkVarNames "float m_flStrengthDamage"
// MNetworkVarNames "float m_flStrengthHP"
// MNetworkVarNames "float m_flStrengthHPRegen"
// MNetworkVarNames "float m_flAgilityDamage"
// MNetworkVarNames "float m_flAgilityArmor"
// MNetworkVarNames "float m_flAgilityAttackSpeed"
// MNetworkVarNames "float m_flAgilityMovementSpeedPercent"
// MNetworkVarNames "float m_flIntelligenceDamage"
// MNetworkVarNames "float m_flIntelligenceMana"
// MNetworkVarNames "float m_flIntelligenceManaRegen"
// MNetworkVarNames "float m_flIntelligenceMres"
// MNetworkVarNames "float m_flIntelligenceSpellAmpPercent"
// MNetworkVarNames "float m_flStrengthMagicResistancePercent"
// MNetworkVarNames "float m_flAttributeAllDamage"
// MNetworkVarNames "float m_flDraftingHeroPickSelectTimeOverride"
// MNetworkVarNames "float m_flDraftingBanningTimeOverride"
// MNetworkVarNames "bool m_bPauseEnabled"
// MNetworkVarNames "int m_iCustomScanMaxCharges"
// MNetworkVarNames "float m_flCustomScanCooldown"
// MNetworkVarNames "float m_flCustomGlyphCooldown"
// MNetworkVarNames "float m_flCustomBackpackSwapCooldown"
// MNetworkVarNames "float m_flCustomBackpackCooldownPercent"
// MNetworkVarNames "bool m_bDefaultRuneSpawnLogic"
// MNetworkVarNames "bool m_bEnableFreeCourierMode"
// MNetworkVarNames "bool m_bAllowNeutralItemDrops"
// MNetworkVarNames "bool m_bEnableNeutralStash"
// MNetworkVarNames "bool m_bEnableNeutralStashTeamViewOnly"
// MNetworkVarNames "bool m_bEnableNeutralItemHideUndiscovered"
// MNetworkVarNames "bool m_bEnableSendToStash"
// MNetworkVarNames "bool m_bForceRightClickAttackDisabled"
// MNetworkVarNames "CDOTACustomShopInfo m_vecCustomShopInfo"
// MNetworkVarNames "bool m_bCanSellAnywhere"
// MNetworkVarNames "float m_flCameraNearZ"
// MNetworkVarNames "float m_flCameraFarZ"
// MNetworkVarNames "int m_nCustomRadiantScore"
// MNetworkVarNames "int m_nCustomDireScore"
// MNetworkVarNames "bool m_bAbilityUpgradeWhitelistEnabled"
// MNetworkVarNames "AbilityID_t m_vecAbilityUpgradeWhitelist"
// MNetworkVarNames "bool m_bGiveFreeTPOnDeath"
// MNetworkVarNames "int m_nInnateMeleeDamageBlockPct"
// MNetworkVarNames "int m_nInnateMeleeDamageBlockAmount"
// MNetworkVarNames "int m_nInnateMeleeDamageBlockPerLevelAmount"
// MNetworkVarNames "float m_flWaterRuneSpawnInterval"
// MNetworkVarNames "CHandle< CDOTA_BaseNPC > m_vecBigHealthBarUnits"
class CDOTABaseGameMode : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x18]; // 0x4a8
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnForcedHUDSkinChanged"
	CUtlString m_ForcedHUDSkin; // 0x4c0	
	// MNetworkEnable
	int32_t m_nCustomGameForceHeroSelectionId; // 0x4c8	
	// MNetworkEnable
	bool m_bAlwaysShowPlayerInventory; // 0x4cc	
	// MNetworkEnable
	bool m_bGoldSoundDisabled; // 0x4cd	
	// MNetworkEnable
	bool m_bRecommendedItemsDisabled; // 0x4ce	
	// MNetworkEnable
	bool m_bStickyItemDisabled; // 0x4cf	
	// MNetworkEnable
	bool m_bStashPurchasingDisabled; // 0x4d0	
	// MNetworkEnable
	bool m_bFogOfWarDisabled; // 0x4d1	
	// MNetworkEnable
	bool m_bUseUnseenFOW; // 0x4d2	
	// MNetworkEnable
	bool m_bUseCustomBuybackCost; // 0x4d3	
	// MNetworkEnable
	bool m_bUseCustomBuybackCooldown; // 0x4d4	
	// MNetworkEnable
	bool m_bBuybackEnabled; // 0x4d5	
	// MNetworkEnable
	bool m_bUseTurboCouriers; // 0x4d6	
private:
	[[maybe_unused]] uint8_t __pad04d7[0x1]; // 0x4d7
public:
	// MNetworkEnable
	float m_flCameraDistanceOverride; // 0x4d8	
	// MNetworkEnable
	int32_t m_nCameraSmoothCountOverride; // 0x4dc	
	// MNetworkEnable
	CHandle< CDOTA_BaseNPC > m_hOverrideSelectionEntity; // 0x4e0	
	// MNetworkEnable
	bool m_bTopBarTeamValuesOverride; // 0x4e4	
	// MNetworkEnable
	bool m_bTopBarTeamValuesVisible; // 0x4e5	
private:
	[[maybe_unused]] uint8_t __pad04e6[0x2]; // 0x4e6
public:
	// MNetworkEnable
	int32_t m_nTeamGoodGuysTopBarValue; // 0x4e8	
	// MNetworkEnable
	int32_t m_nTeamBadGuysTopBarValue; // 0x4ec	
	// MNetworkEnable
	bool m_bAlwaysShowPlayerNames; // 0x4f0	
	// MNetworkEnable
	bool m_bUseCustomHeroLevels; // 0x4f1	
private:
	[[maybe_unused]] uint8_t __pad04f2[0x6]; // 0x4f2
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< int32 > m_nCustomXPRequiredToReachNextLevel; // 0x4f8	
	// MNetworkEnable
	bool m_bTowerBackdoorProtectionEnabled; // 0x510	
	// MNetworkEnable
	bool m_bBotThinkingEnabled; // 0x511	
	// MNetworkEnable
	bool m_bAnnouncerDisabled; // 0x512	
	// MNetworkEnable
	bool m_bAnnouncerGameModeAnnounceDisabled; // 0x513	
	// MNetworkEnable
	bool m_bDeathTipsDisabled; // 0x514	
	// MNetworkEnable
	bool m_bFilterPlayerHeroAvailability; // 0x515	
	// MNetworkEnable
	bool m_bKillingSpreeAnnouncerDisabled; // 0x516	
private:
	[[maybe_unused]] uint8_t __pad0517[0x1]; // 0x517
public:
	// MNetworkEnable
	float m_flFixedRespawnTime; // 0x518	
	// MNetworkEnable
	float m_flBuybackCostScale; // 0x51c	
	// MNetworkEnable
	float m_flRespawnTimeScale; // 0x520	
	// MNetworkEnable
	bool m_bLoseGoldOnDeath; // 0x524	
	// MNetworkEnable
	bool m_bKillableTombstones; // 0x525	
private:
	[[maybe_unused]] uint8_t __pad0526[0x2]; // 0x526
public:
	// MNetworkEnable
	uint32_t m_nHUDVisibilityBits; // 0x528	
	// MNetworkEnable
	float m_flMinimumAttackSpeed; // 0x52c	
	// MNetworkEnable
	float m_flMaximumAttackSpeed; // 0x530	
	// MNetworkEnable
	bool m_bIsDaynightCycleDisabled; // 0x534	
private:
	[[maybe_unused]] uint8_t __pad0535[0x3]; // 0x535
public:
	// MNetworkEnable
	float m_flDaynightCycleAdvanceRate; // 0x538	
	// MNetworkEnable
	bool m_bAreWeatherEffectsDisabled; // 0x53c	
	// MNetworkEnable
	bool m_bDisableHudFlip; // 0x53d	
	// MNetworkEnable
	bool m_bEnableFriendlyBuildingMoveTo; // 0x53e	
	// MNetworkEnable
	bool m_bIsDeathOverlayDisabled; // 0x53f	
	// MNetworkEnable
	bool m_bIsHudCombatEventsDisabled; // 0x540	
private:
	[[maybe_unused]] uint8_t __pad0541[0x7]; // 0x541
public:
	// MNetworkEnable
	CUtlString m_strDefaultStickyItem; // 0x548	
	// MNetworkEnable
	CUtlString m_sCustomTerrainWeatherEffect; // 0x550	
	// MNetworkEnable
	CUtlString m_strTPScrollSlotItemOverride; // 0x558	
	// MNetworkEnable
	float m_flStrengthDamage; // 0x560	
	// MNetworkEnable
	float m_flStrengthHP; // 0x564	
	// MNetworkEnable
	float m_flStrengthHPRegen; // 0x568	
	// MNetworkEnable
	float m_flAgilityDamage; // 0x56c	
	// MNetworkEnable
	float m_flAgilityArmor; // 0x570	
	// MNetworkEnable
	float m_flAgilityAttackSpeed; // 0x574	
	// MNetworkEnable
	float m_flAgilityMovementSpeedPercent; // 0x578	
	// MNetworkEnable
	float m_flIntelligenceDamage; // 0x57c	
	// MNetworkEnable
	float m_flIntelligenceMana; // 0x580	
	// MNetworkEnable
	float m_flIntelligenceManaRegen; // 0x584	
	// MNetworkEnable
	float m_flIntelligenceMres; // 0x588	
	// MNetworkEnable
	float m_flIntelligenceSpellAmpPercent; // 0x58c	
	// MNetworkEnable
	float m_flStrengthMagicResistancePercent; // 0x590	
	// MNetworkEnable
	float m_flAttributeAllDamage; // 0x594	
	// MNetworkEnable
	float m_flDraftingHeroPickSelectTimeOverride; // 0x598	
	// MNetworkEnable
	float m_flDraftingBanningTimeOverride; // 0x59c	
	// MNetworkEnable
	bool m_bPauseEnabled; // 0x5a0	
private:
	[[maybe_unused]] uint8_t __pad05a1[0x3]; // 0x5a1
public:
	// MNetworkEnable
	int32_t m_iCustomScanMaxCharges; // 0x5a4	
	// MNetworkEnable
	float m_flCustomScanCooldown; // 0x5a8	
	// MNetworkEnable
	float m_flCustomGlyphCooldown; // 0x5ac	
	// MNetworkEnable
	float m_flCustomBackpackSwapCooldown; // 0x5b0	
	// MNetworkEnable
	float m_flCustomBackpackCooldownPercent; // 0x5b4	
	// MNetworkEnable
	bool m_bDefaultRuneSpawnLogic; // 0x5b8	
	// MNetworkEnable
	bool m_bEnableFreeCourierMode; // 0x5b9	
	// MNetworkEnable
	bool m_bAllowNeutralItemDrops; // 0x5ba	
	// MNetworkEnable
	bool m_bEnableNeutralStash; // 0x5bb	
	// MNetworkEnable
	bool m_bEnableNeutralStashTeamViewOnly; // 0x5bc	
	// MNetworkEnable
	bool m_bEnableNeutralItemHideUndiscovered; // 0x5bd	
	// MNetworkEnable
	bool m_bEnableSendToStash; // 0x5be	
	// MNetworkEnable
	bool m_bForceRightClickAttackDisabled; // 0x5bf	
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< CDOTACustomShopInfo > m_vecCustomShopInfo; // 0x5c0	
	// MNetworkEnable
	bool m_bCanSellAnywhere; // 0x610	
private:
	[[maybe_unused]] uint8_t __pad0611[0x3]; // 0x611
public:
	// MNetworkEnable
	float m_flCameraNearZ; // 0x614	
	// MNetworkEnable
	float m_flCameraFarZ; // 0x618	
	// MNetworkEnable
	int32_t m_nCustomRadiantScore; // 0x61c	
	// MNetworkEnable
	int32_t m_nCustomDireScore; // 0x620	
	// MNetworkEnable
	bool m_bAbilityUpgradeWhitelistEnabled; // 0x624	
private:
	[[maybe_unused]] uint8_t __pad0625[0x3]; // 0x625
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< AbilityID_t > m_vecAbilityUpgradeWhitelist; // 0x628	
	// MNetworkEnable
	bool m_bGiveFreeTPOnDeath; // 0x640	
private:
	[[maybe_unused]] uint8_t __pad0641[0x3]; // 0x641
public:
	// MNetworkEnable
	int32_t m_nInnateMeleeDamageBlockPct; // 0x644	
	// MNetworkEnable
	int32_t m_nInnateMeleeDamageBlockAmount; // 0x648	
	// MNetworkEnable
	int32_t m_nInnateMeleeDamageBlockPerLevelAmount; // 0x64c	
	// MNetworkEnable
	float m_flWaterRuneSpawnInterval; // 0x650	
private:
	[[maybe_unused]] uint8_t __pad0654[0x4]; // 0x654
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< CHandle< CDOTA_BaseNPC > > m_vecBigHealthBarUnits; // 0x658	
private:
	[[maybe_unused]] uint8_t __pad0670[0x20]; // 0x670
public:
	bool m_bSelectionGoldPenaltyEnabled; // 0x690	
	bool m_bRemoveIllusionsOnDeath; // 0x691	
	bool m_bRandomHeroBonusItemGrantDisabled; // 0x692	
	bool m_bDisableClumpingBehaviorByDefault; // 0x693	
	bool m_bRuneTypeEnabled[10]; // 0x694	
	bool m_bOverrideBotLateGame; // 0x69e	
	bool m_bBotsAlwaysPushWithHuman; // 0x69f	
	bool m_bBotsInLateGame; // 0x6a0	
private:
	[[maybe_unused]] uint8_t __pad06a1[0x3]; // 0x6a1
public:
	int32_t m_nBotMaxPushTier; // 0x6a4	
	float m_flFountainPercentageHealthRegen; // 0x6a8	
	float m_flFountainPercentageManaRegen; // 0x6ac	
	float m_flFountainConstantManaRegen; // 0x6b0	
	float m_flPowerRuneSpawnInterval; // 0x6b4	
	float m_flBountyRuneSpawnInterval; // 0x6b8	
	float m_flXPRuneSpawnInterval; // 0x6bc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x68
// Has VTable
// Has Trivial Destructor
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "Vector dirPrimary"
// MNetworkVarNames "Color colorPrimary"
// MNetworkVarNames "Color colorSecondary"
// MNetworkVarNames "Color colorPrimaryLerpTo"
// MNetworkVarNames "Color colorSecondaryLerpTo"
// MNetworkVarNames "float32 start"
// MNetworkVarNames "float32 end"
// MNetworkVarNames "float32 farz"
// MNetworkVarNames "float32 maxdensity"
// MNetworkVarNames "float32 exponent"
// MNetworkVarNames "float32 HDRColorScale"
// MNetworkVarNames "float32 skyboxFogFactor"
// MNetworkVarNames "float32 skyboxFogFactorLerpTo"
// MNetworkVarNames "float32 startLerpTo"
// MNetworkVarNames "float32 endLerpTo"
// MNetworkVarNames "float32 maxdensityLerpTo"
// MNetworkVarNames "GameTime_t lerptime"
// MNetworkVarNames "float32 duration"
// MNetworkVarNames "float32 blendtobackground"
// MNetworkVarNames "float32 scattering"
// MNetworkVarNames "float32 locallightscale"
// MNetworkVarNames "bool enable"
// MNetworkVarNames "bool blend"
// MNetworkVarNames "bool m_bNoReflectionFog"
struct fogparams_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	// MNetworkEncoder "coord"
	Vector dirPrimary; // 0x8	
	// MNetworkEnable
	Color colorPrimary; // 0x14	
	// MNetworkEnable
	Color colorSecondary; // 0x18	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	Color colorPrimaryLerpTo; // 0x1c	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	Color colorSecondaryLerpTo; // 0x20	
	// MNetworkEnable
	float start; // 0x24	
	// MNetworkEnable
	float end; // 0x28	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	float farz; // 0x2c	
	// MNetworkEnable
	float maxdensity; // 0x30	
	// MNetworkEnable
	float exponent; // 0x34	
	// MNetworkEnable
	float HDRColorScale; // 0x38	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	float skyboxFogFactor; // 0x3c	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	float skyboxFogFactorLerpTo; // 0x40	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	float startLerpTo; // 0x44	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	float endLerpTo; // 0x48	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	float maxdensityLerpTo; // 0x4c	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	GameTime_t lerptime; // 0x50	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	float duration; // 0x54	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	float blendtobackground; // 0x58	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	float scattering; // 0x5c	
	// MNetworkEnable
	// MNetworkUserGroup "FogController"
	float locallightscale; // 0x60	
	// MNetworkEnable
	bool enable; // 0x64	
	// MNetworkEnable
	bool blend; // 0x65	
	// MNetworkEnable
	bool m_bNoReflectionFog; // 0x66	
	bool m_bPadding; // 0x67	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has Trivial Destructor
struct CDOTA_BaseNPC_Hero__KillInfo_t
{
public:
	CUtlSymbolLarge m_victimname; // 0x0	
	CUtlSymbolLarge m_inflictorname; // 0x8	
	bool m_bEnemyInFOW; // 0x10	
	bool m_bWasFirstBlood; // 0x11	
private:
	[[maybe_unused]] uint8_t __pad0012[0x2]; // 0x12
public:
	int32_t m_iKillCount; // 0x14	
	float m_flBlinkTime; // 0x18	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xb0
// Has VTable
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "VPhysicsCollisionAttribute_t m_collisionAttribute"
// MNetworkVarNames "Vector m_vecMins"
// MNetworkVarNames "Vector m_vecMaxs"
// MNetworkVarNames "uint8 m_usSolidFlags"
// MNetworkVarNames "SolidType_t m_nSolidType"
// MNetworkVarNames "uint8 m_triggerBloat"
// MNetworkVarNames "SurroundingBoundsType_t m_nSurroundType"
// MNetworkVarNames "uint8 m_CollisionGroup"
// MNetworkVarNames "uint8 m_nEnablePhysics"
// MNetworkVarNames "Vector m_vecSpecifiedSurroundingMins"
// MNetworkVarNames "Vector m_vecSpecifiedSurroundingMaxs"
// MNetworkVarNames "Vector m_vCapsuleCenter1"
// MNetworkVarNames "Vector m_vCapsuleCenter2"
// MNetworkVarNames "float m_flCapsuleRadius"
class CCollisionProperty
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x10]; // 0x0
public:
	// MNetworkEnable
	// MNetworkChangeCallback "CollisionAttributeChanged"
	// -> m_nInteractsAs - 0x18
	// -> m_nInteractsWith - 0x20
	// -> m_nInteractsExclude - 0x28
	// -> m_nEntityId - 0x30
	// -> m_nOwnerId - 0x34
	// -> m_nHierarchyId - 0x38
	// -> m_nCollisionGroup - 0x3a
	// -> m_nCollisionFunctionMask - 0x3b
	VPhysicsCollisionAttribute_t m_collisionAttribute; // 0x10	
	// MNetworkEnable
	// MNetworkChangeCallback "OnUpdateOBB"
	Vector m_vecMins; // 0x40	
	// MNetworkEnable
	// MNetworkChangeCallback "OnUpdateOBB"
	Vector m_vecMaxs; // 0x4c	
private:
	[[maybe_unused]] uint8_t __pad0058[0x2]; // 0x58
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnUpdateSolidFlags"
	uint8_t m_usSolidFlags; // 0x5a	
	// MNetworkEnable
	// MNetworkChangeCallback "OnUpdateSolidType"
	SolidType_t m_nSolidType; // 0x5b	
	// MNetworkEnable
	// MNetworkChangeCallback "MarkSurroundingBoundsDirty"
	uint8_t m_triggerBloat; // 0x5c	
	// MNetworkEnable
	// MNetworkChangeCallback "MarkSurroundingBoundsDirty"
	SurroundingBoundsType_t m_nSurroundType; // 0x5d	
	// MNetworkEnable
	uint8_t m_CollisionGroup; // 0x5e	
	// MNetworkEnable
	// MNetworkChangeCallback "OnUpdateEnablePhysics"
	uint8_t m_nEnablePhysics; // 0x5f	
	float m_flBoundingRadius; // 0x60	
	// MNetworkEnable
	// MNetworkChangeCallback "MarkSurroundingBoundsDirty"
	Vector m_vecSpecifiedSurroundingMins; // 0x64	
	// MNetworkEnable
	// MNetworkChangeCallback "MarkSurroundingBoundsDirty"
	Vector m_vecSpecifiedSurroundingMaxs; // 0x70	
	Vector m_vecSurroundingMaxs; // 0x7c	
	Vector m_vecSurroundingMins; // 0x88	
	// MNetworkEnable
	// MNetworkChangeCallback "OnUpdateCapsule"
	Vector m_vCapsuleCenter1; // 0x94	
	// MNetworkEnable
	// MNetworkChangeCallback "OnUpdateCapsule"
	Vector m_vCapsuleCenter2; // 0xa0	
	// MNetworkEnable
	// MNetworkChangeCallback "OnUpdateCapsule"
	float m_flCapsuleRadius; // 0xac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Venom_Gland : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Octarine_Core : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Black_King_Bar : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_ArcWarden_MagneticField : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Oracle_FatesEdict : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Legion_Commander_MomentOfCourage : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Skywrath_Mage_Shard_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_intelligence; // 0x1338	
	float bonus_armor; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tusk_WalrusPunch_Slow : public CDOTA_Buff
{
public:
	int32_t move_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Knockback : public CDOTA_Buff
{
public:
	float knockback_distance; // 0x1338	
	int32_t knockback_height; // 0x133c	
	float knockback_duration; // 0x1340	
	Vector m_vHorizOffset; // 0x1344	
	Vector m_vStartPosition; // 0x1350	
	float m_fCurrentTimeHoriz; // 0x135c	
	float m_fCurrentTimeVert; // 0x1360	
	bool m_bShouldStun; // 0x1364	
	bool m_bRespectLeash; // 0x1365	
	bool m_bReversePolarity; // 0x1366	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Brewmaster_AstralPulse : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Jakiro_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Omniknight_Purification : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Venomancer_NoxiousPlague_Slow : public CDOTA_Buff
{
public:
	float attack_slow; // 0x1338	
	float movement_slow_max; // 0x133c	
	float debuff_radius; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_JumpBoots : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1338	
	float m_flStartZ; // 0x1344	
	float m_flCurTime; // 0x1348	
	int32_t push_length; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Kunkka_Tidebringer : public CDOTA_Buff
{
public:
	bool m_bTidebringerAttack; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	int32_t cleave_starting_width; // 0x133c	
	int32_t cleave_ending_width; // 0x1340	
	int32_t cleave_distance; // 0x1344	
	int32_t damage_bonus; // 0x1348	
	ParticleIndex_t m_nFXIndex; // 0x134c	
	int32_t cleave_damage; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Zeus_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Zeus_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CServerOnlyEntity : public CBaseEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPointEntity : public CBaseEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bounty_Hunter_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lycan_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Greevil_Miniboss_Blue_IceVortex : public CDOTA_Buff
{
public:
	int32_t movement_speed_pct; // 0x1338	
	int32_t spell_resist_pct; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x758
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CRenderComponent::Storage_t m_CRenderComponent"
// MNetworkVarNames "CHitboxComponent::Storage_t m_CHitboxComponent"
// MNetworkVarNames "RenderMode_t m_nRenderMode"
// MNetworkVarNames "RenderFx_t m_nRenderFX"
// MNetworkVarNames "Color m_clrRender"
// MNetworkVarNames "EntityRenderAttribute_t m_vecRenderAttributes"
// MNetworkVarNames "bool m_bRenderToCubemaps"
// MNetworkVarNames "CCollisionProperty m_Collision"
// MNetworkVarNames "CGlowProperty m_Glow"
// MNetworkVarNames "float m_flGlowBackfaceMult"
// MNetworkVarNames "float32 m_fadeMinDist"
// MNetworkVarNames "float32 m_fadeMaxDist"
// MNetworkVarNames "float32 m_flFadeScale"
// MNetworkVarNames "float32 m_flShadowStrength"
// MNetworkVarNames "uint8 m_nObjectCulling"
// MNetworkVarNames "int m_nAddDecal"
// MNetworkVarNames "Vector m_vDecalPosition"
// MNetworkVarNames "Vector m_vDecalForwardAxis"
// MNetworkVarNames "float m_flDecalHealBloodRate"
// MNetworkVarNames "float m_flDecalHealHeightRate"
// MNetworkVarNames "CHandle< CBaseModelEntity > m_ConfigEntitiesToPropagateMaterialDecalsTo"
// MNetworkVarNames "CNetworkViewOffsetVector m_vecViewOffset"
class CBaseModelEntity : public CBaseEntity
{
public:
	// MNetworkEnable
	// MNetworkUserGroup "CRenderComponent"
	// MNetworkAlias "CRenderComponent"
	// MNetworkTypeAlias "CRenderComponent"
	CRenderComponent* m_CRenderComponent; // 0x4a8	
	// MNetworkEnable
	// MNetworkUserGroup "CHitboxComponent"
	// MNetworkAlias "CHitboxComponent"
	// MNetworkTypeAlias "CHitboxComponent"
	CHitboxComponent m_CHitboxComponent; // 0x4b0	
	GameTime_t m_flDissolveStartTime; // 0x4d8	
private:
	[[maybe_unused]] uint8_t __pad04dc[0x4]; // 0x4dc
public:
	CEntityIOOutput m_OnIgnite; // 0x4e0	
	int32_t m_iViewerID; // 0x508	
private:
	[[maybe_unused]] uint8_t __pad050c[0x44]; // 0x50c
public:
	int32_t m_iTeamVisibilityBitmask; // 0x550	
	// MNetworkEnable
	RenderMode_t m_nRenderMode; // 0x554	
	bool m_bVisibilityDirtyFlag; // 0x555	
	int16_t m_iFOWTempViewerID[10]; // 0x556	
	// MNetworkEnable
	RenderFx_t m_nRenderFX; // 0x56a	
	bool m_bAllowFadeInView; // 0x56b	
	// MNetworkEnable
	// MNetworkChangeCallback "OnColorChanged"
	Color m_clrRender; // 0x56c	
	// MNetworkEnable
	// MNetworkChangeCallback "OnRenderAttributesChanged"
	CUtlVectorEmbeddedNetworkVar< EntityRenderAttribute_t > m_vecRenderAttributes; // 0x570	
	// MNetworkEnable
	bool m_bRenderToCubemaps; // 0x5c0	
private:
	[[maybe_unused]] uint8_t __pad05c1[0x7]; // 0x5c1
public:
	// MNetworkEnable
	CCollisionProperty m_Collision; // 0x5c8	
	// MNetworkEnable
	// -> m_fGlowColor - 0x680
	// -> m_iGlowType - 0x6a8
	// -> m_iGlowTeam - 0x6ac
	// -> m_nGlowRange - 0x6b0
	// -> m_nGlowRangeMin - 0x6b4
	// -> m_glowColorOverride - 0x6b8
	// -> m_bFlashing - 0x6bc
	// -> m_flGlowTime - 0x6c0
	// -> m_flGlowStartTime - 0x6c4
	// -> m_bGlowing - 0x6c8
	CGlowProperty m_Glow; // 0x678	
	// MNetworkEnable
	float m_flGlowBackfaceMult; // 0x6d0	
	// MNetworkEnable
	float m_fadeMinDist; // 0x6d4	
	// MNetworkEnable
	float m_fadeMaxDist; // 0x6d8	
	// MNetworkEnable
	float m_flFadeScale; // 0x6dc	
	// MNetworkEnable
	float m_flShadowStrength; // 0x6e0	
	// MNetworkEnable
	uint8_t m_nObjectCulling; // 0x6e4	
private:
	[[maybe_unused]] uint8_t __pad06e5[0x3]; // 0x6e5
public:
	// MNetworkEnable
	int32_t m_nAddDecal; // 0x6e8	
	// MNetworkEnable
	Vector m_vDecalPosition; // 0x6ec	
	// MNetworkEnable
	Vector m_vDecalForwardAxis; // 0x6f8	
	// MNetworkEnable
	float m_flDecalHealBloodRate; // 0x704	
	// MNetworkEnable
	float m_flDecalHealHeightRate; // 0x708	
private:
	[[maybe_unused]] uint8_t __pad070c[0x4]; // 0x70c
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< CHandle< CBaseModelEntity > > m_ConfigEntitiesToPropagateMaterialDecalsTo; // 0x710	
	// MNetworkEnable
	// MNetworkPriority "32"
	// MNetworkUserGroup "Player"
	CNetworkViewOffsetVector m_vecViewOffset; // 0x728	
	
	// Datamap fields:
	// int32_t InputAlpha; // 0x0
	// Color InputColor; // 0x0
	// int32_t InputSkin; // 0x0
	// void CBaseModelEntitySUB_DissolveIfUncarried; // 0x0
	// void InputIgnite; // 0x0
	// float InputIgniteLifetime; // 0x0
	// int32_t InputIgnite; // 0x0
	// float InputIgnite; // 0x0
	// void InputExtinguish; // 0x0
	// CUtlString add_attribute; // 0x7fffffff
	// void CBaseModelEntitySUB_StartFadeOut; // 0x0
	// void CBaseModelEntitySUB_StartFadeOutInstant; // 0x0
	// void CBaseModelEntitySUB_FadeOut; // 0x0
	// void CBaseModelEntitySUB_StartShadowFadeOut; // 0x0
	// void CBaseModelEntitySUB_PerformShadowFadeOut; // 0x0
	// void CBaseModelEntitySUB_StartShadowFadeIn; // 0x0
	// void CBaseModelEntitySUB_PerformShadowFadeIn; // 0x0
	// void CBaseModelEntitySUB_StopShadowFade; // 0x0
	// void m_iFOWTempViewerID; // 0x556
	// Color rendercolor32; // 0x7fffffff
	// Color rendercolor; // 0x7fffffff
	// int32_t renderamt; // 0x7fffffff
	// Vector mins; // 0x7fffffff
	// Vector maxs; // 0x7fffffff
	// const char * skin; // 0x7fffffff
	// CUtlString bodygroups; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x818
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CBreakable : public CBaseModelEntity
{
private:
	[[maybe_unused]] uint8_t __pad0758[0x10]; // 0x758
public:
	Materials m_Material; // 0x768	
	CHandle< CBaseEntity > m_hBreaker; // 0x76c	
	Explosions m_Explosion; // 0x770	
private:
	[[maybe_unused]] uint8_t __pad0774[0x4]; // 0x774
public:
	CUtlSymbolLarge m_iszSpawnObject; // 0x778	
	float m_flPressureDelay; // 0x780	
	int32_t m_iMinHealthDmg; // 0x784	
	CUtlSymbolLarge m_iszPropData; // 0x788	
	float m_impactEnergyScale; // 0x790	
	EOverrideBlockLOS_t m_nOverrideBlockLOS; // 0x794	
	CEntityIOOutput m_OnBreak; // 0x798	
	CEntityOutputTemplate< float32 > m_OnHealthChanged; // 0x7c0	
	float m_flDmgModBullet; // 0x7e8	
	float m_flDmgModClub; // 0x7ec	
	float m_flDmgModExplosive; // 0x7f0	
	float m_flDmgModFire; // 0x7f4	
	CUtlSymbolLarge m_iszPhysicsDamageTableName; // 0x7f8	
	CUtlSymbolLarge m_iszBasePropData; // 0x800	
	int32_t m_iInteractions; // 0x808	
	PerformanceMode_t m_PerformanceMode; // 0x80c	
	CHandle< CBasePlayerPawn > m_hPhysicsAttacker; // 0x810	
	GameTime_t m_flLastPhysicsInfluenceTime; // 0x814	
	
	// Datamap fields:
	// void InputBreak; // 0x0
	// int32_t InputSetHealth; // 0x0
	// int32_t InputAddHealth; // 0x0
	// int32_t InputRemoveHealth; // 0x0
	// float InputSetMass; // 0x0
	// void CBreakableDie; // 0x0
	// int32_t material; // 0x7fffffff
	// int32_t spawnobject; // 0x7fffffff
	// int32_t propdata; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13c8
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_Hoodwink_ArcingBoomerang : public CDOTA_Buff
{
public:
	Vector m_vLeftControl; // 0x1338	
	Vector m_vRightControl; // 0x1344	
	Vector m_vTargetLoc; // 0x1350	
	Vector m_vOriginalTargetLoc; // 0x135c	
	Vector m_vSourceLoc; // 0x1368	
	float m_flBuffDuration; // 0x1374	
	GameTime_t m_flBuffDieTime; // 0x1378	
	bool m_bReturning; // 0x137c	
private:
	[[maybe_unused]] uint8_t __pad137d[0x3]; // 0x137d
public:
	int32_t m_nFramesToWait; // 0x1380	
	CHandle< CBaseEntity > m_hBoomerang; // 0x1384	
	ParticleIndex_t m_nBoomerangFXIndex; // 0x1388	
	ParticleIndex_t m_nOldBoomerangFXindex; // 0x138c	
	CUtlVector< CHandle< CBaseEntity > > m_vecUniqueHitList; // 0x1390	
	int32_t radius; // 0x13a8	
	int32_t spread; // 0x13ac	
	int32_t damage; // 0x13b0	
	float min_throw_duration; // 0x13b4	
	float max_throw_duration; // 0x13b8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_Minor_Stats_Upgrade : public CDOTA_Buff
{
public:
	int32_t bonus_all_stats; // 0x1338	
	int32_t bonus_primary_stat; // 0x133c	
	int32_t bonus_movespeed; // 0x1340	
	int32_t bonus_hp_regen; // 0x1344	
	int32_t bonus_armor; // 0x1348	
	int32_t bonus_attack_damage; // 0x134c	
	int32_t bonus_cast_range; // 0x1350	
	int32_t bonus_spell_amp; // 0x1354	
	int32_t bonus_health; // 0x1358	
	int32_t bonus_mana; // 0x135c	
	int32_t bonus_attack_speed; // 0x1360	
	int32_t bonus_heal_amp; // 0x1364	
	int32_t bonus_mana_regen; // 0x1368	
	int32_t bonus_evasion; // 0x136c	
	int32_t bonus_magic_resist; // 0x1370	
	int32_t bonus_lifesteal; // 0x1374	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Haste : public CDOTA_Buff
{
public:
	float value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Vision : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Lance_of_Pursuit_Slow : public CDOTA_Buff
{
public:
	int32_t slow_pct_melee; // 0x1338	
	int32_t slow_pct_ranged; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Star_Mace : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Cornucopia : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EchoSabre_Debuff : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1338	
	int32_t attack_speed_slow; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x638
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "AbilityID_t m_vecChoices"
class CDOTA_Item_TierToken : public CDOTA_Item
{
public:
	// MNetworkEnable
	AbilityID_t m_vecChoices[5]; // 0x620	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_AbyssalBlade : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
	int32_t bash_chance_melee; // 0x133c	
	int32_t bash_chance_ranged; // 0x1340	
	float bash_duration; // 0x1344	
	float bash_cooldown; // 0x1348	
	int32_t bonus_chance_damage; // 0x134c	
	int32_t bonus_damage; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1354[0x4]; // 0x1354
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1358	
	int32_t bonus_health; // 0x1370	
	float bonus_health_regen; // 0x1374	
	int32_t block_damage_ranged; // 0x1378	
	int32_t block_damage_melee; // 0x137c	
	int32_t block_chance; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_GreaterCritical : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5e0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Marci_Companion_Run : public CDOTABaseAbility
{
public:
	int32_t m_nTrackingProjectileID; // 0x578	
	ParticleIndex_t m_nFXIndex; // 0x57c	
	int32_t m_nMaxJumpDistance; // 0x580	
	int32_t landing_radius; // 0x584	
	int32_t move_speed; // 0x588	
	float ally_buff_duration; // 0x58c	
	int32_t min_jump_distance; // 0x590	
	int32_t max_jump_distance; // 0x594	
	int32_t impact_position_offset; // 0x598	
	int32_t vector_preview_radius; // 0x59c	
	Vector m_vEndpoint; // 0x5a0	
	ParticleIndex_t m_nToBounceFXIndex; // 0x5ac	
	ParticleIndex_t m_nToTargetFXIndex; // 0x5b0	
	Vector m_vDashPosition; // 0x5b4	
	Vector m_vFacePosition; // 0x5c0	
	Vector m_vTravelDir; // 0x5cc	
	float m_fTravelDistance; // 0x5d8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Snapfire_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Skywrath_Mage_Ancient_Seal : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Chaos_Knight_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lycan_Shard : public CDOTA_Buff
{
public:
	float m_flNextSpawn; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Huskar_Inner_Fire_Knockback : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1338	
	float m_flEndTime; // 0x1344	
	float m_flCurTime; // 0x1348	
	float knockback_distance; // 0x134c	
	float knockback_duration; // 0x1350	
	float effective_distance; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pugna_LifeDrain_SpellAmp : public CDOTA_Buff
{
public:
	bool m_bIsFriendly; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Beastmaster_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_NianCharge : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lion_ManaDrain_Buff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Razor_UnstableCurrent_Aura : public CDOTA_Buff
{
public:
	int32_t self_movement_speed_pct; // 0x1338	
	int32_t strike_pct_chance; // 0x133c	
	float strike_damage; // 0x1340	
	int32_t strike_move_slow_pct; // 0x1344	
	int32_t strike_search_radius; // 0x1348	
	int32_t strike_target_count; // 0x134c	
	float strike_slow_duration; // 0x1350	
	float strike_internal_cd; // 0x1354	
	GameTime_t m_flNextShardProcTime; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_PhantomLancer_Juxtapose : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hInvisIllusion; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Axe_BerserkersCall : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hZombieTarget; // 0x1338	
	bool m_bDidSetAttackTarget; // 0x133c	
private:
	[[maybe_unused]] uint8_t __pad133d[0x3]; // 0x133d
public:
	int32_t bonus_attack_speed; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Drow_Ranger_Multishot_Damage : public CDOTA_Buff
{
public:
	int32_t arrow_damage_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_PineCone_ShieldBash : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nPreviewFX; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cleave_140 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has VTable
// Has Trivial Destructor
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float32 m_duration"
// MNetworkVarNames "GameTime_t m_timestamp"
// MNetworkVarNames "float32 m_timescale"
// MNetworkVarNames "WorldGroupId_t m_nWorldGroupId"
class CountdownTimer
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	float m_duration; // 0x8	
	// MNetworkEnable
	GameTime_t m_timestamp; // 0xc	
	// MNetworkEnable
	float m_timescale; // 0x10	
	// MNetworkEnable
	WorldGroupId_t m_nWorldGroupId; // 0x14	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_ScriptedSpawner : public CPointEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x10]; // 0x4a8
public:
	CUtlSymbolLarge m_szNPCFirstWaypoint; // 0x4b8	
	int32_t m_nNPCType; // 0x4c0	
	bool m_bAllowRelaxation; // 0x4c4	
	bool m_bPlayPostVictoryAnims; // 0x4c5	
	bool m_bDisableAutoAttack; // 0x4c6	
	bool m_bAutomaticallyRespawn; // 0x4c7	
	bool m_bInvulnerable; // 0x4c8	
	bool m_bAllowHeroTargets; // 0x4c9	
private:
	[[maybe_unused]] uint8_t __pad04ca[0x2]; // 0x4ca
public:
	int32_t m_nActivityOverride; // 0x4cc	
	float m_flDuration; // 0x4d0	
	bool m_bAnimationFireOnce; // 0x4d4	
private:
	[[maybe_unused]] uint8_t __pad04d5[0x3]; // 0x4d5
public:
	CUtlVector< CDOTA_ScriptedSpawner::scripted_moveto_t > m_hMoveToTargets; // 0x4d8	
	CEntityIOOutput m_OnAllUnitsKilled; // 0x4f0	
	CEntityIOOutput m_OnUnitKilled; // 0x518	
	CEntityIOOutput m_OnHealthLow; // 0x540	
	CUtlVector< CHandle< CDOTA_BaseNPC > > m_Units; // 0x568	
	CHandle< CBaseEntity > m_hSpawnpoint; // 0x580	
private:
	[[maybe_unused]] uint8_t __pad0584[0x4]; // 0x584
public:
	CUtlSymbolLarge m_szCustomNPCName; // 0x588	
	
	// Datamap fields:
	// int32_t InputSpawnNPC; // 0x0
	// int32_t InputSetNPCType; // 0x0
	// int32_t InputSetNPCTeam; // 0x0
	// CUtlSymbolLarge InputSetNPCWaypoint; // 0x0
	// void InputRemoveAllSpawnedUnits; // 0x0
	// bool InputSetAllowRelaxation; // 0x0
	// bool InputSetAllowAutoAttack; // 0x0
	// bool InputSetAutomaticallyRespawn; // 0x0
	// bool InputSetPlayPostVictoryAnimation; // 0x0
	// CUtlSymbolLarge InputFireTutorialAdvanceEvent; // 0x0
	// CUtlSymbolLarge InputSetSpawnPoint; // 0x0
	// bool InputSetCompanion; // 0x0
	// bool InputSetCompanionAttack; // 0x0
	// CUtlSymbolLarge InputTeleportToWaypoint; // 0x0
	// bool InputSetInvulnerable; // 0x0
	// int32_t InputSetHealth; // 0x0
	// bool InputForceIdle; // 0x0
	// bool InputForceCreepAttack; // 0x0
	// int32_t InputUseAbility; // 0x0
	// int32_t InputSetDuration; // 0x0
	// int32_t InputSetAllowHeroTargets; // 0x0
	// CUtlSymbolLarge InputSetCustomNPCName; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Devastator : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1338	
	int32_t projectile_speed; // 0x133c	
	int32_t bonus_intellect; // 0x1340	
	int32_t bonus_attack_speed; // 0x1344	
	float bonus_mana_regen; // 0x1348	
	int32_t mana_cost; // 0x134c	
	int32_t slow_duration; // 0x1350	
	int32_t spell_amp_duration; // 0x1354	
	int32_t damage_penalty; // 0x1358	
	int32_t passive_cooldown; // 0x135c	
	CUtlVector< int16 > m_InFlightWitchBladeAttackRecords; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Slime_Vial_Thinker : public CDOTA_Buff
{
public:
	float m_fCurRadius; // 0x1338	
	GameTime_t m_fLastThink; // 0x133c	
	CUtlVector< CHandle< CBaseEntity > > m_entitiesHit; // 0x1340	
	CountdownTimer m_ViewerTimer; // 0x1358	
	int32_t spill_speed; // 0x1370	
	int32_t spill_radius; // 0x1374	
	int32_t spill_damage; // 0x1378	
	float spill_debuff_duration; // 0x137c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1398
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Grandmasters_Glaive : public CDOTA_Buff_Item
{
public:
	int32_t sange_bonus_strength; // 0x1338	
	int32_t sange_status_resistance; // 0x133c	
	int32_t sange_hp_regen_amp; // 0x1340	
	int32_t kaya_bonus_intellect; // 0x1344	
	int32_t kaya_spell_amp; // 0x1348	
	int32_t kaya_mana_regen_multiplier; // 0x134c	
	int32_t kaya_magic_damage_attack; // 0x1350	
	int32_t yasha_bonus_agility; // 0x1354	
	int32_t yasha_bonus_attack_speed; // 0x1358	
	int32_t yasha_movement_speed_percent_bonus; // 0x135c	
	int32_t m_iCurrentStance; // 0x1360	
	int32_t bonus_strength; // 0x1364	
	int32_t bash_chance_melee; // 0x1368	
	int32_t bash_chance_ranged; // 0x136c	
	float bash_duration; // 0x1370	
	float bash_cooldown; // 0x1374	
	int32_t bonus_chance_damage; // 0x1378	
	int32_t bonus_damage; // 0x137c	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Crown : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Necronomicon : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_DivineRapier : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Muerta_DeadShot_Fear : public CDOTA_Buff
{
public:
	Vector m_vFearDir; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_Transform : public CDOTA_Buff
{
public:
	CUtlString m_strDisguise; // 0x1338	
	int32_t movespeed; // 0x1340	
	int32_t m_nDisguisedSpeed; // 0x1344	
	int32_t reveal_radius; // 0x1348	
	ParticleIndex_t m_nDisguiseEffectIndex; // 0x134c	
	CHandle< CBaseEntity > m_hCourierToClone; // 0x1350	
	CHandle< CBaseEntity > m_hCreepToClone; // 0x1354	
	CUtlVector< CHandle< CBaseEntity > > m_aryBountyRuneSpawners; // 0x1358	
	bool m_bIsFlyingCourier; // 0x1370	
	bool m_bIsRune; // 0x1371	
	bool m_bIsBanana; // 0x1372	
	bool m_bIsFakeAlly; // 0x1373	
	uint32_t m_nMischiefUnitType; // 0x1374	
	int32_t m_nMischiefHealthbarOffset; // 0x1378	
	float invul_duration; // 0x137c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Visage_GravekeepersCloak_Stack : public CDOTA_Buff
{
public:
	bool m_bIsRecovering; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	int32_t m_nFXIndex[4]; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_SpiritBreaker_Bulldoze : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Spectre_Arcana_Kill_Effect : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nCasterFXIndex; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BountyHunter_WindWalk_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
	int32_t attack_slow; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_NightStalker_CripplingFear : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DarkSeer_IonShell : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_QueenOfPain_ShadowStrike : public CDOTA_Buff
{
public:
	int32_t duration_damage; // 0x1338	
	int32_t duration_heal; // 0x133c	
	int32_t movement_slow; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CountdownTimer m_SlowInterval; // 0x1348	
	float m_flSlowStep; // 0x1360	
	float m_flSlowStepStep; // 0x1364	
	float attack_buff_duration; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Beastmaster_Hawk_Perch_Flight : public CDOTA_Buff
{
public:
	int32_t perch_flight_height; // 0x1338	
	int32_t perch_tree_height; // 0x133c	
	int32_t flight_speed; // 0x1340	
	float m_flZDelta; // 0x1344	
	Vector m_vStart; // 0x1348	
	CHandle< CBaseEntity > m_hTarget; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DebuffImmune : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Kobold_Disarm : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7d8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CBaseToggle : public CBaseModelEntity
{
public:
	TOGGLE_STATE m_toggle_state; // 0x758	
	float m_flMoveDistance; // 0x75c	
	float m_flWait; // 0x760	
	float m_flLip; // 0x764	
	bool m_bAlwaysFireBlockedOutputs; // 0x768	
private:
	[[maybe_unused]] uint8_t __pad0769[0x3]; // 0x769
public:
	Vector m_vecPosition1; // 0x76c	
	Vector m_vecPosition2; // 0x778	
	QAngle m_vecMoveAng; // 0x784	
	QAngle m_vecAngle1; // 0x790	
	QAngle m_vecAngle2; // 0x79c	
	float m_flHeight; // 0x7a8	
	CHandle< CBaseEntity > m_hActivator; // 0x7ac	
	Vector m_vecFinalDest; // 0x7b0	
	QAngle m_vecFinalAngle; // 0x7bc	
	int32_t m_movementType; // 0x7c8	
private:
	[[maybe_unused]] uint8_t __pad07cc[0x4]; // 0x7cc
public:
	CUtlSymbolLarge m_sMaster; // 0x7d0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_UpgradedMortar : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Pangolier_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Monkey_King_11 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_30 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x768
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_bShouldAnimateDuringGameplayPause"
// MNetworkVarNames "bool m_bInitiallyPopulateInterpHistory"
class CBaseAnimatingActivity : public CBaseModelEntity
{
public:
	// MNetworkEnable
	bool m_bShouldAnimateDuringGameplayPause; // 0x758	
	// MNetworkEnable
	bool m_bInitiallyPopulateInterpHistory; // 0x759	
	bool m_bAnimationUpdateScheduled; // 0x75a	
private:
	[[maybe_unused]] uint8_t __pad075b[0x5]; // 0x75b
public:
	CUtlVector< CUtlString >* m_pSuppressedAnimEventTags; // 0x760	
	
	// Datamap fields:
	// float InputSetPlaybackRate; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has Trivial Destructor
class CDOTA_CreepKillInfo
{
public:
	GameTime_t m_flTimeOfDeath; // 0x0	
	float m_flDeathFlightDuration; // 0x4	
	Vector m_vWsKillDirection; // 0x8	
	Vector m_vWsKillOrigin; // 0x14	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x768
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CBaseAnimatingOverlay : public CBaseAnimatingActivity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Fountain_Glyph : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x928
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkIncludeByName "m_spawnflags"
// MNetworkVarNames "bool m_bDisabled"
// MNetworkVarNames "bool m_bClientSidePredicted"
class CBaseTrigger : public CBaseToggle
{
public:
	// MNetworkEnable
	bool m_bDisabled; // 0x7d8	
private:
	[[maybe_unused]] uint8_t __pad07d9[0x7]; // 0x7d9
public:
	CUtlSymbolLarge m_iFilterName; // 0x7e0	
	CHandle< CBaseFilter > m_hFilter; // 0x7e8	
private:
	[[maybe_unused]] uint8_t __pad07ec[0x4]; // 0x7ec
public:
	CEntityIOOutput m_OnStartTouch; // 0x7f0	
	CEntityIOOutput m_OnStartTouchAll; // 0x818	
	CEntityIOOutput m_OnEndTouch; // 0x840	
	CEntityIOOutput m_OnEndTouchAll; // 0x868	
	CEntityIOOutput m_OnTouching; // 0x890	
	CEntityIOOutput m_OnTouchingEachEntity; // 0x8b8	
	CEntityIOOutput m_OnNotTouching; // 0x8e0	
	CUtlVector< CHandle< CBaseEntity > > m_hTouchingEntities; // 0x908	
	// MNetworkEnable
	bool m_bClientSidePredicted; // 0x920	
	
	// Datamap fields:
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
	// void InputToggle; // 0x0
	// void InputTouchTest; // 0x0
	// void InputStartTouch; // 0x0
	// void InputEndTouch; // 0x0
	// bool okifnomodel; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_UpheavalUrn_Reincarnation : public CDOTA_Buff
{
public:
	float reincarnate_time; // 0x1338	
	GameTime_t m_fLastReincarnationTime; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_SeedsOfSerenity : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
	float bonus_health_regen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Ironwood_tree : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Bloodstone : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Shivas_Guard_Thinker : public CDOTA_Buff
{
public:
	float m_fCurRadius; // 0x1338	
	GameTime_t m_fLastThink; // 0x133c	
	CUtlVector< CHandle< CBaseEntity > > m_entitiesHit; // 0x1340	
	CountdownTimer m_ViewerTimer; // 0x1358	
	int32_t blast_speed; // 0x1370	
	int32_t blast_radius; // 0x1374	
	int32_t blast_damage; // 0x1378	
	int32_t illusion_multiplier_pct; // 0x137c	
	float blast_debuff_duration; // 0x1380	
	float resist_debuff_duration; // 0x1384	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Hyperstone : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Wisp_Tether : public CDOTA_Buff
{
public:
	bool m_bInManaGained; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	CHandle< CBaseEntity > m_hTarget; // 0x133c	
	CUtlVector< CHandle< CBaseEntity > > hStunnedEntities; // 0x1340	
	float stun_duration; // 0x1358	
	int32_t movespeed; // 0x135c	
	int32_t self_bonus; // 0x1360	
	bool m_bIsInRange; // 0x1364	
private:
	[[maybe_unused]] uint8_t __pad1365[0x3]; // 0x1365
public:
	int32_t radius; // 0x1368	
	int32_t latch_distance; // 0x136c	
	float m_flHealthHealed; // 0x1370	
	float m_flManaHealed; // 0x1374	
	float tether_heal_amp; // 0x1378	
	GameTime_t m_flHealMessageTime; // 0x137c	
	GameTime_t m_flManaMessageTime; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Rubick_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DoomBringer_Doom_Aura_Self : public CDOTA_Buff
{
public:
	int32_t scepter_aura_radius; // 0x1338	
	int32_t damage; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Weaver_Shukuchi : public CDOTABaseAbility
{
public:
	float duration; // 0x578	
	int32_t radius; // 0x57c	
	int32_t damage; // 0x580	
	float fade_time; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TemplarAssassin_Trap_Slow : public CDOTA_Buff
{
public:
	int32_t movement_speed_min; // 0x1338	
	int32_t movement_speed_max; // 0x133c	
	int32_t extra_damage; // 0x1340	
	float trap_max_charge_duration; // 0x1344	
	float min_silence_duration; // 0x1348	
	float max_silence_duration; // 0x134c	
	float stage; // 0x1350	
	float flDamagePerTick; // 0x1354	
	bool bExtraDamage; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Venomancer_PoisonNova : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7f8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float32 m_flexWeight"
// MNetworkVarNames "Vector m_vLookTargetPosition"
// MNetworkVarNames "bool m_blinktoggle"
class CBaseFlex : public CBaseAnimatingOverlay
{
public:
	// MNetworkEnable
	// MNetworkBitCount "12"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "1,000000"
	// MNetworkEncodeFlags "1"
	CNetworkUtlVectorBase< float32 > m_flexWeight; // 0x768	
	// MNetworkEnable
	// MNetworkEncoder "coord"
	Vector m_vLookTargetPosition; // 0x780	
	// MNetworkEnable
	bool m_blinktoggle; // 0x78c	
private:
	[[maybe_unused]] uint8_t __pad078d[0x53]; // 0x78d
public:
	GameTime_t m_flAllowResponsesEndTime; // 0x7e0	
	GameTime_t m_flLastFlexAnimationTime; // 0x7e4	
	uint32_t m_nNextSceneEventId; // 0x7e8	
	bool m_bUpdateLayerPriorities; // 0x7ec	
	
	// Datamap fields:
	// void CBaseFlexProcessSceneEventsThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Puck_PhaseShift : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tiny : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Zeus_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_CrystalMaiden_IceRink_Movement : public CDOTA_Buff
{
public:
	bool m_bHitFirstUpdate; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	float flMovementSpeed; // 0x133c	
	float m_flTurnBoostProgress; // 0x1340	
	float m_flFacingTarget; // 0x1344	
	ParticleIndex_t m_nFXIndex; // 0x1348	
	GameTime_t m_flHitEndTime; // 0x134c	
	float hit_recover_time; // 0x1350	
	Vector m_vDirection; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AntiMage_ManaVoid : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_SatyrTrickster_Purge : public CDOTABaseAbility
{
public:
	GameTime_t m_flTargetTime; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Neutral_SpellImmunity : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLogicalEntity : public CServerOnlyEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dazzle_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Storm_Spirit_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Wisp_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cooldown_Reduction_25 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_Regen_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Is Abstract
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
class CDOTABaseCustomHeroPickRules : public CBaseEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x2a8
// Has VTable
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
class CDOTA_ModifierManager
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x28]; // 0x0
public:
	bool m_bCompactBuffListPending; // 0x28	
private:
	[[maybe_unused]] uint8_t __pad0029[0x26b]; // 0x29
public:
	uint16_t m_nHasTruesightForTeam; // 0x294	
	uint16_t m_nHasTruesightForTeamValid; // 0x296	
	uint16_t m_nProvidesFOWPositionForTeam; // 0x298	
	uint16_t m_nProvidesFOWPositionForTeamValid; // 0x29a	
	int32_t m_iBuffIndex; // 0x29c	
	int32_t m_iLockRefCount; // 0x2a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
class CLocalNPCObstructionsCache
{
public:
	GameTick_t m_nLastUpdatedTick; // 0x0	
	float m_flRadius; // 0x4	
	CUtlVector< CHandle< CDOTA_BaseNPC > > m_hCachedNPCs; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Greevil_Miniboss_Green_LivingArmor : public CDOTA_Buff
{
public:
	int32_t health_regen; // 0x1338	
	int32_t damage_block; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invulnerable : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x968
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTriggerProximity : public CBaseTrigger
{
public:
	CHandle< CBaseEntity > m_hMeasureTarget; // 0x928	
private:
	[[maybe_unused]] uint8_t __pad092c[0x4]; // 0x92c
public:
	CUtlSymbolLarge m_iszMeasureTarget; // 0x930	
	float m_fRadius; // 0x938	
	int32_t m_nTouchers; // 0x93c	
	CEntityOutputTemplate< float32 > m_NearestEntityDistance; // 0x940	
	
	// Datamap fields:
	// void CTriggerProximityMeasureThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x960
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTriggerPush : public CBaseTrigger
{
public:
	QAngle m_angPushEntitySpace; // 0x928	
	Vector m_vecPushDirEntitySpace; // 0x934	
	bool m_bTriggerOnStartTouch; // 0x940	
	bool m_bUsePathSimple; // 0x941	
private:
	[[maybe_unused]] uint8_t __pad0942[0x6]; // 0x942
public:
	CUtlSymbolLarge m_iszPathSimpleName; // 0x948	
	CPathSimple* m_PathSimple; // 0x950	
	uint32_t m_splinePushType; // 0x958	
	
	// Datamap fields:
	// Vector InputSetPushDirection; // 0x0
	// float InputSetPushSpeed; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Harpoon_InternalCD : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ceremonial_Robe_Aura : public CDOTA_Buff
{
public:
	int32_t status_resistance; // 0x1338	
	int32_t magic_resistance; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Orb_Of_Revelations : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
	int32_t bonus_mana; // 0x133c	
	float bonus_mana_regen; // 0x1340	
	int32_t cast_range_bonus; // 0x1344	
	int32_t bonus_magical_armor; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Fortitude_Ring : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Orb_Of_Corrosion_Debuff : public CDOTA_Buff
{
public:
	int32_t armor; // 0x1338	
	int32_t slow_melee; // 0x133c	
	int32_t slow_range; // 0x1340	
	int32_t heal_reduction; // 0x1344	
	bool bCasterRanged; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad1349[0x3]; // 0x1349
public:
	int32_t damage; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_WindLace : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_GlimmerCape : public CDOTA_Buff_Item
{
public:
	int32_t bonus_magical_armor; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Necronomicon_Archer_Purge : public CDOTA_Buff
{
public:
	int32_t purge_rate; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Satanic : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_Converge_Slow : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Hoodwink_Sharpshooter_Speed : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hoodwink_AcornShot_DelayThinker : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
	int32_t m_nSourceProjectileHandle; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Underlord_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Disruptor_Glimpse_Thinker : public CDOTA_Buff
{
public:
	Vector m_vStartLoc; // 0x1338	
	CHandle< CBaseEntity > m_hEntity; // 0x1344	
	float m_flDistance; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_nQuasLevel"
// MNetworkVarNames "int m_nWexLevel"
// MNetworkVarNames "int m_nExortLevel"
class CDOTA_Ability_Invoker_InvokedBase : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	int32_t m_nQuasLevel; // 0x578	
	// MNetworkEnable
	int32_t m_nWexLevel; // 0x57c	
	// MNetworkEnable
	int32_t m_nExortLevel; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Weaver_Swarm : public CDOTA_Buff
{
public:
	int32_t m_iMaxDist; // 0x1338	
	int32_t m_iAttackCount; // 0x133c	
	int32_t destroy_attacks; // 0x1340	
	Vector m_vDirection; // 0x1344	
	Vector m_vStartLoc; // 0x1350	
	CHandle< CBaseEntity > m_hAttachTarget; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FacelessVoid_TimeWalk : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Earthshaker_EchoSlam : public CDOTABaseAbility
{
public:
	int32_t echo_slam_damage_range; // 0x578	
	int32_t echo_slam_echo_search_range; // 0x57c	
	int32_t echo_slam_echo_range; // 0x580	
	int32_t echo_slam_echo_damage; // 0x584	
	int32_t echo_slam_initial_damage; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Sven_GodsStrength : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rune_DoubleDamage : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CBaseDMStart : public CPointEntity
{
public:
	CUtlSymbolLarge m_Master; // 0x4a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_Creature_Phoenix_FireSpirits : public CDOTABaseAbility
{
public:
	int32_t hp_cost_perc; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ursa_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lifestealer_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Haste : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTAGameEvents : public CBaseEntity
{
public:
	CEntityIOOutput m_OnDayStarted; // 0x4a8	
	CEntityIOOutput m_OnNightStarted; // 0x4d0	
	CEntityIOOutput m_OnRadiantFortDestroyed; // 0x4f8	
	CEntityIOOutput m_OnDireFortDestroyed; // 0x520	
	CEntityIOOutput m_OnGameEnded; // 0x548	
	CEntityIOOutput m_OnGameStarted; // 0x570	
	
	// Datamap fields:
	// float SetTimeOfDay; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xd8
// Has VTable
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkExcludeByName "m_hInventoryParent"
// MNetworkVarNames "EHANDLE m_hItems"
// MNetworkVarNames "int m_iParity"
// MNetworkVarNames "EHANDLE m_hInventoryParent"
// MNetworkVarNames "bool m_bStashEnabled"
// MNetworkVarNames "EHANDLE m_hTransientCastItem"
class CDOTA_UnitInventory
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	CUtlVector< sSharedCooldownInfo > m_SharedCooldownList; // 0x8	
	// MNetworkEnable
	// MNetworkChangeCallback "OnInventoryChanged"
	CHandle< CBaseEntity > m_hItems[19]; // 0x20	
	bool m_bItemQueried[21]; // 0x6c	
private:
	[[maybe_unused]] uint8_t __pad0081[0x3]; // 0x81
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnInventoryParityChanged"
	int32_t m_iParity; // 0x84	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hInventoryParent; // 0x88	
	bool m_bIsActive; // 0x8c	
	// MNetworkEnable
	bool m_bStashEnabled; // 0x8d	
private:
	[[maybe_unused]] uint8_t __pad008e[0x2]; // 0x8e
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTransientCastItem; // 0x90	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_LanceOfPursuit : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Maelstrom : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t bonus_attack_speed; // 0x133c	
	int32_t chain_chance; // 0x1340	
	int32_t chain_strikes; // 0x1344	
	int32_t chain_damage; // 0x1348	
	int32_t chain_radius; // 0x134c	
	float chain_cooldown; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1354[0x4]; // 0x1354
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1358	
	CountdownTimer m_ChainTimer; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Boots_Of_Bearing_Aura : public CDOTA_Buff
{
public:
	int32_t aura_movement_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Vladmir : public CDOTA_Buff_Item
{
public:
	int32_t aura_radius; // 0x1338	
	int32_t armor; // 0x133c	
	float mana_regen; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Vanguard : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mars_ArenaOfBlood_AnimationAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Grimstroke_InkCreature_Latched : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hAttachTarget; // 0x1338	
	float m_fZOffset; // 0x133c	
	bool m_bRemovedByEnemy; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	float latch_duration; // 0x1344	
	int32_t pop_damage; // 0x1348	
	int32_t latched_unit_offset; // 0x134c	
	int32_t latched_unit_offset_short; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Phoenix_IcarusDiveStop : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tusk_Snowball_Visible : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Disruptor_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Undying_Tombstone_Zombie_Deathstrike_Slow_Counter : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Luna_LucentBeam_Damage_Buff_Counter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_QueenOfPain_Blink : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lion_FingerOfDeath_Kill_Counter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slardar_Puddle_Thinker : public CDOTA_Buff
{
public:
	int32_t puddle_radius; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lich_Sinister_Gaze : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1338	
	int32_t mana_drain; // 0x133c	
	float m_flIntervalRate; // 0x1340	
	ParticleIndex_t m_nFXIndex; // 0x1344	
	float creep_damage; // 0x1348	
	bool m_bBlasted; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Zeus : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Morphling_Scepter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Sven_GreatCleave : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Pudge_Eject : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Morphling_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Silencer_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Agility_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has Trivial Destructor
class sLoadoutItem
{
public:
	CUtlSymbolLarge name; // 0x0	
	int32_t iFlags; // 0x8	
	AbilityID_t iAbilityID; // 0xc	
	bool bPurchased; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DoNotCastEnsnare : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MudGolem_Rock_Shard : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mutation_DropItemOnDeath_Team : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_Reward_CritAura_Bonus : public CDOTA_Buff
{
public:
	int32_t crit_chance; // 0x1338	
	int32_t crit_multiplier; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x950
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTriggerMultiple : public CBaseTrigger
{
public:
	CEntityIOOutput m_OnTrigger; // 0x928	
	
	// Datamap fields:
	// void CTriggerMultipleMultiTouch; // 0x0
	// void CTriggerMultipleMultiWaitOver; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Ceremonial_Robe : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Spell_Prism : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_GlimmerCape_Fade : public CDOTA_Buff
{
public:
	int32_t active_movement_speed; // 0x1338	
	int32_t barrier_block; // 0x133c	
	int32_t barrier_amount; // 0x1340	
	float initial_fade_delay; // 0x1344	
	float secondary_fade_delay; // 0x1348	
	float m_flFadeTime; // 0x134c	
	float m_flCurentFadeDelay; // 0x1350	
	GameTime_t m_flLastActionTime; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Necronomicon_Warrior_ManaBurn : public CDOTA_Buff
{
public:
	int32_t burn_amount; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_HelmOfTheOverlord : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_DemonEdge : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Hoodwink_SharpshooterPierceHeroes : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_VoidSpirit_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13b8
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VoidSpirit_AetherRemnant_Unit : public CDOTA_Buff
{
public:
	Vector m_vFacingDir; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< CHandle< CBaseEntity > > m_hWatchPathThinkers; // 0x1348	
	ParticleIndex_t m_nBeamFXIndex; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1364[0x4]; // 0x1364
public:
	CUtlVector< int32 > m_nViewerIDs; // 0x1368	
	int32_t remnant_watch_distance; // 0x1380	
	int32_t remnant_watch_radius; // 0x1384	
	float duration; // 0x1388	
	int32_t watch_path_vision_radius; // 0x138c	
	int32_t impact_damage; // 0x1390	
	float pull_duration; // 0x1394	
	float activation_delay; // 0x1398	
	bool m_bPiercesCreeps; // 0x139c	
private:
	[[maybe_unused]] uint8_t __pad139d[0x3]; // 0x139d
public:
	CUtlVector< CHandle< CBaseEntity > > m_hAlreadyHit; // 0x13a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mars_Bulwark_Soldier_Bonus : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Meepo_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DoomBringer_Doom_Aura_Enemy : public CDOTA_Buff
{
public:
	int32_t scepter_aura_radius; // 0x1338	
	int32_t damage; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Enchantress_Untouchable : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Venomancer_NoxiousPlaguePrimary : public CDOTA_Buff
{
public:
	float health_damage; // 0x1338	
	float debuff_radius; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lion_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Witch_Doctor_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Zuus_Heavenly_Jump : public CDOTA_Buff
{
public:
	float hop_duration; // 0x1338	
	int32_t hop_height; // 0x133c	
	int32_t hop_distance; // 0x1340	
	int32_t search_radius; // 0x1344	
	float m_flStartZ; // 0x1348	
	float m_flCurTime; // 0x134c	
	float m_flJumpDuration; // 0x1350	
	float m_flJumpHeight; // 0x1354	
	Vector m_vTargetHorizontalDirection; // 0x1358	
private:
	[[maybe_unused]] uint8_t __pad1364[0x4]; // 0x1364
public:
	CUtlVector< CHandle< CBaseEntity > > hUnitsToHit; // 0x1368	
	bool m_bLaunched; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VengefulSpirit_Nether_Swap_PathingFix : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Mirana_MoonlightShadow : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nevermore_Requiem_Fear : public CDOTA_Buff
{
public:
	Vector m_vOriginal; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AntiMage_Counterspell_Ally : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PreventTaunts : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Book : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CBaseProp : public CBaseAnimatingActivity
{
public:
	bool m_bModelOverrodeBlockLOS; // 0x768	
private:
	[[maybe_unused]] uint8_t __pad0769[0x3]; // 0x769
public:
	int32_t m_iShapeType; // 0x76c	
	bool m_bConformToCollisionBounds; // 0x770	
private:
	[[maybe_unused]] uint8_t __pad0771[0x3]; // 0x771
public:
	matrix3x4_t m_mPreferredCatchTransform; // 0x774	
	
	// Datamap fields:
	// void health; // 0x7fffffff
	// CUtlSymbolLarge propdata_override; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ancient_Apparition_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lone_Druid_12 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Range_200 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Magic_Resistance_40 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Reincarnation_200 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x28
// Has VTable
// Is Abstract
class CDOTAMusicProbabilityEntry
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	CUtlVector< float32 > m_flProbabilityElements; // 0x8	
	float m_flProbability; // 0x20	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x890
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkExcludeByUserGroup "LocalPlayerExclusive"
// MNetworkVarNames "CHandle< CEconWearable > m_hMyWearables"
// MNetworkVarNames "float m_flFieldOfView"
class CBaseCombatCharacter : public CBaseFlex
{
public:
	bool m_bForceServerRagdoll; // 0x7f8	
private:
	[[maybe_unused]] uint8_t __pad07f9[0x7]; // 0x7f9
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< CHandle< CEconWearable > > m_hMyWearables; // 0x800	
	// MNetworkEnable
	float m_flFieldOfView; // 0x818	
	float m_impactEnergyScale; // 0x81c	
	HitGroup_t m_LastHitGroup; // 0x820	
	bool m_bApplyStressDamage; // 0x824	
private:
	[[maybe_unused]] uint8_t __pad0825[0x3]; // 0x825
public:
	int32_t m_bloodColor; // 0x828	
private:
	[[maybe_unused]] uint8_t __pad082c[0x44]; // 0x82c
public:
	int32_t m_iDamageCount; // 0x870	
private:
	[[maybe_unused]] uint8_t __pad0874[0x4]; // 0x874
public:
	CUtlVector< RelationshipOverride_t >* m_pVecRelationships; // 0x878	
	CUtlSymbolLarge m_strRelationships; // 0x880	
	Hull_t m_eHull; // 0x888	
	uint32_t m_nNavHullIdx; // 0x88c	
	
	// Static fields:
	static int32_t &Get_sm_lastInteraction(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBaseCombatCharacter")->GetStaticFields()[0]->m_pInstance);};
	
	// Datamap fields:
	// void InputBecomeServerRagdoll; // 0x0
	// CUtlSymbolLarge InputSetRelationship; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x800
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CBasePlatTrain : public CBaseToggle
{
public:
	CUtlSymbolLarge m_NoiseMoving; // 0x7d8	
	CUtlSymbolLarge m_NoiseArrived; // 0x7e0	
private:
	[[maybe_unused]] uint8_t __pad07e8[0x8]; // 0x7e8
public:
	float m_volume; // 0x7f0	
	float m_flTWidth; // 0x7f4	
	float m_flTLength; // 0x7f8	
	
	// Datamap fields:
	// void m_pMovementSound; // 0x7e8
	// float rotation; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x938
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTonemapTrigger : public CBaseTrigger
{
public:
	CUtlSymbolLarge m_tonemapControllerName; // 0x928	
	CEntityHandle m_hTonemapController; // 0x930	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Watch_Tower : public CDOTA_Buff
{
public:
	TowerState_t m_nState; // 0x1338	
	float m_flYaw; // 0x133c	
	int32_t m_nCaptureDuration; // 0x1340	
	GameTime_t m_flEffectiveCaptureStartTime; // 0x1344	
	int32_t m_nCapturingPlayerCount; // 0x1348	
	float m_flCaptureProgress; // 0x134c	
	int32_t m_iCapturingTeam; // 0x1350	
	ParticleIndex_t m_nFxOutpostAmbient; // 0x1354	
	GameTime_t m_flDestroyTime; // 0x1358	
	GameTime_t m_flAutoChannelCompleteTime; // 0x135c	
	bool m_bAscensionLevelPicker; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1361[0x3]; // 0x1361
public:
	int32_t m_nEliteChallengeLevel; // 0x1364	
	CUtlString m_strNextRoomName; // 0x1368	
	CUtlString m_strNextEncounterName; // 0x1370	
	bool m_bStartedBeamFacing; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Nemesis_Curse_Debuff : public CDOTA_Buff
{
public:
	int32_t debuff_enemy; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Grove_Bow_Debuff : public CDOTA_Buff
{
public:
	int32_t magic_resistance_reduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Pavise : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Dagon : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Hoodwink_HuntersBoomerang : public CDOTABaseAbility
{
public:
	int32_t radius; // 0x578	
	int32_t speed; // 0x57c	
	int32_t damage; // 0x580	
	float mark_duration; // 0x584	
	CHandle< CBaseEntity > m_hTarget; // 0x588	
private:
	[[maybe_unused]] uint8_t __pad058c[0x4]; // 0x58c
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecHitEntities; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13a8
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Snapfire_SpitCreep_ArcingUnit : public CDOTA_Buff
{
public:
	float m_flPredictedTotalTime; // 0x1338	
	Vector m_vStartPosition; // 0x133c	
	float m_flCurrentTimeHoriz; // 0x1348	
	float m_flCurrentTimeVert; // 0x134c	
	bool m_bHorizontalMotionInterrupted; // 0x1350	
	bool m_bDamageApplied; // 0x1351	
	bool m_bTargetTeleported; // 0x1352	
private:
	[[maybe_unused]] uint8_t __pad1353[0x1]; // 0x1353
public:
	Vector m_vHorizontalVelocity; // 0x1354	
	Vector m_vLastKnownTargetPosition; // 0x1360	
	float m_flInitialVelocityZ; // 0x136c	
	float m_fClampedProjectileSpeed; // 0x1370	
	ParticleIndex_t m_nFXIndex; // 0x1374	
	float m_fAcceleration; // 0x1378	
	int32_t min_range; // 0x137c	
	float min_lob_travel_time; // 0x1380	
	float max_lob_travel_time; // 0x1384	
	int32_t impact_radius; // 0x1388	
	int32_t projectile_vision; // 0x138c	
	float stun_duration; // 0x1390	
	float min_height_above_lowest; // 0x1394	
	float min_height_above_highest; // 0x1398	
	float min_acceleration; // 0x139c	
	float max_acceleration; // 0x13a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Snapfire_MortimerKisses_VisionSource : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Grimstroke_SoulChain_ChannelCheck : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hCurrentAbility; // 0x1338	
	CHandle< CBaseEntity > m_hTarget; // 0x133c	
	CUtlVector< CHandle< CBaseEntity > > m_hAbilities; // 0x1340	
	Vector m_vLocation; // 0x1358	
	GameTime_t m_fChannelEnd; // 0x1364	
	bool m_bInterrupt; // 0x1368	
	bool m_bExpired; // 0x1369	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Phoenix_SunRay : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invisible : public CDOTA_Buff
{
public:
	bool m_bSubtle; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	GameTime_t m_flFadeTime; // 0x133c	
	float m_flFadeTimeValue; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Bristleback_Hairball : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Medusa_StoneGaze : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	float vision_cone; // 0x133c	
	float duration; // 0x1340	
	int32_t speed_boost; // 0x1344	
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Wisp_Overcharge : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1338	
	int32_t bonus_spell_amp; // 0x133c	
	int32_t shard_bonus_slow_resistance; // 0x1340	
	float hp_regen; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Alchemist_Berserk_Potion : public CDOTA_Buff
{
public:
	int32_t attack_speed; // 0x1338	
	int32_t hp_regen; // 0x133c	
	int32_t move_speed; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Courier_TransferItems : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ShadowShaman_EtherShock : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SkeletonKing_Reincarnation : public CDOTA_Buff
{
public:
	float reincarnate_time; // 0x1338	
	int32_t scepter_aura_radius; // 0x133c	
	GameTime_t m_fLastReincarnationTime; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Filler_Heal : public CDOTA_Buff
{
public:
	int32_t hp_heal; // 0x1338	
	int32_t mp_heal; // 0x133c	
	int32_t hp_heal_growth; // 0x1340	
	float mp_heal_growth; // 0x1344	
	int32_t hp_heal_pct; // 0x1348	
	int32_t mp_heal_pct; // 0x134c	
	int32_t tota_hp_per_second; // 0x1350	
	int32_t tota_mp_per_second; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xb8
// Has VTable
class CDOTABehaviorAttack
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x60]; // 0x0
public:
	CHandle< CBaseEntity > m_hTarget; // 0x60	
private:
	[[maybe_unused]] uint8_t __pad0064[0x24]; // 0x64
public:
	CountdownTimer m_backSwingTimer; // 0x88	
	bool m_bCastAttack; // 0xa0	
private:
	[[maybe_unused]] uint8_t __pad00a1[0x3]; // 0xa1
public:
	float m_flBackswingTime; // 0xa4	
	float m_flAnimSpeed; // 0xa8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Aghsfort_Reward_CritAura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_TI9_Monkey : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Templar_Assassin : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x38
// Has VTable
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "attrib_definition_index_t m_iAttributeDefinitionIndex"
// MNetworkVarNames "float m_flValue"
class CEconItemAttribute
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	attrib_definition_index_t m_iAttributeDefinitionIndex; // 0x30	
private:
	[[maybe_unused]] uint8_t __pad0032[0x2]; // 0x32
public:
	// MNetworkEnable
	// MNetworkAlias "m_iRawValue32"
	float m_flValue; // 0x34	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x920
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "uint8 m_nLod"
class NextBotCombatCharacter : public CBaseCombatCharacter
{
private:
	[[maybe_unused]] uint8_t __pad0890[0x88]; // 0x890
public:
	// MNetworkEnable
	uint8_t m_nLod; // 0x918	
	bool m_didModelChange; // 0x919	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MuertaReleaseEvent : public CDOTA_Buff
{
public:
	CHandle< CIngameEvent_MuertaReleaseSpring2023 > m_hEvent; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DoNotCastSmash : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_KoboldTaskmaster_SpeedAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x990
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFogTrigger : public CBaseTrigger
{
public:
	fogparams_t m_fog; // 0x928	
	
	// Datamap fields:
	// Color m_fog.colorPrimary; // 0x93c
	// Color m_fog.colorSecondary; // 0x940
	// Vector m_fog.dirPrimary; // 0x930
	// bool m_fog.enable; // 0x98c
	// bool m_fog.blend; // 0x98d
	// float m_fog.start; // 0x94c
	// float m_fog.end; // 0x950
	// float m_fog.farz; // 0x954
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Lifestealer_Enraged_Pulse : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_OgreAxe : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_RobeOfMagi : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pangolier_ShieldCrash_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Oracle_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_NagaSiren_Crit : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Rubick_Hidden1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Meepo_Poof_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_EMP_Pull : public CDOTA_Buff
{
public:
	int32_t shard_drag_speed; // 0x1338	
	float aura_origin_x; // 0x133c	
	float aura_origin_y; // 0x1340	
	ParticleIndex_t m_nFXIndex; // 0x1344	
	Vector m_vCenter; // 0x1348	
	GameTime_t m_flLastThinkTime; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Jakiro_Macropyre_Ice_Edge_Slow : public CDOTA_Buff
{
public:
	int32_t ice_edge_movement_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Weaver_GeminateAttack : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
	int32_t m_iAttacksRemaining; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Life_Stealer_Ghoul_Frenzy : public CDOTA_Buff
{
public:
	int32_t attack_speed_bonus; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Beastmaster_Mark_Of_The_Beast : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tiny_CraggyExterior : public CDOTA_Buff
{
public:
	int32_t stun_chance; // 0x1338	
	float stun_duration; // 0x133c	
	int32_t damage; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Kunkka_GhostShip_DamageDelay : public CDOTA_Buff
{
public:
	int32_t m_iAccumulatedDamage; // 0x1338	
	float m_flDelayDuration; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VengefulSpirit_XP_Earn : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_VengefulSpirit_Nether_Swap : public CDOTABaseAbility
{
public:
	int32_t m_nFXIndex; // 0x578	
	int32_t damage; // 0x57c	
	float damage_reduction; // 0x580	
	float damage_reduction_duration; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SandKing_SandStorm_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
	int32_t blind; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Prosperous_Soul : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x500
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CBaseFilter : public CLogicalEntity
{
public:
	bool m_bNegated; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x7]; // 0x4a9
public:
	CEntityIOOutput m_OnPass; // 0x4b0	
	CEntityIOOutput m_OnFail; // 0x4d8	
	
	// Datamap fields:
	// void InputTestActivator; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Morty_Hop_Launch : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Spirit_Breaker_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Medusa_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_400 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_50 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Day_Vision_400 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x230
// Has VTable
// 
// MNetworkVarNames "HModelStrong m_hModel"
// MNetworkVarNames "bool m_bClientClothCreationSuppressed"
// MNetworkVarNames "MeshGroupMask_t m_MeshGroupMask"
// MNetworkVarNames "int8 m_nIdealMotionType"
class CModelState
{
private:
	[[maybe_unused]] uint8_t __pad0000[0xa0]; // 0x0
public:
	// MNetworkEnable
	// MNetworkChangeCallback "skeletonModelChanged"
	CStrongHandle< InfoForResourceTypeCModel > m_hModel; // 0xa0	
	// MNetworkDisable
	CUtlSymbolLarge m_ModelName; // 0xa8	
private:
	[[maybe_unused]] uint8_t __pad00b0[0x38]; // 0xb0
public:
	// MNetworkEnable
	bool m_bClientClothCreationSuppressed; // 0xe8	
private:
	[[maybe_unused]] uint8_t __pad00e9[0xaf]; // 0xe9
public:
	// MNetworkEnable
	// MNetworkChangeCallback "skeletonMeshGroupMaskChanged"
	uint64_t m_MeshGroupMask; // 0x198	
private:
	[[maybe_unused]] uint8_t __pad01a0[0x7a]; // 0x1a0
public:
	// MNetworkEnable
	// MNetworkChangeCallback "skeletonMotionTypeChanged"
	int8_t m_nIdealMotionType; // 0x21a	
	// MNetworkDisable
	int8_t m_nForceLOD; // 0x21b	
	// MNetworkDisable
	int8_t m_nClothUpdateFlags; // 0x21c	
	
	// Datamap fields:
	// void m_pVPhysicsAggregate; // 0xe0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkExcludeByName "m_bIsIllusion"
// MNetworkExcludeByName "m_blinktoggle"
// MNetworkExcludeByName "m_flAnimTime"
// MNetworkExcludeByUserGroup "m_flCycle"
// MNetworkExcludeByName "m_flEncodedController"
// MNetworkExcludeByName "m_flPoseParameter"
// MNetworkExcludeByName "m_flSimulationTime"
// MNetworkExcludeByName "m_flexWeight"
// MNetworkExcludeByName "m_nForceBone"
// MNetworkExcludeByName "m_nHitboxSet"
// MNetworkExcludeByName "m_baseLayer.m_hSequence"
// MNetworkExcludeByName "m_vecForce"
// MNetworkExcludeByName "m_vecMaxs"
// MNetworkExcludeByName "m_vecMins"
// MNetworkExcludeByName "m_vecSpecifiedSurroundingMaxs"
// MNetworkExcludeByName "m_vecSpecifiedSurroundingMins"
// MNetworkExcludeByName "m_vLookTargetPosition"
// MNetworkExcludeByUserGroup "overlay_vars"
// MNetworkIncludeByName "m_fFlags"
// MNetworkIncludeByName "m_iMaxHealth"
// MNetworkIncludeByName "m_lifeState"
// MNetworkIncludeByName "m_bTakesDamage"
// MNetworkIncludeByName "m_nTakeDamageFlags"
// MNetworkIncludeByName "m_iHealth"
// MNetworkOverride "m_angRotation CGameSceneNode"
// MNetworkOverride "m_angRotation CGameSceneNode"
// MNetworkUserGroupProxy "CDOTA_BaseNPC"
// MNetworkUserGroupProxy "CDOTA_BaseNPC"
// MNetworkVarNames "bool m_bSelectionRingVisible"
// MNetworkVarNames "int m_iCurrentLevel"
// MNetworkVarNames "float m_flMana"
// MNetworkVarNames "float m_flMaxMana"
// MNetworkVarNames "float m_flManaThinkRegen"
// MNetworkVarNames "float m_flHealthThinkRegen"
// MNetworkVarNames "int m_nHealthBarOffsetOverride"
// MNetworkVarNames "bool m_bIsPhantom"
// MNetworkVarNames "bool m_bIsAncient"
// MNetworkVarNames "bool m_bIsBossCreature"
// MNetworkVarNames "bool m_bIsNeutralUnitType"
// MNetworkVarNames "bool m_bIsSummoned"
// MNetworkVarNames "bool m_bCanBeDominated"
// MNetworkVarNames "bool m_bCanRespawn"
// MNetworkVarNames "bool m_bHasUpgradeableAbilities"
// MNetworkVarNames "int m_iBKBChargesUsed"
// MNetworkVarNames "int m_iAeonChargesUsed"
// MNetworkVarNames "GameTime_t m_flRefresherUseTime"
// MNetworkVarNames "float m_flRefresherLastCooldown"
// MNetworkVarNames "GameTime_t m_flLastDealtDamageTime"
// MNetworkVarNames "int m_iBotDebugData"
// MNetworkVarNames "bool m_bIsMoving"
// MNetworkVarNames "bool m_bCanUseWards"
// MNetworkVarNames "bool m_bCanUseAllItems"
// MNetworkVarNames "CHandle< CDOTA_NeutralSpawner> m_hNeutralSpawner"
// MNetworkVarNames "float m_flManaRegen"
// MNetworkVarNames "float m_flHealthRegen"
// MNetworkVarNames "int64 m_nTotalDamageTaken"
// MNetworkVarNames "int m_iAttackRange"
// MNetworkVarNames "int m_iMoveSpeed"
// MNetworkVarNames "GameTime_t m_flTauntCooldown"
// MNetworkVarNames "GameTime_t m_flTauntCooldown2"
// MNetworkVarNames "float m_fRevealRadius"
// MNetworkVarNames "int m_iDayTimeVisionRange"
// MNetworkVarNames "int m_iNightTimeVisionRange"
// MNetworkVarNames "float m_flPhysicalArmorValue"
// MNetworkVarNames "float m_flMagicalResistanceValue"
// MNetworkVarNames "int m_iAttackCapabilities"
// MNetworkVarNames "int m_iSpecialAbility"
// MNetworkVarNames "int m_iXPBounty"
// MNetworkVarNames "int m_iXPBountyExtra"
// MNetworkVarNames "int m_iGoldBountyMin"
// MNetworkVarNames "int m_iGoldBountyMax"
// MNetworkVarNames "PlayerID_t m_nPlayerOwnerID"
// MNetworkVarNames "GameTime_t m_flLastDamageTime"
// MNetworkVarNames "GameTime_t m_flLastAttackTime"
// MNetworkVarNames "uint64 m_nUnitState64"
// MNetworkVarNames "int8 m_nUnitModelVariant"
// MNetworkVarNames "int m_iTaggedAsVisibleByTeam"
// MNetworkVarNames "uint64 m_iIsControllableByPlayer64"
// MNetworkVarNames "EHANDLE m_hAbilities"
// MNetworkVarNames "CDOTA_ModifierManager m_ModifierManager"
// MNetworkVarNames "string_t m_iszUnitName"
// MNetworkVarNames "int m_iUnitNameIndex"
// MNetworkVarNames "int m_iDamageMin"
// MNetworkVarNames "int m_iDamageMax"
// MNetworkVarNames "int m_iDamageBonus"
// MNetworkVarNames "bool m_bIsWaitingToSpawn"
// MNetworkVarNames "bool m_bIsIllusion"
// MNetworkVarNames "uint8 m_nUnitLabelIndex"
// MNetworkVarNames "CUtlString m_szScaleset"
// MNetworkVarNames "CUtlString m_szUnitLabel"
// MNetworkVarNames "CHandle< CBaseEntity> m_hOwnerNPC"
// MNetworkVarNames "CHandle< CBaseEntity> m_hGoalEntity"
// MNetworkVarNames "CDOTA_UnitInventory m_Inventory"
// MNetworkVarNames "DOTA_SHOP_TYPE m_iCurShop"
// MNetworkVarNames "string_t m_szCurShopEntName"
// MNetworkVarNames "bool m_bStolenScepter"
// MNetworkVarNames "int m_anglediff"
// MNetworkVarNames "int m_NetworkActivity"
// MNetworkVarNames "int m_NetworkSequenceIndex"
// MNetworkVarNames "bool m_bShouldDoFlyHeightVisual"
// MNetworkVarNames "float m_flStartSequenceCycle"
// MNetworkVarNames "char m_CustomHealthLabel"
// MNetworkVarNames "Color m_CustomHealthLabelColor"
class CDOTA_BaseNPC : public NextBotCombatCharacter
{
private:
	[[maybe_unused]] uint8_t __pad0920[0x20]; // 0x920
public:
	bool m_bPledgedOfrenda; // 0x940	
private:
	[[maybe_unused]] uint8_t __pad0941[0x3]; // 0x941
public:
	uint32_t m_iUnitType; // 0x944	
	Color m_colorGemColor; // 0x948	
	bool m_bHasColorGem; // 0x94c	
	// MNetworkEnable
	bool m_bSelectionRingVisible; // 0x94d	
private:
	[[maybe_unused]] uint8_t __pad094e[0xa]; // 0x94e
public:
	CUtlSymbolLarge m_iszBaseClass; // 0x958	
	int32_t m_iStartingMaxHealth; // 0x960	
	int32_t m_iStartingMaxMana; // 0x964	
	int32_t m_iStartingMana; // 0x968	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iCurrentLevel; // 0x96c	
	// MNetworkEnable
	// MNetworkBitCount "20"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "65536,000000"
	float m_flMana; // 0x970	
	float m_flBaseMaxMana; // 0x974	
	// MNetworkEnable
	// MNetworkBitCount "20"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "65536,000000"
	float m_flMaxMana; // 0x978	
	// MNetworkEnable
	// MNetworkBitCount "14"
	// MNetworkMinValue "-50,000000"
	// MNetworkMaxValue "500,000000"
	float m_flManaThinkRegen; // 0x97c	
	float m_flBaseMaxHealth; // 0x980	
	// MNetworkEnable
	// MNetworkBitCount "18"
	// MNetworkMinValue "-100,000000"
	// MNetworkMaxValue "1000,000000"
	float m_flHealthThinkRegen; // 0x984	
	// MNetworkEnable
	int32_t m_nHealthBarOffsetOverride; // 0x988	
	int32_t m_nHealthBarOffset; // 0x98c	
	// MNetworkEnable
	bool m_bIsPhantom; // 0x990	
	// MNetworkEnable
	bool m_bIsAncient; // 0x991	
	// MNetworkEnable
	bool m_bIsBossCreature; // 0x992	
	// MNetworkEnable
	bool m_bIsNeutralUnitType; // 0x993	
	bool m_bAutoAttacksByDefault; // 0x994	
	// MNetworkEnable
	bool m_bIsSummoned; // 0x995	
	// MNetworkEnable
	bool m_bCanBeDominated; // 0x996	
	// MNetworkEnable
	bool m_bCanRespawn; // 0x997	
	bool m_bConsideredHero; // 0x998	
	bool m_bUsesConstantGesture; // 0x999	
	bool m_bIsPlayingSingleForcedActivity; // 0x99a	
	// MNetworkEnable
	bool m_bHasUpgradeableAbilities; // 0x99b	
	// MNetworkEnable
	int32_t m_iBKBChargesUsed; // 0x99c	
	// MNetworkEnable
	int32_t m_iAeonChargesUsed; // 0x9a0	
	// MNetworkEnable
	GameTime_t m_flRefresherUseTime; // 0x9a4	
	// MNetworkEnable
	float m_flRefresherLastCooldown; // 0x9a8	
	// MNetworkEnable
	GameTime_t m_flLastDealtDamageTime; // 0x9ac	
	// MNetworkEnable
	int32_t m_iBotDebugData; // 0x9b0	
	// MNetworkEnable
	bool m_bIsMoving; // 0x9b4	
private:
	[[maybe_unused]] uint8_t __pad09b5[0x19b]; // 0x9b5
public:
	float m_flChannelMultiplier; // 0xb50	
	// MNetworkEnable
	bool m_bCanUseWards; // 0xb54	
	// MNetworkEnable
	bool m_bCanUseAllItems; // 0xb55	
private:
	[[maybe_unused]] uint8_t __pad0b56[0x2]; // 0xb56
public:
	PlayerID_t m_iLastAbilityPlayer; // 0xb58	
	bool m_bIsPhantomBlocker; // 0xb5c	
	bool m_bBlocksCreepSpawn; // 0xb5d	
	bool m_bCanSellItems; // 0xb5e	
private:
	[[maybe_unused]] uint8_t __pad0b5f[0x1]; // 0xb5f
public:
	// MNetworkEnable
	CHandle< CDOTA_NeutralSpawner > m_hNeutralSpawner; // 0xb60	
	bool m_bTrackDamageTaken; // 0xb64	
private:
	[[maybe_unused]] uint8_t __pad0b65[0x3]; // 0xb65
public:
	GameTick_t m_nNextRegenThink; // 0xb68	
	GameTick_t m_nNextModifierThink; // 0xb6c	
	GameTick_t m_nNextModelScaleThink; // 0xb70	
	GameTick_t m_nNextUnitThink; // 0xb74	
	// MNetworkEnable
	// MNetworkBitCount "18"
	// MNetworkMinValue "-100,000000"
	// MNetworkMaxValue "1000,000000"
	float m_flManaRegen; // 0xb78	
	// MNetworkEnable
	// MNetworkBitCount "18"
	// MNetworkMinValue "-100,000000"
	// MNetworkMaxValue "1000,000000"
	float m_flHealthRegen; // 0xb7c	
	// MNetworkEnable
	// MNetworkPriority "32"
	int64_t m_nTotalDamageTaken; // 0xb80	
	float m_flHealthRegenCounter; // 0xb88	
	float m_flManaRegenCounter; // 0xb8c	
	float m_flAccumulatedHeal; // 0xb90	
	int32_t m_iBaseAttackSpeed; // 0xb94	
	int32_t m_iBaseDamageMin; // 0xb98	
	int32_t m_iBaseDamageMax; // 0xb9c	
	// MNetworkEnable
	int32_t m_iAttackRange; // 0xba0	
	int32_t m_iAttackRangeBuffer; // 0xba4	
	// MNetworkEnable
	int32_t m_iMoveSpeed; // 0xba8	
	float m_flTurnRate; // 0xbac	
	int32_t m_iHasAggressiveStance; // 0xbb0	
	bool m_bInAggressiveStance; // 0xbb4	
	bool m_bInInjuredAggressiveStance; // 0xbb5	
private:
	[[maybe_unused]] uint8_t __pad0bb6[0x2]; // 0xbb6
public:
	float m_flFollowRange; // 0xbb8	
	int32_t m_iAcquisitionRange; // 0xbbc	
	float m_flAttackAnimationPoint; // 0xbc0	
	float m_flHullRadius; // 0xbc4	
	float m_flCollisionPadding; // 0xbc8	
	// MNetworkEnable
	GameTime_t m_flTauntCooldown; // 0xbcc	
	// MNetworkEnable
	GameTime_t m_flTauntCooldown2; // 0xbd0	
	// MNetworkEnable
	float m_fRevealRadius; // 0xbd4	
	float m_flProjectileCollisionSize; // 0xbd8	
	ObstructionRelationshipClass_t m_ObstructionRelationshipClass; // 0xbdc	
	CUtlSymbolLarge m_iszParticleFolder; // 0xbe0	
	CUtlSymbolLarge m_iszGameSoundsFile; // 0xbe8	
	CUtlSymbolLarge m_iszVoiceFile; // 0xbf0	
	CUtlSymbolLarge m_iszSoundSet; // 0xbf8	
	CUtlSymbolLarge m_iszSelectionGroup; // 0xc00	
	CUtlSymbolLarge m_iszAnimationModifier; // 0xc08	
private:
	[[maybe_unused]] uint8_t __pad0c10[0x8]; // 0xc10
public:
	float m_flBaseAttackTime; // 0xc18	
	// MNetworkEnable
	int32_t m_iDayTimeVisionRange; // 0xc1c	
	// MNetworkEnable
	int32_t m_iNightTimeVisionRange; // 0xc20	
	float m_fBotAttackDesire; // 0xc24	
	int32_t m_iUnitRelationshipClass; // 0xc28	
	// MNetworkEnable
	float m_flPhysicalArmorValue; // 0xc2c	
	// MNetworkEnable
	float m_flMagicalResistanceValue; // 0xc30	
	int32_t m_iTeamName; // 0xc34	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iAttackCapabilities; // 0xc38	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iSpecialAbility; // 0xc3c	
	int32_t m_iMoveCapabilities; // 0xc40	
	int32_t m_iOriginalAttackCapabilities; // 0xc44	
	// MNetworkEnable
	int32_t m_iXPBounty; // 0xc48	
	// MNetworkEnable
	int32_t m_iXPBountyExtra; // 0xc4c	
	// MNetworkEnable
	int32_t m_iGoldBountyMin; // 0xc50	
	// MNetworkEnable
	int32_t m_iGoldBountyMax; // 0xc54	
	PlayerID_t m_nFarmClaimPlayerID; // 0xc58	
	// MNetworkEnable
	PlayerID_t m_nPlayerOwnerID; // 0xc5c	
	CUtlSymbolLarge m_iszAbilityList[35]; // 0xc60	
	int32_t m_iAttackDamageType; // 0xd78	
	bool m_bIsIdle; // 0xd7c	
	bool m_bHold; // 0xd7d	
	bool m_bWasKilledPassively; // 0xd7e	
private:
	[[maybe_unused]] uint8_t __pad0d7f[0x1]; // 0xd7f
public:
	CountdownTimer m_AngerTimer; // 0xd80	
	CountdownTimer m_AlertTimer; // 0xd98	
	CHandle< CBaseEntity > m_hAngerTarget; // 0xdb0	
	CHandle< CBaseEntity > m_hAlertTarget; // 0xdb4	
	CHandle< CBaseEntity > m_hForceAttackTarget; // 0xdb8	
	bool m_bAllowAllyForceAttack; // 0xdbc	
private:
	[[maybe_unused]] uint8_t __pad0dbd[0x3]; // 0xdbd
public:
	Vector m_vTargetLastKnownPosition; // 0xdc0	
private:
	[[maybe_unused]] uint8_t __pad0dcc[0x1c]; // 0xdcc
public:
	// MNetworkEnable
	GameTime_t m_flLastDamageTime; // 0xde8	
	// MNetworkEnable
	GameTime_t m_flLastAttackTime; // 0xdec	
	GameTime_t m_flTimeSinceLastAbilityNag; // 0xdf0	
	GameTime_t m_flLastTeleportTime; // 0xdf4	
	// MNetworkEnable
	uint64_t m_nUnitState64; // 0xdf8	
	GameTime_t m_vLastVisibilityChange[15]; // 0xe00	
private:
	[[maybe_unused]] uint8_t __pad0e3c[0x1c]; // 0xe3c
public:
	bool m_bFirstSpawn; // 0xe58	
private:
	[[maybe_unused]] uint8_t __pad0e59[0x3]; // 0xe59
public:
	CHandle< CBaseEntity > m_hAttackTarget; // 0xe5c	
	CHandle< CBaseEntity > m_hAggroTarget; // 0xe60	
	CHandle< CBaseEntity > m_hCommandAttackTarget; // 0xe64	
	CUtlSymbolLarge m_iszOriginalModel; // 0xe68	
	// MNetworkEnable
	int8_t m_nUnitModelVariant; // 0xe70	
	int8_t m_nUnitModelVariantCount; // 0xe71	
	bool m_bPseudoQueueOrders; // 0xe72	
	bool m_bCastLocked; // 0xe73	
private:
	[[maybe_unused]] uint8_t __pad0e74[0x1c]; // 0xe74
public:
	GameTime_t m_flAttackRegulator; // 0xe90	
	float m_flTimeDisparityTolerance; // 0xe94	
	GameTime_t m_fAttackPhaseEndTime; // 0xe98	
	GameTime_t m_flPositionUpdateTime; // 0xe9c	
	Vector m_vLastPositionSent; // 0xea0	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iTaggedAsVisibleByTeam; // 0xeac	
	// MNetworkEnable
	uint64_t m_iIsControllableByPlayer64; // 0xeb0	
	PlayerID_t m_nControllingPlayerID; // 0xeb8	
	bool m_bRunAIWhenControllableByPlayer; // 0xebc	
private:
	[[maybe_unused]] uint8_t __pad0ebd[0x3]; // 0xebd
public:
	// MNetworkEnable
	// MNetworkUserGroup "Abilities"
	// MNetworkPriority "32"
	CHandle< CBaseEntity > m_hAbilities[35]; // 0xec0	
private:
	[[maybe_unused]] uint8_t __pad0f4c[0x4]; // 0xf4c
public:
	CUtlVector< CHandle< CBaseEntity > > m_associatedEmptyAbilities; // 0xf50	
	CHandle< CBaseEntity > m_hActiveAbility; // 0xf68	
	Vector m_vCursorLocation; // 0xf6c	
	CHandle< CBaseEntity > m_hCursorTarget; // 0xf78	
	CHandle< CBaseEntity > m_hOriginalCursorTarget; // 0xf7c	
	bool m_bCursorTargetingNothing; // 0xf80	
private:
	[[maybe_unused]] uint8_t __pad0f81[0x7]; // 0xf81
public:
	// MNetworkEnable
	// -> m_bCompactBuffListPending - 0xfb0
	// -> m_nHasTruesightForTeam - 0x121c
	// -> m_nHasTruesightForTeamValid - 0x121e
	// -> m_nProvidesFOWPositionForTeam - 0x1220
	// -> m_nProvidesFOWPositionForTeamValid - 0x1222
	// -> m_iBuffIndex - 0x1224
	// -> m_iLockRefCount - 0x1228
	CDOTA_ModifierManager m_ModifierManager; // 0xf88	
private:
	[[maybe_unused]] uint8_t __pad1230[0x8]; // 0x1230
public:
	float m_flInvisibilityLevel; // 0x1238	
private:
	[[maybe_unused]] uint8_t __pad123c[0x4]; // 0x123c
public:
	CUtlSymbolLarge m_iszMapUnitName; // 0x1240	
	// MNetworkEnable
	// MNetworkDisable
	CUtlSymbolLarge m_iszUnitName; // 0x1248	
	// MNetworkEnable
	int32_t m_iUnitNameIndex; // 0x1250	
	// MNetworkEnable
	int32_t m_iDamageMin; // 0x1254	
	// MNetworkEnable
	int32_t m_iDamageMax; // 0x1258	
	// MNetworkEnable
	int32_t m_iDamageBonus; // 0x125c	
	// MNetworkEnable
	bool m_bIsWaitingToSpawn; // 0x1260	
private:
	[[maybe_unused]] uint8_t __pad1261[0x3]; // 0x1261
public:
	int32_t m_iLeashType; // 0x1264	
	int32_t m_iAggroType; // 0x1268	
	bool m_bCreepIgnoreAggro; // 0x126c	
	bool m_bCreepFirstWave; // 0x126d	
	// MNetworkEnable
	bool m_bIsIllusion; // 0x126e	
	// MNetworkEnable
	uint8_t m_nUnitLabelIndex; // 0x126f	
	// MNetworkEnable
	CUtlString m_szScaleset; // 0x1270	
	// MNetworkEnable
	CUtlString m_szUnitLabel; // 0x1278	
	CUtlString m_strAnimationModifier; // 0x1280	
private:
	[[maybe_unused]] uint8_t __pad1288[0x8]; // 0x1288
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hOwnerNPC; // 0x1290	
private:
	[[maybe_unused]] uint8_t __pad1294[0x4]; // 0x1294
public:
	CLocomotionBase* m_locomotor; // 0x1298	
	IBody* m_body; // 0x12a0	
	bool m_bNeverMoveToClearSpace; // 0x12a8	
private:
	[[maybe_unused]] uint8_t __pad12a9[0x3]; // 0x12a9
public:
	// MNetworkEnable
	// MNetworkUserGroup "SpectatorsOnly"
	CHandle< CBaseEntity > m_hGoalEntity; // 0x12ac	
	bool m_bMustReachEachGoalEntity; // 0x12b0	
private:
	[[maybe_unused]] uint8_t __pad12b1[0x3]; // 0x12b1
public:
	Vector m_vInitialGoalPosition; // 0x12b4	
private:
	[[maybe_unused]] uint8_t __pad12c0[0x18]; // 0x12c0
public:
	CUnitOrders m_CurrentQueuedOrder; // 0x12d8	
private:
	[[maybe_unused]] uint8_t __pad1318[0x18]; // 0x1318
public:
	// MNetworkEnable
	// -> m_SharedCooldownList - 0x1338
	// -> m_hItems[19] - 0x1350
	// -> m_bItemQueried[21] - 0x139c
	// -> m_iParity - 0x13b4
	// -> m_hInventoryParent - 0x13b8
	// -> m_bIsActive - 0x13bc
	// -> m_bStashEnabled - 0x13bd
	// -> m_hTransientCastItem - 0x13c0
	CDOTA_UnitInventory m_Inventory; // 0x1330	
	CHandle< CBaseEntity > m_hItemToDrop; // 0x1408	
	// MNetworkEnable
	DOTA_SHOP_TYPE m_iCurShop; // 0x140c	
	CHandle< CBaseEntity > m_hLastNearShop; // 0x1410	
private:
	[[maybe_unused]] uint8_t __pad1414[0x4]; // 0x1414
public:
	// MNetworkEnable
	CUtlSymbolLarge m_szCurShopEntName; // 0x1418	
	bool m_bHasInventory; // 0x1420	
private:
	[[maybe_unused]] uint8_t __pad1421[0x3]; // 0x1421
public:
	float m_flBaselineModelScale; // 0x1424	
	float m_fModelScaleMultiplier; // 0x1428	
	float m_fModelScaleMultiplierChangeStart; // 0x142c	
	GameTime_t m_fModelScaleMultiplierChangeTime; // 0x1430	
	float m_flPreviousModelScale; // 0x1434	
	float m_fMaxModelScaleMultiplier; // 0x1438	
	bool m_bIsCamped; // 0x143c	
	bool m_bIsReturningHome; // 0x143d	
	bool m_bWantsToFlee; // 0x143e	
	bool m_bWakesNeutrals; // 0x143f	
	bool m_bNeutralIgnore; // 0x1440	
	bool m_bIdleAcquire; // 0x1441	
	bool m_bCanFollowUnseenUnits; // 0x1442	
	bool m_bExpired; // 0x1443	
	Vector m_vCurrentMovementOrderDestination; // 0x1444	
	Vector m_vPreviousMovementOrderDestination; // 0x1450	
	Vector m_vResumePreviousMovementRequestLocation; // 0x145c	
	bool m_bCurrentOrderIsMovement; // 0x1468	
	bool m_bPreviousOrderIsMovement; // 0x1469	
	bool m_bResumePreviousMovement; // 0x146a	
	bool m_bIsPatrolling; // 0x146b	
	GameTime_t m_flCreationTime; // 0x146c	
	bool m_bTargetMovedOutOfRange; // 0x1470	
	bool m_bChaseTargetMoves; // 0x1471	
private:
	[[maybe_unused]] uint8_t __pad1472[0x2]; // 0x1472
public:
	float m_flChaseDistance; // 0x1474	
	CHandle< CBaseEntity > m_hChaseEntity; // 0x1478	
private:
	[[maybe_unused]] uint8_t __pad147c[0x4]; // 0x147c
public:
	CUtlVector< CUtlSymbol > m_ActivityModifiers; // 0x1480	
	bool m_bActivityModifiersDirty; // 0x1498	
private:
	[[maybe_unused]] uint8_t __pad1499[0x7]; // 0x1499
public:
	CUtlVector< CUtlSymbol > m_ActivityModifiersFromScript; // 0x14a0	
	GameTime_t m_flBlinkDaggerTime; // 0x14b8	
	float m_flAdditionalBattleMusicWeight; // 0x14bc	
	// MNetworkEnable
	bool m_bStolenScepter; // 0x14c0	
	bool m_bHasScepterCached; // 0x14c1	
	bool m_bHasShardCached; // 0x14c2	
private:
	[[maybe_unused]] uint8_t __pad14c3[0x5]; // 0x14c3
public:
	// -> m_nLastUpdatedTick - 0x14c8
	// -> m_flRadius - 0x14cc
	// -> m_hCachedNPCs - 0x14d0
	CLocalNPCObstructionsCache m_LocalNPCObstructionsCache; // 0x14c8	
private:
	[[maybe_unused]] uint8_t __pad14e8[0x20]; // 0x14e8
public:
	GameTime_t m_flCritBashFailUntil; // 0x1508	
	float m_flAttackTimeLostToLastTick; // 0x150c	
	float m_flAttackTimeAtLastTick; // 0x1510	
	float m_flCompanionDistance; // 0x1514	
	bool m_bIsPartyCompanion; // 0x1518	
	bool m_bCanPartyCompanionAttack; // 0x1519	
private:
	[[maybe_unused]] uint8_t __pad151a[0x2]; // 0x151a
public:
	CHandle< CBaseEntity > m_CompanionEntity; // 0x151c	
	bool m_bFacePlayer; // 0x1520	
private:
	[[maybe_unused]] uint8_t __pad1521[0x3]; // 0x1521
public:
	GameTime_t m_flLastIdleChangeTime; // 0x1524	
	bool m_bUseNeutralCreepBehavior; // 0x1528	
private:
	[[maybe_unused]] uint8_t __pad1529[0x27]; // 0x1529
public:
	bool m_bHasBuiltWearableSpawnList; // 0x1550	
private:
	[[maybe_unused]] uint8_t __pad1551[0x3]; // 0x1551
public:
	GameTick_t m_nFoWFadeStartTime[15]; // 0x1554	
	int32_t m_nFOWVisibilityRadius; // 0x1590	
	Vector m_vFOWOriginOverride; // 0x1594	
	CUtlString m_strLastKillerAbility; // 0x15a0	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_anglediff; // 0x15a8	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_NetworkActivity; // 0x15ac	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_NetworkSequenceIndex; // 0x15b0	
	// MNetworkEnable
	bool m_bShouldDoFlyHeightVisual; // 0x15b4	
private:
	[[maybe_unused]] uint8_t __pad15b5[0x3]; // 0x15b5
public:
	// MNetworkEnable
	float m_flStartSequenceCycle; // 0x15b8	
	bool m_bMidLoading; // 0x15bc	
private:
	[[maybe_unused]] uint8_t __pad15bd[0x3]; // 0x15bd
public:
	CHandle< CDOTA_ScriptedSpawner > m_hTutorialSpawner; // 0x15c0	
private:
	[[maybe_unused]] uint8_t __pad15c4[0x4]; // 0x15c4
public:
	CountdownTimer m_AngerCooldownTimer; // 0x15c8	
	int32_t m_iProjectileMoveSpeed; // 0x15e0	
private:
	[[maybe_unused]] uint8_t __pad15e4[0x4]; // 0x15e4
public:
	CUtlSymbolLarge m_iszAutoAttackRangedParticle; // 0x15e8	
	int32_t m_nPoseParameterTurn; // 0x15f0	
	int32_t m_nPoseParameterRun; // 0x15f4	
	float m_flLean; // 0x15f8	
	float m_flRun; // 0x15fc	
	// MNetworkEnable
	char m_CustomHealthLabel[256]; // 0x1600	
	// MNetworkEnable
	Color m_CustomHealthLabelColor; // 0x1700	
	item_definition_index_t m_nWearableDefIndex; // 0x1704	
	int8_t m_nArcanaLevel; // 0x1708	
	int8_t m_nDefaultArcanaLevel; // 0x1709	
	Color m_defaultColorGemColor; // 0x170a	
	bool m_bDisableDamageDisplay; // 0x170e	
private:
	[[maybe_unused]] uint8_t __pad170f[0x1]; // 0x170f
public:
	Color m_gibTintColor; // 0x1710	
	float m_flPathfindingSearchDepthScale; // 0x1714	
	CUtlVector< int32 > m_ActivitiesStarted; // 0x1718	
	CHandle< CBaseEntity > m_hIllusionOriginal; // 0x1730	
	CHandle< CDOTA_BaseNPC > m_hDirectionalRangedFakeTarget; // 0x1734	
private:
	[[maybe_unused]] uint8_t __pad1738[0x28]; // 0x1738
public:
	bool m_bShouldComputeRemainingPathLength; // 0x1760	
private:
	[[maybe_unused]] uint8_t __pad1761[0x3]; // 0x1761
public:
	float m_flRemainingPathLength; // 0x1764	
	
	// Datamap fields:
	// CUtlSymbolLarge Input_MoveTo; // 0x0
	// CUtlSymbolLarge Input_MoveToAttack; // 0x0
	// CUtlSymbolLarge Input_MoveToPositionAggressive; // 0x0
	// CUtlSymbolLarge Input_SpeechBubble; // 0x0
	// CUtlSymbolLarge Input_PlayVCD; // 0x0
	// CUtlSymbolLarge Input_ForcePlayActivityOnce; // 0x0
	// void Input_DestroyAllSpeechBubbles; // 0x0
	// float Input_SetFOWRevealRadius; // 0x0
	// CUtlSymbolLarge m_target; // 0x2c8
	// int32_t m_iMaxHealth; // 0x2ac
	// int32_t m_iHealth; // 0x2a8
	// uint8_t m_iTeamNum; // 0x30c
	// CHandle< CBaseEntity > econ_owner; // 0x7fffffff
	// int32_t EconItemCount; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Additive : public CDOTA_BaseNPC
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Ninja_Gear : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Blood_Grenade : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Yasha_And_Kaya : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ArcWarden_MagneticField_Thinker_AttackRange : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1338[0x8]; // 0x1338
public:
	int32_t radius; // 0x1340	
	Vector m_vPos; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Winter_Wyvern_Arctic_Burn_Flight : public CDOTA_Buff
{
public:
	float attack_point; // 0x1338	
	int32_t attack_range_bonus; // 0x133c	
	int32_t projectile_speed_bonus; // 0x1340	
	int32_t night_vision_bonus; // 0x1344	
	int32_t movement_scepter; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad134c[0x4]; // 0x134c
public:
	CUtlSymbolLarge m_iszRangedAttackEffect; // 0x1350	
	int32_t max_attacks; // 0x1358	
	int32_t m_iNumAttacks; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Terrorblade_ConjureImage : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Visage_Silent_As_The_Grave : public CDOTABaseAbility
{
public:
	float invis_duration; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nyx_Assassin_Jolt : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x10]; // 0x578
public:
	int32_t aoe; // 0x588	
	int32_t damage; // 0x58c	
	int32_t m_nNPCSpawnedID; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Chaos_Knight_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lycan_Shapeshift_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lycan_Wolf_Bite_Attack_Range : public CDOTA_Buff
{
public:
	int32_t attack_range; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PhantomAssassin_ScreenSplatter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Windrunner_GaleForce_Aura : public CDOTA_Buff
{
public:
	Vector m_vEndpoint; // 0x1338	
	Vector m_vFlowPosition; // 0x1344	
	int32_t radius; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PhantomLancer_PhantomEdge_Agility : public CDOTA_Buff
{
public:
	int32_t bonus_agility; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DrowRanger_ArcanaKill_Delay : public CDOTA_Buff
{
public:
	PlayerID_t m_nPlayerID_Drow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PersistentInvisibility : public CDOTA_Buff
{
public:
	float fade_delay; // 0x1338	
	float m_flFadeTime; // 0x133c	
	GameTime_t m_flLastActionTime; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_SandKing_CausticFinale : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Creep_Slow : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xe0
// Has VTable
class CDOTABehaviorMoveTo
{
private:
	[[maybe_unused]] uint8_t __pad0000[0xb8]; // 0x0
public:
	CountdownTimer m_repathTimer; // 0xb8	
	bool m_bSetAnimation; // 0xd0	
	bool m_bUseSwimAnimations; // 0xd1	
private:
	[[maybe_unused]] uint8_t __pad00d2[0x2]; // 0xd2
public:
	int32_t m_nRunActivity; // 0xd4	
	float m_flTargetDist; // 0xd8	
	bool m_bIsDirectional; // 0xdc	
	bool m_bIsRelative; // 0xdd	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Slark_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Magic_Resistance_20 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lamp_Off : public CDOTA_Buff
{
public:
	int32_t m_iTempViewer; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CHandle< CBaseEntity> m_hTarget"
class CDOTA_Ability_Aghsfort_Elemental_Wisp_Tether : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x10]; // 0x578
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTarget; // 0x588	
	Vector m_vProjectileLocation; // 0x58c	
	bool m_bProjectileActive; // 0x598	
private:
	[[maybe_unused]] uint8_t __pad0599[0x3]; // 0x599
public:
	int32_t latch_distance; // 0x59c	
	int32_t m_iProjectileIndex; // 0x5a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Blitz_Knuckles : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Lotus_Orb_ChannelCheck : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hCurrentAbility; // 0x1338	
	CHandle< CBaseEntity > m_hTarget; // 0x133c	
	Vector m_vLocation; // 0x1340	
	GameTime_t m_fChannelEnd; // 0x134c	
	bool m_bInterrupt; // 0x1350	
	bool m_bExpired; // 0x1351	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_PrimalBeast_Trample : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Hoodwink_AcornShotCharges : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Elder_Titan_EarthSplitter : public CDOTA_Buff
{
public:
	int32_t slow_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_NagaSiren_RipTide_Slow : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Meepo_Fling_Slow : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Omniknight_Hammer_Of_Purity_Bomb : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Clinkz_Tar_Bomb_SearingArrows : public CDOTA_Buff
{
public:
	int32_t damage_bonus; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1340	
	bool m_bBonusAttack; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x14b0
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DarkSeer_Normal_Punch : public CDOTA_Buff
{
public:
	Vector m_PositionIndex[30]; // 0x1338	
	ParticleIndex_t m_nNormalPunchBuffIndex; // 0x14a0	
	float m_flDistanceTraveled; // 0x14a4	
	bool m_bIsValidTarget; // 0x14a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Beastmaster_PrimalRoar_Slow : public CDOTA_Buff
{
public:
	int32_t slow_movement_speed_pct; // 0x1338	
	int32_t slow_attack_speed_pct; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bloodseeker_BloodMist : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Crystal_Maiden_Crystal_Clone : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nevermore_Necromastery : public CDOTABaseAbility
{
public:
	int32_t attack_range_bonus; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_160 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tutorial_Sleep : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_OgreMagi_FrostArmor_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1338	
	int32_t attackspeed_slow; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Watch_Tower_Capturing : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Spectre_ActiveDispersion : public CDOTA_Buff
{
public:
	int32_t damage_reflection_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Ascension_PlasmaField_Slow : public CDOTA_Buff
{
public:
	int32_t slow_amount; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Naginata : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_DragonLance : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1338	
	int32_t bonus_strength; // 0x133c	
	int32_t base_attack_range; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Ethereal_Blade : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MjollnirChain : public CDOTA_Buff
{
public:
	int32_t chain_radius; // 0x1338	
	int32_t chain_strikes; // 0x133c	
	int32_t chain_damage; // 0x1340	
	float chain_delay; // 0x1344	
	int32_t chain_damage_per_charge; // 0x1348	
	int32_t m_iCurJumpCount; // 0x134c	
	Vector m_vCurTargetLoc; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad135c[0x4]; // 0x135c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_PointBooster : public CDOTA_Buff_Item
{
public:
	int32_t bonus_mana; // 0x1338	
	int32_t bonus_health; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Centaur_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Meepo_MegaMeepo : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
	float m_flOffset; // 0x133c	
	QAngle m_vStartAngles; // 0x1340	
	Vector m_vStartLocation; // 0x134c	
	float animation_rate; // 0x1358	
	bool m_bInterrupted; // 0x135c	
	bool m_bHasBeenDestroyed; // 0x135d	
	bool m_bIsHighestMeepo; // 0x135e	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Silencer_GlaivesOfWisdom_AttackCounter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Treant_Bonus : public CDOTA_Buff
{
public:
	int32_t treant_hp_bonus; // 0x1338	
	int32_t treant_damage_bonus; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Beastmaster_PrimalRoar_Push : public CDOTA_Buff
{
public:
	Vector m_vVelocity; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tidehunter_DeadInTheWater : public CDOTA_Buff
{
public:
	int32_t max_movement_speed; // 0x1338	
	int32_t chain_length; // 0x133c	
	CHandle< CBaseEntity > m_hAnchor; // 0x1340	
	bool m_bDragging; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Sven_Warcry : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Generic_Hidden : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_Creature_Phoenix_LaunchFireSpirit : public CDOTABaseAbility
{
public:
	int32_t spirit_speed; // 0x578	
	float duration; // 0x57c	
	int32_t radius; // 0x580	
	int32_t hp_cost_perc; // 0x584	
	ParticleIndex_t m_nFXIndex; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_50 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Speed_110 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float m_flStrength"
// MNetworkVarNames "float m_flAgility"
// MNetworkVarNames "float m_flIntellect"
// MNetworkVarNames "float m_flStrengthTotal"
// MNetworkVarNames "float m_flAgilityTotal"
// MNetworkVarNames "float m_flIntellectTotal"
// MNetworkVarNames "int m_iRecentDamage"
// MNetworkVarNames "int m_iPrimaryAttribute"
// MNetworkVarNames "GameTime_t m_flDeathTime"
// MNetworkVarNames "int m_iAbilityPoints"
// MNetworkVarNames "int m_iCurrentXP"
// MNetworkVarNames "GameTime_t m_flRespawnTime"
// MNetworkVarNames "float m_flRespawnTimePenalty"
// MNetworkVarNames "bool m_bScriptDisableRespawns"
// MNetworkVarNames "PlayerID_t m_iPlayerID"
// MNetworkVarNames "CHandle< CDOTA_BaseNPC_Hero> m_hReplicatingOtherHeroModel"
// MNetworkVarNames "bool m_bReincarnating"
// MNetworkVarNames "bool m_bCustomKillEffect"
// MNetworkVarNames "GameTime_t m_flSpawnedAt"
class CDOTA_BaseNPC_Hero : public CDOTA_BaseNPC_Additive
{
private:
	[[maybe_unused]] uint8_t __pad1768[0x98]; // 0x1768
public:
	// MNetworkEnable
	float m_flStrength; // 0x1800	
	// MNetworkEnable
	float m_flAgility; // 0x1804	
	// MNetworkEnable
	float m_flIntellect; // 0x1808	
	// MNetworkEnable
	float m_flStrengthTotal; // 0x180c	
	// MNetworkEnable
	float m_flAgilityTotal; // 0x1810	
	// MNetworkEnable
	float m_flIntellectTotal; // 0x1814	
	// MNetworkEnable
	int32_t m_iRecentDamage; // 0x1818	
	// MNetworkEnable
	int32_t m_iPrimaryAttribute; // 0x181c	
	// MNetworkEnable
	GameTime_t m_flDeathTime; // 0x1820	
	float m_flStrengthGain; // 0x1824	
	float m_flAgilityGain; // 0x1828	
	float m_flIntellectGain; // 0x182c	
	float m_flLastSuggestionTime; // 0x1830	
	bool m_bItemsAddedToLoadout; // 0x1834	
	bool m_bPregameItemsAddedToLoadout; // 0x1835	
private:
	[[maybe_unused]] uint8_t __pad1836[0x2]; // 0x1836
public:
	CHandle< CBaseEntity > m_hNewARDMHero; // 0x1838	
	GameTime_t m_fBuybackCooldown; // 0x183c	
	GameTime_t m_fBuybackGoldLimit; // 0x1840	
	int32_t m_nLastHealedAmount; // 0x1844	
	float m_flLastHealedTime; // 0x1848	
	CHandle< CBaseEntity > m_hLastHealEntity; // 0x184c	
	Vector m_vRespawnPosition; // 0x1850	
private:
	[[maybe_unused]] uint8_t __pad185c[0x4]; // 0x185c
public:
	CUtlVector< CDOTA_BaseNPC_Hero::sHeroDamageInfo > m_HeroDamageInfoArray; // 0x1860	
	CUtlVector< CDOTA_BaseNPC_Hero::sHeroRecentModifierInfo > m_vecRecentModifiers; // 0x1878	
	GameTime_t m_fMostRecentDamageTime; // 0x1890	
	// MNetworkEnable
	int32_t m_iAbilityPoints; // 0x1894	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iCurrentXP; // 0x1898	
	// MNetworkEnable
	GameTime_t m_flRespawnTime; // 0x189c	
	// MNetworkEnable
	float m_flRespawnTimePenalty; // 0x18a0	
	float m_flTimeUntilRespawn; // 0x18a4	
	float m_flScriptRespawnTime; // 0x18a8	
	float m_flPendingRespawnTime; // 0x18ac	
	// MNetworkEnable
	bool m_bScriptDisableRespawns; // 0x18b0	
private:
	[[maybe_unused]] uint8_t __pad18b1[0x3]; // 0x18b1
public:
	// MNetworkEnable
	PlayerID_t m_iPlayerID; // 0x18b4	
	PlayerID_t m_iIllusionOriginalPlayerID; // 0x18b8	
	int32_t m_iHeroID; // 0x18bc	
	// MNetworkEnable
	CHandle< CDOTA_BaseNPC_Hero > m_hReplicatingOtherHeroModel; // 0x18c0	
private:
	[[maybe_unused]] uint8_t __pad18c4[0x34]; // 0x18c4
public:
	CountdownTimer m_RespawnMusicTimer; // 0x18f8	
	CountdownTimer m_HeroKillTimer; // 0x1910	
	CountdownTimer m_MultipleHeroKillTimer; // 0x1928	
	CountdownTimer m_MultipleLastHitTimer; // 0x1940	
	int32_t m_iMultipleKillCount; // 0x1958	
	bool m_bDisableWearables; // 0x195c	
private:
	[[maybe_unused]] uint8_t __pad195d[0x3]; // 0x195d
public:
	CHandle< CDOTAWearableItem > m_hTogglableWearable[99]; // 0x1960	
private:
	[[maybe_unused]] uint8_t __pad1aec[0x4]; // 0x1aec
public:
	// -> m_victimname - 0x1af0
	// -> m_inflictorname - 0x1af8
	// -> m_bEnemyInFOW - 0x1b00
	// -> m_bWasFirstBlood - 0x1b01
	// -> m_iKillCount - 0x1b04
	// -> m_flBlinkTime - 0x1b08
	CDOTA_BaseNPC_Hero::KillInfo_t m_KillInfo; // 0x1af0	
	CountdownTimer m_DirectorAbilityActivity; // 0x1b10	
	// MNetworkEnable
	bool m_bReincarnating; // 0x1b28	
	// MNetworkEnable
	bool m_bCustomKillEffect; // 0x1b29	
private:
	[[maybe_unused]] uint8_t __pad1b2a[0x2]; // 0x1b2a
public:
	// MNetworkEnable
	GameTime_t m_flSpawnedAt; // 0x1b2c	
	CountdownTimer m_PurchaseItemTimer; // 0x1b30	
	CountdownTimer m_NeutralItemTimer; // 0x1b48	
	CountdownTimer m_RetrieveItemsFromStashTimer; // 0x1b60	
	CountdownTimer m_RequestGoToSecretShopTimer; // 0x1b78	
	int32_t m_iNextItemToPurchase; // 0x1b90	
	bool m_bDoesNextItemCompleteRecipe; // 0x1b94	
private:
	[[maybe_unused]] uint8_t __pad1b95[0x3]; // 0x1b95
public:
	CUtlVector< sLoadoutItem > m_Loadout; // 0x1b98	
	CUtlVector< CUtlPair< AbilityID_t, bool > > m_BuildingOrBuilt; // 0x1bb0	
	sLoadoutItem m_TPScroll; // 0x1bc8	
	sLoadoutItem m_Dust; // 0x1be0	
	sLoadoutItem m_Gem; // 0x1bf8	
	sLoadoutItem m_SentryWard; // 0x1c10	
	sLoadoutItem m_ObserverWard; // 0x1c28	
	sLoadoutItem m_Courier; // 0x1c40	
	sLoadoutItem m_FlyingCourier; // 0x1c58	
	bool m_bAutoPurchaseItems; // 0x1c70	
	bool m_bBuybackDisabled; // 0x1c71	
private:
	[[maybe_unused]] uint8_t __pad1c72[0x6]; // 0x1c72
public:
	CUtlVector< CHandle< CDOTA_BaseNPC_Pet > > m_hPets; // 0x1c78	
	bool m_bPreventPetSpawn; // 0x1c90	
private:
	[[maybe_unused]] uint8_t __pad1c91[0x7]; // 0x1c91
public:
	// -> m_flProbabilityElements - 0x1ca0
	// -> m_flProbability - 0x1cb8
	CDOTAMusicProbabilityEntry m_MusicProbabilityGank; // 0x1c98	
private:
	[[maybe_unused]] uint8_t __pad1cc0[0x28]; // 0x1cc0
public:
	CUtlString m_strCustomKillEffect; // 0x1ce8	
	CUtlString m_strCustomHexModel; // 0x1cf0	
	ParticleIndex_t m_nKillStreakFX; // 0x1cf8	
private:
	[[maybe_unused]] uint8_t __pad1cfc[0x4]; // 0x1cfc
public:
	CUtlVector< CHandle< CBaseEntity > > m_AbilitiesPendingDelete; // 0x1d00	
	CUtlVector< sAcquireHistory > m_vecItemPurchaseHistory; // 0x1d18	
	CUtlVector< sAcquireHistory > m_vecAbilitySkillHistory; // 0x1d30	
	CUtlVector< sAcquireHistory > m_vecNeutralItemEquippedHistory; // 0x1d48	
private:
	[[maybe_unused]] uint8_t __pad1d60[0x18]; // 0x1d60
public:
	CUtlVector< CHandle< CDOTA_BaseNPC_Hero > > m_vecExpiredIllusions; // 0x1d78	
private:
	[[maybe_unused]] uint8_t __pad1d90[0x4]; // 0x1d90
public:
	float m_flLastTimeLookedAtByDirector; // 0x1d94	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_EchoSabre : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1338	
	int32_t bonus_attack_speed; // 0x133c	
	int32_t bonus_damage; // 0x1340	
	float bonus_mana_regen; // 0x1344	
	int32_t bonus_strength; // 0x1348	
	float slow_duration; // 0x134c	
	bool bonus_speed; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Dawnbreaker_Land : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hoodwink_Sharpshooter_VisionThinker : public CDOTA_Buff
{
public:
	int32_t arrow_width; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ArcWarden_MagneticField_Thinker_Attack_Speed : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Techies_Suicide_RespawnTime : public CDOTA_Buff
{
public:
	int32_t m_nSuicideKillCount; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nyx_Assassin_Vendetta_Armor_Reduction : public CDOTA_Buff
{
public:
	int32_t shard_magic_resist_reduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TemplarAssassin_PsiBlades : public CDOTA_Buff
{
public:
	int32_t bonus_attack_range; // 0x1338	
	float attack_spill_range; // 0x133c	
	int32_t attack_spill_width; // 0x1340	
	int32_t attack_spill_pct; // 0x1344	
	int32_t attack_spill_penalty; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Courier_TransferItems_ToOtherPlayer : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SkeletonKing_Reincarnation_Scepter_RespawnTime : public CDOTA_Buff
{
public:
	float scepter_respawn_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tower_Aura_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1338	
	float hp_regen; // 0x133c	
	bool m_bOverrideArmor; // 0x1340	
	bool m_bOverrideRegen; // 0x1341	
	bool m_bSentFirstRefresh; // 0x1342	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Death_Prophet : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Evasion_12 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Amplify_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Magic_Resistance_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Mana_Reduction_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Gold_Ability_Draft : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Barricade : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
	int32_t bonus_armor; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Overflowing_Elixir_Regen : public CDOTA_Buff
{
public:
	int32_t health; // 0x1338	
	int32_t mana; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bloodthorn_Debuff : public CDOTA_Buff
{
public:
	float target_crit_multiplier; // 0x1338	
	float silence_damage_percent; // 0x133c	
	int32_t proc_damage; // 0x1340	
	float m_flDamageTaken; // 0x1344	
	CUtlVector< int16 > m_vRecords; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_MagicStick : public CDOTA_Buff_Item
{
public:
	int32_t charge_radius; // 0x1338	
	int32_t max_charges; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_iStat"
class CDOTA_Item_Samurai_Tabi : public CDOTA_Item
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnSamurai_TabiStatChanged"
	int32_t m_iStat; // 0x620	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Snapfire_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Underlord_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Techies_RemoteMines : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x578	
	CHandle< CBaseEntity > m_hRMine; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DoomBringer_Devour_Upgrade_Timer : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Batrider_FlamingLasso : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FacelessVoid_Chronosphere_SelfBuff : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Axe_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Axe : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AncientGolem_Rockslide : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x520
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CMoverPathNode : public CPointEntity
{
public:
	Vector m_vInTangentLocal; // 0x4a8	
	Vector m_vOutTangentLocal; // 0x4b4	
private:
	[[maybe_unused]] uint8_t __pad04c0[0x28]; // 0x4c0
public:
	CUtlSymbolLarge m_szParentPathUniqueID; // 0x4e8	
	CEntityIOOutput m_OnPassThrough; // 0x4f0	
	CHandle< CPathMover > m_hMover; // 0x518	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Necrophos : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bloodseeker_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lone_Druid_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_13 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Agility_12 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_200 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_400 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x540
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CEnvSoundscape : public CServerOnlyEntity
{
public:
	CEntityIOOutput m_OnPlay; // 0x4a8	
	float m_flRadius; // 0x4d0	
private:
	[[maybe_unused]] uint8_t __pad04d4[0x4]; // 0x4d4
public:
	CUtlSymbolLarge m_soundscapeName; // 0x4d8	
	CUtlSymbolLarge m_soundEventName; // 0x4e0	
	bool m_bOverrideWithEvent; // 0x4e8	
private:
	[[maybe_unused]] uint8_t __pad04e9[0x3]; // 0x4e9
public:
	int32_t m_soundscapeIndex; // 0x4ec	
	int32_t m_soundscapeEntityListId; // 0x4f0	
	uint32_t m_soundEventHash; // 0x4f4	
	CUtlSymbolLarge m_positionNames[8]; // 0x4f8	
	CHandle< CEnvSoundscape > m_hProxySoundscape; // 0x538	
	bool m_bDisabled; // 0x53c	
	
	// Datamap fields:
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
	// void InputToggleEnabled; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_KoboldTunneler_ProspectingAura_Money : public CDOTA_Buff
{
public:
	int32_t gpm_aura; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_731_Teaser_Stun : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_Wildwing_Tornado_Blast_Debuff : public CDOTA_Buff
{
public:
	GameTime_t m_flStartTime; // 0x1338	
	Vector m_vStartPos; // 0x133c	
	float m_flCurTime; // 0x1348	
	float m_flHeightT; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_UrnUpheaval : public CDOTA_Buff
{
public:
	int32_t m_iSlow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Orb_Of_Corrosion : public CDOTA_Buff_Item
{
public:
	int32_t armor; // 0x1338	
	int32_t attack_speed; // 0x133c	
	float duration; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_RingOfTarrasque : public CDOTA_Buff_Item
{
public:
	float bonus_health_regen; // 0x1338	
	int32_t bonus_health; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Kaya : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_MeteorHammer : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Dagon4 : public CDOTA_Item_Recipe_Dagon
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hoodwink_Boomerang_Invulnerable : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Grimstroke_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pangolier_GyroshellTimeout : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EarthSpirit_GeomagneticGrip : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t rock_damage; // 0x133c	
	float pull_units_per_second; // 0x1340	
	float pull_units_per_second_heroes; // 0x1344	
	float total_pull_distance; // 0x1348	
	float duration; // 0x134c	
	bool m_bUsedStone; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1351[0x3]; // 0x1351
public:
	Vector m_vDestination; // 0x1354	
	Vector m_vLocation; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad136c[0x4]; // 0x136c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_NagaSiren_RipTideCounter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Undying_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Shadow_Demon_Demonic_Cleanse : public CDOTABaseAbility
{
public:
	bool m_bGrantedScepterCharges; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Obsidian_Destroyer_Equilibrium : public CDOTA_Buff
{
public:
	int32_t proc_chance; // 0x1338	
	int32_t mana_restore; // 0x133c	
	float mana_capacity_steal; // 0x1340	
	float mana_capacity_duration; // 0x1344	
	float shard_mana_duration; // 0x1348	
	float scepter_barrier_threshold; // 0x134c	
	float scepter_barrier_duration; // 0x1350	
	float scepter_barrier_cooldown; // 0x1354	
	float scepter_max_mana_barrier_pct; // 0x1358	
	int32_t spell_lifesteal; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SpiritBreaker_EmpoweringHaste : public CDOTA_Buff
{
public:
	int32_t bonus_movespeed_pct_self; // 0x1338	
	int32_t bonus_movespeed_pct_allies; // 0x133c	
	int32_t bonus_movespeed_pct_extra; // 0x1340	
	int32_t duration; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Weaver_GeminateAttack_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Clockwerk_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Viper_CorrosiveSkin : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AncientApparition_IceVortex : public CDOTA_Buff
{
public:
	int32_t movement_speed_pct; // 0x1338	
	int32_t spell_resist_pct; // 0x133c	
	int32_t drag_speed; // 0x1340	
	float aura_origin_x; // 0x1344	
	float aura_origin_y; // 0x1348	
	int32_t shard_dps; // 0x134c	
	int32_t shard_attack_speed_reduction; // 0x1350	
	Vector m_vCenter; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bloodseeker_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ursa_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ember_Spirit_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_55 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Agility_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Strength_16 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x40
// Has VTable
// Has Trivial Destructor
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CHandle< CFogController> m_hCtrl"
struct fogplayerparams_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	// MNetworkUserGroup "PlayerFogController"
	CHandle< CFogController > m_hCtrl; // 0x8	
	float m_flTransitionTime; // 0xc	
	Color m_OldColor; // 0x10	
	float m_flOldStart; // 0x14	
	float m_flOldEnd; // 0x18	
	float m_flOldMaxDensity; // 0x1c	
	float m_flOldHDRColorScale; // 0x20	
	float m_flOldFarZ; // 0x24	
	Color m_NewColor; // 0x28	
	float m_flNewStart; // 0x2c	
	float m_flNewEnd; // 0x30	
	float m_flNewMaxDensity; // 0x34	
	float m_flNewHDRColorScale; // 0x38	
	float m_flNewFarZ; // 0x3c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Orb_of_Venom : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_MagicWand : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_RingOfProtection : public CDOTA_Buff_Item
{
public:
	float bonus_armor; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_BeltOfStrength : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Hoodwink_AcornShot_ArmorCorruption : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_FurArmyThinker : public CDOTA_Buff
{
public:
	float m_fDuration; // 0x1338	
	GameTime_t m_fTimeThinkerCreated; // 0x133c	
	CUtlVector< Vector > m_vTargetPositions; // 0x1340	
	Vector m_vInitialPos; // 0x1358	
	int32_t first_radius; // 0x1364	
	int32_t num_first_soldiers; // 0x1368	
	int32_t second_radius; // 0x136c	
	int32_t num_second_soldiers; // 0x1370	
	ParticleIndex_t m_nRingFXIndex; // 0x1374	
	int32_t final_radius; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tusk_FrozenSigil : public CDOTA_Buff
{
public:
	int32_t aghs_shard_move_slow; // 0x1338	
	int32_t aghs_shard_damage; // 0x133c	
	int32_t attack_slow; // 0x1340	
	int32_t turn_rate_slow; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Wisp_Tether_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
	float tick_rate; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Undying_FleshGolem : public CDOTA_Buff
{
public:
	int32_t str_percentage; // 0x1338	
	int32_t movement_bonus; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Ogre_Magi_Multicast : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Shadow_Demon_Shadow_Poison : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hPoisonedUnits; // 0x578	
	bool m_bHitDisruptedUnit; // 0x590	
private:
	[[maybe_unused]] uint8_t __pad0591[0x3]; // 0x591
public:
	int32_t radius; // 0x594	
	CUtlVector< CHandle< CBaseEntity > > m_hHitUnits; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Luna_LunarBlessing : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t bonus_night_vision; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Courier_Flying : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lina_LagunaBlade : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Shadowraze_Debuff : public CDOTA_Buff
{
public:
	int32_t movement_speed_pct; // 0x1338	
	int32_t turn_rate_pct; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AncientApparition_ColdFeet : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Legion_Commander_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ancient_Apparition_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lone_Druid_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_16 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Strength_25 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifer_Furbolg_Enrage_Damage : public CDOTA_Buff
{
public:
	int32_t bonus_dmg_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Dragon_Scale : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1338	
	int32_t bonus_hp_regen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_HeavensHalberd : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
	int32_t hp_regen_amp; // 0x133c	
	int32_t bonus_evasion; // 0x1340	
	int32_t status_resistance; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Assault_Cuirass_Negative_Armor : public CDOTA_Buff
{
public:
	int32_t aura_negative_armor; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_DustofAppearance_Thinker : public CDOTA_Buff
{
public:
	float radius; // 0x1338	
	float duration; // 0x133c	
	float linger_duration; // 0x1340	
	int32_t movespeed; // 0x1344	
	float damage; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_PoorMansShield : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Terrorblade_Metamorphosis_Fear_Thinker : public CDOTA_Buff
{
public:
	float m_fLastRadius; // 0x1338	
	float m_fCurRadius; // 0x133c	
	GameTime_t m_fLastThink; // 0x1340	
	ParticleIndex_t m_nFXIndex; // 0x1344	
	CUtlVector< CHandle< CBaseEntity > > m_EntitiesHit; // 0x1348	
	int32_t scepter_speed; // 0x1360	
	int32_t scepter_radius; // 0x1364	
	bool m_bFirstThink; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Abaddon_BorrowedTime_ImmolationAura : public CDOTA_Buff
{
public:
	int32_t immolate_aoe; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Visage_SoulAssumption : public CDOTABaseAbility
{
public:
	float m_fDamage; // 0x578	
	ParticleIndex_t m_nFXIndex; // 0x57c	
	int32_t m_iForcedStacks; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Undying_Decay_DebuffCounter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Weaver_Shukuchi_GeminateAttackManager : public CDOTA_Buff
{
public:
	int32_t m_iAttacksRemaining; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Courier_TakeStashItems : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Earthshaker_Aftershock : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tutorial_LowAttackPriority : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x518
// Has VTable
// Construct allowed
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "fogparams_t m_fog"
class CFogController : public CBaseEntity
{
public:
	// MNetworkEnable
	fogparams_t m_fog; // 0x4a8	
	bool m_bUseAngles; // 0x510	
private:
	[[maybe_unused]] uint8_t __pad0511[0x3]; // 0x511
public:
	int32_t m_iChangedVariables; // 0x514	
	
	// Datamap fields:
	// float InputSetStartDist; // 0x0
	// float InputSetEndDist; // 0x0
	// float InputSetMaxDensity; // 0x0
	// void InputTurnOn; // 0x0
	// void InputTurnOff; // 0x0
	// Color InputSetColor; // 0x0
	// Color InputSetColorSecondary; // 0x0
	// int32_t InputSetFarZ; // 0x0
	// CUtlSymbolLarge InputSetAngles; // 0x0
	// float InputSet2DSkyboxFogFactor; // 0x0
	// Color InputSetColorLerpTo; // 0x0
	// Color InputSetColorSecondaryLerpTo; // 0x0
	// float InputSetStartDistLerpTo; // 0x0
	// float InputSetEndDistLerpTo; // 0x0
	// float InputSetMaxDensityLerpTo; // 0x0
	// float InputSet2DSkyboxFogFactorLerpTo; // 0x0
	// void InputStartFogTransition; // 0x0
	// void CFogControllerSetLerpValues; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Aghsfort_Aziyog_Underlord_Firestorm : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Doom_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Demon_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cooldown_Reduction_40 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_All_Stats_15 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xaa8
// Has VTable
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_CurrentHeroAvailable"
class CDOTAGameManager
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	CNetworkVarChainer __m_pChainEntity; // 0x30	
private:
	[[maybe_unused]] uint8_t __pad0058[0x390]; // 0x58
public:
	bool m_bCustomGame; // 0x3e8	
	bool m_bEventGame; // 0x3e9	
	bool m_bGameModeWantsDefaultNeutralItemSchema; // 0x3ea	
	bool m_bGameModeFilteredAbilities; // 0x3eb	
	char m_szAddOnGame[128]; // 0x3ec	
	char m_szAddOnMap[128]; // 0x46c	
private:
	[[maybe_unused]] uint8_t __pad04ec[0x37c]; // 0x4ec
public:
	KeyValues* m_pTutorialLessonKeyValues; // 0x868	
	KeyValues* m_pDivisionKeyValues; // 0x870	
	KeyValues* m_pMatchGroupsKeyValues; // 0x878	
	KeyValues* m_pAnimationStatues; // 0x880	
	KeyValues* m_pBotScriptsDedicatedServer; // 0x888	
	KeyValues* m_pkvWardPlacementLocations; // 0x890	
	KeyValues* m_pRegionKeyValues; // 0x898	
	KeyValues* m_pSurveyQuestionData; // 0x8a0	
	KeyValues3 m_AddonInfoKeyValues; // 0x8a8	
private:
	[[maybe_unused]] uint8_t __pad08b8[0x28]; // 0x8b8
public:
	KeyValues* m_pCountryKeyValues; // 0x8e0	
private:
	[[maybe_unused]] uint8_t __pad08e8[0xc0]; // 0x8e8
public:
	// MNetworkEnable
	bool m_CurrentHeroAvailable[256]; // 0x9a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
// Has VTable
// Has Trivial Destructor
// 
// MNetworkVarNames "CEntityHandle m_hOwner"
// MNetworkVarNames "CUtlStringToken m_name"
class CGameSceneNodeHandle
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	CEntityHandle m_hOwner; // 0x8	
	// MNetworkEnable
	CUtlStringToken m_name; // 0xc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1798
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float m_flAim"
class CDOTA_BaseNPC_Creep : public CDOTA_BaseNPC_Additive
{
public:
	// -> m_flTimeOfDeath - 0x1768
	// -> m_flDeathFlightDuration - 0x176c
	// -> m_vWsKillDirection - 0x1770
	// -> m_vWsKillOrigin - 0x177c
	CDOTA_CreepKillInfo m_KillInfo; // 0x1768	
	DOTA_LANE m_Lane; // 0x1788	
	bool m_bPushback; // 0x178c	
private:
	[[maybe_unused]] uint8_t __pad178d[0x3]; // 0x178d
public:
	// MNetworkEnable
	float m_flAim; // 0x1790	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AlphaWolf_CommandAura_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_damage_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_TreantMiniboss_NaturesGuise_Tree_Walking : public CDOTA_Buff
{
public:
	int32_t movement_bonus; // 0x1338	
	int32_t regen_amp; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Stormcrafter : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Veil_Of_Discord_Debuff : public CDOTA_Buff
{
public:
	int32_t spell_amp; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Heart : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
	int32_t bonus_health; // 0x133c	
	float health_regen_pct; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dawnbreaker_Fire_Wreath_Magic_Immunity_Tooltip : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Brewmaster_WindWalk : public CDOTA_Modifier_Invisible
{
public:
	int32_t bonus_movement_speeed; // 0x1348	
	int32_t bonus_damage; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Broodmother_SpawnSpiderlings : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Furion_Teleportation : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndexStart; // 0x578	
	ParticleIndex_t m_nFXIndexEnd; // 0x57c	
	ParticleIndex_t m_nFXIndexEndTeam; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nian_GreaterBash : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_Attachment_Regrow : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Kunkka_Return : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Morphling_Morph_Str : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CEnableMotionFixup : public CBaseEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Treant_12 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Demon_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Amplify_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13f8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_DataCustomTeam : public CDOTA_DataNonSpectator
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_NPC_Observer_Ward : public CDOTA_BaseNPC_Additive
{
public:
	int32_t m_iDuration; // 0x1768	
	bool m_bPlacedInSpawnBox; // 0x176c	
private:
	[[maybe_unused]] uint8_t __pad176d[0x3]; // 0x176d
public:
	GameTime_t m_flSpawnTime; // 0x1770	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mutation_FreeRapiers_Team : public CDOTA_Buff
{
public:
	int32_t m_nLastInterval; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Movement_Speed_Percentage : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Penta_Edged_Sword : public CDOTA_Buff_Item
{
public:
	int32_t damage; // 0x1338	
	int32_t maim_chance; // 0x133c	
	float maim_duration; // 0x1340	
	int32_t melee_attack_range; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Stormcrafter_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Gladiator_Helm : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Aegis : public CDOTA_Item
{
public:
	int32_t m_iKillerTeam; // 0x620	
	GameTime_t m_fEquipTime; // 0x624	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_ForceStaff : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
	int32_t bonus_intellect; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Cyclone : public CDOTA_Buff
{
public:
	GameTime_t m_flStartTime; // 0x1338	
	Vector m_vStartPos; // 0x133c	
	float m_flCurTime; // 0x1348	
	float m_flHeightT; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Muerta_PartingShot_ProjectileReturn : public CDOTA_Buff
{
public:
	int32_t m_nProjectileHandle; // 0x1338	
	CHandle< CBaseEntity > m_hPhysicalBody; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Marci_Dispose_Debuff : public CDOTA_Buff
{
public:
	int32_t movement_slow_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_ArenaOfBloodHPRegen : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Phoenix_Sun_Ray_Slow : public CDOTA_Buff
{
public:
	int32_t shard_move_slow_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Techies_LandMine_Burn : public CDOTA_Buff
{
public:
	int32_t mres_reduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Obsidian_Destroyer_Equilibrium_Barrier : public CDOTA_Buff
{
public:
	float barrier_amt; // 0x1338	
	int32_t m_nDamageAbsorbed; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Chen_Penitence : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Warlock_Golem_Flaming_Fists : public CDOTA_Buff
{
public:
	float damage; // 0x1338	
	int32_t radius; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Sniper_TakeAim : public CDOTA_Buff
{
public:
	int32_t bonus_attack_range; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Windrunner_Powershot_Slow : public CDOTA_Buff
{
public:
	float enemy_movespeed_bonus_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Axe_BerserkersCall : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Gold_Income_90 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cast_Range_400 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Base_Damage_45 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17b8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Undying_Zombie : public CDOTA_BaseNPC_Creep
{
public:
	CountdownTimer m_ctRespawn; // 0x1798	
	CDOTA_BaseNPC* m_pTombstone; // 0x17b0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x160
// Has VTable
// 
// MNetworkVarNames "CGameSceneNodeHandle m_hParent"
// MNetworkVarNames "CNetworkOriginCellCoordQuantizedVector m_vecOrigin"
// MNetworkVarNames "QAngle m_angRotation"
// MNetworkVarNames "float m_flScale"
// MNetworkVarNames "CUtlStringToken m_name"
// MNetworkVarNames "CUtlStringToken m_hierarchyAttachName"
class CGameSceneNode
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x10]; // 0x0
public:
	// MNetworkDisable
	CTransform m_nodeToWorld; // 0x10	
	// MNetworkDisable
	CEntityInstance* m_pOwner; // 0x30	
	// MNetworkDisable
	CGameSceneNode* m_pParent; // 0x38	
	// MNetworkDisable
	CGameSceneNode* m_pChild; // 0x40	
	// MNetworkDisable
	CGameSceneNode* m_pNextSibling; // 0x48	
private:
	[[maybe_unused]] uint8_t __pad0050[0x28]; // 0x50
public:
	// MNetworkEnable
	// MNetworkSerializer "gameSceneNode"
	// MNetworkChangeCallback "gameSceneNodeHierarchyParentChanged"
	// MNetworkPriority "32"
	// MNetworkVarEmbeddedFieldOffsetDelta "8"
	// -> m_hOwner - 0x80
	// -> m_name - 0x84
	CGameSceneNodeHandle m_hParent; // 0x78	
	// MNetworkEnable
	// MNetworkPriority "32"
	// MNetworkUserGroup "Origin"
	// MNetworkChangeCallback "gameSceneNodeLocalOriginChanged"
	CNetworkOriginCellCoordQuantizedVector m_vecOrigin; // 0x88	
private:
	[[maybe_unused]] uint8_t __pad00b8[0x8]; // 0xb8
public:
	// MNetworkEnable
	// MNetworkPriority "32"
	// MNetworkSerializer "gameSceneNodeStepSimulationAnglesSerializer"
	// MNetworkChangeCallback "gameSceneNodeLocalAnglesChanged"
	QAngle m_angRotation; // 0xc0	
	// MNetworkEnable
	// MNetworkChangeCallback "gameSceneNodeLocalScaleChanged"
	// MNetworkPriority "32"
	float m_flScale; // 0xcc	
	// MNetworkDisable
	Vector m_vecAbsOrigin; // 0xd0	
	// MNetworkDisable
	QAngle m_angAbsRotation; // 0xdc	
	// MNetworkDisable
	float m_flAbsScale; // 0xe8	
	// MNetworkDisable
	int16_t m_nParentAttachmentOrBone; // 0xec	
	// MNetworkDisable
	bool m_bDebugAbsOriginChanges; // 0xee	
	// MNetworkDisable
	bool m_bDormant; // 0xef	
	// MNetworkDisable
	bool m_bForceParentToBeNetworked; // 0xf0	
	struct 
	{
		// MNetworkDisable
		uint8_t m_bDirtyHierarchy: 1; 		
		// MNetworkDisable
		uint8_t m_bDirtyBoneMergeInfo: 1; 		
		// MNetworkDisable
		uint8_t m_bNetworkedPositionChanged: 1; 		
		// MNetworkDisable
		uint8_t m_bNetworkedAnglesChanged: 1; 		
		// MNetworkDisable
		uint8_t m_bNetworkedScaleChanged: 1; 		
		// MNetworkDisable
		uint8_t m_bWillBeCallingPostDataUpdate: 1; 		
		// MNetworkDisable
		uint8_t m_bBoneMergeFlex: 1; 		
		// MNetworkDisable
		uint8_t m_nLatchAbsOrigin: 2; 		
		// MNetworkDisable
		uint8_t m_bDirtyBoneMergeBoneToRoot: 1; 		
		uint16_t __pad0: 14;
	}; // 24 bits
	// MNetworkDisable
	uint8_t m_nHierarchicalDepth; // 0xf3	
	// MNetworkDisable
	uint8_t m_nHierarchyType; // 0xf4	
	// MNetworkDisable
	uint8_t m_nDoNotSetAnimTimeInInvalidatePhysicsCount; // 0xf5	
private:
	[[maybe_unused]] uint8_t __pad00f6[0x2]; // 0xf6
public:
	// MNetworkEnable
	CUtlStringToken m_name; // 0xf8	
private:
	[[maybe_unused]] uint8_t __pad00fc[0x3c]; // 0xfc
public:
	// MNetworkEnable
	// MNetworkChangeCallback "gameSceneNodeHierarchyAttachmentChanged"
	CUtlStringToken m_hierarchyAttachName; // 0x138	
	// MNetworkDisable
	float m_flZOffset; // 0x13c	
	// MNetworkDisable
	float m_flClientLocalScale; // 0x140	
	// MNetworkDisable
	Vector m_vRenderOrigin; // 0x144	
	
	// Datamap fields:
	// void m_bDirtyHierarchy; // -0x1
	// void m_bDirtyBoneMergeInfo; // -0x1
	// void m_bNetworkedPositionChanged; // -0x1
	// void m_bNetworkedAnglesChanged; // -0x1
	// void m_bNetworkedScaleChanged; // -0x1
	// void m_bWillBeCallingPostDataUpdate; // -0x1
	// void m_nLatchAbsOrigin; // -0x1
	// void m_bDirtyBoneMergeBoneToRoot; // -0x1
	// CHandle< CBaseEntity > parentname; // 0x7fffffff
	// bool useLocalOffset; // 0x7fffffff
	// bool useParentRenderBounds; // 0x7fffffff
	// bool positionInLocalSpace; // 0x7fffffff
	// Vector scales; // 0x7fffffff
	// Vector local.scales; // 0x7fffffff
	// float scale; // 0x7fffffff
	// float ModelScale; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seasonal_Summon_TI11_Balloon_Visuals : public CDOTA_Buff
{
public:
	float model_scale_per_stack; // 0x1338	
	bool m_bIsRadiant; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Devastator : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Warhammer : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_The_Leveller : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1338	
	int32_t bonus_armor; // 0x133c	
	int32_t demolish; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_DragonLance : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Flying_Courier : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_VoidwalkerScythe : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1338	
	int32_t attacks; // 0x133c	
	int32_t bonus_damage; // 0x1340	
	float buff_duration; // 0x1344	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1348	
	int32_t m_nCounter; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Mekansm : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_PrimalBeast_Onslaught_Release : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Marci_Guardian_Lifesteal : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Magnus_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_TrollWarlord_Fervor : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slark_EssenceShift_Permanent_Debuff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Disruptor_KineticFieldThinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	float formation_time; // 0x133c	
	bool m_bActive; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Outworld_Devourer_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_SpiritBreaker_GreaterBash : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Spectre_SpectralDaggerPath_ActivityModifierOnly : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Batrider_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_JumpBootsIntrinsic : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SkeletonKing_VampiricAura_Summon_Thinker : public CDOTA_Buff
{
public:
	int32_t m_iCount; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x510
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class FilterHealth : public CBaseFilter
{
public:
	bool m_bAdrenalineActive; // 0x500	
private:
	[[maybe_unused]] uint8_t __pad0501[0x3]; // 0x501
public:
	int32_t m_iHealthMin; // 0x504	
	int32_t m_iHealthMax; // 0x508	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_TI11_Balloon : public CDOTABaseAbility
{
public:
	float charge_use_interval; // 0x578	
	float max_usable_charges; // 0x57c	
	GameTime_t m_flLastChargeUseTime; // 0x580	
	CHandle< CBaseEntity > m_hBalloon; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Treant_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Treant_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Slark_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ancient_Apparition_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Strength_40 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_Reward_MagicResistAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seasonal_Firecrackers : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Spark_Of_Courage : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Grandmasters_Glaive_Bonus_Agi : public CDOTA_Buff
{
public:
	int32_t agi_stance; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Yasha_And_Kaya : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1338	
	int32_t bonus_attack_speed; // 0x133c	
	int32_t movement_speed_percent_bonus; // 0x1340	
	int32_t bonus_intellect; // 0x1344	
	int32_t spell_amp; // 0x1348	
	int32_t mana_regen_multiplier; // 0x134c	
	int32_t spell_lifesteal_amp; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_RingOfRegeneration : public CDOTA_Buff_Item
{
public:
	float bonus_health_regen; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EmberSpirit_FireRemnant_Shard_Debuff : public CDOTA_Buff
{
public:
	int32_t shard_damage_per_second; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Techies_StickyBomb_Countdown : public CDOTA_Buff
{
public:
	Vector m_vLastLoc; // 0x1338	
	CHandle< CBaseEntity > m_hAttachTarget; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Abaddon_Frostmourne_Buff : public CDOTA_Buff
{
public:
	int32_t curse_attack_speed; // 0x1338	
	CHandle< CBaseEntity > m_hTarget; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Medusa_SplitShot : public CDOTA_Buff
{
public:
	int32_t damage_modifier; // 0x1338	
	int32_t range; // 0x133c	
	int32_t arrow_count; // 0x1340	
	int32_t projectile_speed; // 0x1344	
	ParticleIndex_t m_nSplitShotBowFXIndex; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_NightStalker_HunterInTheNight : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1390
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Luna_Eclipse : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
	int32_t radius; // 0x133c	
	int32_t beams; // 0x1340	
	int32_t hit_count; // 0x1344	
	int32_t m_iBeamDamage; // 0x1348	
	float beam_interval; // 0x134c	
	float stun_duration; // 0x1350	
	Vector vPosition; // 0x1354	
	bool bAreaTarget; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1361[0x3]; // 0x1361
public:
	int32_t m_iTickCount; // 0x1364	
	ParticleIndex_t m_nMoonlightFXIndex; // 0x1368	
private:
	[[maybe_unused]] uint8_t __pad136c[0x4]; // 0x136c
public:
	CUtlVector< CHandle< CBaseEntity > > m_HitTargets; // 0x1370	
	float m_flBeamStun; // 0x1388	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Death_Prophet_Attack_Scepter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Courier_TransferItems : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Drow_Ranger_Glacier_Hilltop : public CDOTA_Buff
{
public:
	int32_t multishot_arrow_bonus; // 0x1338	
	int32_t end_height; // 0x133c	
	int32_t attack_range_bonus; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_AssaultCaptain_SunRay : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_Spectre_ActiveDispersion : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nPreviewFX; // 0x578	
	float duration; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cooldown_Reduction_15 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Amplify_25 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Intelligence_75 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_200 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x28
// Has VTable
// Has Trivial Destructor
// 
// MNetworkVarNames "HSequence m_hSequence"
// MNetworkVarNames "float32 m_flPrevCycle"
// MNetworkVarNames "float32 m_flCycle"
class CNetworkedSequenceOperation
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	// MNetworkSerializer "minusone"
	// MNetworkChangeCallback "sequenceOpSequenceChanged"
	// MNetworkPriority "32"
	HSequence m_hSequence; // 0x8	
	// MNetworkEnable
	// MNetworkBitCount "15"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "1,000000"
	// MNetworkEncodeFlags "8"
	// MNetworkPriority "32"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkUserGroup "m_flCycle"
	float m_flPrevCycle; // 0xc	
	// MNetworkEnable
	// MNetworkBitCount "15"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "1,000000"
	// MNetworkEncodeFlags "8"
	// MNetworkPriority "32"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkUserGroup "m_flCycle"
	float m_flCycle; // 0x10	
	// MNetworkEnable
	// MNetworkBitCount "8"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "1,000000"
	// MNetworkEncodeFlags "0"
	CNetworkedQuantizedFloat m_flWeight; // 0x14	
	// MNetworkDisable
	bool m_bSequenceChangeNetworked; // 0x1c	
	// MNetworkDisable
	bool m_bDiscontinuity; // 0x1d	
private:
	[[maybe_unused]] uint8_t __pad001e[0x2]; // 0x1e
public:
	// MNetworkDisable
	float m_flPrevCycleFromDiscontinuity; // 0x20	
	// MNetworkDisable
	float m_flPrevCycleForAnimEventDetection; // 0x24	
	
	// Datamap fields:
	// CUtlString sequenceName; // 0x7fffffff
	// int32_t sequence; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Shadow_Demon : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_NPC_BaseBlocker : public CDOTA_BaseNPC_Additive
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_WarpineRaider_SeedShot_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lamp_On : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seasonal_TI9_Drums_Thinker : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1338[0x10]; // 0x1338
public:
	int32_t m_nNextSoundIndex; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seasonal_Summon_CNY_Balloon_Thinker : public CDOTA_Buff
{
public:
	float speed; // 0x1338	
	int32_t min_distance_before_bounce; // 0x133c	
	float drag; // 0x1340	
	float max_height; // 0x1344	
	float max_vertical_move_time; // 0x1348	
	float bounce_turn_angle; // 0x134c	
	float bounce_turn_angle_tree; // 0x1350	
	float bounce_delay; // 0x1354	
	Vector m_vLastPos; // 0x1358	
	Vector m_vDir; // 0x1364	
	float m_flSpeed; // 0x1370	
	float m_flDistRemaining; // 0x1374	
	float m_flTreeTimeRemaining; // 0x1378	
	CHandle< CBaseEntity > m_hLastHit; // 0x137c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_TrueStrike : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Unique_Morphling_4 : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_WandOfSanctitude_Active_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Occult_Bracelet : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1338	
	int32_t stack_limit; // 0x133c	
	float stack_duration; // 0x1340	
	GameTime_t m_flStackDieTime; // 0x1344	
	int32_t magic_resistance; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Repair_Kit : public CDOTA_Buff
{
public:
	float health_regen; // 0x1338	
	int32_t armor_bonus; // 0x133c	
	int32_t multishot_count; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ArcaneBoots_ManaRegen : public CDOTA_Buff
{
public:
	float value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x630
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_EagleEye : public CDOTA_Item
{
public:
	int32_t m_iTempViewer; // 0x620	
	int32_t m_iTeam; // 0x624	
	int32_t m_nFXIndex; // 0x628	
	CHandle< CBaseEntity > m_hThinker; // 0x62c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_EnergyBooster : public CDOTA_Buff_Item
{
public:
	int32_t bonus_mana; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Muerta_PierceTheVeilTransform : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_QuadrupleTap : public CDOTA_Buff
{
public:
	int32_t counter_duration; // 0x1338	
	int32_t required_hits; // 0x133c	
	int32_t max_duration; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AbyssalUnderlord_AtrophyAura_CreepDmgBuff : public CDOTA_Buff
{
public:
	int32_t bonus_damage_from_creep; // 0x1338	
	float bonus_shared_by_allies_pct; // 0x133c	
	float m_flModifier; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Skywrath_Mage_Concussive_Shot : public CDOTA_Buff
{
public:
	int32_t movement_speed_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Gyrocopter_Rocket_Barrage : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Spectre_Spectral_Dagger_Illusions : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Leshrac_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Plague_Wards_Bonus : public CDOTA_Buff
{
public:
	int32_t ward_hp; // 0x1338	
	int32_t ward_damage; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Venomancer_PlagueWard : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nian_Eruption : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slardar_Bash_Active : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1338	
	float duration; // 0x133c	
	int32_t attack_count; // 0x1340	
	int32_t river_damage; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Puck_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_BlueDragonspawnOverseer_Evasion : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoLandmark : public CPointEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Drow_Ranger_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bounty_Hunter : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Shaman_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Nyx_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Amplify_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_65 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x928
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BossAttackableTrigger : public CBaseTrigger
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Ascension_Invis : public CDOTA_Modifier_PersistentInvisibility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Armor : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Magus_Minimus : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Book_Of_Shadows : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Fusion_runeHealing : public CDOTA_Buff
{
public:
	int32_t health_regen; // 0x1338	
	float m_fHealingDone; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_MantaStyle : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Oracle_FortunesEndChannelTarget : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13b0
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_KeeperOfTheLight_SpiritForm_Illuminate : public CDOTA_Buff
{
public:
	int32_t range; // 0x1338	
	int32_t vision_radius; // 0x133c	
	int32_t radius; // 0x1340	
	int32_t total_damage; // 0x1344	
	float max_channel_time; // 0x1348	
	float speed; // 0x134c	
	float vision_duration; // 0x1350	
	int32_t channel_vision_radius; // 0x1354	
	float channel_vision_interval; // 0x1358	
	float channel_vision_duration; // 0x135c	
	int32_t channel_vision_step; // 0x1360	
	Vector m_vCastLoc; // 0x1364	
	Vector m_vTargetLoc; // 0x1370	
	GameTime_t m_fStartTime; // 0x137c	
	QAngle m_qCastAngle; // 0x1380	
	int32_t m_iProjectile; // 0x138c	
	ParticleIndex_t m_nFXIndex; // 0x1390	
	ParticleIndex_t m_nFXIndexB; // 0x1394	
	Vector m_vNextVisionLocation; // 0x1398	
	Vector m_vCastDirection; // 0x13a4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Brewmaster_Primal_Split_Fire_Phase : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Obsidian_Destroyer_Equilibrium_BonusMana : public CDOTA_Buff
{
public:
	int32_t shard_bonus_mana; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_NightStalker_Void_ZoneThinker : public CDOTA_Buff
{
public:
	int32_t radius_scepter; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Leshrac_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FacelessVoid_TimeDilation_Distortion : public CDOTA_Buff
{
public:
	float slow_distance_min; // 0x1338	
	float slow_distance_max; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Beastmaster_Axe_Invulnerable : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Courier_GoToSideShop : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Enigma_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Morphling_ScepterStatsDrain_Intelligence_Debuff : public CDOTA_Buff
{
public:
	int32_t scepter_stat_steal; // 0x1338	
	int32_t scepter_spell_amplify; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Pudge_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoSpawnGroupLoadUnload : public CLogicalEntity
{
public:
	CEntityIOOutput m_OnSpawnGroupLoadStarted; // 0x4a8	
	CEntityIOOutput m_OnSpawnGroupLoadFinished; // 0x4d0	
	CEntityIOOutput m_OnSpawnGroupUnloadStarted; // 0x4f8	
	CEntityIOOutput m_OnSpawnGroupUnloadFinished; // 0x520	
	CUtlSymbolLarge m_iszSpawnGroupName; // 0x548	
	CUtlSymbolLarge m_iszSpawnGroupFilterName; // 0x550	
	CUtlSymbolLarge m_iszLandmarkName; // 0x558	
	CUtlString m_sFixedSpawnGroupName; // 0x560	
	float m_flTimeoutInterval; // 0x568	
	bool m_bStreamingStarted; // 0x56c	
	bool m_bUnloadingStarted; // 0x56d	
	
	// Datamap fields:
	// void CInfoSpawnGroupLoadUnloadSpawnGroupLoadingThink; // 0x0
	// void CInfoSpawnGroupLoadUnloadSpawnGroupUnloadingThink; // 0x0
	// void InputStartSpawnGroupLoad; // 0x0
	// void InputActivateSpawnGroup; // 0x0
	// void InputStartSpawnGroupUnload; // 0x0
	// CUtlSymbolLarge InputSetSpawnGroup; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Is Abstract
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_TI11_RockPaperScissors_Base : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Timbersaw_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AlphaWolf_CommandAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Overwhelming_Blink : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
	float blink_damage_cooldown; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Silver_Edge : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1338	
	float bonus_mana_regen; // 0x133c	
	int32_t bonus_attack_speed; // 0x1340	
	int32_t bonus_damage; // 0x1344	
	int32_t crit_chance; // 0x1348	
	int32_t crit_multiplier; // 0x134c	
	float backstab_duration; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1354[0x4]; // 0x1354
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Veil_Of_Discord_Thinker : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
	int32_t debuff_radius; // 0x133c	
	float resist_debuff_duration; // 0x1340	
	int32_t m_nHeroesHit; // 0x1344	
	bool m_bHitInvisibleHero; // 0x1348	
	bool m_bFirstPulse; // 0x1349	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Yasha : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1338	
	int32_t bonus_attack_speed; // 0x133c	
	int32_t movement_speed_percent_bonus; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Grimstroke_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Oracle_FalsePromiseTimer : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Legion_Commander_MomentOfCourage_Lifesteal : public CDOTA_Buff
{
public:
	int32_t hp_leech_percent; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slark_ShadowDance : public CDOTA_Modifier_Invisible
{
public:
	CHandle< CBaseEntity > m_hVisibleEntity; // 0x1348	
	ParticleIndex_t m_nFXIndex; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Chen_Martyrdom : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Leshrac_Greater_Lightning_Storm : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	float interval; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TemplarAssassin_RefractionAbsorb : public CDOTA_Buff
{
public:
	int32_t damage_threshold; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DeathProphet_Witchcraft : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lion_Impale : public CDOTABaseAbility
{
public:
	int32_t width; // 0x578	
	float duration; // 0x57c	
	int32_t speed; // 0x580	
	float length_buffer; // 0x584	
	float range; // 0x588	
	int32_t m_iDefaultCastRange; // 0x58c	
	int32_t pierces_immunity; // 0x590	
private:
	[[maybe_unused]] uint8_t __pad0594[0x4]; // 0x594
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_WitchDoctor_VoodooRestoration : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_OgreMagi_FrostArmor : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x638
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_EchoSlamPotion : public CDOTA_Item
{
public:
	int32_t echo_slam_damage_range; // 0x620	
	int32_t echo_slam_echo_search_range; // 0x624	
	int32_t echo_slam_echo_range; // 0x628	
	int32_t echo_slam_echo_damage; // 0x62c	
	int32_t echo_slam_initial_damage; // 0x630	
	float spend_charge_delay; // 0x634	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Ascension_Bulwark : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Sand_King_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_250 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_12 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x378
// Has VTable
// 
// MNetworkVarNames "HSequence m_hSequence"
// MNetworkVarNames "GameTime_t m_flSeqStartTime"
// MNetworkVarNames "float m_flSeqFixedCycle"
// MNetworkVarNames "AnimLoopMode_t m_nAnimLoopMode"
class CBaseAnimGraphController : public CSkeletonAnimationController
{
private:
	[[maybe_unused]] uint8_t __pad0010[0x8]; // 0x10
public:
	// MNetworkDisable
	bool m_bSequenceFinished; // 0x18	
private:
	[[maybe_unused]] uint8_t __pad0019[0x3]; // 0x19
public:
	// MNetworkDisable
	float m_flSoundSyncTime; // 0x1c	
	// MNetworkDisable
	uint32_t m_nActiveIKChainMask; // 0x20	
	// MNetworkEnable
	// MNetworkSerializer "minusone"
	// MNetworkChangeCallback "OnNetworkedSequenceChanged"
	// MNetworkPriority "32"
	HSequence m_hSequence; // 0x24	
	// MNetworkEnable
	// MNetworkChangeCallback "OnNetworkedAnimationChanged"
	// MNetworkPriority "32"
	GameTime_t m_flSeqStartTime; // 0x28	
	// MNetworkEnable
	// MNetworkChangeCallback "OnNetworkedAnimationChanged"
	// MNetworkPriority "32"
	float m_flSeqFixedCycle; // 0x2c	
	// MNetworkEnable
	// MNetworkChangeCallback "OnNetworkedAnimationChanged"
	// MNetworkPriority "32"
	AnimLoopMode_t m_nAnimLoopMode; // 0x30	
	// MNetworkEnable
	// MNetworkBitCount "10"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "5,000000"
	// MNetworkEncodeFlags "8"
	// MNetworkPriority "32"
	// MNetworkChangeCallback "OnNetworkedAnimationChanged"
	CNetworkedQuantizedFloat m_flPlaybackRate; // 0x34	
private:
	[[maybe_unused]] uint8_t __pad003c[0x4]; // 0x3c
public:
	// MNetworkDisable
	SequenceFinishNotifyState_t m_nNotifyState; // 0x40	
private:
	[[maybe_unused]] uint8_t __pad0041[0x1]; // 0x41
public:
	// MNetworkDisable
	bool m_bNetworkedAnimationInputsChanged; // 0x42	
	// MNetworkDisable
	bool m_bNetworkedSequenceChanged; // 0x43	
	// MNetworkDisable
	bool m_bLastUpdateSkipped; // 0x44	
private:
	[[maybe_unused]] uint8_t __pad0045[0x3]; // 0x45
public:
	// MNetworkDisable
	GameTime_t m_flPrevAnimUpdateTime; // 0x48	
	
	// Datamap fields:
	// void m_pAnimGraphInstance; // 0x2e8
	// float m_flCachedSequenceCycleRate; // 0x3c
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x50
// Has VTable
// Construct disallowed
// MNetworkAssumeNotNetworkable
class CBodyComponent : public CEntityComponent
{
public:
	// MNetworkDisable
	CGameSceneNode* m_pSceneNode; // 0x8	
private:
	[[maybe_unused]] uint8_t __pad0010[0x10]; // 0x10
public:
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	CNetworkVarChainer __m_pChainEntity; // 0x20	
	
	// Static fields:
	static EntComponentInfo_t &Get_s_EntComponentInfo(){return *reinterpret_cast<EntComponentInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponent")->GetStaticFields()[0]->m_pInstance);};
	static int32_t &Get_entity_component_error_class_decl_says_contained_but_impl_is_referenced(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponent")->GetStaticFields()[1]->m_pInstance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8e0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_noGhostCollision"
class CBreakableProp : public CBaseProp
{
private:
	[[maybe_unused]] uint8_t __pad07a8[0x10]; // 0x7a8
public:
	CEntityIOOutput m_OnBreak; // 0x7b8	
	CEntityOutputTemplate< float32 > m_OnHealthChanged; // 0x7e0	
	CEntityIOOutput m_OnTakeDamage; // 0x808	
	float m_impactEnergyScale; // 0x830	
	int32_t m_iMinHealthDmg; // 0x834	
	QAngle m_preferredCarryAngles; // 0x838	
	float m_flPressureDelay; // 0x844	
	CHandle< CBaseEntity > m_hBreaker; // 0x848	
	PerformanceMode_t m_PerformanceMode; // 0x84c	
	float m_flDmgModBullet; // 0x850	
	float m_flDmgModClub; // 0x854	
	float m_flDmgModExplosive; // 0x858	
	float m_flDmgModFire; // 0x85c	
	CUtlSymbolLarge m_iszPhysicsDamageTableName; // 0x860	
	CUtlSymbolLarge m_iszBasePropData; // 0x868	
	int32_t m_iInteractions; // 0x870	
	GameTime_t m_flPreventDamageBeforeTime; // 0x874	
	bool m_bHasBreakPiecesOrCommands; // 0x878	
private:
	[[maybe_unused]] uint8_t __pad0879[0x3]; // 0x879
public:
	float m_explodeDamage; // 0x87c	
	float m_explodeRadius; // 0x880	
private:
	[[maybe_unused]] uint8_t __pad0884[0x4]; // 0x884
public:
	float m_explosionDelay; // 0x888	
private:
	[[maybe_unused]] uint8_t __pad088c[0x4]; // 0x88c
public:
	CUtlSymbolLarge m_explosionBuildupSound; // 0x890	
	CUtlSymbolLarge m_explosionCustomEffect; // 0x898	
	CUtlSymbolLarge m_explosionCustomSound; // 0x8a0	
	CUtlSymbolLarge m_explosionModifier; // 0x8a8	
	CHandle< CBasePlayerPawn > m_hPhysicsAttacker; // 0x8b0	
	GameTime_t m_flLastPhysicsInfluenceTime; // 0x8b4	
	bool m_bOriginalBlockLOS; // 0x8b8	
private:
	[[maybe_unused]] uint8_t __pad08b9[0x3]; // 0x8b9
public:
	float m_flDefaultFadeScale; // 0x8bc	
	CHandle< CBaseEntity > m_hLastAttacker; // 0x8c0	
	CHandle< CBaseEntity > m_hFlareEnt; // 0x8c4	
	bool m_bUsePuntSound; // 0x8c8	
private:
	[[maybe_unused]] uint8_t __pad08c9[0x7]; // 0x8c9
public:
	CUtlSymbolLarge m_iszPuntSound; // 0x8d0	
	// MNetworkEnable
	bool m_noGhostCollision; // 0x8d8	
	
	// Datamap fields:
	// void InputBreak; // 0x0
	// int32_t InputSetHealth; // 0x0
	// int32_t InputAddHealth; // 0x0
	// int32_t InputRemoveHealth; // 0x0
	// bool InputSetNavIgnore; // 0x0
	// void InputEnablePuntSound; // 0x0
	// void InputDisablePuntSound; // 0x0
	// void CBreakablePropBreakThink; // 0x0
	// void CBreakablePropRampToDefaultFadeScale; // 0x0
	// uint32_t m_nExplosionType; // 0x884
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mutation_PocketRoshan_Team : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Cloak_Of_Flames : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Apex : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Spy_Gadget : public CDOTA_Buff
{
public:
	int32_t attack_range; // 0x1338	
	int32_t cast_range; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Yasha_And_Kaya : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_HeavensHalberd : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Necronomicon_Mana_Aura : public CDOTA_Buff
{
public:
	float aura_mana_regen; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Snapfire_Scatterblast : public CDOTABaseAbility
{
public:
	int32_t damage; // 0x578	
	float debuff_duration; // 0x57c	
	int32_t point_blank_range; // 0x580	
	float point_blank_dmg_bonus_pct; // 0x584	
	int32_t blast_width_end; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ArcWarden_MagneticField_Thinker_Evasion : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1338[0x8]; // 0x1338
public:
	int32_t radius; // 0x1340	
	Vector m_vPos; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Phoenix_Sun_Debuff : public CDOTA_Buff
{
public:
	int32_t damage_per_sec; // 0x1338	
	float tick_interval; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Underlord_Fear : public CDOTA_Buff
{
public:
	Vector m_vOriginal; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EarthSpirit_Boulder_Smash_Debuff : public CDOTA_Buff
{
public:
	int32_t move_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Magnus_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1398
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FacelessVoid_TimeLock : public CDOTA_Buff
{
public:
	float duration; // 0x1338	
	float duration_creep; // 0x133c	
	float delay; // 0x1340	
	int32_t chance_pct; // 0x1344	
	int32_t bonus_damage; // 0x1348	
	GameTime_t last_attack_time; // 0x134c	
	CUtlVector< int16 > m_ProcAttackRecords; // 0x1350	
	GameTime_t apply_activity_modifier_until; // 0x1368	
	GameTime_t disable_activity_modifier_until; // 0x136c	
	CUtlOrderedMap< CHandle< CDOTA_BaseNPC >, int32 > m_mapTargets; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Venomancer_PoisonStingWard : public CDOTA_Buff
{
public:
	int32_t m_iDamage; // 0x1338	
	int32_t movement_speed; // 0x133c	
	int32_t hp_regen_reduction; // 0x1340	
	int32_t m_nTicksRemaining; // 0x1344	
	float m_flAttackDamage; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tiny_TossTree : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Morphling_Replicate_Manager : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Morphling_Adaptive_Strike_Armor : public CDOTA_Buff
{
public:
	int32_t armor_reduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_PhantomLancer_PhantomEdge : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Mirana_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ursa_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_40 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Ravage_Potion : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
	float m_flStartZ; // 0x133c	
	float m_flCurTime; // 0x1340	
	bool m_bDamageApplied; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Gossamer_Cape : public CDOTA_Buff_Item
{
public:
	float movement_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Swift_Blink : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Oakheart : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_SentryWard : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_HelmOfIronWill : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1338	
	float bonus_regen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tusk_Snowball_Movement : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nyx_Assassin_Unburrow : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Rubick_Arcane_Supremacy : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rubick_Telekinesis : public CDOTA_Buff
{
public:
	GameTime_t m_fStartTime; // 0x1338	
	GameTime_t m_fEndTime; // 0x133c	
	float m_fTargetHeight; // 0x1340	
	float m_fCurHeight; // 0x1344	
	Vector m_vStartLoc; // 0x1348	
	Vector m_vCurLoc; // 0x1354	
	int32_t max_land_distance; // 0x1360	
	float fall_duration; // 0x1364	
	bool m_bOverrideDuration; // 0x1368	
private:
	[[maybe_unused]] uint8_t __pad1369[0x3]; // 0x1369
public:
	float m_flOverrideDuration; // 0x136c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Treant_EyesInTheForest : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > vTrees; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Shadow_Demon_Soul_Catcher : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Obsidian_Destroyer_Sanity_Eclipse_Counter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DoomBringer_ScorchedEarthEffect : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Clinkz_BurningBarrage_DamageReduction : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Axe_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_CrystalMaiden_Frostbite : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_BigThunderLizard_Wardrums : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Wraith_King_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_100 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8
// Has Trivial Constructor
// Has Trivial Destructor
struct CEnvWindShared__WindAveEvent_t
{
public:
	float m_flStartWindSpeed; // 0x0	
	float m_flAveWindSpeed; // 0x4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_PrimalBeast : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Undying : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Lycan : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1798
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Creep_Talking : public CDOTA_BaseNPC_Creep
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Greevil_Miniboss_Sight : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MagicImmune : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Twin_Gate_Warp_Channel : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nfxTargetTp; // 0x1338	
	ParticleIndex_t m_nfxTargetTp2; // 0x133c	
	ParticleIndex_t m_nfxAmbientFx; // 0x1340	
	ParticleIndex_t m_nfxPortal1; // 0x1344	
	ParticleIndex_t m_nfxPortal2; // 0x1348	
	CHandle< CBaseEntity > m_hPortal; // 0x134c	
	CHandle< CBaseEntity > m_hOtherPortal; // 0x1350	
	Vector m_vStartPosition; // 0x1354	
	float m_flTotalTime; // 0x1360	
	float m_flElapsedTimePortion; // 0x1364	
	float animation_rate; // 0x1368	
	int32_t stop_distance; // 0x136c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9f0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_bUseHitboxesForRenderBox"
// MNetworkVarNames "bool m_bUseAnimGraph"
class CDynamicProp : public CBreakableProp
{
public:
	bool m_bRandomAnimator; // 0x8e0	
private:
	[[maybe_unused]] uint8_t __pad08e1[0x3]; // 0x8e1
public:
	GameTime_t m_flNextRandAnim; // 0x8e4	
	float m_flMinRandAnimDuration; // 0x8e8	
	float m_flMaxRandAnimDuration; // 0x8ec	
private:
	[[maybe_unused]] uint8_t __pad08f0[0x8]; // 0x8f0
public:
	bool m_bCreateNavObstacle; // 0x8f8	
	// MNetworkEnable
	bool m_bUseHitboxesForRenderBox; // 0x8f9	
	// MNetworkEnable
	bool m_bUseAnimGraph; // 0x8fa	
private:
	[[maybe_unused]] uint8_t __pad08fb[0x5]; // 0x8fb
public:
	CEntityIOOutput m_pOutputAnimBegun; // 0x900	
	CEntityIOOutput m_pOutputAnimOver; // 0x928	
	CEntityIOOutput m_pOutputAnimLoopCycleOver; // 0x950	
	CEntityIOOutput m_OnAnimReachedStart; // 0x978	
	CEntityIOOutput m_OnAnimReachedEnd; // 0x9a0	
	CUtlSymbolLarge m_iszIdleAnim; // 0x9c8	
	AnimLoopMode_t m_nIdleAnimLoopMode; // 0x9d0	
	bool m_bRandomizeCycle; // 0x9d4	
	bool m_bStartDisabled; // 0x9d5	
	bool m_bFiredStartEndOutput; // 0x9d6	
	bool m_bForceNpcExclude; // 0x9d7	
	bool m_bCreateNonSolid; // 0x9d8	
	bool m_bIsOverrideProp; // 0x9d9	
private:
	[[maybe_unused]] uint8_t __pad09da[0x2]; // 0x9da
public:
	int32_t m_iInitialGlowState; // 0x9dc	
	int32_t m_nGlowRange; // 0x9e0	
	int32_t m_nGlowRangeMin; // 0x9e4	
	Color m_glowColor; // 0x9e8	
	int32_t m_nGlowTeam; // 0x9ec	
	
	// Datamap fields:
	// CUtlSymbolLarge StartingAnim; // 0x7fffffff
	// CUtlSymbolLarge StartingAnimationLoopMode; // 0x7fffffff
	// CUtlSymbolLarge InputSetAnimationLooping; // 0x0
	// CUtlSymbolLarge InputSetAnimationNoResetLooping; // 0x0
	// CUtlSymbolLarge InputSetIdleAnimationLooping; // 0x0
	// CUtlSymbolLarge InputSetAnimationNotLooping; // 0x0
	// CUtlSymbolLarge InputSetAnimationNoResetNotLooping; // 0x0
	// CUtlSymbolLarge InputSetIdleAnimationNotLooping; // 0x0
	// CUtlSymbolLarge InputSetAnimation; // 0x0
	// CUtlSymbolLarge InputSetAnimationNoReset; // 0x0
	// CUtlSymbolLarge InputSetIdleAnimation; // 0x0
	// CUtlSymbolLarge InputSetIdleAnimationLooping; // 0x0
	// CUtlSymbolLarge InputSetIdleAnimationNotLooping; // 0x0
	// void InputTurnOn; // 0x0
	// void InputTurnOff; // 0x0
	// void InputTurnOn; // 0x0
	// void InputTurnOff; // 0x0
	// void InputEnableCollision; // 0x0
	// void InputDisableCollision; // 0x0
	// float InputSetPlaybackRate; // 0x0
	// void InputStartGlowing; // 0x0
	// void InputStopGlowing; // 0x0
	// Vector InputSetGlowOverride; // 0x0
	// int32_t InputSetGlowRange; // 0x0
	// void CDynamicPropAnimThink; // 0x0
	// int32_t health; // 0x7fffffff
	// bool HoldAnimation; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_MP : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_MaskOfDispair : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Assault_Cuirass_Positive_Aura : public CDOTA_Buff_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Abaddon_BorrowedTime_Passive : public CDOTA_Buff
{
public:
	int32_t hp_threshold; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Medusa_Cold_Blooded : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Life_Stealer_Assimilate_Effect : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1398
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DeathProphet_Exorcism : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t spirit_speed; // 0x133c	
	int32_t max_distance; // 0x1340	
	int32_t give_up_distance; // 0x1344	
	int32_t min_damage; // 0x1348	
	int32_t max_damage; // 0x134c	
	int32_t heal_percent; // 0x1350	
	int32_t spirit_duration; // 0x1354	
	float ghost_spawn_rate; // 0x1358	
	int32_t movement_bonus; // 0x135c	
	int32_t m_iSpirits; // 0x1360	
	GameTime_t m_fStartTime; // 0x1364	
	GameTime_t m_fLastThinkTime; // 0x1368	
	GameTime_t m_fSpawnTime; // 0x136c	
	bool m_bFirstSpawn; // 0x1370	
	bool m_bCommentedOnExpired; // 0x1371	
	bool m_bForceExpired; // 0x1372	
private:
	[[maybe_unused]] uint8_t __pad1373[0x5]; // 0x1373
public:
	CUtlVector< sSpiritInfo* > m_vecSpirits; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nian_Roar : public CDOTABaseAbility
{
public:
	int32_t base_projectiles; // 0x578	
	int32_t max_projectiles; // 0x57c	
	int32_t projectile_step; // 0x580	
	int32_t base_speed; // 0x584	
	int32_t speed_step; // 0x588	
	int32_t initial_radius; // 0x58c	
	int32_t end_radius; // 0x590	
	int32_t damage; // 0x594	
	float base_interval; // 0x598	
	float interval_step; // 0x59c	
	int32_t m_nCastCount; // 0x5a0	
	int32_t m_nProjectiles; // 0x5a4	
	int32_t m_nWaveCount; // 0x5a8	
private:
	[[maybe_unused]] uint8_t __pad05ac[0x4]; // 0x5ac
public:
	CountdownTimer m_ctTimer; // 0x5b0	
	float m_flTiming; // 0x5c8	
	bool m_bScriptRoar; // 0x5cc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Sniper_Assassinate_Trigger : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_CrystalMaiden_Let_It_Go_Thinker : public CDOTA_Buff
{
public:
	Vector m_vPathStart; // 0x1338	
	Vector m_vPathEnd; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SkeletonKing_VampiricAura : public CDOTA_Buff
{
public:
	int32_t vampiric_aura; // 0x1338	
	int32_t creep_lifesteal_reduction_pct; // 0x133c	
	float skeleton_duration; // 0x1340	
	int32_t max_skeleton_charges; // 0x1344	
	int32_t m_iKillCounter; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_BackdoorProtectionInBase : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_BlueDragonspawnOverseer_DevotionAura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has VTable
// Has Trivial Destructor
class CPhysicsShake
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	Vector m_force; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lesser_NightCrawler_Pounce : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Doom_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Naga_Siren_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tidehunter_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Windranger_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Windranger_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_Regen_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
// Has VTable
// Has Trivial Destructor
// MNetworkNoBase
// 
// MNetworkVarNames "uint16 nAssassinState"
// MNetworkVarNames "uint16 nVictimHeroID"
class DOTA_AssassinMinigameNetworkState
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	uint16_t nAssassinState; // 0x8	
	// MNetworkEnable
	uint16_t nVictimHeroID; // 0xa	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Lich : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_CrystalMaiden : public CDOTA_BaseNPC_Hero
{
public:
	int32_t m_iParticleMouthIndex; // 0x1d98	
	int32_t m_iParticleHandRIndex; // 0x1d9c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mutation_StationaryDamageReduction_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Magus_Minimus : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_MeteorHammer_Burn : public CDOTA_Buff
{
public:
	int32_t burn_dps_buildings; // 0x1338	
	int32_t burn_dps_units; // 0x133c	
	float burn_interval; // 0x1340	
	int32_t burn_slow; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_ShadowAmulet : public CDOTA_Item
{
public:
	GameTime_t m_flLastTimeCast; // 0x620	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Necronomicon_Warrior_LastWill : public CDOTA_Buff
{
public:
	int32_t explosion; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Vladmir : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Cyclone : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Battlefury : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Butterfly : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_DivineRapier : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Marci_Unleash_Silence : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Pangolier_HeartPiercer : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Oracle_RainOfDestiny : public CDOTA_Buff
{
public:
	int32_t heal_amp; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Abaddon_BorrowedTime_ImmolationDamage : public CDOTA_Buff
{
public:
	float immolate_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Shredder_Chakram_Thinker : public CDOTA_Buff
{
public:
	int32_t damage_per_second; // 0x1338	
	float mana_per_second; // 0x133c	
	float radius; // 0x1340	
	float break_distance; // 0x1344	
	float damage_interval; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ogre_Magi_DumbLuck : public CDOTA_Buff
{
public:
	float mana_per_str; // 0x1338	
	float mana_regen_per_str; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lycan_SummonWolves_BonusDamage : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Weaver_Swarm_Debuff : public CDOTA_Buff
{
public:
	float armor_reduction; // 0x1338	
	int32_t damage; // 0x133c	
	float m_flCurrentArmorReduction; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BountyHunter_Jinada : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t gold_steal; // 0x133c	
	ParticleIndex_t m_nFXIndexA; // 0x1340	
	ParticleIndex_t m_nFXIndexB; // 0x1344	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Broodmother_SpawnSpiderlings : public CDOTA_Buff
{
public:
	float spiderling_duration; // 0x1338	
	int32_t count; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Leshrac_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_QueenOfPain_SonicWave_Damage : public CDOTA_Buff
{
public:
	float m_flDamagePerTick; // 0x1338	
	int32_t m_nCurrentTick; // 0x133c	
	int32_t m_nTotalTicks; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Slardar : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_WitchDoctor_Voodoo_Switcheroo : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BackdoorProtection : public CDOTA_Buff
{
public:
	bool m_bActivated; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	float m_flHealthToRestore; // 0x133c	
	int32_t radius; // 0x1340	
	float activation_time; // 0x1344	
	int32_t regen_rate; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad134c[0x4]; // 0x134c
public:
	CountdownTimer m_TimerToActivate; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 16
// Size: 0x500
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPathKeyFrame : public CLogicalEntity
{
public:
	Vector m_Origin; // 0x4a8	
	QAngle m_Angles; // 0x4b4	
	Quaternion m_qAngle; // 0x4c0	
	CUtlSymbolLarge m_iNextKey; // 0x4d0	
	float m_flNextTime; // 0x4d8	
private:
	[[maybe_unused]] uint8_t __pad04dc[0x4]; // 0x4dc
public:
	CPathKeyFrame* m_pNextKey; // 0x4e0	
	CPathKeyFrame* m_pPrevKey; // 0x4e8	
	float m_flMoveSpeed; // 0x4f0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4f8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "TrackedStatNetworkData_t m_vecTrackedStats"
class CBaseTrackedStatsEntity : public CBaseEntity
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnTrackedStatsChanged"
	CUtlVectorEmbeddedNetworkVar< TrackedStatNetworkData_t > m_vecTrackedStats; // 0x4a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Treant_13 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Omniknight_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Weaver_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_Regen_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Cleave : public CDOTA_Buff
{
public:
	float value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Gold_Income : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_LightRobes : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Havoc_Hammer : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Nether_Shawl : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// Is Abstract
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Stacking_Base : public CDOTA_Buff
{
public:
	int32_t max_stacks; // 0x1338	
	bool destroy_on_zero_stacks; // 0x133c	
private:
	[[maybe_unused]] uint8_t __pad133d[0x3]; // 0x133d
public:
	float sub_modifier_forced_duration; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlString m_szSubModifierName; // 0x1348	
	KeyValues* m_pSubModifierKV; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Terrorblade_Arcana_Kill_Effect : public CDOTA_Buff
{
public:
	bool m_bFrozen; // 0x1338	
	bool m_bFlail; // 0x1339	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// Is Abstract
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_LegacyChargeCounter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Brewmaster_PermanentImmolation : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rattletrap_Cog_Self_Bonuses : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Roshan_Slam : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoCourierSpawnRadiant3 : public CPointEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lich_FrostArmor : public CDOTA_Buff
{
public:
	int32_t armor_bonus; // 0x1338	
	int32_t health_regen; // 0x133c	
	float slow_duration; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SkeletonKing_MortalStrike : public CDOTA_Buff
{
public:
	int32_t crit_mult; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVector< int16 > m_vCritRecords; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AntiMage_Mana_Overload : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_HP_Regen : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x950
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_HeroTrigger : public CTriggerMultiple
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CEnvTilt : public CPointEntity
{
public:
	float m_Duration; // 0x4a8	
	float m_Radius; // 0x4ac	
	float m_TiltTime; // 0x4b0	
	GameTime_t m_stopTime; // 0x4b4	
	
	// Datamap fields:
	// void InputStartTilt; // 0x0
	// void InputStopTilt; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Venomancer : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Armor_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_Regen_Amp_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_NPC_BroodmotherStickyWeb : public CDOTA_BaseNPC_Additive
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x958
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_ShopTrigger : public CBaseTrigger
{
public:
	int32_t m_ShopType; // 0x928	
private:
	[[maybe_unused]] uint8_t __pad092c[0x4]; // 0x92c
public:
	CEntityIOOutput m_OnTrigger; // 0x930	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_PlayerTransform : public CDOTA_Buff
{
public:
	itemid_t m_nCourierItemId; // 0x1338	
	CUtlString m_ModelNameOfDisguise; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1348[0x8]; // 0x1348
public:
	int32_t m_nMoveSpeed; // 0x1350	
	int32_t m_nDisguisedSpeed; // 0x1354	
	ParticleIndex_t m_nDisguiseEffectIndex; // 0x1358	
	CHandle< CBaseEntity > m_hCourier; // 0x135c	
	bool m_bIsFlyingCourier; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1361[0x7]; // 0x1361
public:
	char* s_pszDonkeyDisguise; // 0x1368	
	float invul_duration; // 0x1370	
	bool m_bParticlesSpawned; // 0x1374	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seasonal_Summon_Snowman_Thinker : public CDOTA_Buff
{
public:
	float grace_period; // 0x1338	
	int32_t search_distance; // 0x133c	
	float think_interval; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Gold : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Grandmasters_Glaive_Bonus_Int : public CDOTA_Buff
{
public:
	int32_t int_stance; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Ex_Machina : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Blood_Grenade : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Dagon : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mars_Bulwark_Active : public CDOTA_Buff
{
public:
	int32_t redirect_chance; // 0x1338	
	int32_t redirect_range; // 0x133c	
	float forward_angle; // 0x1340	
	float side_angle; // 0x1344	
	int32_t redirect_speed_penatly; // 0x1348	
	int32_t redirect_close_range; // 0x134c	
	int32_t attack_redirection_grace_distance; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Fountain_Fury_Swipes_Damage_Increase : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lich_FrostShield_Slow : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Earthshaker_Echoslam_Heating_Up : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DrowRanger_FrostArrows_Shard_Slow : public CDOTA_Buff
{
public:
	int32_t shard_burst_move_slow_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_MudGolem_HurlBoulder : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x760
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CItemGenericTriggerHelper : public CBaseModelEntity
{
public:
	CHandle< CItemGeneric > m_hParentItem; // 0x758	
	
	// Datamap fields:
	// void CItemGenericTriggerHelperItemGenericTriggerHelperTouch; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5c0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLogicBranchList : public CLogicalEntity
{
public:
	CUtlSymbolLarge m_nLogicBranchNames[16]; // 0x4a8	
	CUtlVector< CHandle< CBaseEntity > > m_LogicBranchList; // 0x528	
	CLogicBranchList::LogicBranchListenerLastState_t m_eLastState; // 0x540	
private:
	[[maybe_unused]] uint8_t __pad0544[0x4]; // 0x544
public:
	CEntityIOOutput m_OnAllTrue; // 0x548	
	CEntityIOOutput m_OnAllFalse; // 0x570	
	CEntityIOOutput m_OnMixed; // 0x598	
	
	// Datamap fields:
	// void InputTest; // 0x0
	// void Input_OnLogicBranchChanged; // 0x0
	// void Input_OnLogicBranchRemoved; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Wraith_King_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x78
// Has VTable
// Has Trivial Destructor
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "Vector localSound"
// MNetworkVarNames "int32 soundscapeIndex"
// MNetworkVarNames "uint8 localBits"
// MNetworkVarNames "int soundscapeEntityListIndex"
// MNetworkVarNames "uint32 soundEventHash"
struct audioparams_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	// MNetworkEncoder "coord"
	Vector localSound[8]; // 0x8	
	// MNetworkEnable
	int32_t soundscapeIndex; // 0x68	
	// MNetworkEnable
	uint8_t localBits; // 0x6c	
private:
	[[maybe_unused]] uint8_t __pad006d[0x3]; // 0x6d
public:
	// MNetworkEnable
	int32_t soundscapeEntityListIndex; // 0x70	
	// MNetworkEnable
	uint32_t soundEventHash; // 0x74	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x528
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_NPCSpawner : public CPointEntity
{
public:
	CUtlSymbolLarge m_szNPCScriptName; // 0x4a8	
	CUtlSymbolLarge m_szNPCName; // 0x4b0	
	CUtlSymbolLarge m_szNPCFirstWaypoint; // 0x4b8	
	CountdownTimer m_SpawnTimer; // 0x4c0	
	CountdownTimer m_IntervalTimer; // 0x4d8	
	int32_t m_iTeam; // 0x4f0	
	int32_t m_iUpgradeMelee; // 0x4f4	
	int32_t m_iUpgradeRange; // 0x4f8	
	int32_t m_iMeleeCount; // 0x4fc	
	int32_t m_iSiegeCount; // 0x500	
	int32_t m_iRangeCount; // 0x504	
	int32_t m_iWaves; // 0x508	
	bool m_bFirstWave; // 0x50c	
	bool m_bShouldSpawnStrongCreep; // 0x50d	
private:
	[[maybe_unused]] uint8_t __pad050e[0x2]; // 0x50e
public:
	CUtlVector< CHandle< CDOTA_BaseNPC > > m_Units; // 0x510	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_Pugna_Grandmaster_NetherWard : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	float mana_multiplier; // 0x133c	
	float mana_drained_per_attack; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Vambrace : public CDOTA_Buff_Item
{
public:
	int32_t bonus_primary_stat; // 0x1338	
	int32_t bonus_secondary_stat; // 0x133c	
	int32_t bonus_magic_resistance; // 0x1340	
	int32_t bonus_spell_amp; // 0x1344	
	int32_t bonus_attack_speed; // 0x1348	
	int32_t m_iStat; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Ward_Maker : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Ring_Of_Basilius : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Snapfire_MortimerKisses : public CDOTABaseAbility
{
public:
	int32_t m_nDamagePerProjectile; // 0x578	
	int32_t damage_per_impact; // 0x57c	
	int32_t impact_radius; // 0x580	
	int32_t projectile_vision; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_Bounce : public CDOTA_Buff
{
public:
	float jump_damage_cooldown; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rubick_Arcane_Supremacy : public CDOTA_Buff
{
public:
	int32_t cast_range; // 0x1338	
	int32_t spell_amp; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lycan_Wolf_Uncontrollable : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Omniknight_Repel : public CDOTA_Buff
{
public:
	int32_t status_resistance; // 0x1338	
	float hp_regen; // 0x133c	
	int32_t bonus_str; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DeathProphet_CarrionSwarm : public CDOTABaseAbility
{
public:
	int32_t start_radius; // 0x578	
	int32_t end_radius; // 0x57c	
	GameTime_t m_fStartTime; // 0x580	
	float m_fTotalTime; // 0x584	
	int32_t m_nProjectileHandle; // 0x588	
	ParticleIndex_t m_nFXIndex; // 0x58c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lich_Ice_Spire_Debuff : public CDOTA_Buff
{
public:
	int32_t bonus_movespeed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_SkeletonKing_MortalStrike : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_HarpyScout_TakeOff : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_EnragedWildkin_Tornado : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTornado; // 0x578	
	CHandle< CBaseEntity > m_hNeutralTarget; // 0x57c	
	ParticleIndex_t m_nFXIndex; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x758
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CModelPointEntity : public CBaseModelEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4e8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CMultiLightProxy : public CLogicalEntity
{
public:
	CUtlSymbolLarge m_iszLightNameFilter; // 0x4a8	
	CUtlSymbolLarge m_iszLightClassFilter; // 0x4b0	
	float m_flLightRadiusFilter; // 0x4b8	
	float m_flBrightnessDelta; // 0x4bc	
	bool m_bPerformScreenFade; // 0x4c0	
private:
	[[maybe_unused]] uint8_t __pad04c1[0x3]; // 0x4c1
public:
	float m_flTargetBrightnessMultiplier; // 0x4c4	
	float m_flCurrentBrightnessMultiplier; // 0x4c8	
private:
	[[maybe_unused]] uint8_t __pad04cc[0x4]; // 0x4cc
public:
	CUtlVector< CHandle< CLightEntity > > m_vecLights; // 0x4d0	
	
	// Datamap fields:
	// float InputFlickerLights; // 0x0
	// float InputDisableLights; // 0x0
	// float InputSetLightsBrightnessMultiplier; // 0x0
	// float InputSetBrightnessDelta; // 0x0
	// void CMultiLightProxyRestoreFlashlightThink; // 0x0
	// void CMultiLightProxyApproachBrightnessThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x198
// Has VTable
class CDOTABehaviorMoveToNPCToAttack
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
private:
	[[maybe_unused]] uint8_t __pad0148[0x8]; // 0x148
public:
	bool m_bMovingToLastKnownTargetPosition; // 0x150	
private:
	[[maybe_unused]] uint8_t __pad0151[0x7]; // 0x151
public:
	CountdownTimer m_AttackDelay; // 0x158	
	CountdownTimer m_ChaseLimit; // 0x170	
	bool m_bInAttackPosition; // 0x188	
	bool m_bTurningToTarget; // 0x189	
private:
	[[maybe_unused]] uint8_t __pad018a[0x2]; // 0x18a
public:
	float m_flTargetAngle; // 0x18c	
	bool m_bAttackMove; // 0x190	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x500
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "DOTATeam_t m_nTeam"
class CTeamTrackedStatsEntity : public CBaseTrackedStatsEntity
{
public:
	// MNetworkEnable
	DOTATeam_t m_nTeam; // 0x4f8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Aghsfort_Wildwing_Tornado_Blast : public CDOTABaseAbility
{
public:
	float disable_duration; // 0x578	
	float damage; // 0x57c	
	ParticleIndex_t m_nPreviewFX; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Throw_Snowball : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Shaman_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Luna_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Monkey_King_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Exp_Boost_40 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Strength_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Speed_250 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mutation_Treecutter : public CDOTA_Buff
{
public:
	int32_t m_iRadius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Witches_Switch : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Snapfire_LilShredder_Debuff : public CDOTA_Buff
{
public:
	float armor_reduction_per_attack; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ArcWarden_MagneticField_AttackRange : public CDOTA_Buff
{
public:
	int32_t attack_range_bonus; // 0x1338	
	int32_t attack_magic_damage; // 0x133c	
	int32_t attack_damage_bonus; // 0x1340	
	int32_t radius; // 0x1344	
	int32_t shard_magic_resist; // 0x1348	
	int32_t shard_slow_pct; // 0x134c	
	float aura_origin_x; // 0x1350	
	float aura_origin_y; // 0x1354	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Visage_Stone_Form_Self_Cast : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Chaos_Knight_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_NightStalker_HunterInTheNight : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed_pct_night; // 0x1338	
	int32_t bonus_attack_speed_night; // 0x133c	
	int32_t bonus_status_resist_night; // 0x1340	
	ParticleIndex_t m_nFXIndex; // 0x1344	
	bool m_bIsDay; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Clockwerk_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PhantomAssassin_MarkOfDeath : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13f0
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FacelessVoid_Chronosphere_Freeze : public CDOTA_Buff
{
public:
	CUtlVectorFixedGrowable< CHandle< CDOTABaseAbility > > m_vecAbilities; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lion_Impale : public CDOTA_Buff
{
public:
	float m_flStartZ; // 0x1338	
	float m_flCurTime; // 0x133c	
	bool m_bDamageApplied; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	int32_t damage; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Sniper_Headshot : public CDOTA_Buff
{
public:
	int32_t proc_chance; // 0x1338	
	float slow_duration; // 0x133c	
	float knockback_distance; // 0x1340	
	int32_t bonus_damage_creeps; // 0x1344	
	int32_t bonus_attack_range; // 0x1348	
	int32_t damage; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Riki_Poison_Dart : public CDOTA_Buff
{
public:
	int32_t wake_damage_limit; // 0x1338	
	float m_flDamageTaken; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lich_Ice_Spire : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
	CountdownTimer m_Timer; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tiny_Toss : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lina_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VengefulSpirit_Arcana : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Faceless_Void_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Arc_Warden_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Strength_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x40
// Has VTable
// MNetworkNoBase
// 
// MNetworkVarNames "AbilityID_t m_nAbilityID"
// MNetworkVarNames "PlayerID_t m_unPlayerID"
// MNetworkVarNames "int m_unAbilityPlayerSlot"
class CDOTA_AbilityDraftAbilityState
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	AbilityID_t m_nAbilityID; // 0x30	
	// MNetworkEnable
	PlayerID_t m_unPlayerID; // 0x34	
	// MNetworkEnable
	int32_t m_unAbilityPlayerSlot; // 0x38	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x70
// Has VTable
// Has Trivial Destructor
// 
// MNetworkVarNames "Vector m_vOrigin"
// MNetworkVarNames "Vector m_vStart"
// MNetworkVarNames "Vector m_vNormal"
// MNetworkVarNames "QAngle m_vAngles"
// MNetworkVarNames "CEntityHandle m_hEntity"
// MNetworkVarNames "CEntityHandle m_hOtherEntity"
// MNetworkVarNames "float32 m_flScale"
// MNetworkVarNames "float32 m_flMagnitude"
// MNetworkVarNames "float32 m_flRadius"
// MNetworkVarNames "CUtlStringToken m_nSurfaceProp"
// MNetworkVarNames "HParticleSystemDefinition m_nEffectIndex"
// MNetworkVarNames "uint32 m_nDamageType"
// MNetworkVarNames "uint8 m_nPenetrate"
// MNetworkVarNames "uint16 m_nMaterial"
// MNetworkVarNames "uint16 m_nHitBox"
// MNetworkVarNames "uint8 m_nColor"
// MNetworkVarNames "uint8 m_fFlags"
// MNetworkVarNames "AttachmentHandle_t m_nAttachmentIndex"
// MNetworkVarNames "CUtlStringToken m_nAttachmentName"
// MNetworkVarNames "uint16 m_iEffectName"
// MNetworkVarNames "uint8 m_nExplosionType"
class CEffectData
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	// MNetworkEncoder "coord_integral"
	Vector m_vOrigin; // 0x8	
	// MNetworkEnable
	// MNetworkEncoder "coord_integral"
	Vector m_vStart; // 0x14	
	// MNetworkEnable
	// MNetworkEncoder "normal"
	Vector m_vNormal; // 0x20	
	// MNetworkEnable
	// MNetworkEncoder "qangle"
	QAngle m_vAngles; // 0x2c	
	// MNetworkEnable
	CEntityHandle m_hEntity; // 0x38	
	// MNetworkEnable
	CEntityHandle m_hOtherEntity; // 0x3c	
	// MNetworkEnable
	float m_flScale; // 0x40	
	// MNetworkEnable
	// MNetworkBitCount "12"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "1023,000000"
	// MNetworkEncodeFlags "1"
	float m_flMagnitude; // 0x44	
	// MNetworkEnable
	// MNetworkBitCount "10"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "1023,000000"
	// MNetworkEncodeFlags "1"
	float m_flRadius; // 0x48	
	// MNetworkEnable
	CUtlStringToken m_nSurfaceProp; // 0x4c	
	// MNetworkEnable
	CWeakHandle< InfoForResourceTypeIParticleSystemDefinition > m_nEffectIndex; // 0x50	
	// MNetworkEnable
	uint32_t m_nDamageType; // 0x58	
	// MNetworkEnable
	uint8_t m_nPenetrate; // 0x5c	
private:
	[[maybe_unused]] uint8_t __pad005d[0x1]; // 0x5d
public:
	// MNetworkEnable
	uint16_t m_nMaterial; // 0x5e	
	// MNetworkEnable
	uint16_t m_nHitBox; // 0x60	
	// MNetworkEnable
	uint8_t m_nColor; // 0x62	
	// MNetworkEnable
	uint8_t m_fFlags; // 0x63	
	// MNetworkEnable
	AttachmentHandle_t m_nAttachmentIndex; // 0x64	
private:
	[[maybe_unused]] uint8_t __pad0065[0x3]; // 0x65
public:
	// MNetworkEnable
	CUtlStringToken m_nAttachmentName; // 0x68	
	// MNetworkEnable
	uint16_t m_iEffectName; // 0x6c	
	// MNetworkEnable
	uint8_t m_nExplosionType; // 0x6e	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mutation_DeathExplosion_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Watch_Tower : public CDOTA_Buff
{
public:
	int32_t m_nTeamNumber; // 0x1338	
	int32_t m_iCapturingTeam; // 0x133c	
	float m_flCaptureProgress; // 0x1340	
	float m_flBonusTime; // 0x1344	
	bool m_bInitialSetupDone; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad1349[0x3]; // 0x1349
public:
	int32_t m_iOriginalTeam; // 0x134c	
	CHandle< CBaseEntity > m_hPreviousHero; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1354[0x4]; // 0x1354
public:
	CUtlVector< PlayerID_t > m_vecLastCreditedPlayerIDs; // 0x1358	
	float m_flAccumulatedCaptureTime; // 0x1370	
	int32_t m_iBonusCount; // 0x1374	
	ParticleIndex_t m_nFxOutpostAmbient; // 0x1378	
	ParticleIndex_t m_nFxOutpostInitialAmbient; // 0x137c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_TempBuff_CorpseExplosion_Debuff : public CDOTA_Buff
{
public:
	int32_t corpse_explosion_radius; // 0x1338	
	int32_t corpse_explosion_damage_pct; // 0x133c	
	int32_t corpse_explosion_chance_pct; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_HP_Regen : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_TiaraOfSelemene : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_SuperOverwhelming_Blink : public CDOTA_Modifier_Item_Overwhelming_Blink
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Trickster_Cloak : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ward_Delay : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_GlimmerCape : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Headdress : public CDOTA_Buff_Item
{
public:
	float health_regen; // 0x1338	
	int32_t aura_radius; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_IronwoodBranch : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_RobeOfMagi : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Hoodwink_BushwhackCooldown : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AbyssalUnderlord_Cancel_DarkRift : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slark_Depth_Shroud : public CDOTA_Modifier_Invisible
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1348	
	int32_t bonus_movement_speed; // 0x134c	
	float bonus_regen; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Meepo_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ChaosKnight_Phantasm : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_LoneDruid_TrueForm_Transform : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Disarmed : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13b8
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Gyrocopter_Homing_Missile : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
	ParticleIndex_t m_nFXIndex2; // 0x133c	
	int32_t hero_damage; // 0x1340	
	int32_t acceleration; // 0x1344	
	int32_t min_damage; // 0x1348	
	int32_t max_distance; // 0x134c	
	int32_t shard_radius; // 0x1350	
	float shard_delay; // 0x1354	
	float pre_flight_time; // 0x1358	
	float stun_duration; // 0x135c	
	int32_t m_nMissileDamage; // 0x1360	
	int32_t m_nTeamNumber; // 0x1364	
private:
	[[maybe_unused]] uint8_t __pad1368[0x8]; // 0x1368
public:
	float speed; // 0x1370	
	CHandle< CBaseEntity > m_hAttachTarget; // 0x1374	
	Vector m_vStartPosition; // 0x1378	
private:
	[[maybe_unused]] uint8_t __pad1384[0x4]; // 0x1384
public:
	CountdownTimer m_EnemyVision; // 0x1388	
	CountdownTimer m_MoveTime; // 0x13a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Batrider_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Broodmother_SpinWeb : public CDOTA_Buff
{
public:
	int32_t bonus_movespeed; // 0x1338	
	int32_t bonus_movespeed_scepter; // 0x133c	
	float bonus_turn_rate; // 0x1340	
	float flLastDamageTime; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Life_Stealer_Empty3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Furion_Arboreal_Might_Attack_Damage : public CDOTA_Buff
{
public:
	float damage_per_stack; // 0x1338	
	int32_t iMaxStacks; // 0x133c	
	ParticleIndex_t m_nFXIndex; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rattletrap_CogPush : public CDOTA_Buff
{
public:
	GameTime_t m_flStartTime; // 0x1338	
	Vector m_vDirection; // 0x133c	
	float m_flEndTime; // 0x1348	
	float m_flCurTime; // 0x134c	
	int32_t push_length; // 0x1350	
	float push_duration; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Nian_Flag_Trap : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Slardar_Slithereen_Crush : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Windrunner_GaleForce : public CDOTA_Buff
{
public:
	Vector m_vEndpoint; // 0x1338	
	Vector m_vFlowPosition; // 0x1344	
	Vector m_vPull; // 0x1350	
	ParticleIndex_t m_nFXIndex; // 0x135c	
	GameTime_t m_flLastThinkTime; // 0x1360	
	float wind_strength; // 0x1364	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Zuus_ThundergodsWrath : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x578	
	bool m_bZeusHasArcana; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1390
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Earthshaker_EnchantTotem_Leap : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1338[0x4]; // 0x1338
public:
	Vector m_vLoc; // 0x133c	
	float m_flPredictedTotalTime; // 0x1348	
	Vector m_vStartPosition; // 0x134c	
	float m_flCurrentTimeHoriz; // 0x1358	
	float m_flCurrentTimeVert; // 0x135c	
	bool m_bHorizontalMotionInterrupted; // 0x1360	
	bool m_bDamageApplied; // 0x1361	
	bool m_bTargetTeleported; // 0x1362	
private:
	[[maybe_unused]] uint8_t __pad1363[0x1]; // 0x1363
public:
	Vector m_vHorizontalVelocity; // 0x1364	
	Vector m_vLastKnownTargetPosition; // 0x1370	
	float m_flInitialVelocityZ; // 0x137c	
	int32_t scepter_height; // 0x1380	
	int32_t scepter_height_arcbuffer; // 0x1384	
	int32_t scepter_acceleration_z; // 0x1388	
	int32_t scepter_acceleration_horizontal; // 0x138c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Eul_Cyclone : public CDOTA_Modifier_Cyclone
{
public:
	CHandle< CBaseEntity > m_hBlocker; // 0x1350	
	bool m_bBlockerCreated; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_HeroStatue : public CDOTA_Buff
{
public:
	uint32_t m_unStatusEffectIndex; // 0x1338	
	CHandle< CBaseEntity > m_hPedestal; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x758
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CEntityBlocker : public CBaseModelEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Exp_Boost_30 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Bullwhip : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Swift_Blink : public CDOTA_Buff_Item
{
public:
	float blink_damage_cooldown; // 0x1338	
	int32_t bonus_agility; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Kaya_And_Sange : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_GreatFamango : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_SobiMask : public CDOTA_Buff_Item
{
public:
	float bonus_mana_regen; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13d8
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VoidSpirit_Dissimilate_Phase : public CDOTA_Buff
{
public:
	Vector m_vFirstPortalPos; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< Vector > m_vecDestinations; // 0x1348	
	CUtlVector< ParticleIndex_t > m_vecDestinationParticles; // 0x1360	
	CUtlVector< ParticleIndex_t > m_vecDestinationParticles_EnemyTeam; // 0x1378	
	int32_t m_nCurrentDestinationIndex; // 0x1390	
	int32_t m_nClosestIndexPosToClick; // 0x1394	
	int32_t m_nPortalHeightOffset; // 0x1398	
private:
	[[maybe_unused]] uint8_t __pad139c[0x4]; // 0x139c
public:
	char* m_szAlliesPortalFX; // 0x13a0	
	char* m_szEnemiesPortalFX; // 0x13a8	
	int32_t m_nPortalRadius; // 0x13b0	
	int32_t m_nPortalPadding; // 0x13b4	
	int32_t m_nFinalImpactDamageRadius; // 0x13b8	
	int32_t m_nFinalImpactFXRadius; // 0x13bc	
	int32_t destination_fx_radius; // 0x13c0	
	int32_t damage_radius; // 0x13c4	
	int32_t portals_per_ring; // 0x13c8	
	int32_t angle_per_ring_portal; // 0x13cc	
	int32_t first_ring_distance_offset; // 0x13d0	
	float debuff_duration; // 0x13d4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Grimstroke_InkCreature_Debuff : public CDOTA_Buff
{
public:
	float m_flCurrentArmorReduction; // 0x1338	
	CHandle< CBaseEntity > m_hLatchedCreature; // 0x133c	
	float tick_interval; // 0x1340	
	int32_t damage_per_second; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Oracle_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_KeeperOfTheLight_Will_O_Wisp : public CDOTA_Buff
{
public:
	int32_t fixed_movement_speed; // 0x1338	
	Vector m_vSource; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Rubick_TelekinesisLand : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nLandPreviewFX; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Rubick_TelekinesisLand_Self : public CDOTA_Ability_Rubick_TelekinesisLand
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_FacelessVoid_Backtrack : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_GreaterBash : public CDOTA_Buff
{
public:
	int32_t chance_pct; // 0x1338	
	float damage; // 0x133c	
	float movespeed_duration; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Miniboss_Radiance : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tinker_LaserBlind : public CDOTA_Buff
{
public:
	int32_t miss_rate; // 0x1338	
	float max_health_removed; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DataDriven : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x18]; // 0x578
public:
	bool m_bProcsMagicStick; // 0x590	
	bool m_bIsSharedWithTeammates; // 0x591	
	bool m_bCastFilterRejectCaster; // 0x592	
private:
	[[maybe_unused]] uint8_t __pad0593[0x1]; // 0x593
public:
	float m_fAOERadius; // 0x594	
	int32_t m_CastAnimation; // 0x598	
private:
	[[maybe_unused]] uint8_t __pad059c[0x4]; // 0x59c
public:
	CUtlVector< KeyValues* > m_ModifierKVDescriptions; // 0x5a0	
	KeyValues* m_pOnChannelFinishKV; // 0x5b8	
	KeyValues* m_pOnChannelSucceededKV; // 0x5c0	
	KeyValues* m_pOnChannelInterruptedKV; // 0x5c8	
	KeyValues* m_pOnOwnerSpawnedKV; // 0x5d0	
	KeyValues* m_pOnOwnerDiedKV; // 0x5d8	
	KeyValues* m_pOnUpgradeKV; // 0x5e0	
	KeyValues* m_pOnProjectileHitUnitKV; // 0x5e8	
	KeyValues* m_pOnProjectileFinishKV; // 0x5f0	
	KeyValues* m_pOnSpellStartKV; // 0x5f8	
	KeyValues* m_pOnAbilityPhaseStartKV; // 0x600	
	KeyValues* m_pOnAbilityPhaseInterruptedKV; // 0x608	
	KeyValues* m_pOnToggleOnKV; // 0x610	
	KeyValues* m_pOnToggleOffKV; // 0x618	
	KeyValues* m_pOnCreatedKV; // 0x620	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_GraniteGolem_Bash : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xaf8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLogicCase : public CLogicalEntity
{
public:
	CUtlSymbolLarge m_nCase[32]; // 0x4a8	
	int32_t m_nShuffleCases; // 0x5a8	
	int32_t m_nLastShuffleCase; // 0x5ac	
	uint8_t m_uchShuffleCaseMap[32]; // 0x5b0	
	CEntityIOOutput m_OnCase[32]; // 0x5d0	
	CEntityOutputTemplate< CVariantBase< CVariantDefaultAllocator > > m_OnDefault; // 0xad0	
	
	// Datamap fields:
	// CUtlSymbolLarge InputValue; // 0x0
	// void InputPickRandom; // 0x0
	// void InputPickRandomShuffle; // 0x0
	// void InputResetShuffle; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Luna_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_All_Stats_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x528
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_NPCSpawnerBadMid : public CDOTA_NPCSpawner
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa10
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_GuildBannerDynamic : public CDynamicProp
{
public:
	// MNetworkEnable
	bool m_bRespawnClientEntity; // 0x9f0	
	// MNetworkEnable
	bool m_bPlaySpawnAnimation; // 0x9f1	
	// MNetworkEnable
	uint8_t m_unGuildTier; // 0x9f2	
	// MNetworkEnable
	uint8_t m_unPrimaryColor; // 0x9f3	
	// MNetworkEnable
	uint8_t m_unSecondaryColor; // 0x9f4	
	// MNetworkEnable
	uint8_t m_unPattern; // 0x9f5	
private:
	[[maybe_unused]] uint8_t __pad09f6[0x2]; // 0x9f6
public:
	// MNetworkEnable
	uint64_t m_unLogo; // 0x9f8	
	// MNetworkEnable
	GuildID_t m_unGuildID; // 0xa00	
	// MNetworkEnable
	uint32_t m_unGuildFlags; // 0xa04	
	// MNetworkEnable
	bool m_bUsePanelCache; // 0xa08	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_RestorativeFlower : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t heal; // 0x133c	
	int32_t vision_radius; // 0x1340	
	float vision_duration; // 0x1344	
	int32_t model_scale; // 0x1348	
	bool bExploding; // 0x134c	
private:
	[[maybe_unused]] uint8_t __pad134d[0x3]; // 0x134d
public:
	float stun_duration; // 0x1350	
	ParticleIndex_t m_nFXAmbient; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_Reward_MagicResistAura_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_magical_armor; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Lifesteal : public CDOTA_Buff
{
public:
	float value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Greater_Faerie_Fire : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Maelstrom : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Revenants_Brooch : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Headdress : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_SheepStick : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_DustofAppearance : public CDOTA_Buff
{
public:
	int32_t movespeed; // 0x1338	
	bool m_bCastOnInvisibleHero; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PrimalBeast_Onslaught_Knockback : public CDOTA_Buff
{
public:
	Vector m_vLoc; // 0x1338	
	float m_flPredictedTotalTime; // 0x1344	
	Vector m_vStartPosition; // 0x1348	
	float m_flCurrentTimeHoriz; // 0x1354	
	float m_flCurrentTimeVert; // 0x1358	
	bool m_bHorizontalMotionInterrupted; // 0x135c	
	bool m_bTargetTeleported; // 0x135d	
private:
	[[maybe_unused]] uint8_t __pad135e[0x2]; // 0x135e
public:
	Vector m_vHorizontalVelocity; // 0x1360	
	Vector m_vLastKnownTargetPosition; // 0x136c	
	float m_flInitialVelocityZ; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_VoidSpirit_AstralStep : public CDOTABaseAbility
{
public:
	Vector m_vStartPos; // 0x578	
	Vector m_vDestination; // 0x584	
	Vector m_vDirection; // 0x590	
	int32_t radius; // 0x59c	
	int32_t min_travel_distance; // 0x5a0	
	int32_t max_travel_distance; // 0x5a4	
	float debuff_duration; // 0x5a8	
	float pop_damage_delay; // 0x5ac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Grimstroke_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Fear : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Oracle_PurifyingFlames : public CDOTA_Buff
{
public:
	float heal_per_second; // 0x1338	
	float tick_rate; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Techies_Suicide : public CDOTABaseAbility
{
public:
	uint32_t m_unSuicideKills; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Techies_StasisTrap : public CDOTA_Modifier_Invisible
{
public:
	int32_t activation_radius; // 0x1348	
	int32_t stun_radius; // 0x134c	
	float stun_duration; // 0x1350	
	float explode_delay; // 0x1354	
	float activation_time; // 0x1358	
	bool m_bActivated; // 0x135c	
	bool m_bTriggered; // 0x135d	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Skywrath_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Shredder_ReactiveArmor_Bomb : public CDOTA_Buff
{
public:
	float initial_shield; // 0x1338	
	float max_shield; // 0x133c	
	float shield_per_sec; // 0x1340	
	float shield_per_sec_per_enemy; // 0x1344	
	float duration; // 0x1348	
	float base_explosion; // 0x134c	
	int32_t radius; // 0x1350	
	int32_t explosion_radius; // 0x1354	
	int32_t m_nDamageAbsorbed; // 0x1358	
	GameTime_t m_timeLastTick; // 0x135c	
	GameTime_t m_StartTime; // 0x1360	
	int32_t m_nLastParticleTime; // 0x1364	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Visage_GraveChill_Buff : public CDOTA_Buff
{
public:
	int32_t movespeed_bonus; // 0x1338	
	int32_t attackspeed_bonus; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_KeeperOfTheLight_BlindingLight_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_NagaSiren_Ensnare : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tinker_Shrink_Ray : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Morphling_AdaptiveStrike_Str : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PhantomLancer_Dopplewalk_Phase : public CDOTA_Buff
{
public:
	Vector vTargetPosition; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_TI9_Banner : public CDOTABaseAbility
{
public:
	CUtlVectorFixedGrowable< CHandle< CBaseEntity > > m_vecBanners; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Brewmaster : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Corruption_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_HiddenDisplacement"
class CDOTA_DisplacementVisibility : public CBaseEntity
{
public:
	// MNetworkEnable
	int32_t m_HiddenDisplacement; // 0x4a8	
	
	// Datamap fields:
	// int32_t InputHideDisplacement; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_ArcWarden : public CDOTA_BaseNPC_Hero
{
public:
	ParticleIndex_t m_nTalkFXIndex; // 0x1d98	
	ParticleIndex_t m_nFXDeath; // 0x1d9c	
	ParticleIndex_t m_nTempestFX; // 0x1da0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_HarpyScout_TakeOff : public CDOTA_Buff
{
public:
	int32_t move_speed_penalty; // 0x1338	
	float cost_per_second; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Fluffy_Hat : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Seer_Stone : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Disperser : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_HeavensHalberd : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Boots_Of_Bearing : public CDOTA_Item
{
public:
	int32_t radius; // 0x620	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Vladmir_Aura : public CDOTA_Buff
{
public:
	int32_t lifesteal_aura; // 0x1338	
	int32_t damage_aura; // 0x133c	
	float armor_aura; // 0x1340	
	float mana_regen_aura; // 0x1344	
	int32_t creep_lifesteal_reduction_pct; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Phoenix_FireSpiritBurn : public CDOTA_Buff
{
public:
	float tick_interval; // 0x1338	
	int32_t attackspeed_slow; // 0x133c	
	int32_t damage_per_second; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Holdout_GladiatorsUnite_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Skywrath_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Magnataur_ReversePolarity_Stats : public CDOTA_Buff
{
public:
	int32_t stats_per_stack; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Centaur_Cart : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hUnit; // 0x1338	
	bool m_bWasMoving; // 0x133c	
	bool m_bSpawnDone; // 0x133d	
private:
	[[maybe_unused]] uint8_t __pad133e[0x2]; // 0x133e
public:
	Vector m_vecOldForward; // 0x1340	
	int32_t break_distance; // 0x134c	
	Vector m_vecPreviousLocation; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nyx_Assassin_Impale : public CDOTA_Buff
{
public:
	int32_t impale_damage; // 0x1338	
	float m_flStartZ; // 0x133c	
	float m_flCurTime; // 0x1340	
	bool m_bDamageApplied; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ogre_Magi_Fireblast_Multicast : public CDOTA_Buff
{
public:
	CHandle< CDOTA_BaseNPC > m_hTarget; // 0x1338	
	float multicast_delay; // 0x133c	
	int32_t m_nMultiCastCount; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Jakiro_DualBreath_Thinker : public CDOTA_Buff
{
public:
	int32_t start_radius; // 0x1338	
	int32_t end_radius; // 0x133c	
	GameTime_t m_fStartTime; // 0x1340	
	float m_fTotalTime; // 0x1344	
	Vector m_vCastPosition; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Furion_Arboreal_Might_Armor : public CDOTA_Buff
{
public:
	float armor_per_stack; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Viper_NethertoxinMute : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Courier_Morph_Effect : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bloodseeker_Bloodrage : public CDOTA_Buff
{
public:
	int32_t attack_speed; // 0x1338	
	int32_t spell_amp; // 0x133c	
	float shard_max_health_dmg; // 0x1340	
	float damage_pct; // 0x1344	
	float flTickRate; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_CrystalMaiden_FreezingFieldStop : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x558
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CSoundEventEntity : public CBaseEntity
{
public:
	bool m_bStartOnSpawn; // 0x4a8	
	bool m_bToLocalPlayer; // 0x4a9	
	bool m_bStopOnNew; // 0x4aa	
	bool m_bSaveRestore; // 0x4ab	
	bool m_bSavedIsPlaying; // 0x4ac	
private:
	[[maybe_unused]] uint8_t __pad04ad[0x3]; // 0x4ad
public:
	float m_flSavedElapsedTime; // 0x4b0	
private:
	[[maybe_unused]] uint8_t __pad04b4[0x4]; // 0x4b4
public:
	CUtlSymbolLarge m_iszSourceEntityName; // 0x4b8	
	CUtlSymbolLarge m_iszAttachmentName; // 0x4c0	
	CEntityOutputTemplate< uint64 > m_onGUIDChanged; // 0x4c8	
	CEntityIOOutput m_onSoundFinished; // 0x4f0	
private:
	[[maybe_unused]] uint8_t __pad0518[0x28]; // 0x518
public:
	CUtlSymbolLarge m_iszSoundName; // 0x540	
private:
	[[maybe_unused]] uint8_t __pad0548[0x8]; // 0x548
public:
	CEntityHandle m_hSource; // 0x550	
	
	// Datamap fields:
	// CUtlSymbolLarge InputSetSoundName; // 0x0
	// CUtlSymbolLarge InputSetSourceEntity; // 0x0
	// CUtlSymbolLarge InputStartSound; // 0x0
	// bool InputPauseSound; // 0x0
	// bool InputUnPauseSound; // 0x0
	// void InputStopSound; // 0x0
	// void m_nGUID; // 0x548
	// void CSoundEventEntitySoundFinishedThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_Tower_BlastWave : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nPreviewFX; // 0x578	
	float duration; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tinker_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Wisp_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cooldown_Reduction_65 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_AntiMage : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seasonal_TI11_CongaLineDancer : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13a8
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seasonal_TI11_CongaLine : public CDOTA_Buff
{
public:
	int32_t NUM_SOUNDS; // 0x1338	
	float dance_interval; // 0x133c	
	float gesture_duration; // 0x1340	
	float catch_up_distance; // 0x1344	
	float slow_duration; // 0x1348	
	float slow_amount; // 0x134c	
	int32_t m_nGesture; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1354[0x4]; // 0x1354
public:
	CUtlVector< CHandle< CDOTA_BaseNPC > > m_vecDancers; // 0x1358	
private:
	[[maybe_unused]] uint8_t __pad1370[0x30]; // 0x1370
public:
	bool m_bIsGesturing; // 0x13a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Force_Field_Effect : public CDOTA_Buff
{
public:
	float bonus_aoe_armor; // 0x1338	
	float bonus_aoe_ms; // 0x133c	
	float bonus_aoe_mres; // 0x1340	
	float self_mres; // 0x1344	
	float self_armor; // 0x1348	
	int32_t active_reflection_pct; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Force_Field_Bonus : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Fallen_Sky_Burn : public CDOTA_Buff
{
public:
	int32_t burn_dps_buildings; // 0x1338	
	int32_t burn_dps_units; // 0x133c	
	float burn_interval; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Princes_Knife : public CDOTA_Buff_Item
{
public:
	float duration; // 0x1338	
	int32_t projectile_bonus; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Horizon : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Royal_jelly : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Elixer : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Solar_Crest : public CDOTA_Buff_Item
{
public:
	float bonus_mana; // 0x1338	
	int32_t bonus_armor; // 0x133c	
	int32_t bonus_all_stats; // 0x1340	
	int32_t bonus_health; // 0x1344	
	int32_t self_movement_speed; // 0x1348	
	ParticleIndex_t nFXIndex; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_HelmOfTheDominator : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Blade_Mail_Reflect : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_PhaseBoots_Active : public CDOTA_Buff
{
public:
	int32_t phase_movement_speed; // 0x1338	
	int32_t phase_movement_speed_range; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nyx_Assassin_Jolt_Debuff : public CDOTA_Buff
{
public:
	int32_t resist_debuff; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_ChaosMeteor : public CDOTA_Ability_Invoker_InvokedBase
{
public:
	int32_t area_of_effect; // 0x588	
	float damage_interval; // 0x58c	
	int32_t vision_distance; // 0x590	
	float end_vision_duration; // 0x594	
	float main_damage; // 0x598	
	float burn_duration; // 0x59c	
	float burn_dps; // 0x5a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Chen_HandOfGod_Hot : public CDOTA_Buff
{
public:
	int32_t heal_per_second; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Broodmother_SpinWebInvisibleApplier : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Clinkz_BurningBarrage : public CDOTABaseAbility
{
public:
	Vector m_vStartPos; // 0x578	
	int32_t m_iArrowProjectile; // 0x584	
	int32_t m_nFXIndex; // 0x588	
	float arrow_speed; // 0x58c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Leshrac_Pulse_Nova : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Enigma_Black_Hole_Pull_Scepter : public CDOTA_Buff
{
public:
	int32_t scepter_drag_speed; // 0x1338	
	float scepter_pull_rotate_speed; // 0x133c	
	float aura_origin_x; // 0x1340	
	float aura_origin_y; // 0x1344	
	ParticleIndex_t m_nFXIndex; // 0x1348	
	Vector m_vCenter; // 0x134c	
	GameTime_t m_flLastThinkTime; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lich_Sinister_Gaze_Self : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Morphling_ScepterStatsDrain_Intelligence_Buff : public CDOTA_Buff
{
public:
	int32_t scepter_stat_steal; // 0x1338	
	int32_t scepter_spell_amplify; // 0x133c	
	int32_t nStrengthSteal; // 0x1340	
	int32_t nIntSteal; // 0x1344	
	int32_t nAgilitySteal; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bashed : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Courier_AutoDeliver : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoParticleTarget : public CPointEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x540
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float m_flScattering"
// MNetworkVarNames "float m_flAnisotropy"
// MNetworkVarNames "float m_flFadeSpeed"
// MNetworkVarNames "float m_flDrawDistance"
// MNetworkVarNames "float m_flFadeInStart"
// MNetworkVarNames "float m_flFadeInEnd"
// MNetworkVarNames "float m_flIndirectStrength"
// MNetworkVarNames "int m_nIndirectTextureDimX"
// MNetworkVarNames "int m_nIndirectTextureDimY"
// MNetworkVarNames "int m_nIndirectTextureDimZ"
// MNetworkVarNames "Vector m_vBoxMins"
// MNetworkVarNames "Vector m_vBoxMaxs"
// MNetworkVarNames "bool m_bActive"
// MNetworkVarNames "GameTime_t m_flStartAnisoTime"
// MNetworkVarNames "GameTime_t m_flStartScatterTime"
// MNetworkVarNames "GameTime_t m_flStartDrawDistanceTime"
// MNetworkVarNames "float m_flStartAnisotropy"
// MNetworkVarNames "float m_flStartScattering"
// MNetworkVarNames "float m_flStartDrawDistance"
// MNetworkVarNames "float m_flDefaultAnisotropy"
// MNetworkVarNames "float m_flDefaultScattering"
// MNetworkVarNames "float m_flDefaultDrawDistance"
// MNetworkVarNames "bool m_bStartDisabled"
// MNetworkVarNames "bool m_bEnableIndirect"
// MNetworkVarNames "bool m_bIndirectUseLPVs"
// MNetworkVarNames "bool m_bIsMaster"
// MNetworkVarNames "HRenderTextureStrong m_hFogIndirectTexture"
// MNetworkVarNames "int m_nForceRefreshCount"
// MNetworkVarNames "float m_fNoiseSpeed"
// MNetworkVarNames "float m_fNoiseStrength"
// MNetworkVarNames "Vector m_vNoiseScale"
class CEnvVolumetricFogController : public CBaseEntity
{
public:
	// MNetworkEnable
	float m_flScattering; // 0x4a8	
	// MNetworkEnable
	float m_flAnisotropy; // 0x4ac	
	// MNetworkEnable
	float m_flFadeSpeed; // 0x4b0	
	// MNetworkEnable
	float m_flDrawDistance; // 0x4b4	
	// MNetworkEnable
	float m_flFadeInStart; // 0x4b8	
	// MNetworkEnable
	float m_flFadeInEnd; // 0x4bc	
	// MNetworkEnable
	float m_flIndirectStrength; // 0x4c0	
	// MNetworkEnable
	int32_t m_nIndirectTextureDimX; // 0x4c4	
	// MNetworkEnable
	int32_t m_nIndirectTextureDimY; // 0x4c8	
	// MNetworkEnable
	int32_t m_nIndirectTextureDimZ; // 0x4cc	
	// MNetworkEnable
	Vector m_vBoxMins; // 0x4d0	
	// MNetworkEnable
	Vector m_vBoxMaxs; // 0x4dc	
	// MNetworkEnable
	bool m_bActive; // 0x4e8	
private:
	[[maybe_unused]] uint8_t __pad04e9[0x3]; // 0x4e9
public:
	// MNetworkEnable
	GameTime_t m_flStartAnisoTime; // 0x4ec	
	// MNetworkEnable
	GameTime_t m_flStartScatterTime; // 0x4f0	
	// MNetworkEnable
	GameTime_t m_flStartDrawDistanceTime; // 0x4f4	
	// MNetworkEnable
	float m_flStartAnisotropy; // 0x4f8	
	// MNetworkEnable
	float m_flStartScattering; // 0x4fc	
	// MNetworkEnable
	float m_flStartDrawDistance; // 0x500	
	// MNetworkEnable
	float m_flDefaultAnisotropy; // 0x504	
	// MNetworkEnable
	float m_flDefaultScattering; // 0x508	
	// MNetworkEnable
	float m_flDefaultDrawDistance; // 0x50c	
	// MNetworkEnable
	bool m_bStartDisabled; // 0x510	
	// MNetworkEnable
	bool m_bEnableIndirect; // 0x511	
	// MNetworkEnable
	bool m_bIndirectUseLPVs; // 0x512	
	// MNetworkEnable
	bool m_bIsMaster; // 0x513	
private:
	[[maybe_unused]] uint8_t __pad0514[0x4]; // 0x514
public:
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_hFogIndirectTexture; // 0x518	
	// MNetworkEnable
	int32_t m_nForceRefreshCount; // 0x520	
	// MNetworkEnable
	float m_fNoiseSpeed; // 0x524	
	// MNetworkEnable
	float m_fNoiseStrength; // 0x528	
	// MNetworkEnable
	Vector m_vNoiseScale; // 0x52c	
	bool m_bFirstTime; // 0x538	
	
	// Datamap fields:
	// void InputSetToDefaults; // 0x0
	// float InputSetScattering; // 0x0
	// float InputSetAnisotropy; // 0x0
	// float InputSetFadeSpeed; // 0x0
	// float InputSetDrawDistance; // 0x0
	// bool EnableIndirect; // 0x0
	// bool InputEnable; // 0x0
	// bool InputDisable; // 0x0
	// void ForceRefresh; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Demon_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lifestealer_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Gyrocopter_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Wisp_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_45 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d8
// Has VTable
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "ButtonBitMask_t m_nToggleButtonDownMask"
// MNetworkVarNames "float32 m_flMaxspeed"
// MNetworkVarNames "float32 m_arrForceSubtickMoveWhen"
class CPlayer_MovementServices : public CPlayerPawnComponent
{
public:
	int32_t m_nImpulse; // 0x40	
private:
	[[maybe_unused]] uint8_t __pad0044[0x4]; // 0x44
public:
	CInButtonState m_nButtons; // 0x48	
	uint64_t m_nQueuedButtonDownMask; // 0x68	
	uint64_t m_nQueuedButtonChangeMask; // 0x70	
	uint64_t m_nButtonDoublePressed; // 0x78	
	uint32_t m_pButtonPressedCmdNumber[64]; // 0x80	
	uint32_t m_nLastCommandNumberProcessed; // 0x180	
private:
	[[maybe_unused]] uint8_t __pad0184[0x4]; // 0x184
public:
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	uint64_t m_nToggleButtonDownMask; // 0x188	
private:
	[[maybe_unused]] uint8_t __pad0190[0x8]; // 0x190
public:
	// MNetworkEnable
	// MNetworkBitCount "12"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "2048,000000"
	// MNetworkEncodeFlags "1"
	float m_flMaxspeed; // 0x198	
	// MNetworkEnable
	float m_arrForceSubtickMoveWhen[4]; // 0x19c	
	float m_flForwardMove; // 0x1ac	
	float m_flLeftMove; // 0x1b0	
	float m_flUpMove; // 0x1b4	
	Vector m_vecLastMovementImpulses; // 0x1b8	
	QAngle m_vecOldViewAngles; // 0x1c4	
	
	// Datamap fields:
	// void m_pButtonPressedCmdNumber; // 0x80
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa50
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkExcludeByName "m_flAnimTime"
// MNetworkExcludeByName "m_flexWeight"
// MNetworkExcludeByName "m_blinktoggle"
// MNetworkExcludeByUserGroup "m_flPoseParameter"
// MNetworkExcludeByName "m_animationController.m_flPlaybackRate"
// MNetworkExcludeByUserGroup "overlay_vars"
// MNetworkIncludeByName "m_spawnflags"
// MNetworkVarNames "bool m_bAwake"
class CPhysicsProp : public CBreakableProp
{
private:
	[[maybe_unused]] uint8_t __pad08e0[0x8]; // 0x8e0
public:
	CEntityIOOutput m_MotionEnabled; // 0x8e8	
	CEntityIOOutput m_OnAwakened; // 0x910	
	CEntityIOOutput m_OnAwake; // 0x938	
	CEntityIOOutput m_OnAsleep; // 0x960	
	CEntityIOOutput m_OnPlayerUse; // 0x988	
	CEntityIOOutput m_OnOutOfWorld; // 0x9b0	
	CEntityIOOutput m_OnPlayerPickup; // 0x9d8	
	float m_massScale; // 0xa00	
	float m_inertiaScale; // 0xa04	
	float m_buoyancyScale; // 0xa08	
	int32_t m_damageType; // 0xa0c	
	int32_t m_damageToEnableMotion; // 0xa10	
	float m_flForceToEnableMotion; // 0xa14	
	bool m_bThrownByPlayer; // 0xa18	
	bool m_bDroppedByPlayer; // 0xa19	
	bool m_bTouchedByPlayer; // 0xa1a	
	bool m_bFirstCollisionAfterLaunch; // 0xa1b	
	int32_t m_iExploitableByPlayer; // 0xa1c	
	bool m_bHasBeenAwakened; // 0xa20	
	bool m_bIsOverrideProp; // 0xa21	
private:
	[[maybe_unused]] uint8_t __pad0a22[0x2]; // 0xa22
public:
	GameTime_t m_fNextCheckDisableMotionContactsTime; // 0xa24	
	int32_t m_iInitialGlowState; // 0xa28	
	int32_t m_nGlowRange; // 0xa2c	
	int32_t m_nGlowRangeMin; // 0xa30	
	Color m_glowColor; // 0xa34	
	bool m_bForceNavIgnore; // 0xa38	
	bool m_bNoNavmeshBlocker; // 0xa39	
	bool m_bForceNpcExclude; // 0xa3a	
	bool m_bShouldAutoConvertBackFromDebris; // 0xa3b	
	bool m_bMuteImpactEffects; // 0xa3c	
private:
	[[maybe_unused]] uint8_t __pad0a3d[0x7]; // 0xa3d
public:
	bool m_bAcceptDamageFromHeldObjects; // 0xa44	
	bool m_bEnableUseOutput; // 0xa45	
	// MNetworkEnable
	bool m_bAwake; // 0xa46	
private:
	[[maybe_unused]] uint8_t __pad0a47[0x1]; // 0xa47
public:
	int32_t m_nCollisionGroupOverride; // 0xa48	
	
	// Datamap fields:
	// void InputEnableMotion; // 0x0
	// void InputDisableMotion; // 0x0
	// void InputWake; // 0x0
	// bool InputSetAutoConvertBackFromDebris; // 0x0
	// void InputSleep; // 0x0
	// void InputDisableFloating; // 0x0
	// void InputStartGlowing; // 0x0
	// void InputStopGlowing; // 0x0
	// Vector InputSetGlowOverride; // 0x0
	// int32_t InputSetGlowRange; // 0x0
	// float InputSetMass; // 0x0
	// void InputEnableGravity; // 0x0
	// void InputDisableGravity; // 0x0
	// void InputEnableDrag; // 0x0
	// void InputDisableDrag; // 0x0
	// void InputEnableCollisions; // 0x0
	// void InputDisableCollisions; // 0x0
	// bool forcemotiondisabled; // 0x7fffffff
	// bool phys_start_asleep; // 0x7fffffff
	// void CPhysicsPropClearFlagsThink; // 0x0
	// int32_t m_nNavObstacleType; // 0xa40
	// int32_t health; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Spell_Immunity : public CDOTA_Modifier_MagicImmune
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Bottomless_Chalice_Regen : public CDOTA_Buff
{
public:
	int32_t health; // 0x1338	
	int32_t mana; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_ManaclesOfPower : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Possessed_Mask : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_iRiverPaintColor"
class CDOTA_Item_RiverPainter : public CDOTA_Item
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnRiverColorChanged"
	int32_t m_iRiverPaintColor; // 0x620	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Blight_Stone : public CDOTA_Buff_Item
{
public:
	float corruption_duration; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Smoke_Of_Deceit : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_SheepStick : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
	int32_t bonus_agility; // 0x133c	
	int32_t bonus_intellect; // 0x1340	
	float bonus_mana_regen; // 0x1344	
	int32_t bonus_mana; // 0x1348	
	int32_t cast_range_bonus; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Snapfire_GobbleUp : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hGobbledUnit; // 0x578	
	float max_time_in_belly; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Meepo : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SpiritBreaker_EmpoweringHasteAura : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_GreaterBash_Speed : public CDOTA_Buff
{
public:
	int32_t bonus_movespeed_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lion_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tiny_CraggyExterior : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lina_Flame_Cloak : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pudge_FleshHeap_Block : public CDOTA_Buff
{
public:
	float damage_block; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x548
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CEnvSoundscapeProxy : public CEnvSoundscape
{
public:
	CUtlSymbolLarge m_MainSoundscapeName; // 0x540	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x520
// Has VTable
// Is Abstract
// MNetworkAssumeNotNetworkable
class CPhysConstraint : public CLogicalEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x8]; // 0x4a8
public:
	CUtlSymbolLarge m_nameAttach1; // 0x4b0	
	CUtlSymbolLarge m_nameAttach2; // 0x4b8	
	CHandle< CBaseEntity > m_hAttach1; // 0x4c0	
	CHandle< CBaseEntity > m_hAttach2; // 0x4c4	
	CUtlSymbolLarge m_nameAttachment1; // 0x4c8	
	CUtlSymbolLarge m_nameAttachment2; // 0x4d0	
	CUtlSymbolLarge m_breakSound; // 0x4d8	
	float m_forceLimit; // 0x4e0	
	float m_torqueLimit; // 0x4e4	
	uint32_t m_teleportTick; // 0x4e8	
	float m_minTeleportDistance; // 0x4ec	
	bool m_bSnapObjectPositions; // 0x4f0	
private:
	[[maybe_unused]] uint8_t __pad04f1[0x7]; // 0x4f1
public:
	CEntityIOOutput m_OnBreak; // 0x4f8	
	
	// Datamap fields:
	// void m_hJoint; // 0x4a8
	// void InputBreak; // 0x0
	// void InputOnBreak; // 0x0
	// void InputTurnOn; // 0x0
	// void InputTurnOff; // 0x0
	// void InputEnableLinearConstraint; // 0x0
	// void InputDisableLinearConstraint; // 0x0
	// void InputEnableAngularConstraint; // 0x0
	// void InputDisableAngularConstraint; // 0x0
	// void InputTurnMotorOn; // 0x0
	// void InputTurnMotorOff; // 0x0
	// float InputSetMotorTorqueFactor; // 0x0
	// float InputSetMotorTargetVelocity; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Drow_Ranger_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ursa_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Arc_Warden_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Speed_90 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_QueenOfPain : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_OgreMagi_FrostArmor : public CDOTA_Buff
{
public:
	int32_t armor_bonus; // 0x1338	
	float slow_duration; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Bottomless_Chalice : public CDOTA_Buff_Item
{
public:
	int32_t max_charges_per_kill; // 0x1338	
	float recharge_time; // 0x133c	
	bool m_bFull; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	int32_t bonus_intellect; // 0x1344	
	int32_t movement_speed; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Orb_of_Pestilence : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Blood_Grenade_Flight_Thinker : public CDOTA_Buff
{
public:
	int32_t speed; // 0x1338	
	int32_t radius; // 0x133c	
	int32_t damage_over_time; // 0x1340	
	int32_t impact_damage; // 0x1344	
	float debuff_duration; // 0x1348	
	int32_t movespeed_slow; // 0x134c	
	float tick_rate; // 0x1350	
	ParticleIndex_t m_nFXIndex; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lotus_Orb_Delay : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Smoke_Of_Deceit_Secondary_Application_Cooldown : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Urn_Heal : public CDOTA_Buff
{
public:
	int32_t soul_heal_amount; // 0x1338	
	float m_fHealingDone; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Snapfire_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_GodsRebuke_Slow : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ArcWarden_SparkWraith_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t scepter_radius; // 0x133c	
	int32_t wraith_vision_radius; // 0x1340	
	int32_t wraith_speed; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1348[0x8]; // 0x1348
public:
	float activation_delay; // 0x1350	
	float scepter_activation_delay; // 0x1354	
	float think_interval; // 0x1358	
	float m_flSparkDamage; // 0x135c	
	int32_t m_nViewerID; // 0x1360	
	bool m_bActive; // 0x1364	
	bool m_bOriginal; // 0x1365	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Magnataur_Skewer_Impact : public CDOTA_Buff
{
public:
	float slow_duration; // 0x1338	
	int32_t skewer_damage; // 0x133c	
	int32_t damage_distance_pct; // 0x1340	
	Vector m_vDirection; // 0x1344	
	Vector m_vStartPos; // 0x1350	
	float m_flEndTime; // 0x135c	
	float m_flCurTime; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Centaur_Stampede : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t damage_reduction; // 0x133c	
	int32_t has_flying_movement; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< CHandle< CBaseEntity > > m_hEntitiesAffected; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Centaur_Return : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Disruptor_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Brewmaster_WindWalk : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_ForgeSpirit : public CDOTA_Ability_Invoker_InvokedBase
{
public:
	CHandle< CBaseEntity > m_Spirits[2]; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Clinkz_Burning_Army_Thinker : public CDOTA_Buff
{
public:
	int32_t m_iCount; // 0x1338	
	int32_t count; // 0x133c	
	int32_t range; // 0x1340	
	Vector m_vFacePosition; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Life_Stealer_Assimilate : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hLastAssimilation; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Attached_Unit : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hAttachTarget; // 0x1338	
	bool m_bPhysicalImmune; // 0x133c	
	bool m_bMagicImmune; // 0x133d	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Axe_Culling_Blade_Charge : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VengefulSpirit_WaveOfTerror_Fear : public CDOTA_Modifier_Fear
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoPlayerStart : public CPointEntity
{
public:
	bool m_bDisabled; // 0x4a8	
	
	// Datamap fields:
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
	// void InputToggle; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Visage_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Winter_Wyvern_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ember_Spirit_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Gold_Income_300 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Base_Damage_100 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Strength_12 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Strength_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x540
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "string_t m_iszStackName"
// MNetworkVarNames "string_t m_iszOperatorName"
// MNetworkVarNames "string_t m_iszOpvarName"
// MNetworkVarNames "int m_iOpvarIndex"
// MNetworkVarNames "bool m_bUseAutoCompare"
class CSoundOpvarSetPointBase : public CBaseEntity
{
public:
	bool m_bDisabled; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	CEntityHandle m_hSource; // 0x4ac	
private:
	[[maybe_unused]] uint8_t __pad04b0[0x8]; // 0x4b0
public:
	CUtlSymbolLarge m_iszSourceEntityName; // 0x4b8	
private:
	[[maybe_unused]] uint8_t __pad04c0[0x50]; // 0x4c0
public:
	Vector m_vLastPosition; // 0x510	
private:
	[[maybe_unused]] uint8_t __pad051c[0x4]; // 0x51c
public:
	// MNetworkEnable
	CUtlSymbolLarge m_iszStackName; // 0x520	
	// MNetworkEnable
	CUtlSymbolLarge m_iszOperatorName; // 0x528	
	// MNetworkEnable
	CUtlSymbolLarge m_iszOpvarName; // 0x530	
	// MNetworkEnable
	int32_t m_iOpvarIndex; // 0x538	
	// MNetworkEnable
	bool m_bUseAutoCompare; // 0x53c	
	
	// Datamap fields:
	// uint64_t InputSetEventGuid; // 0x0
	// CUtlSymbolLarge InputSetStackName; // 0x0
	// CUtlSymbolLarge InputSetOperatorName; // 0x0
	// CUtlSymbolLarge InputSetOpvarName; // 0x0
	// CUtlSymbolLarge InputSetOpvarIndex; // 0x0
	// CUtlSymbolLarge InputSetSourceEntity; // 0x0
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
	// void CSoundOpvarSetPointBaseSetOpvarThink; // 0x0
	// void m_nGUID; // 0x4b0
	// void m_hOpvarData; // 0x4c0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Sphere : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Grimstroke_InkCreature : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
	ParticleIndex_t m_nAmbientFXIndex; // 0x133c	
	int32_t m_nAttackCount; // 0x1340	
	bool m_bIsLatched; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1345[0x3]; // 0x1345
public:
	CHandle< CBaseEntity > m_hAttachTarget; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad134c[0x4]; // 0x134c
public:
	CountdownTimer m_EnemyVision; // 0x1350	
	float latch_duration; // 0x1368	
	float speed; // 0x136c	
	int32_t destroy_attacks; // 0x1370	
	int32_t hero_attack_multiplier; // 0x1374	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_Strike_Crit : public CDOTA_Buff
{
public:
	int32_t strike_crit_mult; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Elder_Titan_NaturalOrder : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Wisp_Relocate_Return : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
	Vector m_vecReturnPosition; // 0x133c	
	float return_time; // 0x1348	
	ParticleIndex_t m_nFXTimeRemaining; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SpiritBreaker_PlanarPocketAura : public CDOTA_Buff
{
public:
	bool m_bHasActivated; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	int32_t radius; // 0x133c	
	int32_t magic_resistance; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BountyHunter_WindWalk_Fade : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Rattletrap_PowerCogs : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Leshrac_Lightning_Storm_Scepter_Thinker : public CDOTA_Buff
{
public:
	float pulse_nova_lightning_interval; // 0x1338	
	int32_t radius; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Antimage_DampenMagic_Bonus : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Antimage_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Warlock_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bane_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Earth_Spirit_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Queen_Of_Pain_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_50_Crit_40 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Seasonal_CNY_Balloon : public CDOTA_BaseNPC_Additive
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1870
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkExcludeByName "m_angRotation"
// MNetworkExcludeByName "m_angRotation[0]"
// MNetworkExcludeByName "m_angRotation[1]"
// MNetworkVarNames "int m_iDamageLevel"
// MNetworkVarNames "HParticleSystemDefinitionStrong m_nFXIndex"
// MNetworkVarNames "HParticleSystemDefinitionStrong m_nFXIndexDestruction"
// MNetworkVarNames "QAngle m_angInitialAngles"
// MNetworkVarNames "HSequence m_hHeroStatueSequence"
// MNetworkVarNames "HSequence m_hConstantLayerSequence"
// MNetworkVarNames "float m_fHeroStatueCycle"
// MNetworkVarNames "int m_iHeroStatueStatusEffectIndex"
// MNetworkVarNames "bool m_bHeroStatue"
// MNetworkVarNames "bool m_bBattleCup"
// MNetworkVarNames "char m_HeroStatueInscription"
// MNetworkVarNames "PlayerID_t m_iHeroStatueOwnerPlayerID"
// MNetworkVarNames "Color m_ParticleTintColor"
class CDOTA_BaseNPC_Building : public CDOTA_BaseNPC
{
public:
	// MNetworkEnable
	int32_t m_iDamageLevel; // 0x1768	
private:
	[[maybe_unused]] uint8_t __pad176c[0x4]; // 0x176c
public:
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeIParticleSystemDefinition > m_nFXIndex; // 0x1770	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeIParticleSystemDefinition > m_nFXIndexDestruction; // 0x1778	
	// MNetworkEnable
	QAngle m_angInitialAngles; // 0x1780	
	// MNetworkEnable
	HSequence m_hHeroStatueSequence; // 0x178c	
	// MNetworkEnable
	HSequence m_hConstantLayerSequence; // 0x1790	
	// MNetworkEnable
	float m_fHeroStatueCycle; // 0x1794	
	// MNetworkEnable
	int32_t m_iHeroStatueStatusEffectIndex; // 0x1798	
	// MNetworkEnable
	bool m_bHeroStatue; // 0x179c	
	// MNetworkEnable
	bool m_bBattleCup; // 0x179d	
	// MNetworkEnable
	char m_HeroStatueInscription[32]; // 0x179e	
private:
	[[maybe_unused]] uint8_t __pad17be[0x2]; // 0x17be
public:
	// MNetworkEnable
	PlayerID_t m_iHeroStatueOwnerPlayerID; // 0x17c0	
	// MNetworkEnable
	Color m_ParticleTintColor; // 0x17c4	
	CUtlSymbolLarge m_sDestroySnd; // 0x17c8	
	CUtlSymbolLarge m_sDmgLvl1Snd; // 0x17d0	
	CUtlSymbolLarge m_sDmgLvl2Snd; // 0x17d8	
	CUtlSymbolLarge m_iszLinkedUnit; // 0x17e0	
	CUtlSymbolLarge m_iszAmbientEffectName; // 0x17e8	
	CUtlSymbolLarge m_iszDestructionEffectName; // 0x17f0	
	CUtlSymbolLarge m_iszDamageModelLevel1; // 0x17f8	
	CUtlSymbolLarge m_iszDamageModelLevel2; // 0x1800	
	CUtlSymbolLarge m_iszDamageEffectLevel1; // 0x1808	
	CUtlSymbolLarge m_iszDamageEffectLevel2; // 0x1810	
	float m_flDamageThresholdLevel1; // 0x1818	
	float m_flDamageThresholdLevel2; // 0x181c	
	bool m_bVulnerableOnCreepSpawn; // 0x1820	
	bool m_bHasOverriddenDestructionEffect; // 0x1821	
private:
	[[maybe_unused]] uint8_t __pad1822[0x2]; // 0x1822
public:
	int32_t m_iUpgradeIdentifier; // 0x1824	
	int32_t m_iInvulnCount; // 0x1828	
	int32_t m_iPlayerOwner; // 0x182c	
	DOTA_LANE m_Lane; // 0x1830	
	float m_fAmountAlongLane[2]; // 0x1834	
	Vector m_vOverrideInitialAngles; // 0x183c	
	Vector m_vOverrideInitialAnglesBG; // 0x1848	
	int32_t m_nOverrideInitialAngles; // 0x1854	
	CountdownTimer m_IdleRareAnimationTime; // 0x1858	
	
	// Static fields:
	static GameTime_t &Get_m_fLastAttackWarnTimers(){return *reinterpret_cast<GameTime_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_BaseNPC_Building")->GetStaticFields()[0]->m_pInstance);};
	
	// Datamap fields:
	// int32_t InputSetInvulnCount; // 0x0
	// void InputReduceInvulnCount; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x930
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkIncludeByName "m_bClientSideRagdoll"
// MNetworkVarNames "bool m_bInitiallyPopulateInterpHistory"
// MNetworkVarNames "bool m_bAnimGraphUpdateEnabled"
// MNetworkVarNames "Vector m_vecForce"
// MNetworkVarNames "int32 m_nForceBone"
// MNetworkVarNames "PhysicsRagdollPose_t* m_pRagdollPose"
// MNetworkVarNames "bool m_bRagdollClientSide"
class CBaseAnimGraph : public CBaseModelEntity
{
private:
	[[maybe_unused]] uint8_t __pad0758[0x78]; // 0x758
public:
	// MNetworkEnable
	bool m_bInitiallyPopulateInterpHistory; // 0x7d0	
private:
	[[maybe_unused]] uint8_t __pad07d1[0x7]; // 0x7d1
public:
	IChoreoServices* m_pChoreoServices; // 0x7d8	
	// MNetworkEnable
	bool m_bAnimGraphUpdateEnabled; // 0x7e0	
private:
	[[maybe_unused]] uint8_t __pad07e1[0x3]; // 0x7e1
public:
	float m_flMaxSlopeDistance; // 0x7e4	
	Vector m_vLastSlopeCheckPos; // 0x7e8	
	bool m_bAnimationUpdateScheduled; // 0x7f4	
private:
	[[maybe_unused]] uint8_t __pad07f5[0x3]; // 0x7f5
public:
	// MNetworkEnable
	Vector m_vecForce; // 0x7f8	
	// MNetworkEnable
	int32_t m_nForceBone; // 0x804	
private:
	[[maybe_unused]] uint8_t __pad0808[0x10]; // 0x808
public:
	// MNetworkEnable
	PhysicsRagdollPose_t* m_pRagdollPose; // 0x818	
	// MNetworkEnable
	// MNetworkChangeCallback "OnClientRagdollChanged"
	bool m_bRagdollClientSide; // 0x820	
	
	// Datamap fields:
	// void m_pMainGraphController; // 0x7c8
	// void CBaseAnimGraphChoreoServicesThink; // 0x0
	// float InputSetPlaybackRate; // 0x0
	// CUtlSymbolLarge InputSetBodyGroup; // 0x0
	// void InputBecomeRagdoll; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ForestTrollHighPriest_ManaAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PineCone_AcornShot_DelayThinker : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
	int32_t m_nSourceProjectileHandle; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Wind_Waker : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Guardian_Greaves : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Ward_Dispenser : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Courier : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Necronomicon_Mana_Aura_2 : public CDOTA_Buff
{
public:
	float aura_mana_regen; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Hoodwink_ScurryDuration : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_TreeDance_Activity : public CDOTA_Buff
{
public:
	float m_fAbilityRangePct; // 0x1338	
	float m_bIsSpring; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Legion_Commander_Duel : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Legion_Commander_OverwhelmingOdds : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed_creeps; // 0x1338	
	int32_t bonus_attack_speed; // 0x133c	
	float armor_per_creep; // 0x1340	
	float armor_per_hero; // 0x1344	
	int32_t m_nTotalBonus; // 0x1348	
	float m_flBonusArmor; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_NagaSiren_SongOfTheSiren_IgnoreMe : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Brewmaster_CinderBrew : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// Is Abstract
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_Instance : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Broodmother_SpinWeb : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hWebs; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Luna_LunarBlessing_Smoke : public CDOTA_Modifier_Invisible
{
public:
	int32_t bonus_speed_day; // 0x1348	
	int32_t bonus_speed_night; // 0x134c	
	int32_t break_distance_day; // 0x1350	
	int32_t break_distance_night; // 0x1354	
	int32_t visibility_radius; // 0x1358	
	int32_t bonus_movement_speed; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Assassin_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Warlock_Imp_ExplodeThinker : public CDOTA_Buff
{
public:
	float explosion_radius; // 0x1338	
	float explosion_dmg; // 0x133c	
	float explosion_nonhero_reduce; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lich_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tiny_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Razor_StaticLink_Debuff : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
	int32_t attack_speed_factor; // 0x133c	
	int32_t drain_rate; // 0x1340	
	int32_t drain_armor; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Sven_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ChangeTreeModel_Thinker : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTree; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlString m_strModel; // 0x1340	
	int32_t m_nModelChangeToken; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cleave_35 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_350 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FrostbittenGolem_TimeWarpAura_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_cdr; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mutation_Crit_Chance : public CDOTA_Buff
{
public:
	int32_t m_iChance; // 0x1338	
	int32_t m_iDamageMultiplier; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Fluffy_Hat : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Tome_of_aghanim : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Pavise : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1338	
	float bonus_mana; // 0x133c	
	int32_t bonus_health; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Phylactery : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
	int32_t bonus_mana; // 0x133c	
	float bonus_mana_regen; // 0x1340	
	int32_t bonus_spell_damage; // 0x1344	
	float slow_duration; // 0x1348	
	int32_t bonus_all_stats; // 0x134c	
	CUtlVector< CDOTABaseAbility* > vecActivatedAbilities; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_CelestialHammer_Slow : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hoodwink_Decoy_Illusion : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_DarkWillow_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slark_Fish_Bait_Pre : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Disruptor_KineticField : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Brewmaster_DrunkenBrawler_Passive : public CDOTA_Buff
{
public:
	int32_t dodge_chance; // 0x1338	
	int32_t crit_chance; // 0x133c	
	int32_t crit_multiplier; // 0x1340	
	int32_t attack_speed; // 0x1344	
	float active_multiplier; // 0x1348	
	int32_t stun_chance; // 0x134c	
	float bash_cooldown; // 0x1350	
	float stun_duration; // 0x1354	
	float slow_duration; // 0x1358	
	int32_t bonus_move_speed; // 0x135c	
	int32_t bonus_status_resist; // 0x1360	
	int32_t armor; // 0x1364	
	int32_t magic_resist; // 0x1368	
	float m_flLastBash; // 0x136c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Enchantress_Enchant : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// Is Abstract
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Venomancer_PoisonStingBase : public CDOTA_Buff
{
public:
	int32_t m_iDamage; // 0x1338	
	int32_t movement_speed; // 0x133c	
	int32_t m_nTicksRemaining; // 0x1340	
	float m_flAttackDamage; // 0x1344	
	int32_t hp_regen_reduction; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Beastmaster : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Truesight_Aura : public CDOTA_Buff
{
public:
	int32_t m_nAuraRadius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Gyrocopter_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x840
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CItem : public CBaseAnimatingActivity
{
private:
	[[maybe_unused]] uint8_t __pad0768[0x8]; // 0x768
public:
	CEntityIOOutput m_OnPlayerTouch; // 0x770	
	CEntityIOOutput m_OnPlayerPickup; // 0x798	
	bool m_bActivateWhenAtRest; // 0x7c0	
private:
	[[maybe_unused]] uint8_t __pad07c1[0x7]; // 0x7c1
public:
	CEntityIOOutput m_OnCacheInteraction; // 0x7c8	
	CEntityIOOutput m_OnGlovePulled; // 0x7f0	
	Vector m_vOriginalSpawnOrigin; // 0x818	
	QAngle m_vOriginalSpawnAngles; // 0x824	
	bool m_bPhysStartAsleep; // 0x830	
	
	// Datamap fields:
	// void CItemItemTouch; // 0x0
	// void CItemMaterialize; // 0x0
	// void CItemComeToRest; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1390
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Spectre_ActiveDispersion_Thinker : public CDOTA_Buff
{
public:
	float m_fDamage; // 0x1338	
	float m_fLastRadius; // 0x133c	
	float m_fCurRadius; // 0x1340	
	GameTime_t m_fLastThink; // 0x1344	
	bool m_bContracting; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad1349[0x7]; // 0x1349
public:
	CountdownTimer m_ViewerTimer; // 0x1350	
	ParticleIndex_t m_nFXIndex; // 0x1368	
private:
	[[maybe_unused]] uint8_t __pad136c[0x4]; // 0x136c
public:
	CUtlVector< CHandle< CBaseEntity > > m_EntitiesHit; // 0x1370	
	int32_t speed; // 0x1388	
	int32_t radius; // 0x138c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Light_Collector : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Arcane_Scout : public CDOTA_Item
{
public:
	CHandle< CBaseEntity > m_hScout; // 0x620	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ElixerHealing : public CDOTA_Buff
{
public:
	int32_t health; // 0x1338	
	int32_t mana; // 0x133c	
	float duration; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Quickening_Charm : public CDOTA_Buff_Item
{
public:
	int32_t bonus_cooldown; // 0x1338	
	int32_t bonus_health_regen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Moonshard : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Crimson_Guard_NoStack : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Samurai_Tabi_Str : public CDOTA_Buff_Item
{
public:
	int32_t stat_per_tick; // 0x1338	
	int32_t bonus_all_stats; // 0x133c	
	float base_interval; // 0x1340	
	int32_t max_tick_count; // 0x1344	
	float str_root_duration; // 0x1348	
	float str_root_cooldown; // 0x134c	
	int32_t str_root_chance; // 0x1350	
	float str_bonus_damage; // 0x1354	
	int32_t iCurrentTickCount; // 0x1358	
	GameTime_t m_flLastRootTime; // 0x135c	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Marci_CompanionRun_AllyMovespeed : public CDOTA_Buff
{
public:
	float ally_movespeed_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_FireWreath_Swipe : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_CloudRunStart : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tusk_IceShard : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slark_Fish_Bait_Post : public CDOTA_Buff
{
public:
	int32_t attack_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_Wex : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DarkSeer_Vacuum : public CDOTA_Buff
{
public:
	float pull_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Furion_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DeathProphet_CryptSwarm_Slow : public CDOTA_Buff
{
public:
	int32_t slow_percent; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Earthshaker_EnchantTotem_Animation : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Omniknight_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Demon_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Elder_Titan_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Queen_Of_Pain_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Lifesteal_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Night_Vision_400 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Naga_Siren : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Radar_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	bool m_bEverFound; // 0x133c	
	bool m_bBonus; // 0x133d	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x760
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CLightComponent::Storage_t m_CLightComponent"
class CLightEntity : public CBaseModelEntity
{
public:
	// MNetworkEnable
	// MNetworkUserGroup "CLightComponent"
	// MNetworkAlias "CLightComponent"
	// MNetworkTypeAlias "CLightComponent"
	CLightComponent* m_CLightComponent; // 0x758	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Corruption_Debuff : public CDOTA_Buff
{
public:
	float value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Caster_Rapier : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Pirate_Hat : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Greater_Faerie_Fire : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Diffusal_Blade : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MaskOfMadness_Berserk : public CDOTA_Buff
{
public:
	int32_t berserk_bonus_attack_speed; // 0x1338	
	int32_t berserk_bonus_movement_speed; // 0x133c	
	int32_t berserk_armor_reduction; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Reaver : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_Celestial_Hammer_Cast_Range : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hoodwink_Caltrops_Debuff : public CDOTA_Buff
{
public:
	int32_t movespeed_pct; // 0x1338	
	int32_t tick_damage; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Winter_Wyvern_Arctic_Burn_Frost_Attack : public CDOTA_Buff
{
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Techies_ReactiveTazer : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1338[0x8]; // 0x1338
public:
	int32_t bonus_ms; // 0x1340	
	int32_t stun_radius; // 0x1344	
	float stun_duration; // 0x1348	
	int32_t damage_percent; // 0x134c	
	int32_t m_nDamageRemaining; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x698
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tusk_Snowball : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x10]; // 0x578
public:
	int32_t snowball_windup_radius; // 0x588	
	int32_t snowball_radius; // 0x58c	
	int32_t snowball_grow_rate; // 0x590	
	int32_t snowball_damage; // 0x594	
	int32_t snowball_damage_bonus; // 0x598	
	float stun_duration; // 0x59c	
	int32_t bonus_damage; // 0x5a0	
	float bonus_stun; // 0x5a4	
	int32_t snowball_speed; // 0x5a8	
	int32_t snowball_speed_bonus; // 0x5ac	
	float snowball_duration; // 0x5b0	
	Vector m_vProjectileLocation; // 0x5b4	
	CUtlVector< CHandle< CBaseEntity > > m_hSnowballedUnits; // 0x5c0	
	ParticleIndex_t m_nFXIndex; // 0x5d8	
private:
	[[maybe_unused]] uint8_t __pad05dc[0x4]; // 0x5dc
public:
	CountdownTimer ctSnowball; // 0x5e0	
	bool m_bSpeakAlly; // 0x5f8	
	bool m_bIsExpired; // 0x5f9	
	bool m_bInWindup; // 0x5fa	
private:
	[[maybe_unused]] uint8_t __pad05fb[0x1]; // 0x5fb
public:
	CHandle< CBaseEntity > m_hPrimaryTarget; // 0x5fc	
	int32_t m_nContainedValidUnits; // 0x600	
	bool m_bEndingSnowball; // 0x604	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_KeeperOfTheLight_Will_O_Wisp_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	float wisp_damage; // 0x133c	
	float off_duration; // 0x1340	
	float off_duration_initial; // 0x1344	
	float on_duration; // 0x1348	
	int32_t hit_count; // 0x134c	
	int32_t m_iAttackCount; // 0x1350	
	GameTime_t m_flNextTimeOn; // 0x1354	
	bool m_bActive; // 0x1358	
private:
	[[maybe_unused]] uint8_t __pad1359[0x3]; // 0x1359
public:
	ParticleIndex_t m_nFXIndex; // 0x135c	
	ParticleIndex_t m_nFXIndexB; // 0x1360	
	GameTime_t m_flNextTime; // 0x1364	
	CUtlVector< CHandle< CBaseEntity > > m_vecDamagedEntities; // 0x1368	
	float m_flCorrectionTime; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Undying_Tombstone_Zombie_Modifier : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Meepo_Geostrike : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DoomBringer_InfernalBlade_Burn : public CDOTA_Buff
{
public:
	int32_t burn_damage; // 0x1338	
	float burn_damage_pct; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Spectre_SpectralDaggerPath : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1338[0x18]; // 0x1338
public:
	CUtlVector< CHandle< CBaseEntity > > m_hUnitsInPath; // 0x1350	
	int32_t path_radius; // 0x1368	
	int32_t vision_radius; // 0x136c	
	int32_t dagger_radius; // 0x1370	
	float buff_persistence; // 0x1374	
	float dagger_grace_period; // 0x1378	
	float dagger_path_duration; // 0x137c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Broodmother_InsatiableHunger : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dazzle_Rain_Of_Vermin : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	float interval; // 0x133c	
	float hex_chance; // 0x1340	
	float hex_duration; // 0x1344	
	int32_t damage; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DeathProphet_SpiritSiphon_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_QueenOfPain_SonicWave_Knockback : public CDOTA_Modifier_Knockback
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_WitchDoctor_Voodoo_Switcheroo : public CDOTA_Buff
{
public:
	Vector m_vSavedPos; // 0x1338	
	CHandle< CBaseEntity > m_hSavedAbility; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13a8
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Razor_PlasmaField_Thinker : public CDOTA_Buff
{
public:
	float m_fLastRadius; // 0x1338	
	float m_fCurRadius; // 0x133c	
	GameTime_t m_fLastThink; // 0x1340	
	bool m_bContracting; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1345[0x3]; // 0x1345
public:
	CountdownTimer m_ViewerTimer; // 0x1348	
	ParticleIndex_t m_nFXIndex; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1364[0x4]; // 0x1364
public:
	CUtlVector< CHandle< CBaseEntity > > m_EntitiesHit; // 0x1368	
	int32_t speed; // 0x1380	
	int32_t radius; // 0x1384	
	float damage_min; // 0x1388	
	float damage_max; // 0x138c	
	int32_t slow_min; // 0x1390	
	int32_t slow_max; // 0x1394	
	float slow_duration; // 0x1398	
	bool m_bHasCreatedFx; // 0x139c	
private:
	[[maybe_unused]] uint8_t __pad139d[0x3]; // 0x139d
public:
	float total_ability_time; // 0x13a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hide_On_Minimap : public CDOTA_Buff
{
public:
	bool m_bEnemiesOnly; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Filler_Tooltip : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Creep_Siege : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Visage_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Alchemist_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lifestealer_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Death_Prophet_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CSkyboxReference : public CBaseEntity
{
public:
	WorldGroupId_t m_worldGroupId; // 0x4a8	
	CHandle< CSkyCamera > m_hSkyCamera; // 0x4ac	
	
	// Datamap fields:
	// const char * worldGroupID; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Naginata : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Ceremonial_Robe : public CDOTA_Buff_Item
{
public:
	int32_t bonus_mana; // 0x1338	
	int32_t aura_radius; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Blight_Stone_Corruption : public CDOTA_Buff
{
public:
	int32_t corruption_armor; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_FireWreath_AoE : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Dawnbreaker_Solar_Guardian : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hThinker; // 0x578	
	bool m_bJumping; // 0x57c	
private:
	[[maybe_unused]] uint8_t __pad057d[0x3]; // 0x57d
public:
	CHandle< CBaseEntity > m_hTeleportTarget; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_VoidSpirit_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_UnperchedStunned : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Techies_LandMines : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Shredder_Flamethrower_TreeFire_Thinker : public CDOTA_Buff
{
public:
	CUtlVector< CUtlPair< CHandle< CBaseEntity >, GameTime_t > > m_vecTreeFires; // 0x1338	
	bool m_bCleanupWhenEmpty; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Visage_SoulAssumption : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t stack_limit; // 0x133c	
	int32_t damage_limit; // 0x1340	
	float stack_duration; // 0x1344	
	float damage_min; // 0x1348	
	float damage_max; // 0x134c	
	ParticleIndex_t m_nFxIndexA; // 0x1350	
	ParticleIndex_t m_nFxIndexB; // 0x1354	
	int32_t iCur_stack; // 0x1358	
private:
	[[maybe_unused]] uint8_t __pad135c[0x1c]; // 0x135c
public:
	float m_fTotalDamage; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Treant_LivingArmor : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Treant_LifeBomb_Explode : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Shadow_Demon_Purge_Slow : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Razor_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_NotOnMinimap : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7b0
// Has VTable
// Construct allowed
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkIncludeByUserGroup "Origin"
// MNetworkIncludeByName "CGameSceneNode::m_hParent"
// MNetworkIncludeByName "CGameSceneNode::m_hierarchyAttachName"
// MNetworkIncludeByName "m_nMinCPULevel"
// MNetworkIncludeByName "m_nMaxCPULevel"
// MNetworkIncludeByName "m_nMinGPULevel"
// MNetworkIncludeByName "m_nMaxGPULevel"
// MNetworkVarNames "uint16 m_RopeFlags"
// MNetworkVarNames "int16 m_Slack"
// MNetworkVarNames "float32 m_Width"
// MNetworkVarNames "float32 m_TextureScale"
// MNetworkVarNames "uint8 m_nSegments"
// MNetworkVarNames "bool m_bConstrainBetweenEndpoints"
// MNetworkVarNames "HMaterialStrong m_iRopeMaterialModelIndex"
// MNetworkVarNames "uint8 m_Subdiv"
// MNetworkVarNames "uint8 m_nChangeCount"
// MNetworkVarNames "int16 m_RopeLength"
// MNetworkVarNames "uint8 m_fLockedPoints"
// MNetworkVarNames "float32 m_flScrollSpeed"
// MNetworkVarNames "CHandle< CBaseEntity> m_hStartPoint"
// MNetworkVarNames "CHandle< CBaseEntity> m_hEndPoint"
// MNetworkVarNames "AttachmentHandle_t m_iStartAttachment"
// MNetworkVarNames "AttachmentHandle_t m_iEndAttachment"
class CRopeKeyframe : public CBaseModelEntity
{
private:
	[[maybe_unused]] uint8_t __pad0758[0x8]; // 0x758
public:
	// MNetworkEnable
	uint16_t m_RopeFlags; // 0x760	
private:
	[[maybe_unused]] uint8_t __pad0762[0x6]; // 0x762
public:
	CUtlSymbolLarge m_iNextLinkName; // 0x768	
	// MNetworkEnable
	int16_t m_Slack; // 0x770	
private:
	[[maybe_unused]] uint8_t __pad0772[0x2]; // 0x772
public:
	// MNetworkEnable
	float m_Width; // 0x774	
	// MNetworkEnable
	// MNetworkBitCount "10"
	// MNetworkMinValue "0,100000"
	// MNetworkMaxValue "10,000000"
	float m_TextureScale; // 0x778	
	// MNetworkEnable
	uint8_t m_nSegments; // 0x77c	
	// MNetworkEnable
	bool m_bConstrainBetweenEndpoints; // 0x77d	
private:
	[[maybe_unused]] uint8_t __pad077e[0x2]; // 0x77e
public:
	CUtlSymbolLarge m_strRopeMaterialModel; // 0x780	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeIMaterial2 > m_iRopeMaterialModelIndex; // 0x788	
	// MNetworkEnable
	uint8_t m_Subdiv; // 0x790	
	// MNetworkEnable
	uint8_t m_nChangeCount; // 0x791	
	// MNetworkEnable
	int16_t m_RopeLength; // 0x792	
	// MNetworkEnable
	uint8_t m_fLockedPoints; // 0x794	
	bool m_bCreatedFromMapFile; // 0x795	
private:
	[[maybe_unused]] uint8_t __pad0796[0x2]; // 0x796
public:
	// MNetworkEnable
	float m_flScrollSpeed; // 0x798	
	bool m_bStartPointValid; // 0x79c	
	bool m_bEndPointValid; // 0x79d	
private:
	[[maybe_unused]] uint8_t __pad079e[0x2]; // 0x79e
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hStartPoint; // 0x7a0	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hEndPoint; // 0x7a4	
	// MNetworkEnable
	AttachmentHandle_t m_iStartAttachment; // 0x7a8	
	// MNetworkEnable
	AttachmentHandle_t m_iEndAttachment; // 0x7a9	
	
	// Datamap fields:
	// float InputSetScrollSpeed; // 0x0
	// Vector InputSetForce; // 0x0
	// void InputBreak; // 0x0
	// int32_t Breakable; // 0x7fffffff
	// int32_t Collide; // 0x7fffffff
	// int32_t Barbed; // 0x7fffffff
	// int32_t UseWind; // 0x7fffffff
	// int32_t Dangling; // 0x7fffffff
	// int32_t Type; // 0x7fffffff
	// int32_t RopeShader; // 0x7fffffff
	// CUtlString RopeMaterial; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_StonehallGeneral_OverwhelmingOdds : public CDOTABaseAbility
{
public:
	int32_t max_steps; // 0x578	
	Vector m_vTarget; // 0x57c	
	Vector m_vDir; // 0x588	
	int32_t m_nSteps; // 0x594	
	ParticleIndex_t m_nFXIndex; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Drow_Ranger_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Necrophos_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dragon_Knight_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Juggernaut_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tusk_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Legion_Commander : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xc38
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_nTutorialState"
// MNetworkVarNames "int m_nTaskProgress"
// MNetworkVarNames "int m_nTaskSteps"
// MNetworkVarNames "int m_nTaskSecondsRemianing"
// MNetworkVarNames "int m_nUIState"
// MNetworkVarNames "int m_nShopState"
// MNetworkVarNames "Vector m_TargetLocation"
// MNetworkVarNames "CSpeechBubbleInfo m_SpeechBubbles"
// MNetworkVarNames "int m_nLocationID"
// MNetworkVarNames "char m_GuideStr"
// MNetworkVarNames "char m_QuickBuyStr"
class CDotaTutorialNetworker : public CBaseEntity
{
public:
	// MNetworkEnable
	int32_t m_nTutorialState; // 0x4a8	
	// MNetworkEnable
	int32_t m_nTaskProgress; // 0x4ac	
	// MNetworkEnable
	int32_t m_nTaskSteps; // 0x4b0	
	// MNetworkEnable
	int32_t m_nTaskSecondsRemianing; // 0x4b4	
	// MNetworkEnable
	int32_t m_nUIState; // 0x4b8	
	// MNetworkEnable
	int32_t m_nShopState; // 0x4bc	
	// MNetworkEnable
	Vector m_TargetLocation; // 0x4c0	
private:
	[[maybe_unused]] uint8_t __pad04cc[0x4]; // 0x4cc
public:
	// MNetworkEnable
	// MNetworkTypeAlias "m_SpeechBubbles"
	CUtlVectorEmbeddedNetworkVar< CSpeechBubbleInfo > m_SpeechBubbles; // 0x4d0	
	// MNetworkEnable
	int32_t m_nLocationID; // 0xa30	
	// MNetworkEnable
	char m_GuideStr[256]; // 0xa34	
	// MNetworkEnable
	char m_QuickBuyStr[256]; // 0xb34	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MudGolem_RockDestroy : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	float duration; // 0x133c	
	int32_t shard_health; // 0x1340	
	int32_t shard_damage; // 0x1344	
	int32_t shard_duration; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_AncientGuardian : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Lunar_Crest_Barrier_Reduction : public CDOTA_Buff
{
public:
	int32_t barrier_block; // 0x1338	
	float m_flDamageTotal; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Barricade_Blocker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rooted : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Chipped_Vest : public CDOTA_Buff_Item
{
public:
	float hp_regen; // 0x1338	
	int32_t damage_return_hero; // 0x133c	
	int32_t damage_return_creep; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Grove_Bow : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Holy_Locket : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Mjollnir : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Pipe : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1338	
	float health_regen; // 0x133c	
	int32_t magic_resistance; // 0x1340	
	int32_t aura_radius; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Hood_Of_Defiance : public CDOTA_Buff_Item
{
public:
	int32_t bonus_spell_resist; // 0x1338	
	float bonus_health_regen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_ForceStaff : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_VitalityBooster : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hoodwink_Scurry_Passive : public CDOTA_Buff
{
public:
	int32_t evasion; // 0x1338	
	int32_t radius; // 0x133c	
	int32_t bonus_active_evasion; // 0x1340	
	ParticleIndex_t m_nFXIndex; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DarkWillow_Creature_Invulnerable : public CDOTA_Buff
{
public:
	int32_t m_nOverrideAnim; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_MonkeyKing_UnTransform : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bristleback_Warpath : public CDOTA_Buff
{
public:
	int32_t damage_per_stack; // 0x1338	
	int32_t move_speed_per_stack; // 0x133c	
	int32_t max_stacks; // 0x1340	
	float stack_duration; // 0x1344	
	GameTime_t m_flMaxStackStartTime; // 0x1348	
	bool m_bSuppressKillEater; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Disruptor_Thunder_Strike : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Treant_LeechSeed : public CDOTA_Buff
{
public:
	float damage_interval; // 0x1338	
	int32_t leech_damage; // 0x133c	
	int32_t movement_slow; // 0x1340	
	int32_t radius; // 0x1344	
	int32_t projectile_speed; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Batrider_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_BountyHunter_Jinada : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Clinkz_Burning_Army : public CDOTA_Buff
{
public:
	float attack_rate; // 0x1338	
	int32_t damage_percent; // 0x133c	
	int32_t skeleton_health; // 0x1340	
	ParticleIndex_t m_nFXIndex; // 0x1344	
	int32_t skeleton_building_damage_reduction; // 0x1348	
	int32_t m_nDamageCounter; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tiny_Tree_Channel : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Morphling_Replicate : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x578	
	CHandle< CBaseEntity > m_hScepterIllusion; // 0x57c	
	bool m_bIsAltCastState; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Razor_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SandKing_Impale : public CDOTA_Buff
{
public:
	float m_flPower; // 0x1338	
	float m_flStartZ; // 0x133c	
	float m_flCurTime; // 0x1340	
	bool m_bDamageApplied; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Doom_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bane_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Nyx_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ogre_Magi_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Corruption_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Abaddon : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_DoomBringer : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_JungleVarmint : public CDOTA_BaseNPC_Additive
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Spawnlord_Master_Freeze_Root : public CDOTA_Buff
{
public:
	int32_t max_ticks; // 0x1338	
	float damage; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_MartyrsPlate : public CDOTA_Buff_Item
{
public:
	float duration; // 0x1338	
	int32_t magic_resist; // 0x133c	
	float hp_regen; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Pupils_gift : public CDOTA_Buff_Item
{
public:
	int32_t secondary_stats; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_RingOfAquila : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
	int32_t bonus_agility; // 0x133c	
	int32_t bonus_intellect; // 0x1340	
	int32_t bonus_damage; // 0x1344	
	int32_t bonus_armor; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Soul_Booster : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dawnbreaker_Solar_Guardian_Disable : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nCasterFXIndex; // 0x1338	
	ParticleIndex_t m_nStatusFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ArcWarden_MagneticField_Attack_Speed : public CDOTA_Buff
{
public:
	int32_t attack_speed_bonus; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_EMP_Pull_Thinker : public CDOTA_Buff
{
public:
	int32_t area_of_effect; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dazzle_Weave_Armor : public CDOTA_Buff
{
public:
	float armor_per_second; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Viper_Nose_Dive_Effect : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TemplarAssassin_Trap : public CDOTA_Modifier_Invisible
{
public:
	int32_t bonus_vision; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mirana_Leap_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TeamShowcase_Global : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Building_DispelsSmoke : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_HarpyStorm_ChainLightning : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPathCorner : public CPointEntity
{
public:
	float m_flWait; // 0x4a8	
	float m_flRadius; // 0x4ac	
	CEntityIOOutput m_OnPass; // 0x4b0	
	
	// Datamap fields:
	// CUtlSymbolLarge InputSetNextPathCorner; // 0x0
	// void InputInPass; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bristleback_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bristleback : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Range_400 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Strength_30 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x68
// Has VTable
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_iReapplyProvisionParity"
// MNetworkVarNames "EHANDLE m_hOuter"
// MNetworkVarNames "attributeprovidertypes_t m_ProviderType"
class CAttributeManager
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	CUtlVector< CHandle< CBaseEntity > > m_Providers; // 0x8	
	CUtlVector< CHandle< CBaseEntity > > m_Receivers; // 0x20	
	// MNetworkEnable
	int32_t m_iReapplyProvisionParity; // 0x38	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hOuter; // 0x3c	
	bool m_bPreventLoopback; // 0x40	
private:
	[[maybe_unused]] uint8_t __pad0041[0x3]; // 0x41
public:
	// MNetworkEnable
	attributeprovidertypes_t m_ProviderType; // 0x44	
	CUtlVector< CAttributeManager::cached_attribute_float_t > m_CachedResults; // 0x48	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seasonal_TI9_MonkeyPoop : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DaggerOfRistul_Buff : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Trusty_Shovel : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Disperser_Attack_Debuff : public CDOTA_Buff
{
public:
	int32_t attack_speed_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nullifier : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1338	
	int32_t bonus_regen; // 0x133c	
	int32_t bonus_damage; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Medallion_Of_Courage_Armor_Reduction : public CDOTA_Buff
{
public:
	int32_t armor_reduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_SacredRelic : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Bristleback_Bristleback : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Bear_Empty1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_LoneDruid_SpiritBear_Demolish : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_LoneDruid_SpiritBear_Entangle_Effect : public CDOTA_Buff
{
public:
	int32_t m_iEntangleDamage; // 0x1338	
	float interval_rate; // 0x133c	
	int32_t damage; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Silencer_GlaivesOfWisdom_Debuff : public CDOTA_Buff
{
public:
	int32_t int_steal; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Furion_ForceOfNature : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_TemplarAssassin_Meld : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_WitchDoctor_Cask_Thinker : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Enigma_Black_Hole_Thinker_Scepter : public CDOTA_Buff
{
public:
	int32_t scepter_radius; // 0x1338	
	ParticleIndex_t n_FXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Kunkka_Torrent_Storm : public CDOTA_Buff
{
public:
	int32_t torrent_min_distance; // 0x1338	
	int32_t torrent_max_distance; // 0x133c	
	int32_t m_iExplosionQuadrant; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_StormSpirit_ElectricVortex : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Juggernaut_Omnislash : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
	CHandle< CBaseEntity > m_hLastTarget; // 0x133c	
	int32_t m_nJumps; // 0x1340	
	int32_t bonus_damage; // 0x1344	
	int32_t bonus_attack_speed; // 0x1348	
	int32_t omni_slash_radius; // 0x134c	
	float attack_rate_multiplier; // 0x1350	
	bool m_bFirstHit; // 0x1354	
private:
	[[maybe_unused]] uint8_t __pad1355[0x3]; // 0x1355
public:
	int32_t m_iTotalDamage; // 0x1358	
	int32_t m_iHeroDamage; // 0x135c	
	int32_t m_iKilledHeroes; // 0x1360	
	GameTime_t m_fNextAttackTime; // 0x1364	
	bool m_bScepterCast; // 0x1368	
	bool m_bReflection; // 0x1369	
	bool m_bEndNext; // 0x136a	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_NPXBuff : public CDOTA_Buff
{
public:
	int32_t m_nCurReduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BackdoorProtectionInBase : public CDOTA_Modifier_BackdoorProtection
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_BlackDrake_MagicAmplification_Aura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5e0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CMultiSource : public CLogicalEntity
{
public:
	CHandle< CBaseEntity > m_rgEntities[32]; // 0x4a8	
	int32_t m_rgTriggered[32]; // 0x528	
	CEntityIOOutput m_OnTrigger; // 0x5a8	
	int32_t m_iTotal; // 0x5d0	
private:
	[[maybe_unused]] uint8_t __pad05d4[0x4]; // 0x5d4
public:
	CUtlSymbolLarge m_globalstate; // 0x5d8	
	
	// Datamap fields:
	// void CMultiSourceRegister; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLogicNavigation : public CLogicalEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x8]; // 0x4a8
public:
	bool m_isOn; // 0x4b0	
private:
	[[maybe_unused]] uint8_t __pad04b1[0x3]; // 0x4b1
public:
	navproperties_t m_navProperty; // 0x4b4	
	
	// Datamap fields:
	// void InputTurnOn; // 0x0
	// void InputTurnOff; // 0x0
	// void InputToggle; // 0x0
	// CUtlString navprop; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x548
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CEnvEntityMaker : public CPointEntity
{
public:
	Vector m_vecEntityMins; // 0x4a8	
	Vector m_vecEntityMaxs; // 0x4b4	
	CHandle< CBaseEntity > m_hCurrentInstance; // 0x4c0	
	CHandle< CBaseEntity > m_hCurrentBlocker; // 0x4c4	
	Vector m_vecBlockerOrigin; // 0x4c8	
	QAngle m_angPostSpawnDirection; // 0x4d4	
	float m_flPostSpawnDirectionVariance; // 0x4e0	
	float m_flPostSpawnSpeed; // 0x4e4	
	bool m_bPostSpawnUseAngles; // 0x4e8	
private:
	[[maybe_unused]] uint8_t __pad04e9[0x7]; // 0x4e9
public:
	CUtlSymbolLarge m_iszTemplate; // 0x4f0	
	CEntityIOOutput m_pOutputOnSpawned; // 0x4f8	
	CEntityIOOutput m_pOutputOnFailedSpawn; // 0x520	
	
	// Datamap fields:
	// void InputForceSpawn; // 0x0
	// CUtlSymbolLarge InputForceSpawnAtEntityOrigin; // 0x0
	// void CEnvEntityMakerCheckSpawnThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CProjectedDecal : public CPointEntity
{
public:
	int32_t m_nTexture; // 0x4a8	
	float m_flDistance; // 0x4ac	
	
	// Datamap fields:
	// void CProjectedDecalTriggerDecal; // 0x0
	// void CProjectedDecalStaticDecal; // 0x0
	// void InputActivate; // 0x0
	// CUtlString texture; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Earthshaker_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Crystal_Maiden_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFilterMultiple : public CBaseFilter
{
public:
	filter_t m_nFilterType; // 0x500	
private:
	[[maybe_unused]] uint8_t __pad0504[0x4]; // 0x504
public:
	CUtlSymbolLarge m_iFilterName[10]; // 0x508	
	CHandle< CBaseEntity > m_hFilter[10]; // 0x558	
	int32_t m_nFilterCount; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x40
// Has VTable
// MNetworkAssumeNotNetworkable
class CPlayer_UseServices : public CPlayerPawnComponent
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_MartyrsPlate_Effect : public CDOTA_Buff_Item
{
public:
	int32_t damage_redirection; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hexed : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seer_Stone_Truesight : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	float duration; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Muerta_DeadShot : public CDOTABaseAbility
{
public:
	int32_t radius; // 0x578	
	int32_t ricochet_radius_start; // 0x57c	
	int32_t ricochet_radius_end; // 0x580	
	int32_t speed; // 0x584	
	Vector m_vTargetPos; // 0x588	
	Vector m_vEndpoint; // 0x594	
	CHandle< CBaseEntity > m_hTreeTarget; // 0x5a0	
	Vector m_vRicochetDir; // 0x5a4	
private:
	[[maybe_unused]] uint8_t __pad05b0[0x8]; // 0x5b0
public:
	CUtlVector< CHandle< CBaseEntity > > m_vEnemyHeroVisibilityOnCast; // 0x5b8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Hoodwink_Sharpshooter_Release : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tusk_IceShard_Slow_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_KeeperOfTheLight_Radiant_Bind : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Batrider_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nian_Waterball : public CDOTABaseAbility
{
public:
	CountdownTimer m_ctTimer; // 0x578	
	CUtlVector< CHandle< CBaseEntity > > m_hEntities; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Necrolyte_Death_Pulse : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x8]; // 0x578
public:
	bool m_bIsDeathSeekerCast; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bloodseeker_Rupture_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_StormSpirit_BallLightning : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SkeletonKing_VampiricAura_Summon : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
	int32_t talent_skeleton_damage; // 0x133c	
	bool m_bRespawnReady; // 0x1340	
	bool m_bRespawnConsumed; // 0x1341	
	bool m_bKillParentOnDestroy; // 0x1342	
private:
	[[maybe_unused]] uint8_t __pad1343[0x1]; // 0x1343
public:
	GameTime_t m_flRespawnTime; // 0x1344	
	int32_t vampiric_aura; // 0x1348	
	int32_t gold_bounty; // 0x134c	
	int32_t xp_bounty; // 0x1350	
	int32_t skeleton_building_damage_reduction; // 0x1354	
	int32_t skeleton_bonus_hero_damage; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Creep_Irresolute : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x68
// Has VTable
class CDOTABehavior_NPCControllerGlue
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Nevermore_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Morphling_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Luna_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'entity2')
// Alignment: 8
// Size: 0x38
// Has VTable
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CScriptComponent : public CEntityComponent
{
private:
	[[maybe_unused]] uint8_t __pad0008[0x28]; // 0x8
public:
	CUtlSymbolLarge m_scriptClassName; // 0x30	
	
	// Static fields:
	static EntComponentInfo_t &Get_s_EntComponentInfo(){return *reinterpret_cast<EntComponentInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CScriptComponent")->GetStaticFields()[0]->m_pInstance);};
	static int32_t &Get_entity_component_error_class_decl_says_contained_but_impl_is_referenced(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CScriptComponent")->GetStaticFields()[1]->m_pInstance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_DarkSeer : public CDOTA_BaseNPC_Hero
{
public:
	ParticleIndex_t m_nNormalPunchBuffIndex; // 0x1d98	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_ZeusCloud : public CDOTA_BaseNPC_Additive
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Courier_AutoDeliver : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PineCone_AcornShot_TreeThinker : public CDOTA_Buff
{
public:
	CHandle< CDOTA_TempTree > m_hTree; // 0x1338	
	int32_t fow_viewer; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_StonehallGeneral_OverwhelmingOdds_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t max_steps; // 0x133c	
	float damage_interval; // 0x1340	
	int32_t m_nNumSteps; // 0x1344	
	int32_t m_nRadiusStep; // 0x1348	
	ParticleIndex_t m_nFXIndex; // 0x134c	
	Vector m_vDir; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Caster_Rapier : public CDOTA_Buff_Item
{
public:
	int32_t cast_range_limit; // 0x1338	
	int32_t bonus_spell_amp; // 0x133c	
	int32_t backstab_duration; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Arcane_Scout_Self_Vision : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Force_Field_Bonus_Aura : public CDOTA_Buff
{
public:
	int32_t bonus_aoe_radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Cornucopia : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Desolator : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t bonus_damage_per_kill; // 0x133c	
	int32_t bonus_damage_per_assist; // 0x1340	
	int32_t max_damage; // 0x1344	
	float corruption_duration; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad134c[0x4]; // 0x134c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Marci_Guardian_MagicImmunity : public CDOTA_Modifier_DebuffImmune
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hoodwink_AcornShot_ArmorCorruption : public CDOTA_Buff
{
public:
	float value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Pangolier_ShieldCrash : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Legion_Commander_PressTheAttack : public CDOTA_Buff
{
public:
	int32_t move_speed; // 0x1338	
	int32_t hp_regen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_KeeperOfTheLight_Illuminate : public CDOTA_Buff
{
public:
	int32_t range; // 0x1338	
	int32_t total_damage; // 0x133c	
	int32_t radius; // 0x1340	
	int32_t channel_vision_radius; // 0x1344	
	float channel_vision_interval; // 0x1348	
	float channel_vision_duration; // 0x134c	
	int32_t channel_vision_step; // 0x1350	
	GameTime_t m_flLastChantTime; // 0x1354	
	Vector m_vNextVisionLocation; // 0x1358	
	Vector m_vCastDirection; // 0x1364	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Outworld_Devourer_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_DeafeningBlast : public CDOTA_Ability_Invoker_InvokedBase
{
public:
	float end_vision_duration; // 0x588	
	float damage; // 0x58c	
	float knockback_duration; // 0x590	
	float disarm_duration; // 0x594	
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x598	
	bool m_bGrantedGem; // 0x5b0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_SunStrike_Cataclysm_Thinker : public CDOTA_Buff
{
public:
	float damage; // 0x1338	
	float spell_lifesteal; // 0x133c	
	float spell_amp; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Riki_BlinkStrike_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lich_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lina_LightStrikeArray_Thinker : public CDOTA_Buff
{
public:
	int32_t m_iDamage; // 0x1338	
	float m_flStunDuration; // 0x133c	
	int32_t light_strike_array_aoe; // 0x1340	
	int32_t light_strike_array_damage; // 0x1344	
	float light_strike_array_stun_duration; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_TI11_BubbleGun : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x528
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "uint32 m_FoWTempViewerVersion"
// MNetworkVarNames "TempViewerInfo_t m_TempViewerInfo"
class CDOTAFogOfWarTempViewers : public CBaseEntity
{
public:
	// MNetworkEnable
	uint32_t m_FoWTempViewerVersion; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04ac[0x4]; // 0x4ac
public:
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< TempViewerInfo_t > m_TempViewerInfo; // 0x4b0	
	GameTime_t m_flEndTimeMin; // 0x500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Monkey_King : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Magic_Resistance_15 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Invoker : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Alchemist : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Angels_Demise : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
	int32_t bonus_mana; // 0x133c	
	float bonus_mana_regen; // 0x1340	
	int32_t bonus_spell_damage; // 0x1344	
	float slow_duration; // 0x1348	
	int32_t bonus_all_stats; // 0x134c	
	int32_t bonus_damage; // 0x1350	
	int32_t crit_chance; // 0x1354	
	int32_t crit_multiplier; // 0x1358	
	int32_t spell_crit_multiplier; // 0x135c	
	int32_t spell_crit_flat; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1364[0x4]; // 0x1364
public:
	CUtlVector< CDOTABaseAbility* > vecActivatedAbilities; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Force_Boots : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Headdress_Aura : public CDOTA_Buff
{
public:
	float aura_health_regen; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dagon : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dawnbreaker_Solar_Guardian_Evasion : public CDOTA_Buff
{
public:
	int32_t miss_rate; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_VoidSpirit_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_ArcWarden_TempestRecall : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Magnataur_Shockwave : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Ogre_Magi_Bloodlust : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Clinkz_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DarkSeer_Surge_Trail : public CDOTA_Buff
{
public:
	int32_t trail_move_slow; // 0x1338	
	int32_t trail_damage; // 0x133c	
	float trail_damage_interval; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Life_Stealer_Infest : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
	int32_t m_nFXIndex; // 0x133c	
	float self_regen; // 0x1340	
	int32_t m_nStartingHealth; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pugna_NetherWard : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	float mana_multiplier; // 0x133c	
	float mana_drained_per_attack; // 0x1340	
	int32_t attacks_to_destroy; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoCourierSpawnRadiant : public CPointEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tiny_Grow : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DrowRanger_FrostArrows_Hypothermia_Active : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pudge_Meat_Hook : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "EHANDLE m_hGripTarget"
class CDOTA_Ability_Bane_FiendsGrip : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hGripTarget; // 0x578	
	int32_t fiend_grip_damage; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MP_Regen : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x78
// Has VTable
class CDOTABehaviorDie
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x60]; // 0x0
public:
	CountdownTimer m_timer; // 0x60	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
// Has Trivial Destructor
class CDOTA_BaseNPC_Hero::sHeroRecentModifierInfo
{
public:
	PlayerID_t nSourcePlayerID; // 0x0	
	bool bBuff; // 0x4	
private:
	[[maybe_unused]] uint8_t __pad0005[0x3]; // 0x5
public:
	int32_t nAbilityIndex; // 0x8	
	GameTime_t fTime; // 0xc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Viper_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Riki_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Wisp_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x558
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int16 m_nRadiantCheers"
// MNetworkVarNames "int16 m_nRadiantBronzeCheers"
// MNetworkVarNames "int16 m_nRadiantSilverCheers"
// MNetworkVarNames "int16 m_nRadiantGoldCheers"
// MNetworkVarNames "ECrowdLevel m_nRadiantCrowdLevel"
// MNetworkVarNames "int16 m_nDireCheers"
// MNetworkVarNames "int16 m_nDireBronzeCheers"
// MNetworkVarNames "int16 m_nDireSilverCheers"
// MNetworkVarNames "int16 m_nDireGoldCheers"
// MNetworkVarNames "ECrowdLevel m_nDireCrowdLevel"
class CDOTAAppCheers : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x96]; // 0x4a8
public:
	// MNetworkEnable
	int16_t m_nRadiantCheers; // 0x53e	
	// MNetworkEnable
	int16_t m_nRadiantBronzeCheers; // 0x540	
	// MNetworkEnable
	int16_t m_nRadiantSilverCheers; // 0x542	
	// MNetworkEnable
	int16_t m_nRadiantGoldCheers; // 0x544	
private:
	[[maybe_unused]] uint8_t __pad0546[0x2]; // 0x546
public:
	// MNetworkEnable
	ECrowdLevel m_nRadiantCrowdLevel; // 0x548	
	// MNetworkEnable
	int16_t m_nDireCheers; // 0x54c	
	// MNetworkEnable
	int16_t m_nDireBronzeCheers; // 0x54e	
	// MNetworkEnable
	int16_t m_nDireSilverCheers; // 0x550	
	// MNetworkEnable
	int16_t m_nDireGoldCheers; // 0x552	
	// MNetworkEnable
	ECrowdLevel m_nDireCrowdLevel; // 0x554	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x58
// Has VTable
// MNetworkNoBase
// 
// MNetworkVarNames "int iTeamNumber"
// MNetworkVarNames "AbilityID_t nItemAbilityID"
// MNetworkVarNames "float fStockDuration"
// MNetworkVarNames "GameTime_t fStockTime"
// MNetworkVarNames "int iStockCount"
// MNetworkVarNames "int iMaxCount"
// MNetworkVarNames "float fInitialStockDuration"
// MNetworkVarNames "PlayerID_t iPlayerID"
// MNetworkVarNames "int iBonusDelayedStockCount"
class CDOTA_ItemStockInfo
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	int32_t iTeamNumber; // 0x30	
	// MNetworkEnable
	AbilityID_t nItemAbilityID; // 0x34	
	// MNetworkEnable
	float fStockDuration; // 0x38	
	// MNetworkEnable
	GameTime_t fStockTime; // 0x3c	
	// MNetworkEnable
	int32_t iStockCount; // 0x40	
	// MNetworkEnable
	int32_t iMaxCount; // 0x44	
	// MNetworkEnable
	float fInitialStockDuration; // 0x48	
	// MNetworkEnable
	PlayerID_t iPlayerID; // 0x4c	
	// MNetworkEnable
	int32_t iBonusDelayedStockCount; // 0x50	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_KeeperOfTheLight : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x60
// Has VTable
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CEconItemAttribute m_Attributes"
class CAttributeList
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	// MNetworkTypeAlias "CUtlVector< CEconItemAttribute >"
	CUtlVectorEmbeddedNetworkVar< CEconItemAttribute > m_Attributes; // 0x8	
	CAttributeManager* m_pManager; // 0x58	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Reincarnation : public CDOTA_Buff
{
public:
	float value; // 0x1338	
	float reincarnate_time; // 0x133c	
	GameTime_t m_fLastReincarnationTime; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Terror_Mask : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_TurtleShell : public CDOTA_Item
{
public:
	float duration; // 0x620	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Arcane_Scout_Invulnerability : public CDOTA_Modifier_Invulnerable
{
public:
	int32_t scout_movespeed; // 0x1338	
	int32_t sight_range; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghanims_Shard : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_SuperSwift_Blink : public CDOTA_Item_Swift_Blink
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Skadi : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Ring_Of_Basilius_Effect : public CDOTA_Buff
{
public:
	float aura_mana_regen; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_RingOfRegeneration : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_BootsOfTravel : public CDOTA_Item
{
public:
	float m_flTeleportTimeOverride; // 0x620	
	bool m_bPendingSellExcessScrolls; // 0x624	
	bool m_bQueueSellScrolls; // 0x625	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Muerta_PartingShot_SoulDebuff : public CDOTA_Buff
{
public:
	int32_t ethereal_damage_bonus; // 0x1338	
	int32_t movement_slow; // 0x133c	
	CHandle< CBaseEntity > m_hPhysicalBody; // 0x1340	
	ParticleIndex_t m_nTetherFXIndex; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tusk_WalrusKick_AirTime : public CDOTA_Buff
{
public:
	int32_t hp_threshold; // 0x1338	
	float m_flStartZ; // 0x133c	
	float m_flCurTime; // 0x1340	
	float m_flOldPitch; // 0x1344	
	QAngle m_qRotation; // 0x1348	
	int32_t m_nRotations; // 0x1354	
	Vector m_vDirection; // 0x1358	
	float m_flEndTime; // 0x1364	
	int32_t push_length; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Treant_NaturesGuise_Invis : public CDOTA_Modifier_Invisible
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Treant_Lifebomb_Explode : public CDOTA_Buff
{
public:
	GameTime_t flStartTime; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Alchemist_AcidSpray : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tiny_Grow : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1338	
	int32_t attack_speed_reduction; // 0x133c	
	int32_t bonus_damage; // 0x1340	
	float tree_bonus_damage_pct; // 0x1344	
	float slow_resistance; // 0x1348	
	ParticleIndex_t m_nFXIndex; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bloodseeker_Thirst_Speed : public CDOTA_Buff
{
public:
	CUtlSymbolLarge m_iszModifierString; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x778
// Has VTable
// Construct allowed
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkIncludeByUserGroup "Origin"
// MNetworkIncludeByName "CGameSceneNode::m_angRotation"
// MNetworkIncludeByName "m_clrRender"
// MNetworkIncludeByName "CGameSceneNode::m_hParent"
// MNetworkIncludeByName "m_spawnflags"
// MNetworkVarNames "uint32 m_nHorizontalSize"
// MNetworkVarNames "uint32 m_nVerticalSize"
// MNetworkVarNames "uint32 m_nMinDist"
// MNetworkVarNames "uint32 m_nMaxDist"
// MNetworkVarNames "uint32 m_nOuterMaxDist"
// MNetworkVarNames "float32 m_flGlowProxySize"
// MNetworkVarNames "float32 m_flHDRColorScale"
class CLightGlow : public CBaseModelEntity
{
public:
	// MNetworkEnable
	uint32_t m_nHorizontalSize; // 0x758	
	// MNetworkEnable
	uint32_t m_nVerticalSize; // 0x75c	
	// MNetworkEnable
	uint32_t m_nMinDist; // 0x760	
	// MNetworkEnable
	uint32_t m_nMaxDist; // 0x764	
	// MNetworkEnable
	uint32_t m_nOuterMaxDist; // 0x768	
	// MNetworkEnable
	// MNetworkBitCount "6"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "64,000000"
	// MNetworkEncodeFlags "2"
	float m_flGlowProxySize; // 0x76c	
	// MNetworkEnable
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "100,000000"
	float m_flHDRColorScale; // 0x770	
	
	// Datamap fields:
	// Color InputColor; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Morphling_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tusk_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_ChaosKnight : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Brewmaster_PrimalFire : public CDOTA_BaseNPC_Creep
{
public:
	ParticleIndex_t m_nFXAmbient; // 0x1798	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Flagbearer_Creep_Aura_Effect : public CDOTA_Buff
{
public:
	int32_t bonus_health_regen; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Rattlecage : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Phoenix_Ash : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tome_Of_Knowledge_Consumed : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Marci_Unleash : public CDOTA_Buff
{
public:
	float time_between_flurries; // 0x1338	
	int32_t charges_per_flurry; // 0x133c	
	int32_t flurry_charge_increment; // 0x1340	
	int32_t bonus_movespeed; // 0x1344	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hoodwink_Camouflage : public CDOTA_Buff
{
public:
	float fade_time; // 0x1338	
	GameTime_t m_flFadeTime; // 0x133c	
	bool m_bInvisLastThink; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Hoodwink_Bushwhack_Duration : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_NagaSiren_MirrorImage : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hIllusions; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Ogre_Magi_Smash : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Jakiro_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_QueenOfPain_SonicWave_Delay : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_QueenOfPain_SonicWave : public CDOTABaseAbility
{
public:
	GameTime_t m_fStartTime; // 0x578	
	float m_fTotalTime; // 0x57c	
	ParticleIndex_t m_nFXIndex; // 0x580	
	int32_t starting_aoe; // 0x584	
	int32_t final_aoe; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_WitchDoctor_Maledict : public CDOTA_Buff
{
public:
	int32_t m_iStartHealth; // 0x1338	
	int32_t bonus_damage; // 0x133c	
	int32_t bonus_damage_threshold; // 0x1340	
	int32_t ticks; // 0x1344	
	int32_t iCurrentTick; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Morphling_Waveform : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bane_Nightmare : public CDOTA_Buff
{
public:
	int32_t m_nSource; // 0x1338	
	float animation_rate; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AncientApparition_IceAge : public CDOTABaseAbility
{
public:
	int32_t radius; // 0x578	
	int32_t health_degen; // 0x57c	
	float duration; // 0x580	
	int32_t damage; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b8
// Has VTable
// Construct allowed
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int8 m_iCurrentMaxRagdollCount"
class CRagdollManager : public CBaseEntity
{
public:
	// MNetworkEnable
	int8_t m_iCurrentMaxRagdollCount; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	int32_t m_iMaxRagdollCount; // 0x4ac	
	bool m_bSaveImportant; // 0x4b0	
	
	// Datamap fields:
	// int32_t InputSetMaxRagdollCount; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Kunkka_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Evasion_20 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Slardar : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x90
// Has VTable
// Has Trivial Destructor
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int16 scale"
// MNetworkVarNames "Vector origin"
// MNetworkVarNames "bool bClip3DSkyBoxNearToWorldFar"
// MNetworkVarNames "float32 flClip3DSkyBoxNearToWorldFarOffset"
// MNetworkVarNames "fogparams_t fog"
// MNetworkVarNames "WorldGroupId_t m_nWorldGroupID"
struct sky3dparams_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	int16_t scale; // 0x8	
private:
	[[maybe_unused]] uint8_t __pad000a[0x2]; // 0xa
public:
	// MNetworkEnable
	// MNetworkEncoder "coord"
	Vector origin; // 0xc	
	// MNetworkEnable
	bool bClip3DSkyBoxNearToWorldFar; // 0x18	
private:
	[[maybe_unused]] uint8_t __pad0019[0x3]; // 0x19
public:
	// MNetworkEnable
	float flClip3DSkyBoxNearToWorldFarOffset; // 0x1c	
	// MNetworkEnable
	fogparams_t fog; // 0x20	
	// MNetworkEnable
	WorldGroupId_t m_nWorldGroupID; // 0x88	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Essence_Ring : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dragon_Scale_Burn : public CDOTA_Buff
{
public:
	int32_t damage_per_sec; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Blade_Mail : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_BladesOfAttack : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_PrimalBeast_Rock_Throw : public CDOTABaseAbility
{
public:
	int32_t base_damage; // 0x578	
	int32_t impact_radius; // 0x57c	
	int32_t fragment_impact_radius; // 0x580	
	int32_t fragment_impact_distance; // 0x584	
	int32_t min_range; // 0x588	
	float stun_duration; // 0x58c	
	ParticleIndex_t m_nFXPreview; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Centaur_Stampede_Slow : public CDOTA_Buff
{
public:
	int32_t cast_time_increase; // 0x1338	
	int32_t slow_movement_speed; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Medusa_StoneGaze : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nyx_Assassin_Vendetta : public CDOTA_Modifier_Invisible
{
public:
	int32_t bonus_damage; // 0x1348	
	int32_t movement_speed; // 0x134c	
	int32_t shard_movement_speed_bonus; // 0x1350	
	int32_t mana_removal_pct; // 0x1354	
	bool m_bFreePathing; // 0x1358	
private:
	[[maybe_unused]] uint8_t __pad1359[0x3]; // 0x1359
public:
	int32_t attack_animation_bonus; // 0x135c	
	int32_t attack_range_bonus; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Silencer_GlobalSilence : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Spectre_Haunt : public CDOTA_Buff
{
public:
	bool m_bRealityApplied; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	GameTime_t m_fStartAttackTime; // 0x133c	
	CHandle< CBaseEntity > hTarget; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Enchantress_Impetus : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Lancer_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Axe_CounterHelix : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t trigger_attacks; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Muted : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x978
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTriggerFan : public CBaseTrigger
{
public:
	Vector m_vFanOrigin; // 0x928	
	Vector m_vFanEnd; // 0x934	
	Vector m_vNoise; // 0x940	
	float m_flForce; // 0x94c	
	float m_flRopeForceScale; // 0x950	
	float m_flPlayerForce; // 0x954	
	float m_flRampTime; // 0x958	
	bool m_bFalloff; // 0x95c	
	bool m_bPushPlayer; // 0x95d	
	bool m_bRampDown; // 0x95e	
	bool m_bAddNoise; // 0x95f	
	CountdownTimer m_RampTimer; // 0x960	
	
	// Datamap fields:
	// void CTriggerFanPushThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Omniknight_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Wraith_King_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tinker_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Silencer_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_80 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Base_Damage_50 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Visage : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Clinkz : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPathCornerCrash : public CPathCorner
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Firefly_Burn : public CDOTA_Buff
{
public:
	int32_t damage_pct_per_second; // 0x1338	
	int32_t movement_speed; // 0x133c	
	float tick_interval; // 0x1340	
	GameTime_t m_fNextDamageTick; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_Reward_CritAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_Reward_HPAura_Bonus : public CDOTA_Buff
{
public:
	float bonus_hp; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Harpoon_Pull : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1338	
	float m_flEndTime; // 0x1344	
	float m_flCurTime; // 0x1348	
	float m_flDistance; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_WandOfTheBrine_Active : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1338	
	float interval; // 0x133c	
	int32_t damage_reduction; // 0x1340	
	int32_t heal; // 0x1344	
	ParticleIndex_t m_nFXIndex; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Satchel : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1338	
	int32_t xp_gain; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_MeteorHammer : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
	int32_t bonus_agility; // 0x133c	
	int32_t bonus_intellect; // 0x1340	
	float spell_amp; // 0x1344	
	float mana_regen_multiplier; // 0x1348	
	float spell_lifesteal_amp; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ShadowAmulet_Fade : public CDOTA_Buff
{
public:
	float fade_time; // 0x1338	
	GameTime_t m_flFadeTime; // 0x133c	
	bool m_bFaded; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Diffusal_Blade : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Sphere_Upgrade_Absorb : public CDOTA_Buff
{
public:
	int32_t damage_absorb; // 0x1338	
	bool m_bStartedTimer; // 0x133c	
private:
	[[maybe_unused]] uint8_t __pad133d[0x3]; // 0x133d
public:
	int32_t m_flDamageAbsorbed; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_RefresherOrb : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_iUproarStatus"
class CDOTA_Ability_PrimalBeast_Uproar : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnUproarActiveChanged"
	int32_t m_iUproarStatus; // 0x578	
	bool m_bUpdateIcons; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_Solar_Guardian_Radius : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Hoodwink_Caltrops : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_MonkeyKing_TreeDance : public CDOTABaseAbility
{
public:
	int32_t perched_jump_distance; // 0x578	
	int32_t ground_jump_distance; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ArcWarden_SparkWraith_Purge : public CDOTA_Buff
{
public:
	int32_t move_speed_slow_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Winter_Wyvern_Winters_Curse_Aura : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
	int32_t m_nAlliesTaunted; // 0x133c	
	bool m_bRelicTriggered; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	int32_t radius; // 0x1344	
	int32_t damage_amplification; // 0x1348	
	int32_t damage_reduction; // 0x134c	
	GameTime_t m_flLastSeen; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Disruptor_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Rubick_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Undying_TombstoneGrab : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hTombstones; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lycan_Shapeshift : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Batrider_StickyNapalm_Application_Damage : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Broodmother_IncapacitatingBite : public CDOTA_Buff
{
public:
	float duration; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rattletrap_Cog_Leash : public CDOTA_Buff
{
public:
	int32_t leash; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TargetDummy_Unkillable : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PhantomAssassin_PhantomStrike : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1338	
	int32_t lifesteal_pct; // 0x133c	
	int32_t creep_lifesteal_penalty; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Miniboss_Radiance : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Teleporting_Root_Logic : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4f0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CSoundOpvarSetEntity : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x8]; // 0x4a8
public:
	CUtlSymbolLarge m_iszStackName; // 0x4b0	
	CUtlSymbolLarge m_iszOperatorName; // 0x4b8	
	CUtlSymbolLarge m_iszOpvarName; // 0x4c0	
	int32_t m_nOpvarType; // 0x4c8	
	int32_t m_nOpvarIndex; // 0x4cc	
	float m_flOpvarValue; // 0x4d0	
private:
	[[maybe_unused]] uint8_t __pad04d4[0x4]; // 0x4d4
public:
	CUtlSymbolLarge m_OpvarValueString; // 0x4d8	
	bool m_bSetOnSpawn; // 0x4e0	
	
	// Datamap fields:
	// uint64_t InputSetEventGuid; // 0x0
	// CUtlSymbolLarge InputSetStackName; // 0x0
	// CUtlSymbolLarge InputSetOperatorName; // 0x0
	// CUtlSymbolLarge InputSetOpvarName; // 0x0
	// int32_t InputSetOpvarIndex; // 0x0
	// void InputSetOpvar; // 0x0
	// float InputChangeOpvarValue; // 0x0
	// float InputChangeOpvarValueAndSet; // 0x0
	// void m_nGUID; // 0x4a8
	// void m_LastOpvarValueString; // 0x4e8
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Aghsfort_BootsOfTravel : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_ExplosiveBarrel : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Wisp_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_StormSpirit : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lesser_NightCrawler_Pounce : public CDOTA_Buff
{
public:
	float m_flTotalTime; // 0x1338	
	float m_flInitialVelocity; // 0x133c	
	Vector m_vStartPosition; // 0x1340	
	Vector m_vTargetHorizontalDirection; // 0x134c	
	float m_flCurrentTimeHoriz; // 0x1358	
	float m_flCurrentTimeVert; // 0x135c	
	bool m_bInterrupted; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1361[0x3]; // 0x1361
public:
	int32_t pounce_distance; // 0x1364	
	float pounce_speed; // 0x1368	
	float pounce_acceleration; // 0x136c	
	int32_t pounce_radius; // 0x1370	
	int32_t pounce_damage; // 0x1374	
	float leash_duration; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Possessed_Mask : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Princes_Knife_Hex : public CDOTA_Modifier_Hexed
{
public:
	int32_t movespeed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_AetherialHalo : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
	int32_t bonus_agility; // 0x133c	
	int32_t bonus_intellect; // 0x1340	
	float spell_amp; // 0x1344	
	float mana_regen_multiplier; // 0x1348	
	float spell_lifesteal_amp; // 0x134c	
	int32_t bonus_aoe; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Hoodwink_Bushwhack_Damage : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nyx_Assassin_Burrow : public CDOTA_Modifier_Invisible
{
public:
	float health_regen_rate; // 0x1348	
	float mana_regen_rate; // 0x134c	
	int32_t damage_reduction; // 0x1350	
	Vector m_vecInitialPos; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Meepo_Megameepo_Fling : public CDOTABaseAbility
{
public:
	int32_t vision_radius; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Broodmother_InsatiableHunger : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t lifesteal_pct; // 0x133c	
	float slow_duration; // 0x1340	
	float bat_bonus; // 0x1344	
	float shard_damage_tick_interval; // 0x1348	
	int32_t damage_tick_count; // 0x134c	
	int32_t shard_damage_per_tick; // 0x1350	
	int32_t creep_lifesteal_reduction_pct; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Omniknight_Pacify : public CDOTA_Buff
{
public:
	int32_t spell_resistance_reduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Miniboss_Radiance_Debuff : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1338[0x8]; // 0x1338
public:
	int32_t aura_damage; // 0x1340	
	float aura_interval; // 0x1344	
	float aura_radius; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Witch_Doctor_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_StormSpirit_Overload_Attack_Speed_Buff : public CDOTA_Buff
{
public:
	int32_t hit_attack_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_FillerAbility : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Filler_LastDitch : public CDOTA_Buff
{
public:
	float melee_number; // 0x1338	
	float ranged_number; // 0x133c	
	float siege_number; // 0x1340	
	int32_t lane; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CNavSpaceInfo : public CPointEntity
{
public:
	bool m_bCreateFlightSpace; // 0x4a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4e0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLogicAchievement : public CLogicalEntity
{
public:
	bool m_bDisabled; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x7]; // 0x4a9
public:
	CUtlSymbolLarge m_iszAchievementEventID; // 0x4b0	
	CEntityIOOutput m_OnFired; // 0x4b8	
	
	// Datamap fields:
	// void InputFireEvent; // 0x0
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
	// void InputToggle; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x500
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPathSimple : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x50]; // 0x4a8
public:
	CUtlString m_pathString; // 0x4f8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Pangolier_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Treant : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_20 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Armor_15 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Agility_100 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_All_Stats_12 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Gold_lvl15_r : public CDOTA_Ability_Special_Bonus_Gold_Ability_Draft
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "EHANDLE m_hTowerAttackTarget"
// MNetworkVarNames "EHANDLE m_hTowerHighFiveTarget"
class CDOTA_BaseNPC_Tower : public CDOTA_BaseNPC_Building
{
public:
	CEntityIOOutput m_OnTowerKilled; // 0x1870	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTowerAttackTarget; // 0x1898	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTowerHighFiveTarget; // 0x189c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x50
// Has VTable
// MNetworkAssumeNotNetworkable
class CTouchExpansionComponent : public CEntityComponent
{
private:
	[[maybe_unused]] uint8_t __pad0008[0x40]; // 0x8
public:
	// Static fields:
	static EntComponentInfo_t &Get_s_EntComponentInfo(){return *reinterpret_cast<EntComponentInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CTouchExpansionComponent")->GetStaticFields()[0]->m_pInstance);};
	static int32_t &Get_entity_component_error_class_decl_says_referenced_but_impl_is_contained(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CTouchExpansionComponent")->GetStaticFields()[1]->m_pInstance);};
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9b0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CItemGeneric : public CItem
{
private:
	[[maybe_unused]] uint8_t __pad0840[0x8]; // 0x840
public:
	bool m_bHasTriggerRadius; // 0x848	
	bool m_bHasPickupRadius; // 0x849	
private:
	[[maybe_unused]] uint8_t __pad084a[0x2]; // 0x84a
public:
	float m_flPickupRadiusSqr; // 0x84c	
	float m_flTriggerRadiusSqr; // 0x850	
	GameTime_t m_flLastPickupCheck; // 0x854	
	bool m_bPlayerCounterListenerAdded; // 0x858	
	bool m_bPlayerInTriggerRadius; // 0x859	
private:
	[[maybe_unused]] uint8_t __pad085a[0x6]; // 0x85a
public:
	CStrongHandle< InfoForResourceTypeIParticleSystemDefinition > m_hSpawnParticleEffect; // 0x860	
	CUtlSymbolLarge m_pAmbientSoundEffect; // 0x868	
	bool m_bAutoStartAmbientSound; // 0x870	
private:
	[[maybe_unused]] uint8_t __pad0871[0x7]; // 0x871
public:
	CUtlSymbolLarge m_pSpawnScriptFunction; // 0x878	
	CStrongHandle< InfoForResourceTypeIParticleSystemDefinition > m_hPickupParticleEffect; // 0x880	
	CUtlSymbolLarge m_pPickupSoundEffect; // 0x888	
	CUtlSymbolLarge m_pPickupScriptFunction; // 0x890	
	CStrongHandle< InfoForResourceTypeIParticleSystemDefinition > m_hTimeoutParticleEffect; // 0x898	
	CUtlSymbolLarge m_pTimeoutSoundEffect; // 0x8a0	
	CUtlSymbolLarge m_pTimeoutScriptFunction; // 0x8a8	
	CUtlSymbolLarge m_pPickupFilterName; // 0x8b0	
	CHandle< CBaseFilter > m_hPickupFilter; // 0x8b8	
private:
	[[maybe_unused]] uint8_t __pad08bc[0x4]; // 0x8bc
public:
	CEntityIOOutput m_OnPickup; // 0x8c0	
	CEntityIOOutput m_OnTimeout; // 0x8e8	
	CEntityIOOutput m_OnTriggerStartTouch; // 0x910	
	CEntityIOOutput m_OnTriggerTouch; // 0x938	
	CEntityIOOutput m_OnTriggerEndTouch; // 0x960	
	CUtlSymbolLarge m_pAllowPickupScriptFunction; // 0x988	
	float m_flPickupRadius; // 0x990	
	float m_flTriggerRadius; // 0x994	
	CUtlSymbolLarge m_pTriggerSoundEffect; // 0x998	
	bool m_bGlowWhenInTrigger; // 0x9a0	
	Color m_glowColor; // 0x9a1	
	bool m_bUseable; // 0x9a5	
private:
	[[maybe_unused]] uint8_t __pad09a6[0x2]; // 0x9a6
public:
	CHandle< CItemGenericTriggerHelper > m_hTriggerHelper; // 0x9a8	
	
	// Datamap fields:
	// void CItemGenericItemGenericTouch; // 0x0
	// void InputStartAmbientSound; // 0x0
	// void InputStopAmbientSound; // 0x0
	// void InputToggleAmbientSound; // 0x0
	// void m_hAmbientSound; // 0x840
	// float auto_remove_timeout; // 0x7fffffff
	// float drag_override; // 0x7fffffff
	// float damping_override; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Devastator : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_HorizonsEquilibrium : public CDOTA_Buff_Item
{
public:
	int32_t distance; // 0x1338	
	int32_t damage_reduction; // 0x133c	
	int32_t attack_lifesteal; // 0x1340	
	int32_t spell_lifesteal; // 0x1344	
	int32_t creep_lifesteal_reduction_pct; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Clumsy_Net : public CDOTA_Buff_Item
{
public:
	int32_t all_stats; // 0x1338	
	int32_t mana_regen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DarkWillow_ShadowRealm_Buff : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
	float max_damage_duration; // 0x133c	
	int32_t attack_range_bonus; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1348	
	bool bAttackRange; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1361[0x3]; // 0x1361
public:
	GameTime_t m_flStartTime; // 0x1364	
	GameTime_t m_flFadeTime; // 0x1368	
	float m_flDamageScale; // 0x136c	
	float duration; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_NagaSiren_SongOfTheSiren : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Treant_LeechSeed : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Meepo_Ransack : public CDOTA_Buff
{
public:
	int32_t health_steal_heroes; // 0x1338	
	int32_t health_steal_creeps; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Life_Stealer_Infest_Effect : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed; // 0x1338	
	int32_t bonus_health; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Kunkka_Torrent_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed_bonus; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Morphling_ScepterStatsDrain_All_Debuff : public CDOTA_Buff
{
public:
	int32_t scepter_stat_steal; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Razor_EyeOfTheStorm : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mirana_Leap_Buff : public CDOTA_Buff
{
public:
	int32_t leap_speedbonus; // 0x1338	
	int32_t leap_speedbonus_as; // 0x133c	
	bool m_bCritUsed; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x7]; // 0x1341
public:
	CUtlVector< int16 > m_vCritRecords; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nevermore_Requiem_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x908
// Has VTable
// Construct disallowed
// MConstructibleClassBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_bEnabled"
// MNetworkVarNames "string_t m_DialogXMLName"
// MNetworkVarNames "string_t m_PanelClassName"
// MNetworkVarNames "string_t m_PanelID"
class CBaseClientUIEntity : public CBaseModelEntity
{
public:
	// MNetworkEnable
	bool m_bEnabled; // 0x758	
private:
	[[maybe_unused]] uint8_t __pad0759[0x7]; // 0x759
public:
	// MNetworkEnable
	CUtlSymbolLarge m_DialogXMLName; // 0x760	
	// MNetworkEnable
	CUtlSymbolLarge m_PanelClassName; // 0x768	
	// MNetworkEnable
	CUtlSymbolLarge m_PanelID; // 0x770	
	CEntityIOOutput m_CustomOutput0; // 0x778	
	CEntityIOOutput m_CustomOutput1; // 0x7a0	
	CEntityIOOutput m_CustomOutput2; // 0x7c8	
	CEntityIOOutput m_CustomOutput3; // 0x7f0	
	CEntityIOOutput m_CustomOutput4; // 0x818	
	CEntityIOOutput m_CustomOutput5; // 0x840	
	CEntityIOOutput m_CustomOutput6; // 0x868	
	CEntityIOOutput m_CustomOutput7; // 0x890	
	CEntityIOOutput m_CustomOutput8; // 0x8b8	
	CEntityIOOutput m_CustomOutput9; // 0x8e0	
	
	// Datamap fields:
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x778
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "HMaterialStrong m_hDecalMaterial"
// MNetworkVarNames "float m_flWidth"
// MNetworkVarNames "float m_flHeight"
// MNetworkVarNames "float m_flDepth"
// MNetworkVarNames "uint32 m_nRenderOrder"
// MNetworkVarNames "bool m_bProjectOnWorld"
// MNetworkVarNames "bool m_bProjectOnCharacters"
// MNetworkVarNames "bool m_bProjectOnWater"
// MNetworkVarNames "float m_flDepthSortBias"
class CEnvDecal : public CBaseModelEntity
{
public:
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeIMaterial2 > m_hDecalMaterial; // 0x758	
	// MNetworkEnable
	// MNetworkChangeCallback "OnDecalDimensionsChanged"
	float m_flWidth; // 0x760	
	// MNetworkEnable
	// MNetworkChangeCallback "OnDecalDimensionsChanged"
	float m_flHeight; // 0x764	
	// MNetworkEnable
	// MNetworkChangeCallback "OnDecalDimensionsChanged"
	float m_flDepth; // 0x768	
	// MNetworkEnable
	uint32_t m_nRenderOrder; // 0x76c	
	// MNetworkEnable
	bool m_bProjectOnWorld; // 0x770	
	// MNetworkEnable
	bool m_bProjectOnCharacters; // 0x771	
	// MNetworkEnable
	bool m_bProjectOnWater; // 0x772	
private:
	[[maybe_unused]] uint8_t __pad0773[0x1]; // 0x773
public:
	// MNetworkEnable
	float m_flDepthSortBias; // 0x774	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Warlock_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bane_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Wisp_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Queen_Of_Pain_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CIngameEvent_DotaPrime : public CIngameEvent_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x410
// Has VTable
// MClassHasEntityLimitedDataDesc
// 
// MNetworkVarNames "CModelState m_modelState"
// MNetworkVarNames "bool m_bIsAnimationEnabled"
// MNetworkVarNames "bool m_bUseParentRenderBounds"
// MNetworkVarNames "CUtlStringToken m_materialGroup"
// MNetworkVarNames "uint8 m_nHitboxSet"
class CSkeletonInstance : public CGameSceneNode
{
private:
	[[maybe_unused]] uint8_t __pad0160[0x10]; // 0x160
public:
	// MNetworkEnable
	// -> m_hModel - 0x210
	// -> m_ModelName - 0x218
	// -> m_bClientClothCreationSuppressed - 0x258
	// -> m_MeshGroupMask - 0x308
	// -> m_nIdealMotionType - 0x38a
	// -> m_nForceLOD - 0x38b
	// -> m_nClothUpdateFlags - 0x38c
	CModelState m_modelState; // 0x170	
	// MNetworkEnable
	bool m_bIsAnimationEnabled; // 0x3a0	
	// MNetworkEnable
	bool m_bUseParentRenderBounds; // 0x3a1	
	// MNetworkDisable
	bool m_bDisableSolidCollisionsForHierarchy; // 0x3a2	
	struct 
	{
		// MNetworkDisable
		uint8_t m_bDirtyMotionType: 1; 		
		// MNetworkDisable
		uint8_t m_bIsGeneratingLatchedParentSpaceState: 1; 		
		uint16_t __pad1: 14;
	}; // 16 bits
	// MNetworkEnable
	// MNetworkChangeCallback "skeletonMaterialGroupChanged"
	CUtlStringToken m_materialGroup; // 0x3a4	
	// MNetworkEnable
	uint8_t m_nHitboxSet; // 0x3a8	
	
	// Datamap fields:
	// Vector velocity; // 0x7fffffff
	// Vector rotationAxis; // 0x7fffffff
	// float rotationSpeed; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1870
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Effigy_Statue : public CDOTA_BaseNPC_Building
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_Walrus_Pudge_Harpoon_PathingFix : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TutorialNPCBlocker_Thinker : public CDOTA_Buff
{
public:
	Vector m_vecStart; // 0x1338	
	Vector m_vecEnd; // 0x1344	
	float m_flRadius; // 0x1350	
	bool m_bHidden; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifer_Item_TurtleShell : public CDOTA_Buff_Item
{
public:
	int32_t armor; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Falcon_Blade : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t bonus_damage_per_kill; // 0x133c	
	int32_t bonus_damage_per_assist; // 0x1340	
	int32_t bonus_health; // 0x1344	
	int32_t max_damage; // 0x1348	
	float bonus_mana_regen; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Diffusal_Blade_Level2 : public CDOTA_Item_Diffusal_Blade
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dawnbreaker_Celestial_Hammer_Caster : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Skywrath_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Silencer_GlobalSilence : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_AttributeBonus : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Chen_DivineFavor : public CDOTA_Buff
{
public:
	int32_t armor; // 0x1338	
	float heal_rate; // 0x133c	
	int32_t creep_bonus; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Omniknight_GuardianAngel : public CDOTA_Buff
{
public:
	int32_t scepter_status_resist; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DragonKnight_DragonTail : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DragonKnight_BreatheFire : public CDOTABaseAbility
{
public:
	int32_t start_radius; // 0x578	
	int32_t end_radius; // 0x57c	
	float damage; // 0x580	
	Vector m_vStartPos; // 0x584	
	GameTime_t m_fStartTime; // 0x590	
	float m_fTotalTime; // 0x594	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_PhantomAssassin_Fan_Of_Knives : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PhantomAssassin_StiflingDagger_Caster : public CDOTA_Buff
{
public:
	int32_t base_damage; // 0x1338	
	int32_t attack_factor; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bloodseeker_BloodMist_Barrier : public CDOTA_Buff
{
public:
	GameTime_t flLastGameTime; // 0x1338	
	float m_flCurrentShield; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AntiMage_Blink_Illusion : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Provide_Vision : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x640
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLogicAuto : public CBaseEntity
{
public:
	CEntityIOOutput m_OnMapSpawn; // 0x4a8	
	CEntityIOOutput m_OnDemoMapSpawn; // 0x4d0	
	CEntityIOOutput m_OnNewGame; // 0x4f8	
	CEntityIOOutput m_OnLoadGame; // 0x520	
	CEntityIOOutput m_OnMapTransition; // 0x548	
	CEntityIOOutput m_OnBackgroundMap; // 0x570	
	CEntityIOOutput m_OnMultiNewMap; // 0x598	
	CEntityIOOutput m_OnMultiNewRound; // 0x5c0	
	CEntityIOOutput m_OnVREnabled; // 0x5e8	
	CEntityIOOutput m_OnVRNotEnabled; // 0x610	
	CUtlSymbolLarge m_globalstate; // 0x638	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lycan_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Strength_15 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CSoundOpvarSetOBBWindEntity : public CSoundOpvarSetPointBase
{
public:
	Vector m_vMins; // 0x540	
	Vector m_vMaxs; // 0x54c	
	Vector m_vDistanceMins; // 0x558	
	Vector m_vDistanceMaxs; // 0x564	
	float m_flWindMin; // 0x570	
	float m_flWindMax; // 0x574	
	float m_flWindMapMin; // 0x578	
	float m_flWindMapMax; // 0x57c	
	
	// Datamap fields:
	// void CSoundOpvarSetOBBWindEntitySetOpvarThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "EHANDLE m_hDoubleShotTarget"
class CDOTA_Unit_Hero_Muerta : public CDOTA_BaseNPC_Hero
{
public:
	// MNetworkEnable
	// MNetworkPriority "32"
	CHandle< CBaseEntity > m_hDoubleShotTarget; // 0x1d98	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x760
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLightDirectionalEntity : public CLightEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Black_King_Bar_Immune : public CDOTA_Modifier_DebuffImmune
{
public:
	int32_t model_scale; // 0x1338	
	int32_t magic_resist; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_ChainMail : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Wisp_Tether_Haste : public CDOTA_Buff
{
public:
	float movespeed; // 0x1338	
	float shard_bonus_spell_lifesteal; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Obsidian_Destroyer_ArcaneOrb : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Huskar_Burning_Spear_Counter : public CDOTA_Buff
{
public:
	float duration; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_IonShell : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t damage_per_second; // 0x133c	
	float tick_interval; // 0x1340	
	int32_t bonus_health; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoCourierSpawnRadiant2 : public CPointEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tinker_Defensive_Matrix : public CDOTA_Buff
{
public:
	int32_t damage_absorb; // 0x1338	
	int32_t status_resistance; // 0x133c	
	int32_t cooldown_reduction; // 0x1340	
	bool m_bStartedTimer; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1345[0x3]; // 0x1345
public:
	int32_t m_nDamageAbsorbed; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7e8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLogicNPCCounter : public CBaseEntity
{
public:
	CEntityIOOutput m_OnMinCountAll; // 0x4a8	
	CEntityIOOutput m_OnMaxCountAll; // 0x4d0	
	CEntityOutputTemplate< float32 > m_OnFactorAll; // 0x4f8	
	CEntityOutputTemplate< float32 > m_OnMinPlayerDistAll; // 0x520	
	CEntityIOOutput m_OnMinCount_1; // 0x548	
	CEntityIOOutput m_OnMaxCount_1; // 0x570	
	CEntityOutputTemplate< float32 > m_OnFactor_1; // 0x598	
	CEntityOutputTemplate< float32 > m_OnMinPlayerDist_1; // 0x5c0	
	CEntityIOOutput m_OnMinCount_2; // 0x5e8	
	CEntityIOOutput m_OnMaxCount_2; // 0x610	
	CEntityOutputTemplate< float32 > m_OnFactor_2; // 0x638	
	CEntityOutputTemplate< float32 > m_OnMinPlayerDist_2; // 0x660	
	CEntityIOOutput m_OnMinCount_3; // 0x688	
	CEntityIOOutput m_OnMaxCount_3; // 0x6b0	
	CEntityOutputTemplate< float32 > m_OnFactor_3; // 0x6d8	
	CEntityOutputTemplate< float32 > m_OnMinPlayerDist_3; // 0x700	
	CEntityHandle m_hSource; // 0x728	
private:
	[[maybe_unused]] uint8_t __pad072c[0x4]; // 0x72c
public:
	CUtlSymbolLarge m_iszSourceEntityName; // 0x730	
	float m_flDistanceMax; // 0x738	
	bool m_bDisabled; // 0x73c	
private:
	[[maybe_unused]] uint8_t __pad073d[0x3]; // 0x73d
public:
	int32_t m_nMinCountAll; // 0x740	
	int32_t m_nMaxCountAll; // 0x744	
	int32_t m_nMinFactorAll; // 0x748	
	int32_t m_nMaxFactorAll; // 0x74c	
private:
	[[maybe_unused]] uint8_t __pad0750[0x8]; // 0x750
public:
	CUtlSymbolLarge m_iszNPCClassname_1; // 0x758	
	int32_t m_nNPCState_1; // 0x760	
	bool m_bInvertState_1; // 0x764	
private:
	[[maybe_unused]] uint8_t __pad0765[0x3]; // 0x765
public:
	int32_t m_nMinCount_1; // 0x768	
	int32_t m_nMaxCount_1; // 0x76c	
	int32_t m_nMinFactor_1; // 0x770	
	int32_t m_nMaxFactor_1; // 0x774	
private:
	[[maybe_unused]] uint8_t __pad0778[0x4]; // 0x778
public:
	float m_flDefaultDist_1; // 0x77c	
	CUtlSymbolLarge m_iszNPCClassname_2; // 0x780	
	int32_t m_nNPCState_2; // 0x788	
	bool m_bInvertState_2; // 0x78c	
private:
	[[maybe_unused]] uint8_t __pad078d[0x3]; // 0x78d
public:
	int32_t m_nMinCount_2; // 0x790	
	int32_t m_nMaxCount_2; // 0x794	
	int32_t m_nMinFactor_2; // 0x798	
	int32_t m_nMaxFactor_2; // 0x79c	
private:
	[[maybe_unused]] uint8_t __pad07a0[0x4]; // 0x7a0
public:
	float m_flDefaultDist_2; // 0x7a4	
	CUtlSymbolLarge m_iszNPCClassname_3; // 0x7a8	
	int32_t m_nNPCState_3; // 0x7b0	
	bool m_bInvertState_3; // 0x7b4	
private:
	[[maybe_unused]] uint8_t __pad07b5[0x3]; // 0x7b5
public:
	int32_t m_nMinCount_3; // 0x7b8	
	int32_t m_nMaxCount_3; // 0x7bc	
	int32_t m_nMinFactor_3; // 0x7c0	
	int32_t m_nMaxFactor_3; // 0x7c4	
private:
	[[maybe_unused]] uint8_t __pad07c8[0x4]; // 0x7c8
public:
	float m_flDefaultDist_3; // 0x7cc	
	
	// Datamap fields:
	// CUtlSymbolLarge InputSetSourceEntity; // 0x0
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
	// void CLogicNPCCounterSetNPCCounterThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_TI11_Rock : public CDOTA_Ability_Seasonal_TI11_RockPaperScissors_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_20 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_All_Stats_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x878
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTATurboGameMode : public CDOTABaseGameMode
{
private:
	[[maybe_unused]] uint8_t __pad07c8[0x18]; // 0x7c8
public:
	int32_t m_nHighestLevelInCurrentGame; // 0x7e0	
private:
	[[maybe_unused]] uint8_t __pad07e4[0x34]; // 0x7e4
public:
	CUtlVector< float32 > m_ExtraMeleeCreepTimes; // 0x818	
	CUtlVector< float32 > m_ExtraRangedCreepTimes; // 0x830	
	CUtlVector< float32 > m_ExtraSiegeCreepTimes; // 0x848	
	int32_t m_nExtraGoldPerWave; // 0x860	
	int32_t m_nExtraXPPerWave; // 0x864	
	float m_flNextRewardDistributionTime; // 0x868	
	float m_flNextWaveRecalculationTime; // 0x86c	
	float m_flNextNeutralItemDistributionTime; // 0x870	
	bool m_bInOvertime; // 0x874	
	bool m_bDistributingPassiveGoldAndXp; // 0x875	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Muerta_Revenant : public CDOTA_BaseNPC
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x808
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFuncPlat : public CBasePlatTrain
{
public:
	CUtlSymbolLarge m_sNoise; // 0x800	
	
	// Datamap fields:
	// void CFuncPlatPlatUse; // 0x0
	// void CFuncPlatCallGoDown; // 0x0
	// void CFuncPlatCallHitTop; // 0x0
	// void CFuncPlatCallHitBottom; // 0x0
	// void InputToggle; // 0x0
	// void InputGoUp; // 0x0
	// void InputGoDown; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Moonshard : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1338	
	int32_t bonus_night_vision; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Sphere : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mars_ArenaOfBlood_Leash : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	float width; // 0x133c	
	Vector m_vOriginLoc; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_ArcToGround : public CDOTA_Buff
{
public:
	float leap_speed; // 0x1338	
	float give_up_distance; // 0x133c	
	float attackspeed_duration; // 0x1340	
	float m_flOriginalZDelta; // 0x1344	
	float m_flZDelta; // 0x1348	
	Vector m_vStart; // 0x134c	
	Vector m_vTargetPos; // 0x1358	
	float m_flSpeed; // 0x1364	
	bool m_bDroppedFromTree; // 0x1368	
private:
	[[maybe_unused]] uint8_t __pad1369[0x3]; // 0x1369
public:
	ParticleIndex_t m_nFXIndex; // 0x136c	
	ParticleIndex_t m_nFXIndex2; // 0x1370	
	float m_flOriginalHeight; // 0x1374	
	bool m_bRightClickHop; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Undying_FleshGolem : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Alchemist_UnstableConcoction : public CDOTA_Buff
{
public:
	float brew_time; // 0x1338	
	float brew_explosion; // 0x133c	
	GameTime_t m_fStartTime; // 0x1340	
	GameTime_t m_fLastAlertTime; // 0x1344	
	ParticleIndex_t m_nConcoctionFXIndex; // 0x1348	
	bool m_bHasStunned; // 0x134c	
private:
	[[maybe_unused]] uint8_t __pad134d[0x3]; // 0x134d
public:
	int32_t damage_resistance; // 0x1350	
	int32_t move_speed; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Venomancer_PoisonSting : public CDOTA_Modifier_Venomancer_PoisonStingBase
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Zuus_StaticField : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PhantomLancer_Juxtapose_Invisibility : public CDOTA_Modifier_Invisible
{
public:
	float invis_movespeed; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_CrystalMaiden_IceRink : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CMessageEntity : public CPointEntity
{
public:
	int32_t m_radius; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04ac[0x4]; // 0x4ac
public:
	CUtlSymbolLarge m_messageText; // 0x4b0	
	bool m_drawText; // 0x4b8	
	bool m_bDeveloperOnly; // 0x4b9	
	bool m_bEnabled; // 0x4ba	
	
	// Datamap fields:
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
	// CUtlSymbolLarge InputSetMessage; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Armor_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Agility_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Strength_11 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Speed_20 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1
// Has Trivial Constructor
// Has Trivial Destructor
// 
// MPulseProvideFeatureTag "PulseParticles"
// MPulseLibraryBindings
// MParticleDomainTag "CDOTA_Ability_AntiMage_BlinkParticleAPI Antimage Blink Ability"
// MPulseDomainHookInfo
class CDOTA_Ability_AntiMage_BlinkParticleAPI
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x1]; // 0x0
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_DarkWillow_Creature : public CDOTA_BaseNPC
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Bristleback : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1798
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Beastmaster_Beasts : public CDOTA_BaseNPC_Creep_Talking
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Lina : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x528
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_NPCSpawnerBadBot : public CDOTA_NPCSpawner
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tornado_Tempest : public CDOTA_Buff
{
public:
	int32_t near_radius; // 0x1338	
	int32_t near_damage; // 0x133c	
	int32_t far_radius; // 0x1340	
	int32_t far_damage; // 0x1344	
	float tick_rate; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Warhammer : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Orb_of_Pestilence_Slow : public CDOTA_Buff
{
public:
	float duration; // 0x1338	
	int32_t slow; // 0x133c	
	float damage; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Medallion_Of_Courage_Armor_Addition : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Ancient_Janggo : public CDOTA_Item
{
public:
	int32_t radius; // 0x620	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_TranquilBoots : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement_speed; // 0x1338	
	int32_t broken_movement_speed; // 0x133c	
	int32_t bonus_armor; // 0x1340	
	int32_t bonus_health_regen; // 0x1344	
	int32_t break_threshold; // 0x1348	
	int32_t break_time; // 0x134c	
	int32_t break_count; // 0x1350	
	float m_flResetTime; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dawnbreaker_Solar_Guardian_LandingStun : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VoidSpirit_ResonantPulse_Ring : public CDOTA_Buff
{
public:
	float m_fLastRadius; // 0x1338	
	float m_fCurRadius; // 0x133c	
	GameTime_t m_fLastThink; // 0x1340	
	ParticleIndex_t m_nFXIndex; // 0x1344	
	CUtlVector< CHandle< CBaseEntity > > m_EntitiesHit; // 0x1348	
	int32_t speed; // 0x1360	
	int32_t radius; // 0x1364	
	int32_t damage; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Grimstroke_DarkArtistry : public CDOTABaseAbility
{
public:
	Vector m_vCastDir; // 0x578	
	GameTime_t m_fStartTime; // 0x584	
	float m_fTotalTime; // 0x588	
	int32_t m_nProjectileID; // 0x58c	
	Vector m_vProjectileDir; // 0x590	
	ParticleIndex_t m_nFXIndex; // 0x59c	
	ParticleIndex_t m_nFXIndexB; // 0x5a0	
	int32_t m_nTargetsHit; // 0x5a4	
	int32_t m_nHeroesHit; // 0x5a8	
	int32_t m_nVisibleHeroesHit; // 0x5ac	
	float m_fDmgMultiplierTalent; // 0x5b0	
private:
	[[maybe_unused]] uint8_t __pad05b4[0x8]; // 0x5b4
public:
	float slow_duration; // 0x5bc	
	int32_t start_radius; // 0x5c0	
	int32_t end_radius; // 0x5c4	
	int32_t damage; // 0x5c8	
	int32_t bonus_damage_per_target; // 0x5cc	
	float vision_duration; // 0x5d0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Winter_Wyvern_Splinter_Blast : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Oracle_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EmberSpirit_SearingChains : public CDOTA_Buff
{
public:
	int32_t damage_per_second; // 0x1338	
	float tick_interval; // 0x133c	
	float tick_damage; // 0x1340	
	float duration; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Techies_StasisTrap : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x578	
	CHandle< CBaseEntity > m_hTrap; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Rubick_Empty1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Treant_LivingArmor : public CDOTA_Buff
{
public:
	int32_t heal_per_second; // 0x1338	
	int32_t bonus_armor; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Silencer_LastWord : public CDOTA_Buff
{
public:
	int32_t duration; // 0x1338	
	bool spellcast; // 0x133c	
private:
	[[maybe_unused]] uint8_t __pad133d[0x3]; // 0x133d
public:
	int32_t damage; // 0x1340	
	float debuff_duration; // 0x1344	
	float int_multiplier; // 0x1348	
	int32_t scepter_bonus_damage; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_SunStrike : public CDOTA_Ability_Invoker_InvokedBase
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_BountyHunter_WindWalk_Ally : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Omniknight_Angelic_Flight : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1338	
	int32_t hp_regen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Assassin_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nian_Leap : public CDOTABaseAbility
{
public:
	float m_flPlaybackRate; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Enigma_BlackHoleThinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	bool m_bFoundFive; // 0x133c	
	bool m_bGrantedKillEater; // 0x133d	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Puck_IllusoryOrb : public CDOTABaseAbility
{
public:
	int32_t m_iProjectile; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad057c[0x4]; // 0x57c
public:
	CountdownTimer m_ViewerTimer; // 0x580	
	int32_t orb_vision; // 0x598	
	float vision_duration; // 0x59c	
	int32_t damage; // 0x5a0	
private:
	[[maybe_unused]] uint8_t __pad05a4[0x4]; // 0x5a4
public:
	CSoundPatch* m_pSoundPatch; // 0x5a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Morphling_ScepterStatsDrain_Strength_Buff : public CDOTA_Buff
{
public:
	int32_t scepter_stat_steal; // 0x1338	
	int32_t scepter_status_resist; // 0x133c	
	int32_t nStrengthSteal; // 0x1340	
	int32_t nAgiSteal; // 0x1344	
	int32_t nIntSteal; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VengefulSpirit_Command_Aura_Illusion : public CDOTA_Modifier_Invulnerable
{
public:
	CHandle< CBaseEntity > hTarget; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tutorial_HideNPC : public CDOTA_Buff
{
public:
	bool m_bRemoveOnDeath; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Monkey_King_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Agility_16 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a68
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_bMiniGameActive"
// MNetworkVarNames "int8 m_vecTargetAssignments"
// MNetworkVarNames "uint8 m_vecMiniGamePoints"
// MNetworkVarNames "uint8 m_vecMiniGameKills"
class CIngameEvent_MuertaReleaseSpring2023 : public CIngameEvent_Base
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnMuertaReleaseEventMiniGameActiveChanged"
	bool m_bMiniGameActive; // 0x1a20	
	// MNetworkEnable
	// MNetworkChangeCallback "OnMuertaReleaseEventTargetAssignmentsChanged"
	int8_t m_vecTargetAssignments[10]; // 0x1a21	
	// MNetworkEnable
	// MNetworkChangeCallback "OnMuertaReleaseEventMiniGamePointsChanged"
	uint8_t m_vecMiniGamePoints[10]; // 0x1a2b	
	// MNetworkEnable
	uint8_t m_vecMiniGameKills[10]; // 0x1a35	
private:
	[[maybe_unused]] uint8_t __pad1a3f[0x11]; // 0x1a3f
public:
	CUtlVector< ParticleIndex_t > m_activeGravestones; // 0x1a50	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x40
// Has VTable
// MNetworkAssumeNotNetworkable
class CPlayer_FlashlightServices : public CPlayerPawnComponent
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Seasonal_TI9_Drums : public CDOTA_BaseNPC_Additive
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Greevil_Miniboss_Black_Nightmare : public CDOTA_Buff
{
public:
	float animation_rate; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Agility_And_Intelligence : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Arcane_Ring : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_EchoSabre : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_HelmOfTheDominator_2 : public CDOTA_Item_HelmOfTheDominator
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Ring_Of_Basilius : public CDOTA_Buff_Item
{
public:
	int32_t aura_radius; // 0x1338	
	float mana_regen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Gauntlets : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Grimstroke_SpiritWalk : public CDOTABaseAbility
{
public:
	float buff_duration; // 0x578	
	CHandle< CBaseEntity > m_hTarget; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "EHANDLE m_hDoubles"
class CDOTA_Ability_ArcWarden_TempestDouble : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hDoubles; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bristleback_Bristleback : public CDOTA_Buff
{
public:
	int32_t side_damage_reduction; // 0x1338	
	int32_t back_damage_reduction; // 0x133c	
	int32_t side_angle; // 0x1340	
	int32_t back_angle; // 0x1344	
	float quill_release_threshold; // 0x1348	
	float quill_release_interval; // 0x134c	
	bool m_bRearHit; // 0x1350	
	bool m_bSideHit; // 0x1351	
private:
	[[maybe_unused]] uint8_t __pad1352[0x2]; // 0x1352
public:
	float m_flDamageAccumulated; // 0x1354	
	int32_t m_nAccumulatedHits; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Visage_SummonFamiliars_StoneForm_Timer : public CDOTA_Buff
{
public:
	float stone_duration; // 0x1338	
	GameTime_t m_fStartTime; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Undying_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Undying_TombstoneUnitGrab : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hOwner; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Huskar_Inner_Vitality : public CDOTA_Buff
{
public:
	int32_t heal; // 0x1338	
	float attrib_bonus; // 0x133c	
	float hurt_attrib_bonus; // 0x1340	
	float hurt_percent; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Dazzle_ShadowWave : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x578	
	int32_t bounce_radius; // 0x590	
	int32_t damage_radius; // 0x594	
	int32_t damage; // 0x598	
	int32_t max_targets; // 0x59c	
	float scepter_heal_pct; // 0x5a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DragonKnight_DragonBlood : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FacelessVoid_Arcana : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Morphling_Replicate_Illusion : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Morphling_Hybrid : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x758
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CServerOnlyModelEntity : public CBaseModelEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Necrophos_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Warlock_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Enchantress_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tusk_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Pugna_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cast_Range_275 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Range_250 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_Regen_12 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Ursa : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18b0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_HoldoutTower : public CDOTA_BaseNPC_Tower
{
public:
	DOTA_HOLDOUT_TOWER_TYPE m_iTowerType; // 0x18a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_bIsRadiantMiniboss"
class CDOTA_MinibossSpawner : public CPointEntity
{
public:
	// MNetworkEnable
	bool m_bIsRadiantMiniboss; // 0x4a8	
	bool m_bIsMinibossAlive; // 0x4a9	
	bool m_bSpawnRequested; // 0x4aa	
private:
	[[maybe_unused]] uint8_t __pad04ab[0x1]; // 0x4ab
public:
	CHandle< CBaseEntity > m_hMiniboss; // 0x4ac	
	GameTime_t m_fMinibossKillTime; // 0x4b0	
	int32_t m_nSentMinibossReclaim; // 0x4b4	
	int32_t m_nSentMinibossRespawn; // 0x4b8	
	int32_t m_nTimesSpawned; // 0x4bc	
	float m_fMinibossRespawnDuration; // 0x4c0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Spell_Lifesteal : public CDOTA_Buff
{
public:
	float value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Bloodthorn : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_MantaStyle : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_QuellingBlade : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Hermes_Sandals : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Muerta_TheCalling : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Oracle_FalsePromise_Invis : public CDOTA_Modifier_PersistentInvisibility
{
public:
	float shard_spell_amp_bonus; // 0x1348	
	float shard_bat_bonus; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TrollWarlord_BattleTrance : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1338	
	int32_t attack_speed; // 0x133c	
	int32_t lifesteal; // 0x1340	
	CHandle< CBaseEntity > m_hTarget; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Meepo_MegaMeepo_Frame_Invulnerable : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Gyrocopter_Call_Down : public CDOTABaseAbility
{
public:
	Vector m_vEndpoint; // 0x578	
	int32_t range_scepter; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Jakiro_LiquidFire_Burn : public CDOTA_Buff
{
public:
	int32_t slow_attack_speed_pct; // 0x1338	
	float damage; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Leshrac_Decrepify : public CDOTA_Buff
{
public:
	int32_t magic_amp; // 0x1338	
	int32_t slow; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Dazzle_Good_Juju : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tinker_MarchOfTheMachinesThinker : public CDOTA_Buff
{
public:
	int32_t collision_radius; // 0x1338	
	int32_t radius; // 0x133c	
	int32_t distance; // 0x1340	
	int32_t distance_scepter; // 0x1344	
	int32_t speed; // 0x1348	
	int32_t machines_per_sec; // 0x134c	
	Vector m_vDir; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lich_FrostNova_Slow : public CDOTA_Buff
{
public:
	int32_t slow_movement_speed; // 0x1338	
	int32_t slow_attack_speed; // 0x133c	
	int32_t slow_attack_speed_primary; // 0x1340	
	bool m_bIsPrimary; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ProjectileVision : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Shaman_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Troll_Warlord_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Techies_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Tusk_Sigil : public CDOTA_BaseNPC_Additive
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Wisp : public CDOTA_BaseNPC_Hero
{
public:
	ParticleIndex_t m_nAmbientFXIndex; // 0x1d98	
	ParticleIndex_t m_nStunnedFXIndex; // 0x1d9c	
	ParticleIndex_t m_nTalkFXIndex; // 0x1da0	
	ParticleIndex_t m_nIllusionFXIndex; // 0x1da4	
	bool m_bParticleHexed; // 0x1da8	
	bool m_bParticleStunned; // 0x1da9	
	bool m_bDetermineAmbientEffect; // 0x1daa	
private:
	[[maybe_unused]] uint8_t __pad1dab[0x1]; // 0x1dab
public:
	float m_flPrevHealth; // 0x1dac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Chen : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1870
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Fountain : public CDOTA_BaseNPC_Building
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Sven : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BlackDragon_DragonhideAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_GiantWolf_Intimidate : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x958
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTriggerActiveWeaponDetect : public CBaseTrigger
{
public:
	CEntityIOOutput m_OnTouchedActiveWeapon; // 0x928	
	CUtlSymbolLarge m_iszWeaponClassName; // 0x950	
	
	// Datamap fields:
	// void CTriggerActiveWeaponDetectActiveWeaponThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Butterfly_Extra : public CDOTA_Buff
{
public:
	int32_t bonus_move_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_PowerTreads : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Muerta_Gunslinger : public CDOTA_Buff
{
public:
	float double_shot_chance; // 0x1338	
	float target_search_bonus_range; // 0x133c	
	CHandle< CBaseEntity > m_hSecondaryTarget; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Wisp_Overcharge : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lycan_Fear : public CDOTA_Modifier_Fear
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Obsidian_Destroyer_Equilibrium_Buff : public CDOTA_Buff
{
public:
	int32_t mana_steal; // 0x1338	
	float m_flCurrentMana; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_GhostWalk_Enemy : public CDOTA_Buff
{
public:
	int32_t enemy_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_WexInstance : public CDOTA_Modifier_Invoker_Instance
{
public:
	float move_speed_per_instance; // 0x1338	
	float cooldown_reduction; // 0x133c	
	char* m_pSlotName; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Gyrocopter_Homing_Rocket_Barrage : public CDOTA_Buff
{
public:
	int32_t rocket_damage; // 0x1338	
	int32_t shard_radius; // 0x133c	
	CHandle< CBaseEntity > m_hTarget; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Spectre_Desolate_Blind : public CDOTA_Buff
{
public:
	int32_t blind_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Leshrac_Lightning_Storm_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1338	
	int32_t attackspeed_slow; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dazzle_Shallow_Grave : public CDOTA_Buff
{
public:
	bool m_bHasPostedEvent; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	ParticleIndex_t m_nFXIndex; // 0x133c	
	float fx_halo_height; // 0x1340	
	int32_t heal_amplify; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Vermillion_Robe : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_Whirlpool_Pull : public CDOTA_Buff
{
public:
	int32_t pull_radius; // 0x1338	
	int32_t pull_speed; // 0x133c	
	int32_t radius; // 0x1340	
	int32_t whirlpool_damage; // 0x1344	
	float tick_rate; // 0x1348	
	GameTime_t m_flDamageTick; // 0x134c	
	CHandle< CBaseEntity > m_hThinker; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x668
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CEnvMicrophone : public CPointEntity
{
public:
	bool m_bDisabled; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	CHandle< CBaseEntity > m_hMeasureTarget; // 0x4ac	
	SoundTypes_t m_nSoundType; // 0x4b0	
	SoundFlags_t m_nSoundFlags; // 0x4b2	
	float m_flSensitivity; // 0x4b4	
	float m_flSmoothFactor; // 0x4b8	
	float m_flMaxRange; // 0x4bc	
	CUtlSymbolLarge m_iszSpeakerName; // 0x4c0	
	CHandle< CBaseEntity > m_hSpeaker; // 0x4c8	
	bool m_bAvoidFeedback; // 0x4cc	
private:
	[[maybe_unused]] uint8_t __pad04cd[0x3]; // 0x4cd
public:
	int32_t m_iSpeakerDSPPreset; // 0x4d0	
private:
	[[maybe_unused]] uint8_t __pad04d4[0x4]; // 0x4d4
public:
	CUtlSymbolLarge m_iszListenFilter; // 0x4d8	
	CHandle< CBaseFilter > m_hListenFilter; // 0x4e0	
private:
	[[maybe_unused]] uint8_t __pad04e4[0x4]; // 0x4e4
public:
	CEntityOutputTemplate< float32 > m_SoundLevel; // 0x4e8	
	CEntityIOOutput m_OnRoutedSound; // 0x510	
	CEntityIOOutput m_OnHeardSound; // 0x538	
	char m_szLastSound[256]; // 0x560	
	int32_t m_iLastRoutedFrame; // 0x660	
	
	// Datamap fields:
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
	// CUtlSymbolLarge InputSetSpeakerName; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoSpawnGroupLoadUnloadAlias_info_spawngroup_load : public CInfoSpawnGroupLoadUnload
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x698
// Has VTable
// Construct allowed
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkIncludeByName "m_pEntity"
// MNetworkIncludeByName "m_flSimulationTime"
// MNetworkIncludeByName "m_flCreateTime"
// MNetworkIncludeByName "m_iTeamNum"
// MNetworkIncludeByName "m_nNextThinkTick"
// MNetworkIncludeByName "m_fFlags"
// MNetworkUserGroupProxy "CBasePlayerController"
// MNetworkUserGroupProxy "CBasePlayerController"
// MNetworkIncludeByUserGroup "LocalPlayerExclusive"
// MNetworkVarNames "uint32 m_nTickBase"
// MNetworkVarNames "CHandle< CBasePlayerPawn> m_hPawn"
// MNetworkVarNames "PlayerConnectedState m_iConnected"
// MNetworkVarNames "char m_iszPlayerName"
// MNetworkVarNames "uint64 m_steamID"
// MNetworkVarNames "uint32 m_iDesiredFOV"
class CBasePlayerController : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x8]; // 0x4a8
public:
	uint64_t m_nInButtonsWhichAreToggles; // 0x4b0	
	// MNetworkEnable
	// MNetworkPriority "1"
	// MNetworkUserGroup "LocalPlayerExclusive"
	uint32_t m_nTickBase; // 0x4b8	
private:
	[[maybe_unused]] uint8_t __pad04bc[0x2c]; // 0x4bc
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnPawnChanged"
	CHandle< CBasePlayerPawn > m_hPawn; // 0x4e8	
	CSplitScreenSlot m_nSplitScreenSlot; // 0x4ec	
	CHandle< CBasePlayerController > m_hSplitOwner; // 0x4f0	
private:
	[[maybe_unused]] uint8_t __pad04f4[0x4]; // 0x4f4
public:
	CUtlVector< CHandle< CBasePlayerController > > m_hSplitScreenPlayers; // 0x4f8	
	bool m_bIsHLTV; // 0x510	
private:
	[[maybe_unused]] uint8_t __pad0511[0x3]; // 0x511
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnConnectionStateChanged"
	PlayerConnectedState m_iConnected; // 0x514	
	// MNetworkEnable
	// MNetworkChangeCallback "OnPlayerControllerNameChanged"
	char m_iszPlayerName[128]; // 0x518	
	CUtlString m_szNetworkIDString; // 0x598	
	float m_fLerpTime; // 0x5a0	
	bool m_bLagCompensation; // 0x5a4	
	bool m_bPredict; // 0x5a5	
	bool m_bAutoKickDisabled; // 0x5a6	
	bool m_bIsLowViolence; // 0x5a7	
	bool m_bGamePaused; // 0x5a8	
private:
	[[maybe_unused]] uint8_t __pad05a9[0x8b]; // 0x5a9
public:
	int32_t m_nLastRealCommandNumberExecuted; // 0x634	
	int32_t m_nLastLateCommandExecuted; // 0x638	
private:
	[[maybe_unused]] uint8_t __pad063c[0x14]; // 0x63c
public:
	ChatIgnoreType_t m_iIgnoreGlobalChat; // 0x650	
	float m_flLastPlayerTalkTime; // 0x654	
	float m_flLastEntitySteadyState; // 0x658	
	int32_t m_nAvailableEntitySteadyState; // 0x65c	
	bool m_bHasAnySteadyStateEnts; // 0x660	
private:
	[[maybe_unused]] uint8_t __pad0661[0xf]; // 0x661
public:
	// MNetworkEnable
	// MNetworkEncoder "fixed64"
	// MNetworkChangeCallback "OnSteamIDChanged"
	uint64_t m_steamID; // 0x670	
	// MNetworkEnable
	uint32_t m_iDesiredFOV; // 0x678	
	
	// Static fields:
	static bool &Get_sm_bRunningPredictedClientStringCommands(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBasePlayerController")->GetStaticFields()[0]->m_pInstance);};
	
	// Datamap fields:
	// bool fakeclient; // 0x7fffffff
	// bool is_hltv; // 0x7fffffff
	// const char * playername; // 0x7fffffff
	// bool reserving; // 0x7fffffff
	// void m_pCurrentCommand; // 0x668
	// void m_LastCmd; // 0x5b0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_Wave_Blast : public CDOTABaseAbility
{
public:
	int32_t damage; // 0x578	
	float knockback_duration; // 0x57c	
	float disarm_duration; // 0x580	
private:
	[[maybe_unused]] uint8_t __pad0584[0x4]; // 0x584
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x588	
	ParticleIndex_t m_nPreviewFX; // 0x5a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Pangolier_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bounty_Hunter_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bane_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tidehunter_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Exp_Boost_25 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Lifesteal_25 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Gold_lvl20_r : public CDOTA_Ability_Special_Bonus_Gold_Ability_Draft
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1
// Has Trivial Constructor
// Has Trivial Destructor
// 
// MPulseProvideFeatureTag "PulseEntities"
// MPulseLibraryBindings
class CPointTemplateAPI
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x1]; // 0x0
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Kaya_And_Sange : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
	int32_t hp_regen_amp; // 0x133c	
	int32_t bonus_intellect; // 0x1340	
	int32_t spell_amp; // 0x1344	
	int32_t mana_regen_multiplier; // 0x1348	
	int32_t status_resistance; // 0x134c	
	int32_t spell_lifesteal_amp; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Vladmir : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_NullTalisman : public CDOTA_Item
{
public:
	int32_t counter; // 0x620	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mars_Spear_Stun : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_SpringSlow : public CDOTA_Buff
{
public:
	int32_t impact_movement_slow; // 0x1338	
	int32_t m_nSlowPct; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Undying_Decay_Shard : public CDOTA_Buff
{
public:
	float shard_buff_duration; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVector< GameTime_t > m_vecStackExpirationTimes; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Ogre_Magi_Ignite : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x578	
	int32_t m_nMostRecentMulticastCount; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_LoneDruid_TrueForm_Druid : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lycan_SummonWolves_Maim : public CDOTA_Buff
{
public:
	int32_t maim_movement_speed; // 0x1338	
	int32_t maim_attack_speed; // 0x133c	
	int32_t maim_damage; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Huskar_Burning_Spear_Self : public CDOTA_Buff
{
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1338	
	float duration; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Clinkz_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Leshrac_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Luna_MoonGlaive : public CDOTA_Buff
{
public:
	int32_t range; // 0x1338	
	int32_t bounces; // 0x133c	
	int32_t damage_reduction_percent; // 0x1340	
	ParticleIndex_t m_nMoonGlaiveFXIndex; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DeathProphet_SpiritSiphon_Debuff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Beastmaster_Axe_Stack_Counter : public CDOTA_Buff
{
public:
	float damage_amp; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Necrolyte_Heartstopper_Aura_Counter : public CDOTA_Buff
{
public:
	float mana_regen; // 0x1338	
	float health_regen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PhantomLancer_SpiritLance : public CDOTA_Buff
{
public:
	int32_t movement_speed_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_StormSpirit_ElectricVortex_Pull : public CDOTA_Buff
{
public:
	Vector m_vDestination; // 0x1338	
	int32_t electric_vortex_pull_distance; // 0x1344	
	float electric_vortex_pull_tether_range; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ScriptedMotionController : public CDOTA_Buff
{
public:
	HSCRIPT m_hHorizontalControlFunction; // 0x1338	
	HSCRIPT m_hVerticalControlFunction; // 0x1340	
	HSCRIPT m_hOnDestroyFunction; // 0x1348	
	CVariantBase< CVariantDefaultAllocator > m_parameterTable; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFuncTrackTrain : public CBaseModelEntity
{
public:
	CHandle< CPathTrack > m_ppath; // 0x758	
	float m_length; // 0x75c	
	Vector m_vPosPrev; // 0x760	
	QAngle m_angPrev; // 0x76c	
	Vector m_controlMins; // 0x778	
	Vector m_controlMaxs; // 0x784	
	Vector m_lastBlockPos; // 0x790	
	int32_t m_lastBlockTick; // 0x79c	
	float m_flVolume; // 0x7a0	
	float m_flBank; // 0x7a4	
	float m_oldSpeed; // 0x7a8	
	float m_flBlockDamage; // 0x7ac	
	float m_height; // 0x7b0	
	float m_maxSpeed; // 0x7b4	
	float m_dir; // 0x7b8	
private:
	[[maybe_unused]] uint8_t __pad07bc[0x4]; // 0x7bc
public:
	CUtlSymbolLarge m_iszSoundMove; // 0x7c0	
	CUtlSymbolLarge m_iszSoundMovePing; // 0x7c8	
	CUtlSymbolLarge m_iszSoundStart; // 0x7d0	
	CUtlSymbolLarge m_iszSoundStop; // 0x7d8	
	CUtlSymbolLarge m_strPathTarget; // 0x7e0	
	float m_flMoveSoundMinDuration; // 0x7e8	
	float m_flMoveSoundMaxDuration; // 0x7ec	
	GameTime_t m_flNextMoveSoundTime; // 0x7f0	
	float m_flMoveSoundMinPitch; // 0x7f4	
	float m_flMoveSoundMaxPitch; // 0x7f8	
	TrainOrientationType_t m_eOrientationType; // 0x7fc	
	TrainVelocityType_t m_eVelocityType; // 0x800	
private:
	[[maybe_unused]] uint8_t __pad0804[0xc]; // 0x804
public:
	CEntityIOOutput m_OnStart; // 0x810	
	CEntityIOOutput m_OnNext; // 0x838	
	CEntityIOOutput m_OnArrivedAtDestinationNode; // 0x860	
	bool m_bManualSpeedChanges; // 0x888	
private:
	[[maybe_unused]] uint8_t __pad0889[0x3]; // 0x889
public:
	float m_flDesiredSpeed; // 0x88c	
	GameTime_t m_flSpeedChangeTime; // 0x890	
	float m_flAccelSpeed; // 0x894	
	float m_flDecelSpeed; // 0x898	
	bool m_bAccelToSpeed; // 0x89c	
private:
	[[maybe_unused]] uint8_t __pad089d[0x3]; // 0x89d
public:
	GameTime_t m_flNextMPSoundTime; // 0x8a0	
	
	// Datamap fields:
	// int64_t m_soundMoveGuid; // 0x804
	// void InputStop; // 0x0
	// void InputStartForward; // 0x0
	// void InputStartBackward; // 0x0
	// void InputToggle; // 0x0
	// void InputResume; // 0x0
	// void InputReverse; // 0x0
	// float InputSetSpeed; // 0x0
	// float InputSetSpeedDir; // 0x0
	// float InputSetSpeedReal; // 0x0
	// float InputSetMaxSpeed; // 0x0
	// float InputSetSpeedDirAccel; // 0x0
	// CUtlSymbolLarge InputMoveToPathNode; // 0x0
	// CUtlSymbolLarge InputTeleportToPathNode; // 0x0
	// void InputLockOrientation; // 0x0
	// void InputUnlockOrientation; // 0x0
	// void CFuncTrackTrainNext; // 0x0
	// void CFuncTrackTrainFind; // 0x0
	// void CFuncTrackTrainNearestPath; // 0x0
	// void CFuncTrackTrainDeadEnd; // 0x0
	// int32_t volume; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Kunkka : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Morphling_Waveform : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Healing_Campfire_Heal : public CDOTA_Buff
{
public:
	int32_t heal_amount; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x780
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFogVolume : public CServerOnlyModelEntity
{
public:
	CUtlSymbolLarge m_fogName; // 0x758	
	CUtlSymbolLarge m_postProcessName; // 0x760	
	CUtlSymbolLarge m_colorCorrectionName; // 0x768	
private:
	[[maybe_unused]] uint8_t __pad0770[0x8]; // 0x770
public:
	bool m_bDisabled; // 0x778	
	bool m_bInFogVolumesList; // 0x779	
	
	// Datamap fields:
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
	// CHandle< CBaseEntity > m_hFogController; // 0x770
	// CHandle< CBaseEntity > m_hColorCorrectionController; // 0x774
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Skadi : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Urn_Of_Shadows : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VoidSpirit_AstralStep_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EarthSpirit_Polarization : public CDOTA_Buff
{
public:
	int32_t damage_per_second; // 0x1338	
	float damage_interval; // 0x133c	
	float damage_duration; // 0x1340	
	int32_t rock_search_radius; // 0x1344	
	CHandle< CBaseEntity > m_hMagnetizeAbility; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Broodmother_IncapacitatingBite : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Life_Stealer_Open_Wounds : public CDOTA_Buff
{
public:
	int32_t slow_steps[8]; // 0x1338	
	int32_t heal_percent; // 0x1358	
	int32_t m_nDamageTracker; // 0x135c	
	int32_t damage_threshold; // 0x1360	
	int32_t spread_radius; // 0x1364	
	int32_t max_health_as_damage_pct; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dazzle_Bad_Juju_Manacost : public CDOTA_Buff
{
public:
	float mana_cost_increase_duration; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVector< GameTime_t > m_vecExpirationTimes; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Courier_GoToSideShop2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Greevil_Miniboss_Yellow_Surge : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x460
// Has VTable
// Construct disallowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CSkeletonInstance m_skeletonInstance"
class CBodyComponentSkeletonInstance : public CBodyComponent
{
public:
	// MNetworkEnable
	// -> m_modelState - 0x1c0
	// -> m_bIsAnimationEnabled - 0x3f0
	// -> m_bUseParentRenderBounds - 0x3f1
	// -> m_bDisableSolidCollisionsForHierarchy - 0x3f2
	// -> m_materialGroup - 0x3f4
	// -> m_nHitboxSet - 0x3f8
	CSkeletonInstance m_skeletonInstance; // 0x50	
	
	// Static fields:
	static EntComponentInfo_t &Get_s_EntComponentInfo(){return *reinterpret_cast<EntComponentInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponentSkeletonInstance")->GetStaticFields()[0]->m_pInstance);};
	static int32_t &Get_entity_component_error_class_decl_says_contained_but_impl_is_referenced(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponentSkeletonInstance")->GetStaticFields()[1]->m_pInstance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Aghsfort_Ability_Hoodwink_HuntersBoomerang : public CDOTABaseAbility
{
public:
	int32_t min_distance; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Aghsfort_Reward_HPAura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_Summon_TI9_Balloon : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Warlock_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Monkey_King_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CIngameEvent_TI7 : public CIngameEvent_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1770
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_PhantomAssassin_Gravestone : public CDOTA_BaseNPC_Additive
{
public:
	PlayerID_t m_nVictimPlayerID; // 0x1768	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_DeathProphet : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1870
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Promo : public CDOTA_BaseNPC_Building
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Spawnlord_Master_Stomp : public CDOTA_Buff
{
public:
	int32_t armor_reduction_pct; // 0x1338	
	float m_flArmorReduction; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x820
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFuncPlatRot : public CFuncPlat
{
public:
	QAngle m_end; // 0x808	
	QAngle m_start; // 0x814	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Doubloon : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_SeedsOfSerenity : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Trusty_Shovel : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Famango : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Necronomicon_Archer_Purge : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Vanguard : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
	float bonus_health_regen; // 0x133c	
	int32_t block_damage_ranged; // 0x1340	
	int32_t block_damage_melee; // 0x1344	
	int32_t block_chance; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_UltimateScepter : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Marci_Guardian : public CDOTABaseAbility
{
public:
	float buff_duration; // 0x578	
	int32_t nearest_ally_search_range; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hoodwink_AcornShot_BonusDamage : public CDOTA_Buff
{
public:
	int32_t acorn_shot_damage; // 0x1338	
	int32_t base_damage_pct; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Grimstroke_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Terrorblade_Fear : public CDOTA_Buff
{
public:
	Vector m_vOriginal; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AbyssalUnderlord_PitOfMalice_Thinker : public CDOTA_Buff
{
public:
	int32_t pit_damage; // 0x1338	
	int32_t radius; // 0x133c	
	float pit_interval; // 0x1340	
	float ensnare_duration; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Magnataur_Shockwave_Pull : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1338	
	float m_flEndTime; // 0x1344	
	float m_flCurTime; // 0x1348	
	float pull_duration; // 0x134c	
	float effective_distance; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Visage_Stone_Form_Self_Cast_Cooldown_Manager : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_NagaSiren_SongOfTheSiren : public CDOTA_Buff
{
public:
	float animation_rate; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Undying_Tombstone_Bunker_Friendly : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lycan_FeralImpulse : public CDOTA_Buff
{
public:
	int32_t bonus_hp_regen; // 0x1338	
	int32_t bonus_damage; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Clinkz_Tar_Bomb_Slow : public CDOTA_Buff
{
public:
	int32_t slow_movement_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Clinkz_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13b0
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DarkSeer_WallOfReplica : public CDOTA_Buff
{
public:
	Vector m_vWallDirection; // 0x1338	
	Vector m_vWallRight; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1350[0x18]; // 0x1350
public:
	CUtlOrderedMap< int32, GameTime_t > m_PreventReplicateTime; // 0x1368	
	int32_t width; // 0x1390	
	int32_t wall_damage; // 0x1394	
	float slow_duration; // 0x1398	
	int32_t replica_damage_incoming; // 0x139c	
	int32_t replica_damage_outgoing; // 0x13a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DarkSeer_Surge : public CDOTABaseAbility
{
public:
	bool m_bIsAltCastState; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Leshrac_Greater_Lightning_Storm : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Assassin : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DrowRanger_WaveOfSilence : public CDOTABaseAbility
{
public:
	Vector m_vStartPosition; // 0x578	
	Vector m_vEndPosition; // 0x584	
	int32_t wave_width; // 0x590	
	float wave_speed; // 0x594	
	float silence_duration; // 0x598	
	float knockback_distance_max; // 0x59c	
	int32_t m_nHeroesHit; // 0x5a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x650
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CGenericConstraint : public CPhysConstraint
{
private:
	[[maybe_unused]] uint8_t __pad0520[0x8]; // 0x520
public:
	JointMotion_t m_nLinearMotionX; // 0x528	
	JointMotion_t m_nLinearMotionY; // 0x52c	
	JointMotion_t m_nLinearMotionZ; // 0x530	
	float m_flLinearFrequencyX; // 0x534	
	float m_flLinearFrequencyY; // 0x538	
	float m_flLinearFrequencyZ; // 0x53c	
	float m_flLinearDampingRatioX; // 0x540	
	float m_flLinearDampingRatioY; // 0x544	
	float m_flLinearDampingRatioZ; // 0x548	
	float m_flMaxLinearImpulseX; // 0x54c	
	float m_flMaxLinearImpulseY; // 0x550	
	float m_flMaxLinearImpulseZ; // 0x554	
	float m_flBreakAfterTimeX; // 0x558	
	float m_flBreakAfterTimeY; // 0x55c	
	float m_flBreakAfterTimeZ; // 0x560	
	GameTime_t m_flBreakAfterTimeStartTimeX; // 0x564	
	GameTime_t m_flBreakAfterTimeStartTimeY; // 0x568	
	GameTime_t m_flBreakAfterTimeStartTimeZ; // 0x56c	
	float m_flBreakAfterTimeThresholdX; // 0x570	
	float m_flBreakAfterTimeThresholdY; // 0x574	
	float m_flBreakAfterTimeThresholdZ; // 0x578	
	float m_flNotifyForceX; // 0x57c	
	float m_flNotifyForceY; // 0x580	
	float m_flNotifyForceZ; // 0x584	
	float m_flNotifyForceMinTimeX; // 0x588	
	float m_flNotifyForceMinTimeY; // 0x58c	
	float m_flNotifyForceMinTimeZ; // 0x590	
	GameTime_t m_flNotifyForceLastTimeX; // 0x594	
	GameTime_t m_flNotifyForceLastTimeY; // 0x598	
	GameTime_t m_flNotifyForceLastTimeZ; // 0x59c	
	bool m_bAxisNotifiedX; // 0x5a0	
	bool m_bAxisNotifiedY; // 0x5a1	
	bool m_bAxisNotifiedZ; // 0x5a2	
private:
	[[maybe_unused]] uint8_t __pad05a3[0x1]; // 0x5a3
public:
	JointMotion_t m_nAngularMotionX; // 0x5a4	
	JointMotion_t m_nAngularMotionY; // 0x5a8	
	JointMotion_t m_nAngularMotionZ; // 0x5ac	
	float m_flAngularFrequencyX; // 0x5b0	
	float m_flAngularFrequencyY; // 0x5b4	
	float m_flAngularFrequencyZ; // 0x5b8	
	float m_flAngularDampingRatioX; // 0x5bc	
	float m_flAngularDampingRatioY; // 0x5c0	
	float m_flAngularDampingRatioZ; // 0x5c4	
	float m_flMaxAngularImpulseX; // 0x5c8	
	float m_flMaxAngularImpulseY; // 0x5cc	
	float m_flMaxAngularImpulseZ; // 0x5d0	
private:
	[[maybe_unused]] uint8_t __pad05d4[0x4]; // 0x5d4
public:
	CEntityIOOutput m_NotifyForceReachedX; // 0x5d8	
	CEntityIOOutput m_NotifyForceReachedY; // 0x600	
	CEntityIOOutput m_NotifyForceReachedZ; // 0x628	
	
	// Datamap fields:
	// void CGenericConstraintUpdateThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Creature_IceSlam : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Phoenix_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Winter_Wyvern_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Spirit_Breaker_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Invoker_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_20_Bash_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Status_Resistance_25 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_Regen_14 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a8
// Has VTable
// 
// MNetworkVarNames "DOTAThreatLevelInfo_t m_ThreatLevelInfos"
// MNetworkVarNames "int m_nSelectedHeroID"
// MNetworkVarNames "int m_iKills"
// MNetworkVarNames "int m_iAssists"
// MNetworkVarNames "int m_iDeaths"
// MNetworkVarNames "int m_iStreak"
// MNetworkVarNames "int m_iLevel"
// MNetworkVarNames "int m_iCustomIntParam"
// MNetworkVarNames "int m_iRespawnSeconds"
// MNetworkVarNames "GameTime_t m_flLastBuybackTime"
// MNetworkVarNames "EHANDLE m_hSelectedHero"
// MNetworkVarNames "bool m_bAFK"
// MNetworkVarNames "int m_nSuggestedHeroes"
// MNetworkVarNames "bool m_bBanSuggestedHeroes"
// MNetworkVarNames "item_definition_index_t m_iTimedRewardDrops"
// MNetworkVarNames "int m_iTimedRewardDropOrigins"
// MNetworkVarNames "item_definition_index_t m_iTimedRewardCrates"
// MNetworkVarNames "item_definition_index_t m_iTimedRewardEvents"
// MNetworkVarNames "uint16 m_unCompendiumLevel"
// MNetworkVarNames "bool m_bCanRepick"
// MNetworkVarNames "bool m_bCanEarnRewards"
// MNetworkVarNames "bool m_bHasRandomed"
// MNetworkVarNames "int m_nRandomedHeroID"
// MNetworkVarNames "bool m_bBattleBonusActive"
// MNetworkVarNames "uint16 m_iBattleBonusRate"
// MNetworkVarNames "int m_iCustomBuybackCost"
// MNetworkVarNames "Color m_CustomPlayerColor"
// MNetworkVarNames "bool m_bQualifiesForPAContractReward"
// MNetworkVarNames "bool m_bHasPredictedVictory"
// MNetworkVarNames "UnitShareMask_t m_UnitShareMasks"
// MNetworkVarNames "int m_iTeamSlot"
// MNetworkVarNames "uint8 m_iBattleCupWinStreak"
// MNetworkVarNames "uint64 m_iBattleCupWinDate"
// MNetworkVarNames "uint16 m_iBattleCupSkillLevel"
// MNetworkVarNames "uint32 m_iBattleCupTeamID"
// MNetworkVarNames "uint32 m_iBattleCupTournamentID"
// MNetworkVarNames "uint8 m_iBattleCupDivision"
// MNetworkVarNames "float m_flTeamFightParticipation"
// MNetworkVarNames "int m_iFirstBloodClaimed"
// MNetworkVarNames "int m_iFirstBloodGiven"
// MNetworkVarNames "uint32 m_unPickOrder"
// MNetworkVarNames "GameTime_t m_flTimeOfLastSaluteSent"
// MNetworkVarNames "PlayerResourcePlayerEventData_t m_vecPlayerEventData"
// MNetworkVarNames "uint32 m_unSelectedHeroBadgeXP"
// MNetworkVarNames "uint8 m_iBountyRunes"
// MNetworkVarNames "uint8 m_iPowerRunes"
// MNetworkVarNames "uint8 m_iWaterRunes"
// MNetworkVarNames "uint8 m_iOutpostsCaptured"
// MNetworkVarNames "uint8 m_unGuildTier"
// MNetworkVarNames "uint16 m_unGuildLevel"
// MNetworkVarNames "uint8 m_unGuildPrimaryColor"
// MNetworkVarNames "uint8 m_unGuildSecondaryColor"
// MNetworkVarNames "uint8 m_unGuildPattern"
// MNetworkVarNames "uint64 m_unGuildLogo"
// MNetworkVarNames "uint32 m_unGuildFlags"
// MNetworkVarNames "bool m_bIsPartyGuild"
// MNetworkVarNames "GuildID_t m_unGuildID"
// MNetworkVarNames "item_definition_index_t m_unHeroStickerDefIndex"
// MNetworkVarNames "uint8 m_eHeroStickerQuality"
// MNetworkVarNames "uint8 m_eLaneSelectionFlags"
// MNetworkVarNames "uint8 m_nPlayerDraftPreferredRoles"
// MNetworkVarNames "int8 m_nPlayerDraftPreferredTeam"
// MNetworkVarNames "uint8 m_nAvailableGifts"
struct PlayerResourcePlayerTeamData_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< DOTAThreatLevelInfo_t > m_ThreatLevelInfos; // 0x30	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSelectionDirty"
	int32_t m_nSelectedHeroID; // 0x80	
	// MNetworkEnable
	int32_t m_iKills; // 0x84	
	// MNetworkEnable
	int32_t m_iAssists; // 0x88	
	// MNetworkEnable
	int32_t m_iDeaths; // 0x8c	
	// MNetworkEnable
	int32_t m_iStreak; // 0x90	
	// MNetworkEnable
	int32_t m_iLevel; // 0x94	
	// MNetworkEnable
	int32_t m_iCustomIntParam; // 0x98	
	// MNetworkEnable
	int32_t m_iRespawnSeconds; // 0x9c	
	// MNetworkEnable
	GameTime_t m_flLastBuybackTime; // 0xa0	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hSelectedHero; // 0xa4	
	// MNetworkEnable
	bool m_bAFK; // 0xa8	
private:
	[[maybe_unused]] uint8_t __pad00a9[0x3]; // 0xa9
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnSelectionDirty"
	int32_t m_nSuggestedHeroes[4]; // 0xac	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSelectionDirty"
	bool m_bBanSuggestedHeroes[4]; // 0xbc	
	// MNetworkEnable
	item_definition_index_t m_iTimedRewardDrops; // 0xc0	
	// MNetworkEnable
	int32_t m_iTimedRewardDropOrigins; // 0xc4	
	// MNetworkEnable
	item_definition_index_t m_iTimedRewardCrates; // 0xc8	
	// MNetworkEnable
	item_definition_index_t m_iTimedRewardEvents; // 0xcc	
	// MNetworkEnable
	uint16_t m_unCompendiumLevel; // 0xd0	
	// MNetworkEnable
	bool m_bCanRepick; // 0xd2	
	// MNetworkEnable
	bool m_bCanEarnRewards; // 0xd3	
	// MNetworkEnable
	bool m_bHasRandomed; // 0xd4	
private:
	[[maybe_unused]] uint8_t __pad00d5[0x3]; // 0xd5
public:
	// MNetworkEnable
	int32_t m_nRandomedHeroID; // 0xd8	
	// MNetworkEnable
	bool m_bBattleBonusActive; // 0xdc	
private:
	[[maybe_unused]] uint8_t __pad00dd[0x1]; // 0xdd
public:
	// MNetworkEnable
	uint16_t m_iBattleBonusRate; // 0xde	
	// MNetworkEnable
	int32_t m_iCustomBuybackCost; // 0xe0	
	// MNetworkEnable
	Color m_CustomPlayerColor; // 0xe4	
	// MNetworkEnable
	bool m_bQualifiesForPAContractReward; // 0xe8	
	// MNetworkEnable
	bool m_bHasPredictedVictory; // 0xe9	
private:
	[[maybe_unused]] uint8_t __pad00ea[0x2]; // 0xea
public:
	// MNetworkEnable
	int32_t m_UnitShareMasks; // 0xec	
	// MNetworkEnable
	// MNetworkChangeCallback "OnTeamChanged"
	int32_t m_iTeamSlot; // 0xf0	
	// MNetworkEnable
	uint8_t m_iBattleCupWinStreak; // 0xf4	
private:
	[[maybe_unused]] uint8_t __pad00f5[0x3]; // 0xf5
public:
	// MNetworkEnable
	uint64_t m_iBattleCupWinDate; // 0xf8	
	// MNetworkEnable
	uint16_t m_iBattleCupSkillLevel; // 0x100	
private:
	[[maybe_unused]] uint8_t __pad0102[0x2]; // 0x102
public:
	// MNetworkEnable
	uint32_t m_iBattleCupTeamID; // 0x104	
	// MNetworkEnable
	uint32_t m_iBattleCupTournamentID; // 0x108	
	// MNetworkEnable
	uint8_t m_iBattleCupDivision; // 0x10c	
private:
	[[maybe_unused]] uint8_t __pad010d[0x3]; // 0x10d
public:
	// MNetworkEnable
	float m_flTeamFightParticipation; // 0x110	
	// MNetworkEnable
	int32_t m_iFirstBloodClaimed; // 0x114	
	// MNetworkEnable
	int32_t m_iFirstBloodGiven; // 0x118	
	// MNetworkEnable
	uint32_t m_unPickOrder; // 0x11c	
	// MNetworkEnable
	GameTime_t m_flTimeOfLastSaluteSent; // 0x120	
private:
	[[maybe_unused]] uint8_t __pad0124[0x4]; // 0x124
public:
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< PlayerResourcePlayerEventData_t > m_vecPlayerEventData; // 0x128	
	// MNetworkEnable
	uint32_t m_unSelectedHeroBadgeXP; // 0x178	
	// MNetworkEnable
	uint8_t m_iBountyRunes; // 0x17c	
	// MNetworkEnable
	uint8_t m_iPowerRunes; // 0x17d	
	// MNetworkEnable
	uint8_t m_iWaterRunes; // 0x17e	
	// MNetworkEnable
	uint8_t m_iOutpostsCaptured; // 0x17f	
	// MNetworkEnable
	uint8_t m_unGuildTier; // 0x180	
private:
	[[maybe_unused]] uint8_t __pad0181[0x1]; // 0x181
public:
	// MNetworkEnable
	uint16_t m_unGuildLevel; // 0x182	
	// MNetworkEnable
	uint8_t m_unGuildPrimaryColor; // 0x184	
	// MNetworkEnable
	uint8_t m_unGuildSecondaryColor; // 0x185	
	// MNetworkEnable
	uint8_t m_unGuildPattern; // 0x186	
private:
	[[maybe_unused]] uint8_t __pad0187[0x1]; // 0x187
public:
	// MNetworkEnable
	uint64_t m_unGuildLogo; // 0x188	
	// MNetworkEnable
	uint32_t m_unGuildFlags; // 0x190	
	// MNetworkEnable
	bool m_bIsPartyGuild; // 0x194	
private:
	[[maybe_unused]] uint8_t __pad0195[0x3]; // 0x195
public:
	// MNetworkEnable
	GuildID_t m_unGuildID; // 0x198	
	// MNetworkEnable
	item_definition_index_t m_unHeroStickerDefIndex; // 0x19c	
	// MNetworkEnable
	uint8_t m_eHeroStickerQuality; // 0x1a0	
	// MNetworkEnable
	uint8_t m_eLaneSelectionFlags; // 0x1a1	
	// MNetworkEnable
	uint8_t m_nPlayerDraftPreferredRoles; // 0x1a2	
	// MNetworkEnable
	int8_t m_nPlayerDraftPreferredTeam; // 0x1a3	
	// MNetworkEnable
	uint8_t m_nAvailableGifts; // 0x1a4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTACustomGameEvents : public CDOTAGameEvents
{
public:
	// Datamap fields:
	// int32_t InputSetGameWinner; // 0x0
	// void InputLevelAllHeroesUpOnce; // 0x0
	// void InputLevelAllHeroesToMax; // 0x0
	// int32_t InputLevelAllHeroesToLevel; // 0x0
	// bool InputSetStashPurchasingDisabled; // 0x0
	// bool InputSetFogOfWarDisabled; // 0x0
	// bool InputSetUnseenFogOfWarEnabled; // 0x0
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_JungleVarmint_Dive : public CDOTA_Buff
{
public:
	float m_flTotalTime; // 0x1338	
	float m_flInitialVelocity; // 0x133c	
	Vector m_vStartPosition; // 0x1340	
	Vector m_vTargetHorizontalDirection; // 0x134c	
	float m_flCurrentTimeHoriz; // 0x1358	
	float m_flCurrentTimeVert; // 0x135c	
	bool m_bInterrupted; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1361[0x3]; // 0x1361
public:
	int32_t distance; // 0x1364	
	float speed; // 0x1368	
	float acceleration; // 0x136c	
	int32_t radius; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xad8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "Vector m_ragPos"
// MNetworkVarNames "QAngle m_ragAngles"
// MNetworkVarNames "EHANDLE m_hRagdollSource"
// MNetworkVarNames "float32 m_flBlendWeight"
class CRagdollProp : public CBaseAnimGraph
{
private:
	[[maybe_unused]] uint8_t __pad0930[0x8]; // 0x930
public:
	ragdoll_t m_ragdoll; // 0x938	
	bool m_bStartDisabled; // 0x970	
private:
	[[maybe_unused]] uint8_t __pad0971[0x7]; // 0x971
public:
	// MNetworkEnable
	// MNetworkEncoder "coord"
	CNetworkUtlVectorBase< Vector > m_ragPos; // 0x978	
	// MNetworkEnable
	// MNetworkEncoder "qangle"
	// MNetworkBitCount "13"
	CNetworkUtlVectorBase< QAngle > m_ragAngles; // 0x990	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hRagdollSource; // 0x9a8	
	uint32_t m_lastUpdateTickCount; // 0x9ac	
	bool m_allAsleep; // 0x9b0	
	bool m_bFirstCollisionAfterLaunch; // 0x9b1	
private:
	[[maybe_unused]] uint8_t __pad09b2[0x2]; // 0x9b2
public:
	CHandle< CBaseEntity > m_hDamageEntity; // 0x9b4	
	CHandle< CBaseEntity > m_hKiller; // 0x9b8	
	CHandle< CBasePlayerPawn > m_hPhysicsAttacker; // 0x9bc	
	GameTime_t m_flLastPhysicsInfluenceTime; // 0x9c0	
	GameTime_t m_flFadeOutStartTime; // 0x9c4	
	float m_flFadeTime; // 0x9c8	
	// MNetworkDisable
	Vector m_vecLastOrigin; // 0x9cc	
	GameTime_t m_flAwakeTime; // 0x9d8	
	GameTime_t m_flLastOriginChangeTime; // 0x9dc	
	int32_t m_nBloodColor; // 0x9e0	
private:
	[[maybe_unused]] uint8_t __pad09e4[0x4]; // 0x9e4
public:
	CUtlSymbolLarge m_strOriginClassName; // 0x9e8	
	CUtlSymbolLarge m_strSourceClassName; // 0x9f0	
	bool m_bHasBeenPhysgunned; // 0x9f8	
	bool m_bShouldTeleportPhysics; // 0x9f9	
private:
	[[maybe_unused]] uint8_t __pad09fa[0x2]; // 0x9fa
public:
	// MNetworkEnable
	// MNetworkBitCount "8"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "1,000000"
	// MNetworkEncodeFlags "1"
	float m_flBlendWeight; // 0x9fc	
	float m_flDefaultFadeScale; // 0xa00	
private:
	[[maybe_unused]] uint8_t __pad0a04[0x4]; // 0xa04
public:
	CUtlVector< Vector > m_ragdollMins; // 0xa08	
	CUtlVector< Vector > m_ragdollMaxs; // 0xa20	
	bool m_bShouldDeleteActivationRecord; // 0xa38	
private:
	[[maybe_unused]] uint8_t __pad0a39[0x5f]; // 0xa39
public:
	bool m_bValidatePoweredRagdollPose; // 0xa98	
	
	// Datamap fields:
	// void m_ragdoll.boneIndex; // 0x950
	// void InputEnableMotion; // 0x0
	// void InputDisableMotion; // 0x0
	// void InputTurnOn; // 0x0
	// void InputTurnOff; // 0x0
	// float InputFadeAndRemove; // 0x0
	// void CRagdollPropSetDebrisThink; // 0x0
	// void CRagdollPropClearFlagsThink; // 0x0
	// void CRagdollPropFadeOutThink; // 0x0
	// void CRagdollPropSettleThink; // 0x0
	// void CRagdollPropAttachedItemsThink; // 0x0
	// void CRagdollPropRagdollTouch; // 0x0
	// void m_ragdoll.list; // 0x938
	// bool m_ragdoll.allowStretch; // 0x968
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Keen_Optic : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Necronomicon_2 : public CDOTA_Item_Recipe_Necronomicon
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Pipe_Debuff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_ObserverWard : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hoodwink_Bushwhack_Trap : public CDOTA_Buff
{
public:
	int32_t visual_height; // 0x1338	
	float animation_rate; // 0x133c	
	ParticleIndex_t m_nFXIndex; // 0x1340	
	bool m_bPullComplete; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1345[0x3]; // 0x1345
public:
	uint32_t m_TreeId; // 0x1348	
	float m_flDamagePerTick; // 0x134c	
	int32_t m_nDamageTicks; // 0x1350	
	GameTime_t m_flLastTick; // 0x1354	
	CHandle< CDOTA_TempTree > m_hTree; // 0x1358	
private:
	[[maybe_unused]] uint8_t __pad135c[0x4]; // 0x135c
public:
	CDOTA_Tree* m_pTree; // 0x1360	
	Vector m_vPullPosition; // 0x1368	
	Vector m_vDir; // 0x1374	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Techies_RemoteMines_SelfDetonate : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tusk_FrozenSigil : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Centaur_Mounted : public CDOTA_Buff
{
public:
	int32_t melee_attack_range; // 0x1338	
	CHandle< CBaseEntity > m_hCart; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TrollWarlord_BattleTrance_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_NagaSiren_RipTide_Passive : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Spectre_SpectralDagger : public CDOTA_Buff
{
public:
	int32_t path_radius; // 0x1338	
	float hero_path_duration; // 0x133c	
	Vector m_vLastPosition; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BountyHunter_Track : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1338	
	int32_t m_nParentGold; // 0x133c	
	int32_t target_crit_multiplier; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Clinkz_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lion : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Riki_BlinkStrike_Slow : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_VengefulSpirit_Magic_Missile : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1428
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lua : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1338[0xe8]; // 0x1338
public:
	bool m_bHasCustomTransmitterData; // 0x1420	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x40
// Has VTable
// Has Trivial Destructor
class CConstantForceController
{
private:
	[[maybe_unused]] uint8_t __pad0000[0xc]; // 0x0
public:
	Vector m_linear; // 0xc	
	RotationVector m_angular; // 0x18	
	Vector m_linearSave; // 0x24	
	RotationVector m_angularSave; // 0x30	
	
	// Datamap fields:
	// bool m_bLocalSpace; // 0x8
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Timbersaw_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Timbersaw : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Exp_Boost_60 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Evasion_75 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Movement_Speed_30 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Speed_100 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Speed_40 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_600 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_CustomGameAnnouncer : public CDOTA_BaseNPC
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x988
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "Color m_LightColor"
// MNetworkVarNames "float m_flIntensity"
// MNetworkVarNames "float m_flLightSize"
// MNetworkVarNames "float m_flSpotFoV"
// MNetworkVarNames "QAngle m_vLightDirection"
// MNetworkVarNames "float m_flStartFalloff"
// MNetworkVarNames "float m_flDistanceFalloff"
// MNetworkVarNames "uint m_nFlags"
// MNetworkVarNames "char m_ProjectedTextureName"
class CEnvDeferredLight : public CModelPointEntity
{
public:
	CHandle< CBaseEntity > m_hTargetEntity; // 0x758	
	// MNetworkEnable
	Color m_LightColor; // 0x75c	
	// MNetworkEnable
	float m_flIntensity; // 0x760	
	// MNetworkEnable
	float m_flLightSize; // 0x764	
	// MNetworkEnable
	float m_flSpotFoV; // 0x768	
	// MNetworkEnable
	QAngle m_vLightDirection; // 0x76c	
	// MNetworkEnable
	float m_flStartFalloff; // 0x778	
	// MNetworkEnable
	float m_flDistanceFalloff; // 0x77c	
	// MNetworkEnable
	uint32_t m_nFlags; // 0x780	
	// MNetworkEnable
	char m_ProjectedTextureName[512]; // 0x784	
	
	// Datamap fields:
	// void InputTurnOn; // 0x0
	// void InputTurnOff; // 0x0
	// Color InputSetLightColor; // 0x0
	// float InputSetLightIntensity; // 0x0
	// float InputSetLightRadius; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_GiantWolf_CriticalStrike : public CDOTA_Buff
{
public:
	int32_t crit_mult; // 0x1338	
	int32_t crit_chance; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xb18
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "uint32 m_boneIndexAttached"
// MNetworkVarNames "uint32 m_ragdollAttachedObjectIndex"
// MNetworkVarNames "Vector m_attachmentPointBoneSpace"
// MNetworkVarNames "Vector m_attachmentPointRagdollSpace"
class CRagdollPropAttached : public CRagdollProp
{
public:
	// MNetworkEnable
	uint32_t m_boneIndexAttached; // 0xad8	
	// MNetworkEnable
	uint32_t m_ragdollAttachedObjectIndex; // 0xadc	
	// MNetworkEnable
	// MNetworkEncoder "coord"
	Vector m_attachmentPointBoneSpace; // 0xae0	
	// MNetworkEnable
	// MNetworkEncoder "coord"
	Vector m_attachmentPointRagdollSpace; // 0xaec	
	bool m_bShouldDetach; // 0xaf8	
private:
	[[maybe_unused]] uint8_t __pad0af9[0xf]; // 0xaf9
public:
	bool m_bShouldDeleteAttachedActivationRecord; // 0xb08	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Bloodstone_Drained : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Tango : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VoidSpirit_AetherRemnantUnit_Truesight : public CDOTA_Buff
{
public:
	int32_t m_nRadius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DarkWillow_ShadowRealm_Buff_Attack_Logic : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
	int32_t m_iRecord; // 0x133c	
	float m_flDamageScale; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EarthSpirit_StoneThinker : public CDOTA_Buff
{
public:
	int32_t vision_radius; // 0x1338	
	bool m_bHasBeenMagnetized; // 0x133c	
private:
	[[maybe_unused]] uint8_t __pad133d[0x3]; // 0x133d
public:
	ParticleIndex_t m_nFXIndex; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Elder_Titan_AncestralSpirit_Hidden : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_LoneDruid_SpiritBear_Defender_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MoveSpeed_Percentage : public CDOTA_Buff
{
public:
	int32_t movespeed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Clockwerk_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ursa_Fury_Swipes_Damage_Increase : public CDOTA_Buff
{
public:
	int32_t damage_per_stack; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Sniper_TakeAim : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Pudge_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AncientApparition_ChillingTouch : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
	float duration; // 0x133c	
	int32_t attack_range_bonus; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rune_Arcane : public CDOTA_Buff
{
public:
	int32_t m_iCooldownReductionPct; // 0x1338	
	int32_t m_iCostReductionPct; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Buyback_Gold_Penalty : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "HRenderTextureStrong m_Entity_hCubemapTexture"
// MNetworkVarNames "bool m_Entity_bCustomCubemapTexture"
// MNetworkVarNames "float m_Entity_flInfluenceRadius"
// MNetworkVarNames "Vector m_Entity_vBoxProjectMins"
// MNetworkVarNames "Vector m_Entity_vBoxProjectMaxs"
// MNetworkVarNames "bool m_Entity_bMoveable"
// MNetworkVarNames "int m_Entity_nHandshake"
// MNetworkVarNames "int m_Entity_nEnvCubeMapArrayIndex"
// MNetworkVarNames "int m_Entity_nPriority"
// MNetworkVarNames "float m_Entity_flEdgeFadeDist"
// MNetworkVarNames "Vector m_Entity_vEdgeFadeDists"
// MNetworkVarNames "float m_Entity_flDiffuseScale"
// MNetworkVarNames "bool m_Entity_bStartDisabled"
// MNetworkVarNames "bool m_Entity_bDefaultEnvMap"
// MNetworkVarNames "bool m_Entity_bDefaultSpecEnvMap"
// MNetworkVarNames "bool m_Entity_bIndoorCubeMap"
// MNetworkVarNames "bool m_Entity_bCopyDiffuseFromDefaultCubemap"
// MNetworkVarNames "bool m_Entity_bEnabled"
class CEnvCubemap : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x80]; // 0x4a8
public:
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_Entity_hCubemapTexture; // 0x528	
	// MNetworkEnable
	bool m_Entity_bCustomCubemapTexture; // 0x530	
private:
	[[maybe_unused]] uint8_t __pad0531[0x3]; // 0x531
public:
	// MNetworkEnable
	float m_Entity_flInfluenceRadius; // 0x534	
	// MNetworkEnable
	Vector m_Entity_vBoxProjectMins; // 0x538	
	// MNetworkEnable
	Vector m_Entity_vBoxProjectMaxs; // 0x544	
	// MNetworkEnable
	bool m_Entity_bMoveable; // 0x550	
private:
	[[maybe_unused]] uint8_t __pad0551[0x3]; // 0x551
public:
	// MNetworkEnable
	int32_t m_Entity_nHandshake; // 0x554	
	// MNetworkEnable
	int32_t m_Entity_nEnvCubeMapArrayIndex; // 0x558	
	// MNetworkEnable
	int32_t m_Entity_nPriority; // 0x55c	
	// MNetworkEnable
	float m_Entity_flEdgeFadeDist; // 0x560	
	// MNetworkEnable
	Vector m_Entity_vEdgeFadeDists; // 0x564	
	// MNetworkEnable
	float m_Entity_flDiffuseScale; // 0x570	
	// MNetworkEnable
	bool m_Entity_bStartDisabled; // 0x574	
	// MNetworkEnable
	bool m_Entity_bDefaultEnvMap; // 0x575	
	// MNetworkEnable
	bool m_Entity_bDefaultSpecEnvMap; // 0x576	
	// MNetworkEnable
	bool m_Entity_bIndoorCubeMap; // 0x577	
	// MNetworkEnable
	bool m_Entity_bCopyDiffuseFromDefaultCubemap; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad0579[0xf]; // 0x579
public:
	// MNetworkEnable
	bool m_Entity_bEnabled; // 0x588	
	
	// Datamap fields:
	// void m_Entity_pSceneObject; // 0x580
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Troll_Warlord_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Legion_Commander_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Base_Damage_25 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CIngameEvent_PermanentGrants : public CIngameEvent_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x138
// Has VTable
// MNetworkNoBase
// 
// MNetworkVarNames "AbilityID_t m_nAbilityID"
// MNetworkVarNames "int m_nStockCount"
// MNetworkVarNames "char m_Category"
class CDOTACustomShopItemInfo
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	AbilityID_t m_nAbilityID; // 0x30	
	// MNetworkEnable
	int32_t m_nStockCount; // 0x34	
	// MNetworkEnable
	char m_Category[256]; // 0x38	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1
// Has Trivial Constructor
// Has Trivial Destructor
// 
// MPulseProvideFeatureTag "PulseEntities"
// MPulseLibraryBindings
class CBasePlayerControllerAPI
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x1]; // 0x0
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1770
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Announcer : public CDOTA_BaseNPC
{
public:
	int32_t m_iAudienceTeam; // 0x1768	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18e8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_bIsCurrentlyChanneling"
// MNetworkVarNames "float m_flChannelCycle"
class CDOTA_BaseNPC_Creature : public CDOTA_BaseNPC_Creep
{
public:
	bool m_bInitialized; // 0x1798	
	bool m_bCreatureCanRespawn; // 0x1799	
	bool m_bUsesGestureBasedAttackAnimation; // 0x179a	
	bool m_bIsHybridFlyer; // 0x179b	
	bool m_bRequiresReachingEndPath; // 0x179c	
	bool m_bAggroOwnerOnDamage; // 0x179d	
	bool m_bReceivedAggroOnDamageOrder; // 0x179e	
private:
	[[maybe_unused]] uint8_t __pad179f[0x1]; // 0x179f
public:
	CUtlVector< CreatureStateData_t > m_vCreatureStates; // 0x17a0	
	char* m_pszDefaultState; // 0x17b8	
	char* m_pszCurrentState; // 0x17c0	
	int32_t m_nHPGain; // 0x17c8	
	int32_t m_nManaGain; // 0x17cc	
	float m_flHPRegenGain; // 0x17d0	
	float m_flManaRegenGain; // 0x17d4	
	int32_t m_nDamageGain; // 0x17d8	
	float m_flArmorGain; // 0x17dc	
	float m_flMagicResistGain; // 0x17e0	
	float m_flDisableResistGain; // 0x17e4	
	float m_flAttackTimeGain; // 0x17e8	
	int32_t m_nMoveSpeedGain; // 0x17ec	
	int32_t m_nBountyGain; // 0x17f0	
	int32_t m_nXPGain; // 0x17f4	
	int32_t m_nPermanentDesire; // 0x17f8	
	int32_t m_nCreatureDesire; // 0x17fc	
	int32_t m_nCurrentCastBehavior; // 0x1800	
	int32_t m_nEconItemGroup; // 0x1804	
	bool m_bIsBuildingAggressive; // 0x1808	
	bool m_bIsHeroAggressive; // 0x1809	
	bool m_bDisableClumpingBehavior; // 0x180a	
private:
	[[maybe_unused]] uint8_t __pad180b[0x1]; // 0x180b
public:
	float m_flDisableResistance; // 0x180c	
	float m_flUltimateDisableResistance; // 0x1810	
	bool m_bHasOffensiveAbility; // 0x1814	
private:
	[[maybe_unused]] uint8_t __pad1815[0x3]; // 0x1815
public:
	CUtlVector< CreatureAbilityData_t > m_vOffensiveAbilities; // 0x1818	
	bool m_bHasDefensiveAbility; // 0x1830	
private:
	[[maybe_unused]] uint8_t __pad1831[0x7]; // 0x1831
public:
	CUtlVector< CreatureAbilityData_t > m_vDefensiveAbilities; // 0x1838	
	bool m_bHasEscapeAbility; // 0x1850	
private:
	[[maybe_unused]] uint8_t __pad1851[0x7]; // 0x1851
public:
	CUtlVector< CreatureAbilityData_t > m_vEscapeAbilities; // 0x1858	
	CDOTABaseAbility* m_pLastUsedAbility; // 0x1870	
	Vector m_vDesiredCastLocation; // 0x1878	
private:
	[[maybe_unused]] uint8_t __pad1884[0x4]; // 0x1884
public:
	CDOTA_BaseNPC* m_pDesiredNPCTarget; // 0x1888	
	CDOTA_BaseNPC* m_pEscortTarget; // 0x1890	
	Vector m_vLastDamageSource; // 0x1898	
	bool m_bIsChampion; // 0x18a4	
private:
	[[maybe_unused]] uint8_t __pad18a5[0x3]; // 0x18a5
public:
	CUtlVector< ItemDropData_t* > m_vItemDropData; // 0x18a8	
	CUtlVector< WearableData_t > m_vecAttachWearableItemDefs; // 0x18c0	
	GameTime_t m_flRespawnTime; // 0x18d8	
	// MNetworkEnable
	bool m_bIsCurrentlyChanneling; // 0x18dc	
private:
	[[maybe_unused]] uint8_t __pad18dd[0x3]; // 0x18dd
public:
	// MNetworkEnable
	float m_flChannelCycle; // 0x18e0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_HarpyStorm_ChainLightning : public CDOTA_Buff
{
public:
	int32_t jump_range; // 0x1338	
	int32_t max_targets; // 0x133c	
	float damage_percent_loss; // 0x1340	
	float m_flCurDamage; // 0x1344	
	Vector m_vJumpPosition; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad1354[0x4]; // 0x1354
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_HillTroll_Rally_Stack : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AncientRockGolem_Weakening_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mutation_CreateTombstone : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Exp_Boost : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_BlightedSpirit_Blight : public CDOTA_Buff
{
public:
	int32_t damage_per_second; // 0x1338	
	int32_t heal_reduction; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Spell_Prism : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1338	
	int32_t bonus_cooldown; // 0x133c	
	float mana_regen; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Third_eye : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_Item_RiverPainter5 : public CDOTA_Item_RiverPainter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Soul_Ring : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Revenants_Brooch_Active : public CDOTA_Buff_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Mekansm : public CDOTA_Buff_Item
{
public:
	int32_t aura_radius; // 0x1338	
	int32_t bonus_armor; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Dagon3 : public CDOTA_Item_Recipe_Dagon
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_iStat"
class CDOTA_Item_PowerTreads : public CDOTA_Item
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnPowerTreadsStatChanged"
	int32_t m_iStat; // 0x620	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BootsOfTravel_Incoming : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VoidSpirit_ResonantPulse_PhysicalBuff : public CDOTA_Buff
{
public:
	int32_t base_absorb_amount; // 0x1338	
	int32_t m_nAbsorbRemaining; // 0x133c	
	int32_t m_nMaxAbsorb; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pangolier_ShieldCrash_Buff : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
	int32_t m_nAbsorbRemaining; // 0x133c	
	int32_t hero_shield; // 0x1340	
	int32_t base_shield; // 0x1344	
	int32_t accummulated_value; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_BounceLeap : public CDOTA_Buff
{
public:
	float give_up_distance; // 0x1338	
	float ground_jump_distance; // 0x133c	
	float m_flZDelta; // 0x1340	
	float perched_day_vision; // 0x1344	
	float perched_night_vision; // 0x1348	
	Vector m_vStart; // 0x134c	
	CHandle< CBaseEntity > m_hTarget; // 0x1358	
	Vector m_vTargetPos; // 0x135c	
	float m_flSpeed; // 0x1368	
	bool m_bTargetingEntity; // 0x136c	
	bool m_bGroundToTree; // 0x136d	
	bool m_bTreeToGround; // 0x136e	
	bool m_bTreeToTree; // 0x136f	
	bool m_bIsSpringJump; // 0x1370	
private:
	[[maybe_unused]] uint8_t __pad1371[0x3]; // 0x1371
public:
	float m_fSpringChanneledPercent; // 0x1374	
	int32_t m_nLeapSpeed; // 0x1378	
	ParticleIndex_t m_nFXIndex; // 0x137c	
	ParticleIndex_t m_nFXIndex2; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AbyssalUnderlord_Firestorm_Thinker : public CDOTA_Buff
{
public:
	int32_t wave_damage; // 0x1338	
	int32_t wave_count; // 0x133c	
	int32_t radius; // 0x1340	
	float wave_interval; // 0x1344	
	float burn_duration; // 0x1348	
	float burn_interval; // 0x134c	
	float first_wave_delay; // 0x1350	
	float building_damage; // 0x1354	
	CHandle< CBaseEntity > m_hTarget; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ChaosKnight_Phantasm_Illusion : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lycan_Wolf_Bite_Lifesteal : public CDOTA_Buff
{
public:
	int32_t lifesteal_percent; // 0x1338	
	int32_t lifesteal_range; // 0x133c	
	CUtlVector< CHandle< CBaseEntity > > m_vecTargets; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Clockwerk_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Viper_CorrosiveSkin : public CDOTA_Buff
{
public:
	int32_t bonus_magic_resistance; // 0x1338	
	int32_t max_range; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lich_FrostArmor : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1428
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lua_Horizontal_Motion : public CDOTA_Modifier_Lua
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Earth_Spirit_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Sniper_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Windranger_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Strength_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CDOTA_ArcanaDataEntity_DrowRanger * m_pArcanaData_CDOTA_ArcanaDataEntity_DrowRanger"
// MNetworkVarNames "CDOTA_ArcanaDataEntity_FacelessVoid * m_pArcanaData_CDOTA_ArcanaDataEntity_FacelessVoid"
// MNetworkVarNames "CDOTA_ArcanaDataEntity_Razor * m_pArcanaData_CDOTA_ArcanaDataEntity_Razor"
class CDOTA_ArcanaDataEntity : public CBaseEntity
{
public:
	// MNetworkEnable
	CDOTA_ArcanaDataEntity_DrowRanger* m_pArcanaData_CDOTA_ArcanaDataEntity_DrowRanger; // 0x4a8	
	// MNetworkEnable
	CDOTA_ArcanaDataEntity_FacelessVoid* m_pArcanaData_CDOTA_ArcanaDataEntity_FacelessVoid; // 0x4b0	
	// MNetworkEnable
	CDOTA_ArcanaDataEntity_Razor* m_pArcanaData_CDOTA_ArcanaDataEntity_Razor; // 0x4b8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// Construct allowed
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float32 m_flFadeStartDist"
// MNetworkVarNames "float32 m_flFadeEndDist"
class CEnvDetailController : public CBaseEntity
{
public:
	// MNetworkEnable
	float m_flFadeStartDist; // 0x4a8	
	// MNetworkEnable
	float m_flFadeEndDist; // 0x4ac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_VengefulSpirit : public CDOTA_BaseNPC_Hero
{
public:
	bool m_bArcanaEquipped; // 0x1d98	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x950
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTriggerOnce : public CTriggerMultiple
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Possessed_Mask : public CDOTA_Buff_Item
{
public:
	int32_t primary_attribute; // 0x1338	
	int32_t lifesteal; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_The_Leveller : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_FurArmy_SoldierInPosition : public CDOTA_Buff
{
public:
	Vector m_vTargetPos; // 0x1338	
	CHandle< CBaseEntity > m_hAttackTarget; // 0x1344	
	float attack_speed; // 0x1348	
	int32_t second_radius; // 0x134c	
	int32_t outer_attack_buffer; // 0x1350	
	CHandle< CBaseEntity > m_hThinker; // 0x1354	
	bool m_bDisarmed; // 0x1358	
private:
	[[maybe_unused]] uint8_t __pad1359[0x3]; // 0x1359
public:
	GameTime_t m_flNextAttackTime; // 0x135c	
	ParticleIndex_t m_nFXIndex; // 0x1360	
	bool m_bAutoSpawn; // 0x1364	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Oracle_FortunesEndPurge : public CDOTA_Modifier_Rooted
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bristleback_QuillSpray : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_TrollWarlord_WhirlingAxes_Ranged : public CDOTABaseAbility
{
public:
	Vector m_vStartPos; // 0x578	
	int32_t m_iArrowProjectile; // 0x584	
	int32_t axe_width; // 0x588	
	float axe_speed; // 0x58c	
	float axe_range; // 0x590	
	int32_t axe_spread; // 0x594	
	int32_t axe_count; // 0x598	
private:
	[[maybe_unused]] uint8_t __pad059c[0x4]; // 0x59c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitUnits; // 0x5a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_NagaSiren_SongOfTheSiren_Cancel : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Rubick_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Treant_NaturesGuise : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SpiritBreaker_Bulldoze : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1338	
	int32_t status_resistance; // 0x133c	
	float damage_barrier; // 0x1340	
	float m_flCurrentBarrier; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Luna_Eclipse : public CDOTABaseAbility
{
public:
	bool m_bIsScepterCast; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Firecracker_Debuff : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Roshan_InherentBuffs : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Leshrac : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoTeleportDestination : public CPointEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CMathRemap : public CLogicalEntity
{
public:
	float m_flInMin; // 0x4a8	
	float m_flInMax; // 0x4ac	
	float m_flOut1; // 0x4b0	
	float m_flOut2; // 0x4b4	
	float m_flOldInValue; // 0x4b8	
	bool m_bEnabled; // 0x4bc	
private:
	[[maybe_unused]] uint8_t __pad04bd[0x3]; // 0x4bd
public:
	CEntityOutputTemplate< float32 > m_OutValue; // 0x4c0	
	CEntityIOOutput m_OnRoseAboveMin; // 0x4e8	
	CEntityIOOutput m_OnRoseAboveMax; // 0x510	
	CEntityIOOutput m_OnFellBelowMin; // 0x538	
	CEntityIOOutput m_OnFellBelowMax; // 0x560	
	
	// Datamap fields:
	// float InputValue; // 0x0
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInstructorEventEntity : public CPointEntity
{
public:
	CUtlSymbolLarge m_iszName; // 0x4a8	
	CUtlSymbolLarge m_iszHintTargetEntity; // 0x4b0	
	CHandle< CBasePlayerPawn > m_hTargetPlayer; // 0x4b8	
	
	// Datamap fields:
	// CUtlSymbolLarge InputShowHint; // 0x0
	// void InputEndHint; // 0x0
	// void InputSetTargetPlayerToActivator; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x178
// Has VTable
class CDOTABehaviorCompanion
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	CHandle< CBaseEntity > m_goalEntity; // 0x148	
	Vector m_vOffset; // 0x14c	
	int32_t m_iRightOffset; // 0x158	
	int32_t m_iForwardOffset; // 0x15c	
	CountdownTimer m_PositionFuzziness; // 0x160	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Winter_Wyvern_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_Regen_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_Regen_175 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Harpoon : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Orb_Of_Destruction : public CDOTA_Buff_Item
{
public:
	float duration; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Necronomicon_Archer_ManaBurn : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_SheepStick : public CDOTA_Item
{
public:
	int32_t upgrade_radius; // 0x620	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Grimstroke_Scepter : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Terrorblade_Terror_Wave : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Brewmaster_SpellImmunity : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Silencer_GlaivesOfWisdom : public CDOTA_Buff
{
public:
	float intellect_damage_pct; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1340	
	CUtlVector< int16 > m_InFlightSilenceAttackRecords; // 0x1358	
	CDOTA_Buff* m_pAttackCounterBuff; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Weaver_Shukuchi_GeminateAttackMark : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Venomancer_VenomousGale : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x578	
	float duration; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Firework_Mine : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lion_ManaDrain : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_Victims; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Gungnir_Debuff : public CDOTA_Modifier_Rooted
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_BlackDragon_Fireball : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_IceShaman_IncendiaryBomb : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_AghsFort_BossPreview : public CBaseEntity
{
public:
	CUtlSymbolLarge m_strBossUnit; // 0x4a8	
	CUtlSymbolLarge m_strModelName; // 0x4b0	
	float m_flBossModelScale; // 0x4b8	
	float m_flExtraModelScale; // 0x4bc	
	int32_t m_nEncounterType; // 0x4c0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Wraith_King_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Death_Prophet_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Invoker_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lone_Druid_11 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Range_50 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_Regen_35 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Snapfire : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_TrapRoom_MeatHook : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Mage_Slayer : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Satanic_Unholy : public CDOTA_Buff
{
public:
	int32_t unholy_lifesteal_percent; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_OblivionStaff : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1338	
	int32_t bonus_attack_speed; // 0x133c	
	int32_t bonus_damage; // 0x1340	
	float bonus_mana_regen; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DarkWillow_Bedlam : public CDOTA_Buff
{
public:
	float m_flRotation; // 0x1338	
	CHandle< CBaseEntity > m_hWisp; // 0x133c	
	GameTime_t m_flLastAttack; // 0x1340	
	int32_t roaming_radius; // 0x1344	
	int32_t attack_radius; // 0x1348	
	float roaming_seconds_per_rotation; // 0x134c	
	float attack_interval; // 0x1350	
	int32_t target_count; // 0x1354	
	bool m_bTravelling; // 0x1358	
private:
	[[maybe_unused]] uint8_t __pad1359[0x3]; // 0x1359
public:
	int32_t travel_speed; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Pangolier_GyroshellStop : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_ChaosKnight_Phantasm : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_LoneDruid_SpiritBear_Demolish : public CDOTA_Buff
{
public:
	int32_t bonus_building_damage; // 0x1338	
	int32_t true_form_bonus_building_damage; // 0x133c	
	int32_t spell_resistance; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Brewmaster_HurlBoulder : public CDOTABaseAbility
{
public:
	int32_t m_iBounces; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad057c[0x4]; // 0x57c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_DeafeningBlast_AD : public CDOTA_Ability_Invoker_DeafeningBlast
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SpiritBreaker_ChargeOfDarknessVision : public CDOTA_Buff
{
public:
	int32_t m_nFXIndex; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Jakiro_LiquidFire : public CDOTA_Buff
{
public:
	float duration; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1340	
	int32_t radius; // 0x1358	
	ParticleIndex_t m_nFXIndex; // 0x135c	
	bool m_bForceProc; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Clinkz_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DarkSeer_Surge : public CDOTA_Buff
{
public:
	int32_t speed_boost; // 0x1338	
	int32_t trail_radius; // 0x133c	
	float trail_duration; // 0x1340	
	Vector m_vLastTrailThinkerLocation; // 0x1344	
	bool m_bTrailStarted; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Warlock_Rain_Of_Chaos_Death_Trigger : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lina_DragonSlave_Burn : public CDOTA_Buff
{
public:
	int32_t dragon_slave_burn; // 0x1338	
	int32_t target_crit_multiplier; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bane_Enfeeble : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x768
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTriggerVolume : public CBaseModelEntity
{
public:
	CUtlSymbolLarge m_iFilterName; // 0x758	
	CHandle< CBaseFilter > m_hFilter; // 0x760	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Morphling_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Morphling_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Demon_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lone_Druid_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cleave_25 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x148
// Has VTable
// MNetworkNoBase
// 
// MNetworkVarNames "char m_LocalizationStr"
// MNetworkVarNames "CHandle< CBaseEntity> m_hNPC"
// MNetworkVarNames "GameTime_t m_flStartTime"
// MNetworkVarNames "float m_flDuration"
// MNetworkVarNames "uint32 m_unOffsetX"
// MNetworkVarNames "uint32 m_unOffsetY"
// MNetworkVarNames "uint16 m_unCount"
class CSpeechBubbleInfo
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	char m_LocalizationStr[256]; // 0x30	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hNPC; // 0x130	
	// MNetworkEnable
	GameTime_t m_flStartTime; // 0x134	
	// MNetworkEnable
	float m_flDuration; // 0x138	
	// MNetworkEnable
	uint32_t m_unOffsetX; // 0x13c	
	// MNetworkEnable
	uint32_t m_unOffsetY; // 0x140	
	// MNetworkEnable
	uint16_t m_unCount; // 0x144	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Enchantress : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1798
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Broodmother_Spiderling : public CDOTA_BaseNPC_Creep_Talking
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifer_Furbolg_Enrage_AttackSpeed : public CDOTA_Buff
{
public:
	int32_t bonus_aspd; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_GungirChain : public CDOTA_Buff
{
public:
	int32_t chain_radius; // 0x1338	
	int32_t chain_strikes; // 0x133c	
	int32_t chain_damage; // 0x1340	
	float chain_delay; // 0x1344	
	int32_t m_iCurJumpCount; // 0x1348	
	Vector m_vCurTargetLoc; // 0x134c	
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Spy_Gadget_Aura : public CDOTA_Buff_Item
{
public:
	int32_t scan_cooldown_reduction; // 0x1338	
	int32_t aura_range; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_MysticStaff : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_PowerTreads : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement_speed_ranged; // 0x1338	
	int32_t bonus_movement_speed_melee; // 0x133c	
	int32_t bonus_attack_speed; // 0x1340	
	int32_t bonus_stat; // 0x1344	
	int32_t bonus_damage; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Flask : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EmberSpirit_FireRemnantThinker : public CDOTA_Buff
{
public:
	int32_t m_nProjectileHandle; // 0x1338	
	bool m_bIsShardRemnant; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Undying_Tombstone_Zombie_Deathlust : public CDOTA_Buff
{
public:
	int32_t bonus_move_speed; // 0x1338	
	int32_t bonus_attack_speed; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Brewmaster_Void_Void_Strike : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Alchemist_AcidSpray : public CDOTA_Buff
{
public:
	int32_t armor_reduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Necrolyte_ReapersScythe : public CDOTA_Modifier_Stunned
{
public:
	float stun_duration; // 0x1338	
	bool m_bIllusion; // 0x133c	
	bool m_bArcWardenClone; // 0x133d	
	bool m_bSpiritBear; // 0x133e	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x540
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CEnvSoundscapeAlias_snd_soundscape : public CEnvSoundscape
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Templar_Assassin_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_Regen_150 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BlueDragonspawnOverseer_Evasion : public CDOTA_Buff
{
public:
	int32_t evasion_chance_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Cast_Speed : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Panic_Button : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
	float health_threshold; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Desolator_2_Corruption : public CDOTA_Buff
{
public:
	int32_t corruption_armor; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Boots_Of_Bearing_Active : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed_pct; // 0x1338	
	int32_t bonus_movement_speed_pct; // 0x133c	
	float bonus_ms_duration; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Dawnbreaker_Celestial_Hammer : public CDOTABaseAbility
{
public:
	int32_t m_nProjectileIndex; // 0x578	
	int32_t m_nReturnProjectileID; // 0x57c	
	Vector m_vEndLocation; // 0x580	
	float m_fZCoord; // 0x58c	
	Vector m_vLastTrailThinkerLocation; // 0x590	
	bool m_bFlareDone; // 0x59c	
	bool m_bStartedCatchAnimation; // 0x59d	
	bool m_bIsReturning; // 0x59e	
private:
	[[maybe_unused]] uint8_t __pad059f[0x1]; // 0x59f
public:
	CUtlVector< CHandle< CBaseEntity > > m_hReturnHits; // 0x5a0	
	CUtlVector< CHandle< CBaseEntity > > m_hAoEHits; // 0x5b8	
	ParticleIndex_t m_nFXIndex; // 0x5d0	
	ParticleIndex_t m_nFXIndexC; // 0x5d4	
	ParticleIndex_t m_nFXHammerReturnIndex; // 0x5d8	
	ParticleIndex_t m_nFXHammerProjectileIndex; // 0x5dc	
	ParticleIndex_t m_nFXHeroSolarGuardianTrailIndex; // 0x5e0	
	CHandle< CBaseEntity > m_hThinker; // 0x5e4	
	int32_t projectile_speed; // 0x5e8	
	int32_t projectile_radius; // 0x5ec	
	int32_t hammer_damage; // 0x5f0	
	int32_t hammer_aoe_radius; // 0x5f4	
	int32_t flare_radius; // 0x5f8	
	bool bHasStartedBurning; // 0x5fc	
private:
	[[maybe_unused]] uint8_t __pad05fd[0x3]; // 0x5fd
public:
	float flare_debuff_duration; // 0x600	
	int32_t return_anim_distance_threshold; // 0x604	
	int32_t range; // 0x608	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EarthSpirit_RollingBoulder_Caster : public CDOTA_Buff
{
public:
	Vector m_vDir; // 0x1338	
	bool m_bBoulderCreated; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tusk_WalrusPunch : public CDOTA_Buff
{
public:
	int32_t crit_multiplier; // 0x1338	
	int32_t bonus_damage; // 0x133c	
	float air_time; // 0x1340	
	float slow_duration; // 0x1344	
	CUtlSymbolLarge m_iszRangedAttackEffect; // 0x1348	
	CHandle< CBaseEntity > m_hTarget; // 0x1350	
	bool m_bWalrusPunch; // 0x1354	
private:
	[[maybe_unused]] uint8_t __pad1355[0x3]; // 0x1355
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1358	
	ParticleIndex_t m_nFXIndex; // 0x1370	
	int32_t m_nAttackRecord; // 0x1374	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Medusa_Cold_Blooded : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lycan_SummonWolves_CriticalStrike : public CDOTA_Buff
{
public:
	CountdownTimer m_CooldownTimer; // 0x1338	
	int32_t maim_chance; // 0x1350	
	float maim_duration; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Brewmaster_BrewUp : public CDOTA_Buff
{
public:
	bool m_bBuffExtended; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_QueenOfPain_ScreamOfPain : public CDOTABaseAbility
{
public:
	int32_t damage; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mirana_Leap_Slow : public CDOTA_Buff
{
public:
	int32_t shard_slow_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pudge_Rot : public CDOTA_Buff
{
public:
	int32_t rot_damage; // 0x1338	
	int32_t rot_slow; // 0x133c	
	int32_t scepter_rot_regen_reduction_pct; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x8]; // 0x1344
public:
	GameTime_t m_flLastRotTime; // 0x134c	
	bool m_bQualifiesAsPotentionalDeny; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Pudge_Rot : public CDOTABaseAbility
{
public:
	int32_t rot_damage; // 0x578	
	GameTime_t m_flLastRotTime; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x760
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFuncVPhysicsClip : public CBaseModelEntity
{
public:
	bool m_bDisabled; // 0x758	
	
	// Datamap fields:
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_30_Crit_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_120 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_75 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_Regen_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_Regen_125 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa08
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_bIsPlayingBack"
// MNetworkVarNames "bool m_bPaused"
// MNetworkVarNames "bool m_bMultiplayer"
// MNetworkVarNames "bool m_bAutogenerated"
// MNetworkVarNames "float32 m_flForceClientTime"
// MNetworkVarNames "CHandle< CBaseFlex > m_hActorList"
// MNetworkVarNames "uint16 m_nSceneStringIndex"
class CSceneEntity : public CPointEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x8]; // 0x4a8
public:
	CUtlSymbolLarge m_iszSceneFile; // 0x4b0	
	CUtlSymbolLarge m_iszResumeSceneFile; // 0x4b8	
	CUtlSymbolLarge m_iszTarget1; // 0x4c0	
	CUtlSymbolLarge m_iszTarget2; // 0x4c8	
	CUtlSymbolLarge m_iszTarget3; // 0x4d0	
	CUtlSymbolLarge m_iszTarget4; // 0x4d8	
	CUtlSymbolLarge m_iszTarget5; // 0x4e0	
	CUtlSymbolLarge m_iszTarget6; // 0x4e8	
	CUtlSymbolLarge m_iszTarget7; // 0x4f0	
	CUtlSymbolLarge m_iszTarget8; // 0x4f8	
	CHandle< CBaseEntity > m_hTarget1; // 0x500	
	CHandle< CBaseEntity > m_hTarget2; // 0x504	
	CHandle< CBaseEntity > m_hTarget3; // 0x508	
	CHandle< CBaseEntity > m_hTarget4; // 0x50c	
	CHandle< CBaseEntity > m_hTarget5; // 0x510	
	CHandle< CBaseEntity > m_hTarget6; // 0x514	
	CHandle< CBaseEntity > m_hTarget7; // 0x518	
	CHandle< CBaseEntity > m_hTarget8; // 0x51c	
	CUtlSymbolLarge m_sTargetAttachment; // 0x520	
	// MNetworkEnable
	bool m_bIsPlayingBack; // 0x528	
	// MNetworkEnable
	bool m_bPaused; // 0x529	
	// MNetworkEnable
	bool m_bMultiplayer; // 0x52a	
	// MNetworkEnable
	bool m_bAutogenerated; // 0x52b	
	// MNetworkEnable
	float m_flForceClientTime; // 0x52c	
	float m_flCurrentTime; // 0x530	
	float m_flFrameTime; // 0x534	
	bool m_bCancelAtNextInterrupt; // 0x538	
private:
	[[maybe_unused]] uint8_t __pad0539[0x3]; // 0x539
public:
	float m_fPitch; // 0x53c	
	bool m_bAutomated; // 0x540	
private:
	[[maybe_unused]] uint8_t __pad0541[0x3]; // 0x541
public:
	int32_t m_nAutomatedAction; // 0x544	
	float m_flAutomationDelay; // 0x548	
	float m_flAutomationTime; // 0x54c	
	CHandle< CBaseEntity > m_hWaitingForThisResumeScene; // 0x550	
	bool m_bWaitingForResumeScene; // 0x554	
	bool m_bPausedViaInput; // 0x555	
	bool m_bPauseAtNextInterrupt; // 0x556	
	bool m_bWaitingForActor; // 0x557	
	bool m_bWaitingForInterrupt; // 0x558	
	bool m_bInterruptedActorsScenes; // 0x559	
	bool m_bBreakOnNonIdle; // 0x55a	
	bool m_bSceneFinished; // 0x55b	
private:
	[[maybe_unused]] uint8_t __pad055c[0x4]; // 0x55c
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< CHandle< CBaseFlex > > m_hActorList; // 0x560	
	CUtlVector< CHandle< CBaseEntity > > m_hRemoveActorList; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad0590[0x30]; // 0x590
public:
	int32_t m_nSceneFlushCounter; // 0x5c0	
	// MNetworkEnable
	uint16_t m_nSceneStringIndex; // 0x5c4	
private:
	[[maybe_unused]] uint8_t __pad05c6[0x2]; // 0x5c6
public:
	CEntityIOOutput m_OnStart; // 0x5c8	
	CEntityIOOutput m_OnCompletion; // 0x5f0	
	CEntityIOOutput m_OnCanceled; // 0x618	
	CEntityIOOutput m_OnPaused; // 0x640	
	CEntityIOOutput m_OnResumed; // 0x668	
	CEntityIOOutput m_OnTrigger[16]; // 0x690	
private:
	[[maybe_unused]] uint8_t __pad0910[0x90]; // 0x910
public:
	CHandle< CSceneEntity > m_hInterruptScene; // 0x9a0	
	int32_t m_nInterruptCount; // 0x9a4	
	bool m_bSceneMissing; // 0x9a8	
	bool m_bInterrupted; // 0x9a9	
	bool m_bCompletedEarly; // 0x9aa	
	bool m_bInterruptSceneFinished; // 0x9ab	
	bool m_bRestoring; // 0x9ac	
private:
	[[maybe_unused]] uint8_t __pad09ad[0x3]; // 0x9ad
public:
	CUtlVector< CHandle< CSceneEntity > > m_hNotifySceneCompletion; // 0x9b0	
	CUtlVector< CHandle< CSceneListManager > > m_hListManagers; // 0x9c8	
	CUtlSymbolLarge m_iszSoundName; // 0x9e0	
	CUtlSymbolLarge m_iszSequenceName; // 0x9e8	
	CHandle< CBaseFlex > m_hActor; // 0x9f0	
	CHandle< CBaseEntity > m_hActivator; // 0x9f4	
	int32_t m_BusyActor; // 0x9f8	
	SceneOnPlayerDeath_t m_iPlayerDeathBehavior; // 0x9fc	
	
	// Static fields:
	static int32_t &Get_s_nSceneFlushCounter(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CSceneEntity")->GetStaticFields()[0]->m_pInstance);};
	
	// Datamap fields:
	// void m_pScene; // 0x5b8
	// void m_pRecipientFilter; // 0xa00
	// void InputStartPlayback; // 0x0
	// void InputPausePlayback; // 0x0
	// void InputResumePlayback; // 0x0
	// void InputCancelPlayback; // 0x0
	// void InputCancelAtNextInterrupt; // 0x0
	// float InputPitchShiftPlayback; // 0x0
	// CUtlSymbolLarge InputInterjectResponse; // 0x0
	// void InputStopWaitingForActor; // 0x0
	// int32_t InputTriggerEvent; // 0x0
	// CUtlSymbolLarge InputSetTarget1; // 0x0
	// CUtlSymbolLarge InputSetTarget2; // 0x0
	// void InputScriptPlayerDeath; // 0x0
	// void InputPauseAtNextInterrupt; // 0x0
	// void m_OnTrigger[ 0 ]; // 0x690
	// void m_OnTrigger[ 1 ]; // 0x6b8
	// void m_OnTrigger[ 2 ]; // 0x6e0
	// void m_OnTrigger[ 3 ]; // 0x708
	// void m_OnTrigger[ 4 ]; // 0x730
	// void m_OnTrigger[ 5 ]; // 0x758
	// void m_OnTrigger[ 6 ]; // 0x780
	// void m_OnTrigger[ 7 ]; // 0x7a8
	// void m_OnTrigger[ 8 ]; // 0x7d0
	// void m_OnTrigger[ 9 ]; // 0x7f8
	// void m_OnTrigger[ 10 ]; // 0x820
	// void m_OnTrigger[ 11 ]; // 0x848
	// void m_OnTrigger[ 12 ]; // 0x870
	// void m_OnTrigger[ 13 ]; // 0x898
	// void m_OnTrigger[ 14 ]; // 0x8c0
	// void m_OnTrigger[ 15 ]; // 0x8e8
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_UpgradedMortar : public CDOTA_Buff
{
public:
	int32_t bonus_per_upgrade; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13c0
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seasonal_TI9_Monkey_Thinker : public CDOTA_Buff
{
public:
	float attack_range; // 0x1338	
	float attack_time; // 0x133c	
	float attack_projectile_time; // 0x1340	
	int32_t projectile_speed; // 0x1344	
	float turn_time; // 0x1348	
	float turn_angle; // 0x134c	
	float shoot_angle; // 0x1350	
	float m_flTurnRate; // 0x1354	
	float m_flTargetYaw; // 0x1358	
	float m_flLastTurnTime; // 0x135c	
	GameTick_t m_nLastTickCount; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1364[0x4]; // 0x1364
public:
	bool m_bHappyMonkeyCondition; // 0x1368	
private:
	[[maybe_unused]] uint8_t __pad1369[0x3]; // 0x1369
public:
	CHandle< CDOTA_BaseNPC > m_hAngryTarget; // 0x136c	
	CHandle< CDOTA_BaseNPC > m_hAttackTarget; // 0x1370	
private:
	[[maybe_unused]] uint8_t __pad1374[0x4]; // 0x1374
public:
	CountdownTimer m_AttackTimer; // 0x1378	
	CountdownTimer m_AttackProjectileTimer; // 0x1390	
	CountdownTimer m_HappyTimer; // 0x13a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_EyeOfTheVizier : public CDOTA_Buff_Item
{
public:
	int32_t cast_range_bonus; // 0x1338	
	int32_t mana_reduction_pct; // 0x133c	
	float bonus_mana_regen; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Titan_Sliver : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Demonicon : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
	int32_t bonus_intellect; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Keen_Optic : public CDOTA_Buff_Item
{
public:
	float bonus_mana_regen; // 0x1338	
	int32_t cast_range_bonus; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_GreaterFamango : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Necronomicon : public CDOTA_Item
{
public:
	CHandle< CBaseEntity > m_hWarrior; // 0x620	
	CHandle< CBaseEntity > m_hArcher; // 0x624	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_TreeJump_Hidden : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Arc_Warden_Scepter : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hRune; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SpiritBreaker_PlanarPocket : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hRedirectAbility; // 0x1338	
	GameTick_t nRedirectTick; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1390
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Jakiro_IcePath_Thinker : public CDOTA_Buff
{
public:
	float path_delay; // 0x1338	
	int32_t path_radius; // 0x133c	
	int32_t m_nDamage; // 0x1340	
	float m_flRadius; // 0x1344	
	float stun_duration; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad134c[0x4]; // 0x134c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hUnitsHit; // 0x1350	
	Vector m_vPathStart; // 0x1368	
	Vector m_vPathEnd; // 0x1374	
	GameTime_t m_fStartTime; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Clinkz_Burning_Army : public CDOTABaseAbility
{
public:
	int32_t range; // 0x578	
	Vector m_vEndpoint; // 0x57c	
	Vector m_vSlashDir; // 0x588	
	int32_t m_nDashProjectileID; // 0x594	
	Vector m_vDashProjectileLocation; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Furion_Sprout_Entangle : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Warlock_Upheaval : public CDOTA_Buff
{
public:
	int32_t m_iSlow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Animation_RightClawSwipe : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
	int32_t damage_radius; // 0x133c	
	float m_flScalar; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< CHandle< CBaseEntity > > m_vHitEntities; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Sniper_Shrapnel : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lich_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Morphling_Waveform_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Kill : public CDOTA_Buff
{
public:
	bool m_bHideOnKill; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xcd0
// Has VTable
// Construct allowed
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkIncludeByUserGroup "Origin"
// MNetworkIncludeByName "CGameSceneNode::m_angRotation"
// MNetworkIncludeByName "m_hOwnerEntity"
// MNetworkIncludeByName "CGameSceneNode::m_hParent"
// MNetworkIncludeByName "CGameSceneNode::m_hierarchyAttachName"
// MNetworkIncludeByName "m_nameStringableIndex"
// MNetworkVarNames "char m_szSnapshotFileName"
// MNetworkVarNames "bool m_bActive"
// MNetworkVarNames "bool m_bFrozen"
// MNetworkVarNames "float m_flFreezeTransitionDuration"
// MNetworkVarNames "int m_nStopType"
// MNetworkVarNames "bool m_bAnimateDuringGameplayPause"
// MNetworkVarNames "HParticleSystemDefinitionStrong m_iEffectIndex"
// MNetworkVarNames "GameTime_t m_flStartTime"
// MNetworkVarNames "float32 m_flPreSimTime"
// MNetworkVarNames "Vector m_vServerControlPoints"
// MNetworkVarNames "uint8 m_iServerControlPointAssignments"
// MNetworkVarNames "CHandle< CBaseEntity > m_hControlPointEnts"
// MNetworkVarNames "bool m_bNoSave"
// MNetworkVarNames "bool m_bNoFreeze"
// MNetworkVarNames "bool m_bNoRamp"
class CParticleSystem : public CBaseModelEntity
{
public:
	// MNetworkEnable
	char m_szSnapshotFileName[512]; // 0x758	
	// MNetworkEnable
	bool m_bActive; // 0x958	
	// MNetworkEnable
	bool m_bFrozen; // 0x959	
private:
	[[maybe_unused]] uint8_t __pad095a[0x2]; // 0x95a
public:
	// MNetworkEnable
	float m_flFreezeTransitionDuration; // 0x95c	
	// MNetworkEnable
	int32_t m_nStopType; // 0x960	
	// MNetworkEnable
	bool m_bAnimateDuringGameplayPause; // 0x964	
private:
	[[maybe_unused]] uint8_t __pad0965[0x3]; // 0x965
public:
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeIParticleSystemDefinition > m_iEffectIndex; // 0x968	
	// MNetworkEnable
	GameTime_t m_flStartTime; // 0x970	
	// MNetworkEnable
	float m_flPreSimTime; // 0x974	
	// MNetworkEnable
	Vector m_vServerControlPoints[4]; // 0x978	
	// MNetworkEnable
	uint8_t m_iServerControlPointAssignments[4]; // 0x9a8	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hControlPointEnts[64]; // 0x9ac	
	// MNetworkEnable
	bool m_bNoSave; // 0xaac	
	// MNetworkEnable
	bool m_bNoFreeze; // 0xaad	
	// MNetworkEnable
	bool m_bNoRamp; // 0xaae	
	bool m_bStartActive; // 0xaaf	
	CUtlSymbolLarge m_iszEffectName; // 0xab0	
	CUtlSymbolLarge m_iszControlPointNames[64]; // 0xab8	
	int32_t m_nDataCP; // 0xcb8	
	Vector m_vecDataCPValue; // 0xcbc	
	int32_t m_nTintCP; // 0xcc8	
	Color m_clrTint; // 0xccc	
	
	// Datamap fields:
	// void InputStart; // 0x0
	// void InputStop; // 0x0
	// void InputStopEndCap; // 0x0
	// void InputDestroy; // 0x0
	// CUtlSymbolLarge InputSetControlPoint; // 0x0
	// void CParticleSystemStartParticleSystemThink; // 0x0
	// CUtlString cpoint%d_value[64]; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Evasion_15 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Movement_Speed_15 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x38
// 
// MNetworkVarNames "uint32 m_nID"
// MNetworkVarNames "uint32 m_nValue"
// MNetworkVarNames "uint32 m_nRawValue"
// MNetworkVarNames "uint8 m_nValueState"
// MNetworkVarNames "bool m_bValueIsMask"
struct InGamePredictionData_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x28]; // 0x0
public:
	// MNetworkEnable
	uint32_t m_nID; // 0x28	
	// MNetworkEnable
	uint32_t m_nValue; // 0x2c	
	// MNetworkEnable
	uint32_t m_nRawValue; // 0x30	
	// MNetworkEnable
	uint8_t m_nValueState; // 0x34	
	// MNetworkEnable
	bool m_bValueIsMask; // 0x35	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7c8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTAMutationGameMode : public CDOTABaseGameMode
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x240
// Has VTable
// Construct allowed
// 
// MGetKV3ClassDefaults
class CBasePlayerWeaponVData
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x10]; // 0x0
public:
	// MPropertyDescription "The name of the weapon entity to spawn for this NPC weapon."
	CUtlString m_szClassName; // 0x10	
	// MPropertyDescription "Model used on the ground or held by an entity"
	// MPropertyGroupName "Visuals"
	CResourceNameTyped< CWeakHandle< InfoForResourceTypeCModel > > m_szWorldModel; // 0x18	
	// MPropertyDescription "Was the weapon was built right-handed?"
	// MPropertyGroupName "Visuals"
	bool m_bBuiltRightHanded; // 0xf8	
	// MPropertyDescription "Allows flipping the model, regardless of whether it is built left or right handed"
	// MPropertyGroupName "Visuals"
	bool m_bAllowFlipping; // 0xf9	
private:
	[[maybe_unused]] uint8_t __pad00fa[0x6]; // 0xfa
public:
	// MPropertyGroupName "Visuals"
	// MPropertyDescription "Attachment to fire bullets from"
	// MPropertyAttributeEditor "VDataModelAttachment( m_szWorldModel )"
	CUtlString m_sMuzzleAttachment; // 0x100	
	// MPropertyDescription "Effect when firing this weapon"
	// MPropertyGroupName "Visuals"
	CResourceNameTyped< CWeakHandle< InfoForResourceTypeIParticleSystemDefinition > > m_szMuzzleFlashParticle; // 0x108	
	ItemFlagTypes_t m_iFlags; // 0x1e8	
	// MPropertyAttributeEditor "VDataChoice( scripts/ammo.vdata )"
	// MPropertyGroupName "Ammo"
	// MPropertyCustomFGDType "string"
	AmmoIndex_t m_nPrimaryAmmoType; // 0x1e9	
	// MPropertyAttributeEditor "VDataChoice( scripts/ammo.vdata )"
	// MPropertyGroupName "Ammo"
	// MPropertyCustomFGDType "string"
	AmmoIndex_t m_nSecondaryAmmoType; // 0x1ea	
private:
	[[maybe_unused]] uint8_t __pad01eb[0x1]; // 0x1eb
public:
	// MPropertyFriendlyName "Primary Clip Size"
	// MPropertyDescription "How many bullets this gun can fire before it reloads (0 if no clip)"
	// MPropertyAttributeRange "0 255"
	// MPropertyGroupName "Ammo"
	int32_t m_iMaxClip1; // 0x1ec	
	// MPropertyFriendlyName "Secondary Clip Size"
	// MPropertyDescription "How many secondary bullets this gun can fire before it reloads (0 if no clip)"
	// MPropertyGroupName "Ammo"
	// MPropertyAttributeRange "0 255"
	int32_t m_iMaxClip2; // 0x1f0	
	// MPropertyDescription "Primary Initial Clip (-1 means use clip size)"
	// MPropertyGroupName "Ammo"
	// MPropertyAttributeRange "-1 255"
	int32_t m_iDefaultClip1; // 0x1f4	
	// MPropertyDescription "Secondary Initial Clip (-1 means use clip size)"
	// MPropertyGroupName "Ammo"
	// MPropertyAttributeRange "-1 255"
	int32_t m_iDefaultClip2; // 0x1f8	
	// MPropertyDescription "This value used to determine this weapon's importance in autoselection"
	// MPropertyGroupName "UI"
	int32_t m_iWeight; // 0x1fc	
	// MPropertyFriendlyName "Safe To Auto-Switch To"
	// MPropertyDescription "Whether this weapon is safe to automatically switch to (should be false for eg. explosives that can the player may accidentally hurt themselves with)"
	// MPropertyGroupName "UI"
	bool m_bAutoSwitchTo; // 0x200	
	// MPropertyFriendlyName "Safe To Auto-Switch Away From"
	// MPropertyGroupName "UI"
	bool m_bAutoSwitchFrom; // 0x201	
private:
	[[maybe_unused]] uint8_t __pad0202[0x2]; // 0x202
public:
	// MPropertyGroupName "UI"
	RumbleEffect_t m_iRumbleEffect; // 0x204	
	// MPropertyDescription "Should both primary and secondary attacks be cooled down together (so cooling down primary attack would cooldown both primary + secondary attacks)?"
	bool m_bLinkedCooldowns; // 0x208	
private:
	[[maybe_unused]] uint8_t __pad0209[0x7]; // 0x209
public:
	CUtlOrderedMap< WeaponSound_t, CSoundEventName > m_aShootSounds; // 0x210	
	// MPropertyFriendlyName "HUD Bucket"
	// MPropertyDescription "Which 'column' to display this weapon in the HUD"
	// MPropertyGroupName "UI"
	int32_t m_iSlot; // 0x238	
	// MPropertyFriendlyName "HUD Bucket Position"
	// MPropertyDescription "Which 'row' to display this weapon in the HUD"
	// MPropertyGroupName "UI"
	int32_t m_iPosition; // 0x23c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Tidehunter : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x848
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CScriptItem : public CItem
{
public:
	MoveType_t m_MoveTypeOverride; // 0x840	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x500
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_bDisabled"
class CInfoPlayerStartDota : public CPointEntity
{
public:
	// MNetworkEnable
	bool m_bDisabled; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x7]; // 0x4a9
public:
	CEntityIOOutput m_OnEnabled; // 0x4b0	
	CEntityIOOutput m_OnDisabled; // 0x4d8	
	
	// Datamap fields:
	// void InputSetEnabled; // 0x0
	// void InputSetDisabled; // 0x0
	// void InputSetEnabledExclusively; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_TrapRoom_Hookshot : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
	Vector m_vStartPosition; // 0x133c	
private:
	[[maybe_unused]] uint8_t __pad1348[0x8]; // 0x1348
public:
	int32_t speed; // 0x1350	
	float duration; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Creature_Flamestrike_Ground : public CDOTA_Buff
{
public:
	float burn_interval; // 0x1338	
	int32_t burn_radius; // 0x133c	
	int32_t burn_dps; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Giants_Ring : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
	int32_t movement_speed; // 0x133c	
	int32_t model_scale; // 0x1340	
	int32_t damage_radius; // 0x1344	
	int32_t pct_str_damage_per_second; // 0x1348	
	float tick_rate; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_HelmOfTheOverlord : public CDOTA_Item_HelmOfTheDominator
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Pipe : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Undying_Tombstone_Bunker : public CDOTA_Buff
{
public:
	float bunker_heal_pct; // 0x1338	
	float tombstone_grab_radius; // 0x133c	
	float tombstone_stun_penalty; // 0x1340	
	CHandle< CBaseEntity > m_hLoadedUnit; // 0x1344	
	ParticleIndex_t m_nBunkerEnterFXIndex; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ogre_Magi_Fireblast_Attack_Proc : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Enchantress_Enchant_Controlled : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed; // 0x1338	
	int32_t enchant_health; // 0x133c	
	int32_t enchant_armor; // 0x1340	
	float enchant_damage; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DarkSeer_Vacuum : public CDOTABaseAbility
{
public:
	Vector m_vPullLocation; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DragonKnight_DragonForm : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed; // 0x1338	
	int32_t bonus_attack_damage; // 0x133c	
	int32_t bonus_attack_range; // 0x1340	
	int32_t attack_projectile_speed_bonus; // 0x1344	
	int32_t magic_resistance; // 0x1348	
	int32_t model_scale; // 0x134c	
	int32_t iLevel; // 0x1350	
	int32_t m_iOriginalAttackCapabilities; // 0x1354	
	CUtlSymbolLarge m_iszRangedAttackEffect; // 0x1358	
	int32_t bonus_slow_resistance; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FountainPassive : public CDOTA_Buff
{
public:
	int32_t bonus_chance; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Zuus_Cloud : public CDOTA_Buff
{
public:
	CountdownTimer m_CloudBoltTimer; // 0x1338	
	float cloud_bolt_interval; // 0x1350	
	int32_t cloud_radius; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lina_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_CrystalMaiden_IceRink_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	float rink_formation_time; // 0x133c	
	bool m_bActive; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_StormSpirit_Overload : public CDOTABaseAbility
{
public:
	int32_t m_iAttackIndex; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad057c[0x4]; // 0x57c
public:
	CUtlVector< sGlaiveInfoStorm > m_GlaiveInfo; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Juggernaut_BladeFury_Pull : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Legion_Commander_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Movement_Speed_45 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Immunity : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDotaTutorialNPCBlocker : public CBaseEntity
{
public:
	CHandle< CDOTA_BaseNPC > m_hAura; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04ac[0x4]; // 0x4ac
public:
	CUtlSymbolLarge m_iOtherBlockerName; // 0x4b0	
	CHandle< CBaseEntity > m_hOtherBlocker; // 0x4b8	
	bool m_bEndPoint; // 0x4bc	
	bool m_bEnabled; // 0x4bd	
	bool m_bStartDisabled; // 0x4be	
	bool m_bHidden; // 0x4bf	
	
	// Datamap fields:
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
	// void InputToggle; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has Trivial Destructor
class CDotaEntityFilterFlags
{
public:
	bool m_bInvertFilter; // 0x0	
	bool m_bEveryUnit; // 0x1	
private:
	[[maybe_unused]] uint8_t __pad0002[0x2]; // 0x2
public:
	int32_t m_nTeamNumber; // 0x4	
	CUtlSymbolLarge m_UnitName; // 0x8	
	bool m_bIsAncient; // 0x10	
	bool m_bIsNeutralUnitType; // 0x11	
	bool m_bIsSummoned; // 0x12	
	bool m_bIsHero; // 0x13	
	bool m_bIsRealHero; // 0x14	
	bool m_bIsTower; // 0x15	
	bool m_bIsPhantom; // 0x16	
	bool m_bIsIllusion; // 0x17	
	bool m_bIsCreep; // 0x18	
	bool m_bIsLaneCreep; // 0x19	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
// Has VTable
// Has Trivial Destructor
// MDisableDataDescValidation
// MNetworkNoBase
// 
// MNetworkVarNames "GameTime_t m_timestamp"
// MNetworkVarNames "WorldGroupId_t m_nWorldGroupId"
class IntervalTimer
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	GameTime_t m_timestamp; // 0x8	
	// MNetworkEnable
	WorldGroupId_t m_nWorldGroupId; // 0xc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_DarkWillow : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_SwampSickness : public CDOTA_Buff
{
public:
	int32_t slow_percent; // 0x1338	
	bool m_bInRiver; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_SeedsOfSerenity_Active_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Orb_Of_Revelations_Reveal : public CDOTA_Buff
{
public:
	int32_t movespeed; // 0x1338	
	bool m_bCastOnInvisibleHero; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Stormcrafter : public CDOTA_Buff_Item
{
public:
	GameTime_t m_flNextHit; // 0x1338	
	int32_t passive_movement_bonus; // 0x133c	
	int32_t range; // 0x1340	
	float interval; // 0x1344	
	int32_t damage; // 0x1348	
	float slow_duration; // 0x134c	
	float bonus_mana_regen; // 0x1350	
	int32_t max_targets; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Headdress : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DarkWillow_CursedCrown : public CDOTA_Buff
{
public:
	float delay; // 0x1338	
	float stun_duration; // 0x133c	
	int32_t stun_radius; // 0x1340	
	GameTime_t m_fStartTime; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Techies_Minefield_Sign_Scepter_Aura : public CDOTA_Buff
{
public:
	float aura_radius; // 0x1338	
	float scepter_move_damage; // 0x133c	
	float scepter_move_amt; // 0x1340	
	float minefield_duration; // 0x1344	
	float m_flMoveAmount; // 0x1348	
	Vector m_vLastPosition; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rattletrap_RocketFlare_Slow : public CDOTA_Buff
{
public:
	float slow_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Dazzle_Poison_Touch : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Beastmaster_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1400
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Beastmaster_WildAxes : public CDOTA_Buff
{
public:
	Vector m_vLeftControl; // 0x1338	
	Vector m_vRightControl; // 0x1344	
	Vector m_vTargetLoc; // 0x1350	
	Vector m_vSourceLoc; // 0x135c	
	float m_flAxeDuration; // 0x1368	
	GameTime_t m_flAxeDieTime; // 0x136c	
	bool m_bReturning; // 0x1370	
	bool m_bCatchingAxes; // 0x1371	
private:
	[[maybe_unused]] uint8_t __pad1372[0x6]; // 0x1372
public:
	CUtlVector< CHandle< CBaseEntity > > m_hAxes; // 0x1378	
	ParticleIndex_t m_nAxeFXIndex[2]; // 0x1390	
	CUtlVector< CHandle< CBaseEntity > > m_hHitList[2]; // 0x1398	
	int32_t radius; // 0x13c8	
	int32_t spread; // 0x13cc	
	int32_t axe_damage; // 0x13d0	
	float duration; // 0x13d4	
	float min_throw_duration; // 0x13d8	
	float max_throw_duration; // 0x13dc	
	CUtlVector< CHandle< CBaseEntity > > m_vecUniqueHitList; // 0x13e0	
	bool m_bHitInvisibleHero; // 0x13f8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lion_11 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SandKing_SandStorm_Slow_Aura_Thinker : public CDOTA_Buff
{
public:
	int32_t sand_storm_radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Break : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x64
// Has Trivial Constructor
// Has Trivial Destructor
// MClassHasEntityLimitedDataDesc
struct dynpitchvol_base_t
{
public:
	int32_t preset; // 0x0	
	int32_t pitchrun; // 0x4	
	int32_t pitchstart; // 0x8	
	int32_t spinup; // 0xc	
	int32_t spindown; // 0x10	
	int32_t volrun; // 0x14	
	int32_t volstart; // 0x18	
	int32_t fadein; // 0x1c	
	int32_t fadeout; // 0x20	
	int32_t lfotype; // 0x24	
	int32_t lforate; // 0x28	
	int32_t lfomodpitch; // 0x2c	
	int32_t lfomodvol; // 0x30	
	int32_t cspinup; // 0x34	
	int32_t cspincount; // 0x38	
	int32_t pitch; // 0x3c	
	int32_t spinupsav; // 0x40	
	int32_t spindownsav; // 0x44	
	int32_t pitchfrac; // 0x48	
	int32_t vol; // 0x4c	
	int32_t fadeinsav; // 0x50	
	int32_t fadeoutsav; // 0x54	
	int32_t volfrac; // 0x58	
	int32_t lfofrac; // 0x5c	
	int32_t lfomult; // 0x60	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x770
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "uint8 m_Flags"
// MNetworkVarNames "uint8 m_LightStyle"
// MNetworkVarNames "float32 m_Radius"
// MNetworkVarNames "int32 m_Exponent"
// MNetworkVarNames "float32 m_InnerAngle"
// MNetworkVarNames "float32 m_OuterAngle"
// MNetworkVarNames "float32 m_SpotRadius"
class CDynamicLight : public CBaseModelEntity
{
public:
	uint8_t m_ActualFlags; // 0x758	
	// MNetworkEnable
	uint8_t m_Flags; // 0x759	
	// MNetworkEnable
	uint8_t m_LightStyle; // 0x75a	
	bool m_On; // 0x75b	
	// MNetworkEnable
	float m_Radius; // 0x75c	
	// MNetworkEnable
	int32_t m_Exponent; // 0x760	
	// MNetworkEnable
	// MNetworkBitCount "8"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "360,000000"
	float m_InnerAngle; // 0x764	
	// MNetworkEnable
	// MNetworkBitCount "8"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "360,000000"
	float m_OuterAngle; // 0x768	
	// MNetworkEnable
	float m_SpotRadius; // 0x76c	
	
	// Datamap fields:
	// void CDynamicLightDynamicLightThink; // 0x0
	// void InputTurnOn; // 0x0
	// void InputTurnOff; // 0x0
	// void InputToggle; // 0x0
	// Color _light; // 0x7fffffff
	// float pitch; // 0x7fffffff
	// int32_t spawnflags; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Treant_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Earth_Spirit : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cast_Range_175 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_All_Stats_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Kunkka : public CDOTA_BaseNPC_Hero
{
public:
	int32_t m_nFXIndex; // 0x1d98	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18b0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_HoldoutTower_HeavySlow : public CDOTA_BaseNPC_HoldoutTower
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1878
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "string_t m_szInteractAbilityName"
class CDOTA_NPC_Lantern : public CDOTA_BaseNPC_Building
{
public:
	// MNetworkEnable
	CUtlSymbolLarge m_szInteractAbilityName; // 0x1870	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x638
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Tier4Token : public CDOTA_Item_TierToken
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x928
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTriggerToggleSave : public CBaseTrigger
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Phylactery : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_AetherialHalo_Burn : public CDOTA_Buff
{
public:
	int32_t burn_dps_buildings; // 0x1338	
	int32_t burn_dps_units; // 0x133c	
	float burn_interval; // 0x1340	
	int32_t burn_slow; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Muerta_PierceTheVeil_SpellAmpBoost : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_VoidSpirit_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_ArcWarden_Flux : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13a0
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Phoenix_IcarusDive : public CDOTA_Buff
{
public:
	Vector m_vSource; // 0x1338	
	Vector m_vTarget; // 0x1344	
	Vector m_vDirection; // 0x1350	
	QAngle m_angDirection; // 0x135c	
	float m_flCurrentTime; // 0x1368	
	int32_t dash_length; // 0x136c	
	int32_t dash_width; // 0x1370	
	int32_t hit_radius; // 0x1374	
	float burn_duration; // 0x1378	
	float dive_duration; // 0x137c	
	float impact_damage; // 0x1380	
private:
	[[maybe_unused]] uint8_t __pad1384[0x4]; // 0x1384
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecHitEntities; // 0x1388	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Disruptor_Thunder_Strike : public CDOTA_Buff
{
public:
	float strike_interval; // 0x1338	
	int32_t radius; // 0x133c	
	int32_t strike_damage; // 0x1340	
	int32_t strike_damage_bonus; // 0x1344	
	GameTime_t m_flGroundDelayEndTime; // 0x1348	
	bool is_thinker; // 0x134c	
	bool m_bTransferred; // 0x134d	
private:
	[[maybe_unused]] uint8_t __pad134e[0x2]; // 0x134e
public:
	int32_t m_nThinkerViewer; // 0x1350	
	int32_t m_nStrikeCount; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Undying_FleshGolem_PlagueAura : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
	int32_t damage; // 0x133c	
	float tick_rate; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Meepo_Self_Geostrike : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lycan_FeralImpulse : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bloodseeker_BloodMist_Passive : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Elder_Titan_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Windranger_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Intelligence_13 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xc0
// Has VTable
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "item_definition_index_t m_iItemDefinitionIndex"
// MNetworkVarNames "int m_iEntityQuality"
// MNetworkVarNames "uint32 m_iEntityLevel"
// MNetworkVarNames "itemid_t m_iItemID"
// MNetworkVarNames "uint32 m_iAccountID"
// MNetworkVarNames "uint32 m_iInventoryPosition"
// MNetworkVarNames "bool m_bInitialized"
// MNetworkVarNames "style_index_t m_nOverrideStyle"
// MNetworkVarNames "CAttributeList m_AttributeList"
class CEconItemView : public IEconItemInterface
{
public:
	// MNetworkEnable
	item_definition_index_t m_iItemDefinitionIndex; // 0x8	
	// MNetworkEnable
	int32_t m_iEntityQuality; // 0xc	
	// MNetworkEnable
	uint32_t m_iEntityLevel; // 0x10	
private:
	[[maybe_unused]] uint8_t __pad0014[0x4]; // 0x14
public:
	// MNetworkEnable
	itemid_t m_iItemID; // 0x18	
	// MNetworkEnable
	uint32_t m_iAccountID; // 0x20	
	// MNetworkEnable
	uint32_t m_iInventoryPosition; // 0x24	
private:
	[[maybe_unused]] uint8_t __pad0028[0x8]; // 0x28
public:
	// MNetworkEnable
	bool m_bInitialized; // 0x30	
	// MNetworkEnable
	style_index_t m_nOverrideStyle; // 0x31	
	bool m_bIsStoreItem; // 0x32	
	bool m_bIsTradeItem; // 0x33	
	bool m_bHasComputedAttachedParticles; // 0x34	
	bool m_bHasAttachedParticles; // 0x35	
private:
	[[maybe_unused]] uint8_t __pad0036[0x2]; // 0x36
public:
	int32_t m_iEntityQuantity; // 0x38	
	uint8_t m_unClientFlags; // 0x3c	
private:
	[[maybe_unused]] uint8_t __pad003d[0x3]; // 0x3d
public:
	eEconItemOrigin m_unOverrideOrigin; // 0x40	
private:
	[[maybe_unused]] uint8_t __pad0044[0x14]; // 0x44
public:
	// MNetworkEnable
	// -> m_Attributes - 0x60
	// -> m_pManager - 0xb0
	CAttributeList m_AttributeList; // 0x58	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLogicCollisionPair : public CLogicalEntity
{
public:
	CUtlSymbolLarge m_nameAttach1; // 0x4a8	
	CUtlSymbolLarge m_nameAttach2; // 0x4b0	
	bool m_supportMultipleEntitiesWithSameName; // 0x4b8	
	bool m_disabled; // 0x4b9	
	bool m_succeeded; // 0x4ba	
	
	// Datamap fields:
	// void InputDisableCollisions; // 0x0
	// CUtlSymbolLarge InputDisableCollisionsWith; // 0x0
	// void InputEnableCollisions; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x208
// Has VTable
// MIgnoreTypeScopeMetaChecks
// 
// MNetworkVarNames "uint32 m_PredNetBoolVariables"
// MNetworkVarNames "byte m_PredNetByteVariables"
// MNetworkVarNames "uint16 m_PredNetUInt16Variables"
// MNetworkVarNames "int32 m_PredNetIntVariables"
// MNetworkVarNames "uint32 m_PredNetUInt32Variables"
// MNetworkVarNames "uint64 m_PredNetUInt64Variables"
// MNetworkVarNames "float m_PredNetFloatVariables"
// MNetworkVarNames "Vector m_PredNetVectorVariables"
// MNetworkVarNames "Quaternion m_PredNetQuaternionVariables"
// MNetworkVarNames "CGlobalSymbol m_PredNetGlobalSymbolVariables"
// MNetworkVarNames "uint32 m_OwnerOnlyPredNetBoolVariables"
// MNetworkVarNames "byte m_OwnerOnlyPredNetByteVariables"
// MNetworkVarNames "uint16 m_OwnerOnlyPredNetUInt16Variables"
// MNetworkVarNames "int32 m_OwnerOnlyPredNetIntVariables"
// MNetworkVarNames "uint32 m_OwnerOnlyPredNetUInt32Variables"
// MNetworkVarNames "uint64 m_OwnerOnlyPredNetUInt64Variables"
// MNetworkVarNames "float m_OwnerOnlyPredNetFloatVariables"
// MNetworkVarNames "Vector m_OwnerOnlyPredNetVectorVariables"
// MNetworkVarNames "Quaternion m_OwnerOnlyPredNetQuaternionVariables"
// MNetworkVarNames "CGlobalSymbol m_OwnerOnlyPredNetGlobalSymbolVariables"
// MNetworkVarNames "int m_nBoolVariablesCount"
// MNetworkVarNames "int m_nOwnerOnlyBoolVariablesCount"
// MNetworkVarNames "int m_nRandomSeedOffset"
// MNetworkVarNames "float m_flLastTeleportTime"
class CAnimGraphNetworkedVariables
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkChangeCallback "OnNetBoolVarChanged"
	// MNetworkAlias "m_PredBoolVariables"
	CNetworkUtlVectorBase< uint32 > m_PredNetBoolVariables; // 0x8	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkChangeCallback "OnNetByteVarChanged"
	// MNetworkAlias "m_PredByteVariables"
	CNetworkUtlVectorBase< uint8 > m_PredNetByteVariables; // 0x20	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkChangeCallback "OnNetUInt16VarChanged"
	// MNetworkAlias "m_PredUInt16Variables"
	CNetworkUtlVectorBase< uint16 > m_PredNetUInt16Variables; // 0x38	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkChangeCallback "OnNetIntVarChanged"
	// MNetworkAlias "m_PredIntVariables"
	CNetworkUtlVectorBase< int32 > m_PredNetIntVariables; // 0x50	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkChangeCallback "OnNetUInt32VarChanged"
	// MNetworkAlias "m_PredUInt32Variables"
	CNetworkUtlVectorBase< uint32 > m_PredNetUInt32Variables; // 0x68	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkChangeCallback "OnNetUInt64VarChanged"
	// MNetworkAlias "m_PredUInt64Variables"
	CNetworkUtlVectorBase< uint64 > m_PredNetUInt64Variables; // 0x80	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkChangeCallback "OnNetFloatVarChanged"
	// MNetworkAlias "m_PredFloatVariables"
	CNetworkUtlVectorBase< float32 > m_PredNetFloatVariables; // 0x98	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkChangeCallback "OnNetVectorVarChanged"
	// MNetworkAlias "m_PredVectorVariables"
	CNetworkUtlVectorBase< Vector > m_PredNetVectorVariables; // 0xb0	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkChangeCallback "OnNetQuaternionVarChanged"
	// MNetworkAlias "m_PredQuaternionVariables"
	CNetworkUtlVectorBase< Quaternion > m_PredNetQuaternionVariables; // 0xc8	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkChangeCallback "OnNetGlobalSymbolVarChanged"
	// MNetworkAlias "m_PredGlobalSymbolVariables"
	CNetworkUtlVectorBase< CGlobalSymbol > m_PredNetGlobalSymbolVariables; // 0xe0	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetOOBoolVarChanged"
	// MNetworkAlias "m_OwnerOnlyPredNetBoolVariables"
	CNetworkUtlVectorBase< uint32 > m_OwnerOnlyPredNetBoolVariables; // 0xf8	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetOOByteVarChanged"
	// MNetworkAlias "m_OwnerOnlyPredNetByteVariables"
	CNetworkUtlVectorBase< uint8 > m_OwnerOnlyPredNetByteVariables; // 0x110	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetOOUInt16VarChanged"
	// MNetworkAlias "m_OwnerOnlyPredNetUInt16Variables"
	CNetworkUtlVectorBase< uint16 > m_OwnerOnlyPredNetUInt16Variables; // 0x128	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetOOIntVarChanged"
	// MNetworkAlias "m_OwnerOnlyPredNetIntVariables"
	CNetworkUtlVectorBase< int32 > m_OwnerOnlyPredNetIntVariables; // 0x140	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetOOUInt32VarChanged"
	// MNetworkAlias "m_OwnerOnlyPredNetUInt32Variables"
	CNetworkUtlVectorBase< uint32 > m_OwnerOnlyPredNetUInt32Variables; // 0x158	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetOOUInt64VarChanged"
	// MNetworkAlias "m_OwnerOnlyPredNetUInt64Variables"
	CNetworkUtlVectorBase< uint64 > m_OwnerOnlyPredNetUInt64Variables; // 0x170	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetOOFloatVarChanged"
	// MNetworkAlias "m_OwnerOnlyPredNetFloatVariables"
	CNetworkUtlVectorBase< float32 > m_OwnerOnlyPredNetFloatVariables; // 0x188	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetOOVectorVarChanged"
	// MNetworkAlias "m_OwnerOnlyPredNetVectorVariables"
	CNetworkUtlVectorBase< Vector > m_OwnerOnlyPredNetVectorVariables; // 0x1a0	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetOOQuaternionVarChanged"
	// MNetworkAlias "m_OwnerOnlyPredNetQuaternionVariables"
	CNetworkUtlVectorBase< Quaternion > m_OwnerOnlyPredNetQuaternionVariables; // 0x1b8	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkSendProxyRecipientsFilter
	// MNetworkChangeCallback "OnNetOOGlobalSymbolVarChanged"
	// MNetworkAlias "m_OwnerOnlyPredNetGlobalSymbolVariables"
	CNetworkUtlVectorBase< CGlobalSymbol > m_OwnerOnlyPredNetGlobalSymbolVariables; // 0x1d0	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	int32_t m_nBoolVariablesCount; // 0x1e8	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	int32_t m_nOwnerOnlyBoolVariablesCount; // 0x1ec	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	int32_t m_nRandomSeedOffset; // 0x1f0	
	// MNetworkEnable
	// MNetworkUserGroup "animationgraph"
	// MNetworkChangeCallback "OnTeleportTimeChanged"
	float m_flLastTeleportTime; // 0x1f4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa88
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPhysicsPropRespawnable : public CPhysicsProp
{
public:
	Vector m_vOriginalSpawnOrigin; // 0xa50	
	QAngle m_vOriginalSpawnAngles; // 0xa5c	
	Vector m_vOriginalMins; // 0xa68	
	Vector m_vOriginalMaxs; // 0xa74	
	float m_flRespawnDuration; // 0xa80	
	
	// Datamap fields:
	// void CPhysicsPropRespawnableMaterialize; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_SeedsOfSerenity_Active : public CDOTA_Buff
{
public:
	int32_t aura_health_regen; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Gladiator_Helm_Buff : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
	int32_t armor; // 0x133c	
	int32_t movement_speed; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Desolator_2 : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Kaya_And_Sange : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_LesserCritical : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t crit_chance; // 0x133c	
	int32_t crit_multiplier; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bulwark_DamageReduction : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AbyssalUnderlord_AtrophyAura_Effect : public CDOTA_Buff
{
public:
	int32_t damage_reduction_pct; // 0x1338	
	float bonus_damage_duration; // 0x133c	
	int32_t bonus_damage_from_creep; // 0x1340	
	int32_t bonus_damage_from_hero; // 0x1344	
	bool m_bWasHidden; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Abaddon_Frostmourne_Debuff : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1338	
	ParticleIndex_t m_nFXStackIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Shredder_Chakram_Debuff : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
	int32_t slow_health_percentage; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_KeeperOfTheLight_SpiritForm : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndexA; // 0x1338	
	int32_t movement_speed; // 0x133c	
	int32_t cast_range; // 0x1340	
	bool m_bDidSwapSpiritForm; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_NagaSiren_RipTide : public CDOTA_Buff
{
public:
	int32_t armor_reduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Primal_Companion : public CDOTABaseAbility
{
public:
	CHandle< CDOTA_BaseNPC > m_hCurrentBrewling; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rattletrap_Cog_Thinker_Self_Bonuses : public CDOTA_Buff
{
public:
	int32_t cogs_radius; // 0x1338	
	int32_t extra_pull_buffer; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Roshan_InherentBuffs : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Courier_Shield : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ursa_Earthshock_Move : public CDOTA_Buff
{
public:
	float hop_duration; // 0x1338	
	int32_t hop_height; // 0x133c	
	int32_t hop_distance; // 0x1340	
	float m_flStartZ; // 0x1344	
	float m_flCurTime; // 0x1348	
	float m_flJumpDuration; // 0x134c	
	float m_flJumpHeight; // 0x1350	
	Vector m_vTargetHorizontalDirection; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Enigma : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Windrunner_FocusFire : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
	int32_t focusfire_damage_reduction; // 0x133c	
	bool bActive; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	int32_t bonus_attack_speed; // 0x1344	
	int32_t focusfire_fire_on_the_move; // 0x1348	
	bool m_bPause; // 0x134c	
private:
	[[maybe_unused]] uint8_t __pad134d[0x3]; // 0x134d
public:
	int32_t m_nNumArrowsLanded; // 0x1350	
	int32_t m_nDamageDealt; // 0x1354	
	int32_t m_nDamageDealtMax; // 0x1358	
	int32_t m_nTargetInitialHP; // 0x135c	
	bool m_bHeroKilled; // 0x1360	
	bool m_bRecentFocusFireAttack; // 0x1361	
private:
	[[maybe_unused]] uint8_t __pad1362[0xa]; // 0x1362
public:
	ParticleIndex_t m_nFXFocusFire; // 0x136c	
	GameTime_t m_flLastFocusFireAttackTime; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Morphling_ScepterStatsDrain_Agility_Debuff : public CDOTA_Buff
{
public:
	int32_t scepter_stat_steal; // 0x1338	
	int32_t scepter_attack_speed; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Sven_Warcry_Aura : public CDOTA_Buff
{
public:
	int32_t shard_radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AntiMage_ManaVoid : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AncientApparition_ColdFeet_Freeze : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rune_Illusion : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x760
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFuncWall : public CBaseModelEntity
{
public:
	int32_t m_nState; // 0x758	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_Lifestealer_Enraged_Pulse : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_300 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x158
// Has Trivial Destructor
class CSequenceTransitioner2
{
public:
	CNetworkedSequenceOperation m_currentOp; // 0x0	
	float m_flCurrentPlaybackRate; // 0x28	
	GameTime_t m_flCurrentAnimTime; // 0x2c	
	TransitioningLayer_t m_transitioningLayers[4]; // 0x30	
	CBaseAnimatingController* m_pOwner; // 0x150	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_AghsFort_SpectralTusk_Tombstone : public CDOTA_BaseNPC_Additive
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_OgreSmash_Swing : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Jungle_Varmint : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_Morphling_Waveform : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x10]; // 0x578
public:
	int32_t m_nProjectileID; // 0x588	
	Vector m_vProjectileLocation; // 0x58c	
	CHandle< CBaseEntity > m_hHitHero; // 0x598	
	bool m_bGrantedGem; // 0x59c	
private:
	[[maybe_unused]] uint8_t __pad059d[0x3]; // 0x59d
public:
	ParticleIndex_t m_nPreviewFX; // 0x5a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x988
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CEnvDeferredSpotLight : public CEnvDeferredLight
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Eagle_Eye : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_StoutShield : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Hyperstone : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_BootsOfElven : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AbyssalUnderlord_AtrophyAura_HeroDmgBuff : public CDOTA_Buff
{
public:
	int32_t bonus_damage_from_hero; // 0x1338	
	float bonus_shared_by_allies_pct; // 0x133c	
	float m_flModifier; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Elder_Titan_NaturalOrder_MagicResistance : public CDOTA_Buff
{
public:
	int32_t magic_resistance_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Skywrath_Mage_Mystic_Flare : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Shredder_Chakram_Debuff_2 : public CDOTA_Modifier_Shredder_Chakram_Debuff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Magnataur_Horn_Toss_Slow : public CDOTA_Buff
{
public:
	int32_t horn_toss_slow_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Wisp_Tether_Stun_Tracker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_12 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_LoneDruid_SavageRoar : public CDOTA_Modifier_Fear
{
public:
	int32_t bonus_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_LoneDruid_SavageRoar : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Outworld_Devourer_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Obsidian_Destroyer_AstralImprisonment_Prison : public CDOTA_Buff
{
public:
	int32_t allied_movement_speed_pct; // 0x1338	
	bool m_bAllowMovement; // 0x133c	
private:
	[[maybe_unused]] uint8_t __pad133d[0x3]; // 0x133d
public:
	ParticleIndex_t m_nDebuffImmuneEffect; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_ColdSnap : public CDOTA_Buff
{
public:
	float freeze_damage; // 0x1338	
	float freeze_duration; // 0x133c	
	float freeze_cooldown; // 0x1340	
	float damage_trigger; // 0x1344	
	float spell_lifesteal; // 0x1348	
	float spell_amp; // 0x134c	
	float freeze_heal; // 0x1350	
	int32_t nQuasApplications; // 0x1354	
	int32_t nExortApplications; // 0x1358	
private:
	[[maybe_unused]] uint8_t __pad135c[0x4]; // 0x135c
public:
	CountdownTimer m_freezeCooldownTimer; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Beastmaster_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoCourierSpawnDire3 : public CPointEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float m_flLongestGazeDuration"
class CDOTA_Ability_Lich_Sinister_Gaze : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	float m_flLongestGazeDuration; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad057c[0x4]; // 0x57c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hAffectedEntities; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_CrystalMaiden_CrystalNova : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1338	
	int32_t attackspeed_slow; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Earthshaker_Arcana_Kill_Effect : public CDOTA_Buff
{
public:
	bool m_bFrozen; // 0x1338	
	bool m_bFlail; // 0x1339	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pudge_Swallow_Effect : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_Creature_SpikedCarapace : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_Waveblaster_Leap : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Antimage_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Venomancer_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Troll_Warlord_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Techies_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_25 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_375 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CIngameEvent_WM2017 : public CIngameEvent_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Brewmaster_PrimalEarth : public CDOTA_BaseNPC_Creep
{
public:
	ParticleIndex_t m_nFXEarthAmbient1; // 0x1798	
	ParticleIndex_t m_nFXEarthAmbient2; // 0x179c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Attack_Range : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Arcane_Scout : public CDOTA_Buff_Item
{
public:
	int32_t vision_bonus; // 0x1338	
	int32_t magic_resist; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Eul_Wind_Waker_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Butterfly : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t bonus_agility; // 0x133c	
	int32_t bonus_evasion; // 0x1340	
	int32_t bonus_attack_speed_pct; // 0x1344	
	int32_t bonus_slow_resistance; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Marci_Lunge_Damage : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Centaur_Return_Counter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_KeeperOfTheLight_Recall : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Silencer_GlaivesOfWisdom_Buff : public CDOTA_Buff
{
public:
	int32_t int_steal; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Chen_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Furion_CurseOfTheForest : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tinker_WarpGrenade : public CDOTABaseAbility
{
public:
	float debuff_duration; // 0x578	
	float knockback_distance; // 0x57c	
	float damage; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Morphling_Morph_Agi : public CDOTA_Buff
{
public:
	int32_t mana_cost; // 0x1338	
	int32_t points_per_tick; // 0x133c	
	float morph_cooldown; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Bloodseeker_Bloodrage : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AncientApparition_ChillingTouch_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5e0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Aghanim_UrnUpheaval : public CDOTABaseAbility
{
public:
	Vector m_vPosition; // 0x578	
	float aoe; // 0x584	
	float slow_rate; // 0x588	
	float slow_rate_duration; // 0x58c	
	float duration; // 0x590	
	float max_slow; // 0x594	
	float burn_damage; // 0x598	
	float m_flCurrentSlow; // 0x59c	
	ParticleIndex_t m_nFXIndex; // 0x5a0	
private:
	[[maybe_unused]] uint8_t __pad05a4[0x4]; // 0x5a4
public:
	CountdownTimer m_SlowTimer; // 0x5a8	
	CountdownTimer m_timer; // 0x5c0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_ShootFirework : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Antimage_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Kunkka_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Wraith_King_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Slark_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Disruptor : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_CentaurKhan_EnduranceAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Dawnbreaker_Fire_Wreath : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_VoidSpirit_ResonantPulse : public CDOTABaseAbility
{
public:
	bool m_bGrantedScepterCharges; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad0579[0x3]; // 0x579
public:
	float buff_duration; // 0x57c	
	int32_t base_absorb_amount; // 0x580	
	int32_t absorb_per_hero_hit; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_VoidSpirit_Dissimilate : public CDOTABaseAbility
{
public:
	float phase_duration; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Snapfire_FiresnapCookie_PreHop : public CDOTA_Buff
{
public:
	float jump_duration; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Terrorblade_Transforming : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Silencer_GlaivesOfWisdom : public CDOTABaseAbility
{
public:
	int32_t m_iAttackIndex; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad057c[0x4]; // 0x57c
public:
	CUtlVector< sGlaiveInfoSilencer > m_GlaiveInfo; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Life_Stealer_AssimilateEject : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Warlock_Golem_Permanent_Immolation : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lina_LightStrikeArray : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VengefulSpirit_Nether_Swap_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AlphaWolf_CommandAura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Mirana_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Visage_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Venomancer_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Gold_Income_240 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_200 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Silencer : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_PhantomAssassin : public CDOTA_BaseNPC_Hero
{
public:
	ParticleIndex_t m_nFXDeath; // 0x1d98	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Greevil_Miniboss_Black_Nightmare_Invulnerable : public CDOTA_Modifier_Invulnerable
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Cooldown_Reduction : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class Modifier_Pluck_Famango_Channel : public CDOTA_Buff
{
public:
	float famango_rate; // 0x1338	
	CHandle< CBaseEntity > m_hMangoTree; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_WraithPact : public CDOTA_Buff_Item
{
public:
	int32_t aura_radius; // 0x1338	
	int32_t bonus_mana; // 0x133c	
	int32_t bonus_health; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Mekansm_Aura : public CDOTA_Buff
{
public:
	float aura_health_regen; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Banana : public CDOTA_Buff
{
public:
	int32_t slide_distance; // 0x1338	
	int32_t radius; // 0x133c	
	float slide_duration; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Winter_Wyvern_Arctic_Burn : public CDOTABaseAbility
{
public:
	CUtlVector< CEntityIndex > m_BurnedTargets; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Oracle_FalsePromise : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1338[0x30]; // 0x1338
public:
	bool m_bWaitingForInvulnerability; // 0x1368	
	bool m_bDisableHealing; // 0x1369	
private:
	[[maybe_unused]] uint8_t __pad136a[0x2]; // 0x136a
public:
	float m_flHealthOnCreated; // 0x136c	
	ParticleIndex_t m_nFXIndex; // 0x1370	
	ParticleIndex_t m_nFXIndexB; // 0x1374	
	float m_flRunningDmg; // 0x1378	
	float m_flRunningHealth; // 0x137c	
	int32_t bonus_armor; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Wisp_Tether_Break : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5c0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Broodmother_StickySnare : public CDOTABaseAbility
{
public:
	Vector m_vEndpoint; // 0x578	
	float duration; // 0x584	
	int32_t width; // 0x588	
	bool m_bStolenSnareCheck; // 0x58c	
private:
	[[maybe_unused]] uint8_t __pad058d[0x1b]; // 0x58d
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecSnares; // 0x5a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1390
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Luna_MoonGlaive_Shield : public CDOTA_Buff
{
public:
	int32_t rotating_glaives; // 0x1338	
	float rotating_glaives_hit_radius; // 0x133c	
	float rotating_glaives_speed; // 0x1340	
	float rotating_glaives_collision_damage; // 0x1344	
	float rotating_glaives_movement_radius; // 0x1348	
	float rotating_glaives_damage_reduction; // 0x134c	
	float m_flCurRotation; // 0x1350	
	float m_flCurRadius; // 0x1354	
	float m_flSecondsPerRotation; // 0x1358	
	float m_flMaxRadius; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PhantomAssassin_Fan_Of_Knives : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1390
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_QueenOfPain_Arcana : public CDOTA_Buff
{
public:
	CUtlOrderedMap< PlayerID_t, bool > m_vecHitPlayers; // 0x1338	
	CUtlOrderedMap< PlayerID_t, bool > m_vecKilledPlayers; // 0x1360	
	GameTime_t m_flLastSonicWaveCast; // 0x1388	
	bool m_bSpeechComplete; // 0x138c	
	bool m_bMessageComplete; // 0x138d	
	bool m_bIsMeleeAttack; // 0x138e	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tiny_Tree_Grab : public CDOTA_Buff
{
public:
	int32_t attack_count; // 0x1338	
	int32_t bonus_damage; // 0x133c	
	int32_t bonus_damage_buildings; // 0x1340	
	float stun_duration; // 0x1344	
	int32_t attack_range; // 0x1348	
	int32_t m_nOriginalAttackCapability; // 0x134c	
	float bat_increase; // 0x1350	
	int32_t speed_reduction; // 0x1354	
	int32_t m_nBonusAttackRange; // 0x1358	
	CHandle< CBaseEntity > m_hStolenTree; // 0x135c	
	ParticleIndex_t m_nFXIndex; // 0x1360	
	ParticleIndex_t m_nFXAttackIndex; // 0x1364	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_Shadow_Demon_Shadow_Poison_Release : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Wisp : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cooldown_Reduction_30 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Strength_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Speed_120 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_275 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Obsidian_Destroyer : public CDOTA_BaseNPC_Hero
{
public:
	ParticleIndex_t m_nFXDeath; // 0x1d98	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ascension_Meteoric_Land : public CDOTA_Buff
{
public:
	int32_t impact_radius; // 0x1338	
	float land_time; // 0x133c	
	float burn_duration; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Terror_Mask : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1338	
	float bonus_mana_regen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Phylactery : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_HeavensHalberd_Debuff : public CDOTA_Buff
{
public:
	bool m_bPierceDebuffImmunity; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Hood_Of_Defiance_Barrier : public CDOTA_Buff
{
public:
	int32_t barrier_block; // 0x1338	
	int32_t barrier_amount; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_RingOfProtection : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hoodwink_HuntersQuiver_Mark : public CDOTA_Buff
{
public:
	int32_t stack_crit_chance_pct; // 0x1338	
	int32_t critical_damage_pct; // 0x133c	
	int32_t stack_slow_pct; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Winter_Wyvern_Splinter_Blast_Slow : public CDOTA_Buff
{
public:
	int32_t bonus_movespeed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Elder_Titan_AncestralSpirit_Buff : public CDOTA_Buff
{
public:
	float move_pct_creeps; // 0x1338	
	int32_t move_pct_heroes; // 0x133c	
	int32_t damage_creeps; // 0x1340	
	int32_t damage_heroes; // 0x1344	
	float armor_creeps; // 0x1348	
	float armor_heroes; // 0x134c	
	float move_pct_cap; // 0x1350	
	int32_t m_nCreepsHit; // 0x1354	
	int32_t m_nHeroesHit; // 0x1358	
	float m_fSpeedPercentage; // 0x135c	
	int32_t m_nDamage; // 0x1360	
	int32_t m_nArmor; // 0x1364	
	bool m_bSpellImmunity; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// Is Abstract
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Stacking_Multiple_Buff_Base : public CDOTA_Buff
{
public:
	int32_t m_nParentBuffIndex; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Visage_Silent_As_The_Grave_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Undying_Tombstone_Bunker_Cooldown : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lycan_Shapeshift : public CDOTA_Buff
{
public:
	int32_t bonus_night_vision; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
	int32_t m_iOriginalAttackCapability; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Brewmaster_Void_Astral_Pull_Movement : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1338	
	float m_flEndTime; // 0x1344	
	float m_flCurTime; // 0x1348	
	int32_t pull_distance; // 0x134c	
	int32_t damage; // 0x1350	
	float pull_duration; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Jakiro_DualBreath_Slow : public CDOTA_Buff
{
public:
	int32_t slow_movement_speed_pct; // 0x1338	
	int32_t slow_attack_speed_pct; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rattletrap_BatteryAssault : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PhantomAssassin_CoupdeGrace : public CDOTA_Buff
{
public:
	int32_t crit_bonus; // 0x1338	
	int32_t crit_chance; // 0x133c	
	int32_t dagger_crit_chance; // 0x1340	
	bool crit_active; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1345[0x3]; // 0x1345
public:
	float duration; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Enigma_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Puck_DreamCoil : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hThinker; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Sven_GreatCleave : public CDOTA_Buff
{
public:
	int32_t cleave_starting_width; // 0x1338	
	int32_t cleave_ending_width; // 0x133c	
	int32_t cleave_distance; // 0x1340	
	int32_t great_cleave_damage; // 0x1344	
	int32_t strength_bonus; // 0x1348	
	int16_t m_nLastCleaveRecord; // 0x134c	
private:
	[[maybe_unused]] uint8_t __pad134e[0x2]; // 0x134e
public:
	int32_t m_nLastCleaveKills; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SetScaleset : public CDOTA_Buff
{
public:
	CUtlString m_Scaleset; // 0x1338	
	bool m_bActive; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x168
// Has VTable
class CDOTABehaviorCommandMoveToTargetToCast
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	CHandle< CBaseEntity > m_hTarget; // 0x148	
	CHandle< CBaseEntity > m_hAbility; // 0x14c	
	int32_t m_nMovementState; // 0x150	
	bool m_bFailedCast; // 0x154	
private:
	[[maybe_unused]] uint8_t __pad0155[0x3]; // 0x155
public:
	float m_flTargetRange; // 0x158	
	bool m_bTurningToTarget; // 0x15c	
private:
	[[maybe_unused]] uint8_t __pad015d[0x3]; // 0x15d
public:
	float m_flTargetAngle; // 0x160	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_RockGolem_Smash : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nPreviewFX; // 0x578	
	Vector m_vTargetLoc; // 0x57c	
private:
	[[maybe_unused]] uint8_t __pad0588[0x8]; // 0x588
public:
	int32_t radius; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Shaman_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Earth_Spirit_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Medusa_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Evasion_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cast_Range_50 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Armor_12 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cleave_15 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Helm_Of_The_Undying_Active : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
	bool m_bPassive; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Faded_Broach : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Soul_Ring_Buff : public CDOTA_Buff
{
public:
	int32_t m_iTempExtraMaxMana; // 0x1338	
	int32_t m_iManaToRemove; // 0x133c	
	float duration; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_QuellingBlade : public CDOTA_Buff_Item
{
public:
	int32_t damage_bonus; // 0x1338	
	int32_t damage_bonus_ranged; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BottleRegeneration : public CDOTA_Buff
{
public:
	int32_t health_restore; // 0x1338	
	int32_t mana_restore; // 0x133c	
	int32_t health_restore_pct; // 0x1340	
	int32_t mana_restore_pct; // 0x1344	
	int32_t break_on_hero_damage; // 0x1348	
	float m_fHealingDone; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_VoidSpirit_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13a0
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Snapfire_MortimerKisses : public CDOTA_Buff
{
public:
	float m_fIntervalPerRocket; // 0x1338	
	float m_flFacingTarget; // 0x133c	
	ParticleIndex_t m_nBeamFXIndex; // 0x1340	
	CHandle< CBaseEntity > m_hBeamEnd; // 0x1344	
	float m_flCurDistance; // 0x1348	
	Vector m_vAimTarget; // 0x134c	
	float m_fLastTurnAmount; // 0x1358	
	int32_t m_nProjectilesLaunched; // 0x135c	
	bool m_bDestroyOnNextThink; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1361[0x3]; // 0x1361
public:
	int32_t m_nProjectilesToLaunch; // 0x1364	
	bool m_bHasProjectileTalent; // 0x1368	
private:
	[[maybe_unused]] uint8_t __pad1369[0xb]; // 0x1369
public:
	int32_t projectile_count; // 0x1374	
	int32_t projectile_speed; // 0x1378	
	int32_t projectile_width; // 0x137c	
	int32_t projectile_vision; // 0x1380	
	float turn_rate; // 0x1384	
	int32_t min_range; // 0x1388	
	int32_t impact_radius; // 0x138c	
	float min_lob_travel_time; // 0x1390	
	float max_lob_travel_time; // 0x1394	
	float delay_after_last_projectile; // 0x1398	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tusk_IceShards_Stop : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TrollWarlord_BerserkersRage : public CDOTA_Buff
{
public:
	int32_t bonus_move_speed; // 0x1338	
	int32_t bonus_range; // 0x133c	
	int32_t bonus_hp; // 0x1340	
	int32_t bonus_armor; // 0x1344	
	int32_t ensnare_chance; // 0x1348	
	float ensnare_duration; // 0x134c	
	float base_attack_time; // 0x1350	
	int32_t m_iOriginalAttackCapabilities; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Naga_Siren_Reel_In : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > affectedEntities; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_BountyHunter_Lookout : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Clinkz_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_FacelessVoid_TimeWalk_Reverse : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x10]; // 0x578
public:
	int32_t speed; // 0x588	
	int32_t m_nProjectileID; // 0x58c	
	Vector m_vProjectileLocation; // 0x590	
	Vector m_vStartLocation; // 0x59c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nian_Sigils : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Necrolyte_Sadist_Active : public CDOTA_Buff
{
public:
	int32_t heal_bonus; // 0x1338	
	int32_t bonus_damage; // 0x133c	
	int32_t slow_aoe; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Lancer_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VengefulSpirit_WaveOfTerror_Buff : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t bonus_armor; // 0x133c	
	int32_t steal_pct; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x640
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DrowRanger_Multishot : public CDOTABaseAbility
{
public:
	Vector m_vStartPos; // 0x578	
	int32_t m_iArrowProjectile; // 0x584	
	int32_t m_nFXIndex; // 0x588	
	float arrow_speed; // 0x58c	
	int32_t arrow_spread; // 0x590	
private:
	[[maybe_unused]] uint8_t __pad0594[0x4]; // 0x594
public:
	CUtlVector< CHandle< CBaseEntity > > m_vHitTargets0; // 0x598	
	CUtlVector< CHandle< CBaseEntity > > m_vHitTargets1; // 0x5b0	
	CUtlVector< CHandle< CBaseEntity > > m_vHitTargets2; // 0x5c8	
	CUtlVector< CHandle< CBaseEntity > > m_vHitTargets3; // 0x5e0	
	CUtlVector< CHandle< CBaseEntity > > m_vHitTargets4; // 0x5f8	
	CUtlVector< CHandle< CBaseEntity > > m_vHitTargets5; // 0x610	
	CUtlVector< CHandle< CBaseEntity > > m_vHitTargets6; // 0x628	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DrowRanger_FrostArrows : public CDOTA_Buff
{
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1338	
	int32_t shard_bonus_damage_per_stack; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_BigThunderLizard_Frenzy : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DarkTrollWarlord_Ensnare : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xc88
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTriggerSndSosOpvar : public CBaseTrigger
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hTouchingPlayers; // 0x928	
	Vector m_flPosition; // 0x940	
	float m_flCenterSize; // 0x94c	
	float m_flMinVal; // 0x950	
	float m_flMaxVal; // 0x954	
	CUtlSymbolLarge m_opvarName; // 0x958	
	CUtlSymbolLarge m_stackName; // 0x960	
	CUtlSymbolLarge m_operatorName; // 0x968	
	bool m_bVolIs2D; // 0x970	
	char m_opvarNameChar[256]; // 0x971	
	char m_stackNameChar[256]; // 0xa71	
	char m_operatorNameChar[256]; // 0xb71	
private:
	[[maybe_unused]] uint8_t __pad0c71[0x3]; // 0xc71
public:
	Vector m_VecNormPos; // 0xc74	
	float m_flNormCenterSize; // 0xc80	
	
	// Datamap fields:
	// void CTriggerSndSosOpvarSndSosTriggerOpvarWaitOver; // 0x0
	// void m_opvarNameChar; // 0x971
	// void m_stackNameChar; // 0xa71
	// void m_operatorNameChar; // 0xb71
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Abaddon_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Faceless_Void : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_35 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18b0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_HoldoutTower_ReduceSpeed : public CDOTA_BaseNPC_HoldoutTower
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Spawnlord_Aura_Bonus : public CDOTA_Buff
{
public:
	int32_t lifesteal; // 0x1338	
	int32_t hp_regen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Manaloss_Reduction : public CDOTA_Buff
{
public:
	float value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Vengeances_Shadow_Illusions : public CDOTA_Buff
{
public:
	bool m_bLeftoverHybrid; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Eternal_Shroud_Bonus_Magic_Resist : public CDOTA_Buff
{
public:
	int32_t max_stacks; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Mjollnir_Static : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1338[0x8]; // 0x1338
public:
	int32_t static_chance; // 0x1340	
	int32_t static_strikes; // 0x1344	
	int32_t static_damage; // 0x1348	
	int32_t static_primary_radius; // 0x134c	
	int32_t static_seconary_radius; // 0x1350	
	int32_t static_radius; // 0x1354	
	float static_cooldown; // 0x1358	
	int32_t chain_damage_per_charge; // 0x135c	
	CountdownTimer m_StaticTimer; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Revenants_Brooch : public CDOTA_Buff_Item
{
public:
	bool m_bScepter; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	int32_t bonus_damage; // 0x133c	
	int32_t spell_lifesteal; // 0x1340	
	int32_t bonus_spell_lifesteal; // 0x1344	
	int32_t manacost_per_hit; // 0x1348	
	bool m_bActive; // 0x134c	
private:
	[[maybe_unused]] uint8_t __pad134d[0x3]; // 0x134d
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_BootsOfTravel : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Muerta_TheCallingAuraSlow : public CDOTA_Buff
{
public:
	int32_t aura_movespeed_slow; // 0x1338	
	int32_t aura_attackspeed_slow; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dawnbreaker_Luminosity_Attack_Buff : public CDOTA_Buff
{
public:
	bool m_bIsBuffedAttack; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	int32_t heal_pct; // 0x133c	
	int32_t bonus_damage; // 0x1340	
	int32_t heal_radius; // 0x1344	
	int32_t heal_from_creeps; // 0x1348	
	int32_t allied_healing_pct; // 0x134c	
	CUtlVector< CHandle< CBaseEntity > > hTargets; // 0x1350	
	float m_flTotalToHeal; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Techies_LandMines_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Brewmaster_Fear : public CDOTA_Modifier_Fear
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_GhostWalk : public CDOTA_Ability_Invoker_InvokedBase
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Spectre_Dispersion_Memory : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BountyHunter_Track_Bear_Trap : public CDOTA_Modifier_Invisible
{
public:
	bool m_bActivated; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Assassin_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DeathProphet_Silence_Debuff : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Beastmaster_DrumsOfSlom : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lion_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Morphling_Replicate_MorphedIllusionsEffect : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bloodseeker_Thirst_Vision : public CDOTA_Buff
{
public:
	int32_t invis_threshold_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Axe_CullingBlade : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x10]; // 0x578
public:
	bool m_bInterrupted; // 0x588	
private:
	[[maybe_unused]] uint8_t __pad0589[0x3]; // 0x589
public:
	Vector m_vProjectileLocation; // 0x58c	
	CHandle< CBaseEntity > m_hTarget; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_MudGolem_CloakAura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_BlackDragon_DragonhideAura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 16
// Size: 0x7b0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CScriptedSequence : public CBaseEntity
{
public:
	CUtlSymbolLarge m_iszEntry; // 0x4a8	
	CUtlSymbolLarge m_iszPreIdle; // 0x4b0	
	CUtlSymbolLarge m_iszPlay; // 0x4b8	
	CUtlSymbolLarge m_iszPostIdle; // 0x4c0	
	CUtlSymbolLarge m_iszModifierToAddOnPlay; // 0x4c8	
	CUtlSymbolLarge m_iszNextScript; // 0x4d0	
	CUtlSymbolLarge m_iszEntity; // 0x4d8	
	CUtlSymbolLarge m_iszSyncGroup; // 0x4e0	
	ScriptedMoveTo_t m_nMoveTo; // 0x4e8	
	MovementGait_t m_nMoveToGait; // 0x4ec	
	bool m_bIsPlayingPreIdle; // 0x4ed	
	bool m_bIsPlayingEntry; // 0x4ee	
	bool m_bIsPlayingAction; // 0x4ef	
	bool m_bIsPlayingPostIdle; // 0x4f0	
	bool m_bDontRotateOther; // 0x4f1	
	bool m_bIsRepeatable; // 0x4f2	
	bool m_bShouldLeaveCorpse; // 0x4f3	
	bool m_bStartOnSpawn; // 0x4f4	
	bool m_bDisallowInterrupts; // 0x4f5	
	bool m_bCanOverrideNPCState; // 0x4f6	
	bool m_bDontTeleportAtEnd; // 0x4f7	
	bool m_bHighPriority; // 0x4f8	
	bool m_bHideDebugComplaints; // 0x4f9	
	bool m_bContinueOnDeath; // 0x4fa	
	bool m_bLoopPreIdleSequence; // 0x4fb	
	bool m_bLoopActionSequence; // 0x4fc	
	bool m_bLoopPostIdleSequence; // 0x4fd	
	bool m_bSynchPostIdles; // 0x4fe	
	bool m_bIgnoreLookAt; // 0x4ff	
	bool m_bIgnoreGravity; // 0x500	
	bool m_bDisableNPCCollisions; // 0x501	
	bool m_bKeepAnimgraphLockedPost; // 0x502	
	bool m_bDontAddModifiers; // 0x503	
	float m_flRadius; // 0x504	
	float m_flRepeat; // 0x508	
	float m_flPlayAnimFadeInTime; // 0x50c	
	float m_flMoveInterpTime; // 0x510	
	float m_flAngRate; // 0x514	
	int32_t m_nNotReadySequenceCount; // 0x518	
	GameTime_t m_startTime; // 0x51c	
	bool m_bWaitForBeginSequence; // 0x520	
private:
	[[maybe_unused]] uint8_t __pad0521[0x3]; // 0x521
public:
	int32_t m_saved_effects; // 0x524	
	int32_t m_savedFlags; // 0x528	
	int32_t m_savedCollisionGroup; // 0x52c	
	bool m_bInterruptable; // 0x530	
	bool m_sequenceStarted; // 0x531	
	bool m_bPositionRelativeToOtherEntity; // 0x532	
private:
	[[maybe_unused]] uint8_t __pad0533[0x1]; // 0x533
public:
	CHandle< CBaseEntity > m_hTargetEnt; // 0x534	
	CHandle< CScriptedSequence > m_hNextCine; // 0x538	
	bool m_bThinking; // 0x53c	
	bool m_bInitiatedSelfDelete; // 0x53d	
	bool m_bIsTeleportingDueToMoveTo; // 0x53e	
	bool m_bAllowCustomInterruptConditions; // 0x53f	
	CHandle< CBaseAnimGraph > m_hForcedTarget; // 0x540	
	bool m_bDontCancelOtherSequences; // 0x544	
	bool m_bForceSynch; // 0x545	
	bool m_bPreventUpdateYawOnFinish; // 0x546	
	bool m_bEnsureOnNavmeshOnFinish; // 0x547	
	ScriptedOnDeath_t m_onDeathBehavior; // 0x548	
	ScriptedConflictResponse_t m_ConflictResponse; // 0x54c	
	CEntityIOOutput m_OnBeginSequence; // 0x550	
	CEntityIOOutput m_OnActionStartOrLoop; // 0x578	
	CEntityIOOutput m_OnEndSequence; // 0x5a0	
	CEntityIOOutput m_OnPostIdleEndSequence; // 0x5c8	
	CEntityIOOutput m_OnCancelSequence; // 0x5f0	
	CEntityIOOutput m_OnCancelFailedSequence; // 0x618	
	CEntityIOOutput m_OnScriptEvent[8]; // 0x640	
	CTransform m_matOtherToMain; // 0x780	
	CHandle< CBaseEntity > m_hInteractionMainEntity; // 0x7a0	
	int32_t m_iPlayerDeathBehavior; // 0x7a4	
	
	// Datamap fields:
	// void CScriptedSequenceScriptThink; // 0x0
	// void InputMoveToPosition; // 0x0
	// void InputBeginSequence; // 0x0
	// void InputCancelSequence; // 0x0
	// CUtlSymbolLarge InputSetActionSequence; // 0x0
	// void InputScriptPlayerDeath; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "EHANDLE m_hShackleTarget"
class CDOTA_Ability_AghsFort_ShadowShaman_Shackles : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hShackleTarget; // 0x578	
	ParticleIndex_t nShackleFXIndex; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "DotaTreeId_t m_nAcornTree"
class CDOTA_Ability_PineCone_AcornShot : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x28]; // 0x578
public:
	// MNetworkEnable
	uint32_t m_nAcornTree; // 0x5a0	
	float projectile_speed; // 0x5a4	
	float bounce_delay; // 0x5a8	
	int32_t bounce_range; // 0x5ac	
	int32_t bounce_count; // 0x5b0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Spectre_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Legion_Commander_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lone_Druid_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Evasion_25 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Seasonal_TI9_Balloon : public CDOTA_BaseNPC_Additive
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mutation_CritChance_Team_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Arcane_Blink : public CDOTA_Buff_Item
{
public:
	float blink_damage_cooldown; // 0x1338	
	int32_t bonus_intellect; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Fortitude_Ring : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
	float hp_regen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_Item_RiverPainter2 : public CDOTA_Item_RiverPainter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Ancient_Janggo_Aura : public CDOTA_Buff
{
public:
	int32_t aura_movement_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_GemOfTrueSight : public CDOTA_Buff_Item
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_Fire_Wreath_Magic_Immunity : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Hoodwink_AcornShotDamage : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Snapfire_SpitCreep : public CDOTABaseAbility
{
public:
	int32_t m_nDamagePerProjectile; // 0x578	
	CHandle< CBaseEntity > m_hGobbledUnit; // 0x57c	
	int32_t m_nProjectileID; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Snapfire_FiresnapCookie_ShortHop : public CDOTA_Buff
{
public:
	float jump_duration; // 0x1338	
	int32_t jump_height; // 0x133c	
	int32_t jump_horizontal_distance; // 0x1340	
	float pre_land_anim_time; // 0x1344	
	float landing_gesture_duration; // 0x1348	
	int32_t impact_radius; // 0x134c	
	int32_t impact_damage; // 0x1350	
	float impact_stun_duration; // 0x1354	
	float m_flStartZ; // 0x1358	
	float m_flCurTime; // 0x135c	
	float m_flJumpDuration; // 0x1360	
	float m_flJumpHeight; // 0x1364	
	Vector m_vTargetHorizontalDirection; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mars_ArenaOfBlood_Spear : public CDOTA_Modifier_Knockback
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Magnataur_Empower : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_LoneDruid_Entangling_Claws : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Batrider_FlamingLasso : public CDOTA_Buff
{
public:
	float tick_rate; // 0x1338	
	int32_t drag_distance; // 0x133c	
	int32_t break_distance; // 0x1340	
	ParticleIndex_t m_nFXIndex; // 0x1344	
	Vector vPreviousLocation; // 0x1348	
	CHandle< CDOTA_BaseNPC > m_hAnchor; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Enchantress_Untouchable_Slow : public CDOTA_Buff
{
public:
	int32_t slow_attack_speed; // 0x1338	
	ParticleIndex_t m_nStatusFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Enigma_Malefice : public CDOTABaseAbility
{
public:
	float tick_rate; // 0x578	
	int32_t stun_instances; // 0x57c	
	float m_flDuration; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Zuus_Static_Field_Slow : public CDOTA_Buff
{
public:
	int32_t move_slow; // 0x1338	
	int32_t aspd_slow; // 0x133c	
	int32_t cast_slow; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DrowRanger_TrueshotAura : public CDOTA_Buff
{
public:
	float trueshot_ranged_attack_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bane_FiendsGrip : public CDOTA_Buff
{
public:
	int32_t fiend_grip_mana_drain; // 0x1338	
	float fiend_grip_tick_interval; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rune_Regen : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9c8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTriggerHurt : public CBaseTrigger
{
public:
	float m_flOriginalDamage; // 0x928	
	float m_flDamage; // 0x92c	
	float m_flDamageCap; // 0x930	
	GameTime_t m_flLastDmgTime; // 0x934	
	float m_flForgivenessDelay; // 0x938	
	int32_t m_bitsDamageInflict; // 0x93c	
	int32_t m_damageModel; // 0x940	
	bool m_bNoDmgForce; // 0x944	
private:
	[[maybe_unused]] uint8_t __pad0945[0x3]; // 0x945
public:
	Vector m_vDamageForce; // 0x948	
	bool m_thinkAlways; // 0x954	
private:
	[[maybe_unused]] uint8_t __pad0955[0x3]; // 0x955
public:
	float m_hurtThinkPeriod; // 0x958	
private:
	[[maybe_unused]] uint8_t __pad095c[0x4]; // 0x95c
public:
	CEntityIOOutput m_OnHurt; // 0x960	
	CEntityIOOutput m_OnHurtPlayer; // 0x988	
	CUtlVector< CHandle< CBaseEntity > > m_hurtEntities; // 0x9b0	
	
	// Datamap fields:
	// void CTriggerHurtRadiationThink; // 0x0
	// void CTriggerHurtHurtThink; // 0x0
	// void CTriggerHurtNavThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9c0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CHandle< CBaseEntity> m_hTargetEntity"
// MNetworkVarNames "bool m_bState"
// MNetworkVarNames "bool m_bAlwaysUpdate"
// MNetworkVarNames "float32 m_flLightFOV"
// MNetworkVarNames "bool m_bEnableShadows"
// MNetworkVarNames "bool m_bSimpleProjection"
// MNetworkVarNames "bool m_bLightOnlyTarget"
// MNetworkVarNames "bool m_bLightWorld"
// MNetworkVarNames "bool m_bCameraSpace"
// MNetworkVarNames "float32 m_flBrightnessScale"
// MNetworkVarNames "Color m_LightColor"
// MNetworkVarNames "float32 m_flIntensity"
// MNetworkVarNames "float32 m_flLinearAttenuation"
// MNetworkVarNames "float32 m_flQuadraticAttenuation"
// MNetworkVarNames "bool m_bVolumetric"
// MNetworkVarNames "float32 m_flNoiseStrength"
// MNetworkVarNames "float32 m_flFlashlightTime"
// MNetworkVarNames "uint32 m_nNumPlanes"
// MNetworkVarNames "float32 m_flPlaneOffset"
// MNetworkVarNames "float32 m_flVolumetricIntensity"
// MNetworkVarNames "float32 m_flColorTransitionTime"
// MNetworkVarNames "float32 m_flAmbient"
// MNetworkVarNames "char m_SpotlightTextureName"
// MNetworkVarNames "int32 m_nSpotlightTextureFrame"
// MNetworkVarNames "uint32 m_nShadowQuality"
// MNetworkVarNames "float32 m_flNearZ"
// MNetworkVarNames "float32 m_flFarZ"
// MNetworkVarNames "float32 m_flProjectionSize"
// MNetworkVarNames "float32 m_flRotation"
// MNetworkVarNames "bool m_bFlipHorizontal"
class CEnvProjectedTexture : public CModelPointEntity
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTargetEntity; // 0x758	
	// MNetworkEnable
	bool m_bState; // 0x75c	
	// MNetworkEnable
	bool m_bAlwaysUpdate; // 0x75d	
private:
	[[maybe_unused]] uint8_t __pad075e[0x2]; // 0x75e
public:
	// MNetworkEnable
	float m_flLightFOV; // 0x760	
	// MNetworkEnable
	bool m_bEnableShadows; // 0x764	
	// MNetworkEnable
	bool m_bSimpleProjection; // 0x765	
	// MNetworkEnable
	bool m_bLightOnlyTarget; // 0x766	
	// MNetworkEnable
	bool m_bLightWorld; // 0x767	
	// MNetworkEnable
	bool m_bCameraSpace; // 0x768	
private:
	[[maybe_unused]] uint8_t __pad0769[0x3]; // 0x769
public:
	// MNetworkEnable
	float m_flBrightnessScale; // 0x76c	
	// MNetworkEnable
	Color m_LightColor; // 0x770	
	// MNetworkEnable
	float m_flIntensity; // 0x774	
	// MNetworkEnable
	float m_flLinearAttenuation; // 0x778	
	// MNetworkEnable
	float m_flQuadraticAttenuation; // 0x77c	
	// MNetworkEnable
	bool m_bVolumetric; // 0x780	
private:
	[[maybe_unused]] uint8_t __pad0781[0x3]; // 0x781
public:
	// MNetworkEnable
	float m_flNoiseStrength; // 0x784	
	// MNetworkEnable
	float m_flFlashlightTime; // 0x788	
	// MNetworkEnable
	uint32_t m_nNumPlanes; // 0x78c	
	// MNetworkEnable
	float m_flPlaneOffset; // 0x790	
	// MNetworkEnable
	float m_flVolumetricIntensity; // 0x794	
	// MNetworkEnable
	float m_flColorTransitionTime; // 0x798	
	// MNetworkEnable
	float m_flAmbient; // 0x79c	
	// MNetworkEnable
	char m_SpotlightTextureName[512]; // 0x7a0	
	// MNetworkEnable
	int32_t m_nSpotlightTextureFrame; // 0x9a0	
	// MNetworkEnable
	uint32_t m_nShadowQuality; // 0x9a4	
	// MNetworkEnable
	// MNetworkBitCount "16"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "500,000000"
	// MNetworkEncodeFlags "1"
	float m_flNearZ; // 0x9a8	
	// MNetworkEnable
	// MNetworkBitCount "18"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "1500,000000"
	// MNetworkEncodeFlags "1"
	float m_flFarZ; // 0x9ac	
	// MNetworkEnable
	float m_flProjectionSize; // 0x9b0	
	// MNetworkEnable
	float m_flRotation; // 0x9b4	
	// MNetworkEnable
	bool m_bFlipHorizontal; // 0x9b8	
	
	// Datamap fields:
	// void InputTurnOn; // 0x0
	// void InputTurnOff; // 0x0
	// void InputAlwaysUpdateOn; // 0x0
	// void InputAlwaysUpdateOff; // 0x0
	// float InputSetFOV; // 0x0
	// CHandle< CBaseEntity > InputSetTarget; // 0x0
	// bool InputSetCameraSpace; // 0x0
	// bool InputSetLightOnlyTarget; // 0x0
	// bool InputSetLightWorld; // 0x0
	// bool InputSetEnableShadows; // 0x0
	// Color InputSetLightColor; // 0x0
	// float InputSetLightIntensity; // 0x0
	// float InputSetAmbient; // 0x0
	// CUtlSymbolLarge InputSetSpotlightTexture; // 0x0
	// void CEnvProjectedTextureInitialThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Windranger_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Amplify_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_251 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_100 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18f0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_AghsFort_Creature_DungeonBat : public CDOTA_BaseNPC_Creature
{
public:
	ParticleIndex_t m_nFXAmbient; // 0x18e8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ForestTrollHighPriest_HealAmp : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9f0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDynamicPropAlias_prop_dynamic_override : public CDynamicProp
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seasonal_TI11_RockPaperScissors_Playing : public CDOTA_Buff
{
public:
	float input_duration; // 0x1338	
	float think_interval; // 0x133c	
	bool m_bChoseOption; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Shadow_Demon_Shadow_Poison : public CDOTA_Buff
{
public:
	float stack_damage; // 0x1338	
	float bonus_stack_damage; // 0x133c	
	int32_t max_multiply_stacks; // 0x1340	
	int32_t release_at_max_stacks; // 0x1344	
	ParticleIndex_t m_nFXStackIndex; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Fluffy_Hat : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Orb_of_Pestilence : public CDOTA_Buff_Item
{
public:
	int32_t poison_movement_speed_melee; // 0x1338	
	int32_t poison_movement_speed_range; // 0x133c	
	float poison_duration; // 0x1340	
	float poison_damage; // 0x1344	
	int32_t armor; // 0x1348	
	float hp_regen; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Orb_of_Pestilence : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Third_Eye : public CDOTA_Buff
{
public:
	int32_t truesight_radius; // 0x1338	
	int32_t bonus_vision; // 0x133c	
	int32_t bonus_all_stats; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_BootsOfTravel : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Underlord_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Shredder_Chakram_Disarm : public CDOTA_Modifier_Disarmed
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Magnus_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Visage_GravekeepersCloak : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1338	
	int32_t max_layers; // 0x133c	
	float minimum_damage; // 0x1340	
	int32_t recovery_time; // 0x1344	
	int32_t radius; // 0x1348	
	int32_t max_damage_reduction; // 0x134c	
	ParticleIndex_t m_nFXIndex[4]; // 0x1350	
	ParticleIndex_t m_nFXIndexB; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1364[0x4]; // 0x1364
public:
	CUtlVector< CDOTA_Modifier_Visage_GravekeepersCloak_Stack* > vStacks; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Broodmother_Spider_HP : public CDOTA_Buff
{
public:
	int32_t hp_bonus; // 0x1338	
	int32_t damage_bonus; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rattletrap_RocketFlare : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1338[0x8]; // 0x1338
public:
	int32_t projectile_vision_radius; // 0x1340	
	float projectile_vision_duration; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lich_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1790
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Teleporting : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1338[0x20]; // 0x1338
public:
	float m_fStartTime; // 0x1358	
	char m_iszPortalLoopAppear[260]; // 0x135c	
	char m_iszPortalLoopDisappear[260]; // 0x1460	
	char m_iszHeroLoopAppear[260]; // 0x1564	
	char m_iszHeroLoopDisappear[260]; // 0x1668	
	bool m_bSkipTeleportAnim; // 0x176c	
	bool m_bPlayingCoopAnim; // 0x176d	
	bool m_bIsPlayingTauntGesture; // 0x176e	
private:
	[[maybe_unused]] uint8_t __pad176f[0x1]; // 0x176f
public:
	float m_fChannelTime; // 0x1770	
	Vector m_vStart; // 0x1774	
	Vector m_vEnd; // 0x1780	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CSceneListManager : public CLogicalEntity
{
public:
	CUtlVector< CHandle< CSceneListManager > > m_hListManagers; // 0x4a8	
	CUtlSymbolLarge m_iszScenes[16]; // 0x4c0	
	CHandle< CBaseEntity > m_hScenes[16]; // 0x540	
	
	// Datamap fields:
	// void InputShutdown; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x568
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CSplineConstraint : public CPhysConstraint
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Juggernaut_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ember_Spirit_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Elder_Titan_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Respawn_Reduction_15 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cooldown_Reduction_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_125 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9f0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDynamicPropAlias_dynamic_prop : public CDynamicProp
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Potion_SpendCharge : public CDOTA_Buff_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_VindicatorsAxe : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Urn_Damage : public CDOTA_Buff
{
public:
	int32_t soul_damage_amount; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Marci_Unleash_Pulse_Silence : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hoodwink_AcornShot_TreeThinker : public CDOTA_Buff
{
public:
	CHandle< CDOTA_TempTree > m_hTree; // 0x1338	
	int32_t fow_viewer; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Grimstroke_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Oracle_RainOfDestiny : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tusk_Tag_Team : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_LoneDruid_SpiritBear_AttackCheck : public CDOTA_Buff
{
public:
	bool m_bCanBeResummoned; // 0x1338	
	bool m_bCanAttack; // 0x1339	
private:
	[[maybe_unused]] uint8_t __pad133a[0x2]; // 0x133a
public:
	ParticleIndex_t m_nFxIndex; // 0x133c	
	ParticleIndex_t m_nStatusFxIndex; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Brewmaster_PrimalSplitDuration : public CDOTA_Buff
{
public:
	int32_t bonus_brewling_hp; // 0x1338	
	int32_t bonus_damage; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Enchantress_NaturesAttendants_Shard : public CDOTA_Buff
{
public:
	float heal_interval; // 0x1338	
	float heal; // 0x133c	
	int32_t radius; // 0x1340	
	int32_t shard_permanent_wisp_count; // 0x1344	
	bool m_bActive; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad1349[0x3]; // 0x1349
public:
	ParticleIndex_t m_nWispFXIndex; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lion_ManaDrain : public CDOTA_Buff
{
public:
	int32_t mana_per_second; // 0x1338	
	int32_t break_distance; // 0x133c	
	float tick_interval; // 0x1340	
	int32_t movespeed; // 0x1344	
	int32_t damage_pct; // 0x1348	
	int32_t ally_pct; // 0x134c	
	GameTime_t m_fAppliedTime; // 0x1350	
	int32_t m_nTotalManaDrained; // 0x1354	
	int32_t m_nSelfBuffSerialNumber; // 0x1358	
	int32_t m_nTargetDebuffSerialNumber; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Earthshaker_EnchantTotem : public CDOTA_Buff
{
public:
	int32_t bonus_attack_range; // 0x1338	
	int32_t totem_damage_percentage; // 0x133c	
	int32_t scepter_cleave_pct; // 0x1340	
	float scepter_cleave_starting_width; // 0x1344	
	float scepter_cleave_ending_width; // 0x1348	
	float scepter_cleave_distance; // 0x134c	
private:
	[[maybe_unused]] uint8_t __pad1350[0x8]; // 0x1350
public:
	bool bActive; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_UnstableWand_Critter : public CDOTA_Modifier_Hexed
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tenderizer_Weaken : public CDOTA_Modifier_Stacking_Base
{
public:
	int32_t weaken_per_hit; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Morphling_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tinker_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x68
// 
// MNetworkVarNames "ModelConfigHandle_t m_Handle"
// MNetworkVarNames "string_t m_Name"
// MNetworkVarNames "CHandle< CBaseModelEntity > m_AssociatedEntities"
// MNetworkVarNames "string_t m_AssociatedEntityNames"
struct ActiveModelConfig_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x28]; // 0x0
public:
	// MNetworkEnable
	ModelConfigHandle_t m_Handle; // 0x28	
private:
	[[maybe_unused]] uint8_t __pad002c[0x4]; // 0x2c
public:
	// MNetworkEnable
	CUtlSymbolLarge m_Name; // 0x30	
	// MNetworkEnable
	CNetworkUtlVectorBase< CHandle< CBaseModelEntity > > m_AssociatedEntities; // 0x38	
	// MNetworkEnable
	CNetworkUtlVectorBase< CUtlSymbolLarge > m_AssociatedEntityNames; // 0x50	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Nevermore : public CDOTA_BaseNPC_Hero
{
public:
	ParticleIndex_t m_nFXDeath; // 0x1d98	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ARDM_NewHero : public CDOTA_Modifier_Tutorial_Sleep
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x860
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFuncTrackChange : public CFuncPlatRot
{
public:
	CPathTrack* m_trackTop; // 0x820	
	CPathTrack* m_trackBottom; // 0x828	
	CFuncTrackTrain* m_train; // 0x830	
	CUtlSymbolLarge m_trackTopName; // 0x838	
	CUtlSymbolLarge m_trackBottomName; // 0x840	
	CUtlSymbolLarge m_trainName; // 0x848	
	TRAIN_CODE m_code; // 0x850	
	int32_t m_targetState; // 0x854	
	int32_t m_use; // 0x858	
	
	// Datamap fields:
	// void CFuncTrackChangeFind; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_Bonus_Pudge_Meat_Hook : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Arcanist_Potion : public CDOTA_Buff
{
public:
	int32_t m_nCooldownReductionPct; // 0x1338	
	int32_t m_nManaCostReductionPct; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Gungir : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Penta_Edged_Sword_Maim : public CDOTA_Buff
{
public:
	int32_t maim_slow_movement; // 0x1338	
	int32_t maim_slow_attack; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Mind_Breaker : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nullifier_Mute : public CDOTA_Buff
{
public:
	float slow_interval_duration; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Undying_Tombstone_Zombie_Deathstrike : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	float health_threshold_pct; // 0x133c	
	float duration; // 0x1340	
	CHandle< CDOTABaseAbility > m_hTombstoneSourceAbility; // 0x1344	
	CHandle< CBaseEntity > m_hChaseUnit; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Meepo_Flung : public CDOTA_Buff
{
public:
	int32_t m_nHandle; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Night_Stalker : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Omniknight_Pacify : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Roshan_Moving : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1338	
	CHandle< CBaseEntity > m_hTarget; // 0x133c	
	bool m_bFlipped; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Zuus_ArcLightning : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t jump_count; // 0x133c	
	int32_t arc_damage; // 0x1340	
	float jump_delay; // 0x1344	
	int32_t damage_health_pct; // 0x1348	
	int32_t total_damage_pct; // 0x134c	
	int32_t m_iCurJumpCount; // 0x1350	
	bool trigger_spell_absorb; // 0x1354	
private:
	[[maybe_unused]] uint8_t __pad1355[0x3]; // 0x1355
public:
	Vector m_vCurTargetLoc; // 0x1358	
private:
	[[maybe_unused]] uint8_t __pad1364[0x4]; // 0x1364
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pudge_FleshHeap : public CDOTA_Buff
{
public:
	float magic_resistance; // 0x1338	
	float damage_block; // 0x133c	
	float flesh_heap_strength_buff_amount; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TrueSight : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Winter_Wyvern_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Alchemist_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_1000 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_GraniteGolem_HPAura_Bonus : public CDOTA_Buff
{
public:
	float bonus_hp; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x760
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CMarkupVolume : public CBaseModelEntity
{
public:
	bool m_bEnabled; // 0x758	
	
	// Datamap fields:
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Angels_Demise_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
	int32_t spell_crit_multiplier; // 0x133c	
	int32_t spell_crit_flat; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Terror_Mask_Fear_Aura : public CDOTA_Buff
{
public:
	int32_t effect_radius; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Dynamite_Jacket : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1338	
	int32_t radius; // 0x133c	
	int32_t damage; // 0x1340	
	float blind_duration; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Wizard_Glass : public CDOTA_Buff_Item
{
public:
	int32_t debuff_amp; // 0x1338	
	int32_t cooldown_reduction; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Force_Boots : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1338	
	float m_flEndTime; // 0x1344	
	float m_flCurTime; // 0x1348	
	int32_t push_length; // 0x134c	
	float push_duration; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_GlimmerCape_Building_Limit : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_RebukeCooldown : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lycan_SummonWolves_Bash : public CDOTA_Buff
{
public:
	int32_t bash_chance; // 0x1338	
	float bash_duration; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DoomBringer_InfernalBlade : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Jakiro_LiquidIce : public CDOTA_Buff
{
public:
	float duration; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1340	
	int32_t radius; // 0x1358	
	ParticleIndex_t m_nFXIndex; // 0x135c	
	bool m_bForceProc; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Dazzle_Bad_Juju : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FacelessVoid_TimeDilation_Slowmo : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Warlock_FatalBonds : public CDOTA_Buff
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_FatalBondsEntities; // 0x1338	
	int32_t damage_share_percentage; // 0x1350	
	float imp_duration; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Razor_PlasmaField_Slow : public CDOTA_Buff
{
public:
	int32_t slow_amount; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Juggernaut_BladeDance : public CDOTA_Buff
{
public:
	int32_t blade_dance_crit_mult; // 0x1338	
	int32_t blade_dance_crit_chance; // 0x133c	
	int32_t blade_dance_lifesteal; // 0x1340	
	bool m_bHasCrit; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_BackdoorProtection : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x14
// Has Trivial Destructor
class VelocitySampler
{
public:
	Vector m_prevSample; // 0x0	
	GameTime_t m_fPrevSampleTime; // 0xc	
	float m_fIdealSampleRate; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Aghsfort_Minor_Stats_Upgrade : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_PartyHat : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Vengeful_Spirit_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Nyx : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Strength_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Medusa : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Axe : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MudGolem_CloakAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Gossamer_Cape : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Grandmasters_Glaive_Bonus_Str : public CDOTA_Buff
{
public:
	int32_t str_stance; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Woodland_Striders : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Philosophers_Stone : public CDOTA_Buff_Item
{
public:
	int32_t bonus_mana; // 0x1338	
	int32_t bonus_gpm; // 0x133c	
	int32_t bonus_damage; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Blood_Grenade_Debuff : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1338	
	float damage_over_time; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Pipe_Barrier : public CDOTA_Buff
{
public:
	int32_t barrier_amount; // 0x1338	
	int32_t barrier_block; // 0x133c	
	int32_t barrier_block_creep; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AbyssalUnderlord_Firestorm : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rubick_FadeBolt_BuffCounter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DragonKnight_BreatheFire_Reduction : public CDOTA_Buff
{
public:
	int32_t reduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DeathProphet_SpiritSiphon : public CDOTA_Buff
{
public:
	float flSmoothness; // 0x1338	
	float damage; // 0x133c	
	float damage_pct; // 0x1340	
	int32_t drain_range; // 0x1344	
	float haunt_duration; // 0x1348	
	int32_t siphon_buffer; // 0x134c	
	int32_t movement_steal; // 0x1350	
	CHandle< CBaseEntity > m_hTarget; // 0x1354	
	ParticleIndex_t m_iLinkIndex; // 0x1358	
	int32_t m_nSelfBuffSerialNumber; // 0x135c	
	int32_t m_nTargetDebuffSerialNumber; // 0x1360	
	bool m_bAppliedFear; // 0x1364	
private:
	[[maybe_unused]] uint8_t __pad1365[0x3]; // 0x1365
public:
	float shard_fear_duration; // 0x1368	
	float shard_consecutive_siphon_duration; // 0x136c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13e8
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_Dive : public CDOTA_Buff
{
public:
	float m_flTotalTimeInAir; // 0x1338	
	float m_flInitialVelocity; // 0x133c	
	Vector m_vStartPosition; // 0x1340	
	Vector m_vTargetHorizontalDirection; // 0x134c	
	Vector m_vTargetPosition; // 0x1358	
	float m_flCurrentTimeHoriz; // 0x1364	
	float m_flCurrentTimeVert; // 0x1368	
	bool m_bInterrupted; // 0x136c	
private:
	[[maybe_unused]] uint8_t __pad136d[0x3]; // 0x136d
public:
	float m_flHorizDelayTime; // 0x1370	
	float m_flVertDelayTime; // 0x1374	
	float m_flLeapSequenceDuration; // 0x1378	
	float m_flClawDamageTime; // 0x137c	
	float m_flPlaybackRate; // 0x1380	
	CHandle< CBaseEntity > m_hTarget; // 0x1384	
	bool m_bPlayedSwipeSound; // 0x1388	
private:
	[[maybe_unused]] uint8_t __pad1389[0x3]; // 0x1389
public:
	int32_t pounce_distance; // 0x138c	
	float pounce_speed; // 0x1390	
	float pounce_acceleration; // 0x1394	
	int32_t pounce_radius; // 0x1398	
	int32_t pounce_damage; // 0x139c	
	int32_t stun_radius; // 0x13a0	
	float stun_duration; // 0x13a4	
	float leash_duration; // 0x13a8	
	float initial_delay; // 0x13ac	
	float landing_delay; // 0x13b0	
	float vertical_adjust; // 0x13b4	
	float vertical_adjust_max_distance; // 0x13b8	
	float vertical_adjust_min_distance; // 0x13bc	
	int32_t claw_damage; // 0x13c0	
	int32_t claw_damage_radius; // 0x13c4	
	float claw_damage_delay; // 0x13c8	
	float claw_damage_duration; // 0x13cc	
	CUtlVector< CHandle< CBaseEntity > > m_vHitEntities; // 0x13d0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SandKing_Epicenter_Slow : public CDOTA_Buff
{
public:
	int32_t epicenter_slow; // 0x1338	
	int32_t epicenter_slow_as; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Antimage_DampenMagic : public CDOTA_Buff
{
public:
	int32_t shard_spell_damage_reduction_pct; // 0x1338	
	int32_t shard_bonus_spell_damage_reduction_pct; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Activity_Modifier : public CDOTA_Buff
{
public:
	CUtlSymbolLarge m_activityModifier; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dominated : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DeathProphet_Exorcism : public CDOTABaseAbility
{
public:
	CUtlVector< sSpiritInfo* > m_SpiritInfos; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x550
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLogicCompare : public CLogicalEntity
{
public:
	float m_flInValue; // 0x4a8	
	float m_flCompareValue; // 0x4ac	
	CEntityOutputTemplate< float32 > m_OnLessThan; // 0x4b0	
	CEntityOutputTemplate< float32 > m_OnEqualTo; // 0x4d8	
	CEntityOutputTemplate< float32 > m_OnNotEqualTo; // 0x500	
	CEntityOutputTemplate< float32 > m_OnGreaterThan; // 0x528	
	
	// Datamap fields:
	// float InputSetValue; // 0x0
	// float InputSetValueCompare; // 0x0
	// float InputSetCompareValue; // 0x0
	// void InputCompare; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xc8
// Has VTable
class CDOTABehaviorAttackPhase
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x60]; // 0x0
public:
	CHandle< CBaseEntity > m_hTarget; // 0x60	
private:
	[[maybe_unused]] uint8_t __pad0064[0x4]; // 0x64
public:
	CountdownTimer m_attackTimer; // 0x68	
	bool m_bAttackComplete; // 0x80	
private:
	[[maybe_unused]] uint8_t __pad0081[0x27]; // 0x81
public:
	bool m_bDeny; // 0xa8	
	bool m_bCastAttack; // 0xa9	
	bool m_bTargetTeleported; // 0xaa	
private:
	[[maybe_unused]] uint8_t __pad00ab[0x1]; // 0xab
public:
	float m_flBackswingDuration; // 0xac	
	float m_flAnimSpeed; // 0xb0	
	float m_flAttackPortionPriorToTimer; // 0xb4	
	HSequence m_iSequence; // 0xb8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Doom_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Storm_Spirit_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_250 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1798
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Warlock_Golem : public CDOTA_BaseNPC_Creep
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_ShadowShaman : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x528
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_NPCSpawnerBadTop : public CDOTA_NPCSpawner
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_TrapRoom_MeatHook : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x10]; // 0x578
public:
	Vector m_vProjectileLocation; // 0x588	
	float hook_speed; // 0x594	
	int32_t hook_width; // 0x598	
	int32_t hook_distance; // 0x59c	
	bool m_bRetracting; // 0x5a0	
	bool m_bDiedInHook; // 0x5a1	
private:
	[[maybe_unused]] uint8_t __pad05a2[0x2]; // 0x5a2
public:
	CHandle< CBaseEntity > m_hVictim; // 0x5a4	
	Vector m_vTargetPosition; // 0x5a8	
	Vector m_vCasterPosition; // 0x5b4	
	bool m_bChainDetached; // 0x5c0	
private:
	[[maybe_unused]] uint8_t __pad05c1[0x3]; // 0x5c1
public:
	ParticleIndex_t m_iChainParticle; // 0x5c4	
	int32_t m_iHookParticle; // 0x5c8	
	int32_t m_nManaCost; // 0x5cc	
	CHandle< CBaseEntity > m_hSourceCaster; // 0x5d0	
	int32_t m_nNextConsecutiveHitCount; // 0x5d4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Gladiator_Helm : public CDOTA_Buff_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Panic_Button : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1508
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Lotus_Orb_Active : public CDOTA_Buff
{
public:
	CModifierParams m_LastParams; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_LoneDruid_SpiritBear_Fetch_Self : public CDOTA_Buff
{
public:
	int32_t self_slow; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
	CHandle< CBaseEntity > m_hTarget; // 0x1340	
	bool m_bFetchingRune; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1345[0x3]; // 0x1345
public:
	Vector m_vPreviousLoc; // 0x1348	
	int32_t drag_distance; // 0x1354	
	int32_t break_distance; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Spectre_Dispersion : public CDOTA_Buff
{
public:
	int32_t damage_reflection_pct; // 0x1338	
	int32_t min_radius; // 0x133c	
	int32_t max_radius; // 0x1340	
	int32_t activation_bonus_pct; // 0x1344	
	GameTime_t m_flLastDispersionPulseEffectTime; // 0x1348	
	float m_fDamageCounter; // 0x134c	
	float m_fLastTime; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Omniknight_Degen_Aura_Effect : public CDOTA_Buff
{
public:
	int32_t speed_bonus; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Leshrac_Diabolic_Edict : public CDOTA_Buff
{
public:
	int32_t num_explosions; // 0x1338	
	int32_t radius; // 0x133c	
	float m_fExplosions; // 0x1340	
	float tower_bonus; // 0x1344	
	bool m_bTalentActive; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Unique_Beastmaster_5_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lion_ManaDrain_Immunity : public CDOTA_Modifier_DebuffImmune
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Sven_Warcry_Passive : public CDOTA_Buff
{
public:
	int32_t shard_passive_armor; // 0x1338	
	int32_t shard_passive_movespeed; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_OgreBruiser_OgreSmash : public CDOTABaseAbility
{
public:
	int32_t radius; // 0x578	
	float hero_stun_duration; // 0x57c	
	int32_t damage; // 0x580	
	float damage_pct; // 0x584	
	GameTime_t flCooldown; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x500
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLogicRelay : public CLogicalEntity
{
public:
	CEntityIOOutput m_OnTrigger; // 0x4a8	
	CEntityIOOutput m_OnSpawn; // 0x4d0	
	bool m_bDisabled; // 0x4f8	
	bool m_bWaitForRefire; // 0x4f9	
	bool m_bTriggerOnce; // 0x4fa	
	bool m_bFastRetrigger; // 0x4fb	
	bool m_bPassthoughCaller; // 0x4fc	
	
	// Datamap fields:
	// void InputEnable; // 0x0
	// void InputEnableRefire; // 0x0
	// void InputDisable; // 0x0
	// void InputToggle; // 0x0
	// void InputTrigger; // 0x0
	// void InputCancelPending; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x88
// Has VTable
class CDOTABehaviorAbilityChannel
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x60]; // 0x0
public:
	CountdownTimer m_timer; // 0x60	
	float m_flAbilityChannelDuration; // 0x78	
	CHandle< CBaseEntity > m_hAbility; // 0x7c	
	CHandle< CBaseEntity > m_hTarget; // 0x80	
	bool m_bCompletedChanneling; // 0x84	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1488
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_TeamCommander
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x10]; // 0x0
public:
	GameTick_t m_nLastUnitsCollectTick; // 0x10	
private:
	[[maybe_unused]] uint8_t __pad0014[0x2b4]; // 0x14
public:
	CountdownTimer m_LaneFrontUpdate; // 0x2c8	
	uint64_t m_ulBotScriptUGC; // 0x2e0	
	uint32_t m_rtBotScriptUpdated; // 0x2e8	
private:
	[[maybe_unused]] uint8_t __pad02ec[0x4]; // 0x2ec
public:
	CountdownTimer m_AvoidanceGridTimer; // 0x2f0	
	CountdownTimer m_EnemyVisibilityGridTimer; // 0x308	
	CountdownTimer m_LaneStatusTimer; // 0x320	
	CountdownTimer m_ChatThrottleTimer; // 0x338	
	DOTATeam_t m_eTeam; // 0x350	
private:
	[[maybe_unused]] uint8_t __pad0354[0x6c]; // 0x354
public:
	bool m_bLateGame; // 0x3c0	
private:
	[[maybe_unused]] uint8_t __pad03c1[0x3]; // 0x3c1
public:
	float m_LaneLengths[4]; // 0x3c4	
	float m_LaneFrontCreepsAmounts[2][4]; // 0x3d4	
	float m_LaneFrontTowersAmounts[2][4]; // 0x3f4	
private:
	[[maybe_unused]] uint8_t __pad0414[0x4]; // 0x414
public:
	CountdownTimer m_LaneReassignTimer; // 0x418	
	CUtlVector< int32 > m_AvoidanceGrid; // 0x430	
	GameTime_t m_fNextPotentialLocationTick[24]; // 0x448	
	int32_t m_iPotentialLocationBuffer[24]; // 0x4a8	
	CUtlVector< uint8 > m_PotentialLocationGrid[2][24]; // 0x508	
	CHandle< CBaseEntity > m_hRoamingUnit; // 0x988	
	DOTA_LANE m_RoamTargetLane; // 0x98c	
private:
	[[maybe_unused]] uint8_t __pad0990[0x30]; // 0x990
public:
	CHandle< CBaseEntity > m_Buildings[4][8]; // 0x9c0	
	float m_fBuildingFortTimings[4][8]; // 0xa40	
	CHandle< CBaseEntity > m_LaneNodes[4][9]; // 0xac0	
	float m_fPushLaneDesire[4]; // 0xb50	
	float m_fPushLaneRawDesire[4]; // 0xb60	
	float m_fPushLaneConvenienceDesire[4]; // 0xb70	
	float m_fDefendLaneDesire[4]; // 0xb80	
	float m_fDefendLaneUrgencyDesire[4]; // 0xb90	
	float m_fDefendLanePowerDesire[4]; // 0xba0	
	float m_fFarmLaneDesire[4]; // 0xbb0	
	int32_t m_iLastSeenRoshanHealth; // 0xbc0	
	float m_fRoshanDesire; // 0xbc4	
	CUtlVector< CHandle< CBaseEntity > > m_hProposedPushUnits[4]; // 0xbc8	
	CUtlVector< CHandle< CBaseEntity > > m_hProposedDefendUnits[4]; // 0xc28	
	CUtlVector< CHandle< CBaseEntity > > m_hProposedRoamUnits; // 0xc88	
	CUtlVector< CHandle< CBaseEntity > > m_hProposedRoshanUnits; // 0xca0	
	float m_fRoamDesire; // 0xcb8	
	float m_fRoamOffensivePowerFactor; // 0xcbc	
	float m_fRoamDistanceFactor; // 0xcc0	
	float m_fRoamPositionFactor; // 0xcc4	
	CHandle< CBaseEntity > m_hRoamTarget; // 0xcc8	
	Vector m_vRoamTargetLoc; // 0xccc	
	float m_fHeroSelectionTimes[24]; // 0xcd8	
private:
	[[maybe_unused]] uint8_t __pad0d38[0x18]; // 0xd38
public:
	Vector m_vBaseLocation; // 0xd50	
private:
	[[maybe_unused]] uint8_t __pad0d5c[0x4]; // 0xd5c
public:
	CUtlVector< CHandle< CBaseEntity > > m_AllUnits; // 0xd60	
	CUtlVector< CHandle< CBaseEntity > > m_AllAlliedUnits; // 0xd78	
	CUtlVector< CHandle< CBaseEntity > > m_AllAlliedHeroes; // 0xd90	
	CUtlVector< CHandle< CBaseEntity > > m_AllAlliedCreeps; // 0xda8	
	CUtlVector< CHandle< CBaseEntity > > m_AllAlliedWards; // 0xdc0	
	CUtlVector< CHandle< CBaseEntity > > m_AllAlliedBuildings; // 0xdd8	
	CUtlVector< CHandle< CBaseEntity > > m_AllAlliedOther; // 0xdf0	
	CUtlVector< CHandle< CBaseEntity > > m_AllEnemyUnits; // 0xe08	
	CUtlVector< CHandle< CBaseEntity > > m_AllEnemyHeroes; // 0xe20	
	CUtlVector< CHandle< CBaseEntity > > m_AllEnemyCreeps; // 0xe38	
	CUtlVector< CHandle< CBaseEntity > > m_AllEnemyWards; // 0xe50	
	CUtlVector< CHandle< CBaseEntity > > m_AllEnemyBuildings; // 0xe68	
	CUtlVector< CHandle< CBaseEntity > > m_AllEnemyOther; // 0xe80	
	CUtlVector< CHandle< CBaseEntity > > m_AllNeutralCreeps; // 0xe98	
	CUtlVector< CHandle< CBaseEntity > > m_ThinkerUnits; // 0xeb0	
	CUtlVector< CHandle< CBaseEntity > > m_AllUnitsIncludingDead; // 0xec8	
private:
	[[maybe_unused]] uint8_t __pad0ee0[0x30]; // 0xee0
public:
	CUtlVector< CHandle< CBaseEntity > > m_hCouriers; // 0xf10	
	CUtlVector< CHandle< CBaseEntity > > m_hDisabledBots; // 0xf28	
private:
	[[maybe_unused]] uint8_t __pad0f40[0x380]; // 0xf40
public:
	GameTime_t m_fGoodLuckFlavorTextTime; // 0x12c0	
	GameTime_t m_fTeamfightFlavorTextTime; // 0x12c4	
	GameTime_t m_fCongratulateHeroFlavorTextTime; // 0x12c8	
	GameTime_t m_fLastAliveHeroHistorySnapshotTime; // 0x12cc	
	int32_t m_iAliveHeroHistoryIndex; // 0x12d0	
	int32_t m_iAliveHeroHistory[5]; // 0x12d4	
	GameTime_t m_fPlayerDraftChooseTime; // 0x12e8	
private:
	[[maybe_unused]] uint8_t __pad12ec[0xc]; // 0x12ec
public:
	CUtlString m_sScriptDirectory; // 0x12f8	
	HSCRIPT m_hHeroSelectionScriptScope; // 0x1300	
	HSCRIPT m_hTeamLevelDesiresScriptScope; // 0x1308	
private:
	[[maybe_unused]] uint8_t __pad1310[0x68]; // 0x1310
public:
	GameTick_t m_nScriptPathAvoidanceUpdateTick; // 0x1378	
	float m_fExecutionTime[30]; // 0x137c	
	int32_t m_iCurExecutionTime; // 0x13f4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Morty_Hop : public CDOTABaseAbility
{
public:
	float max_distance; // 0x578	
	Vector m_vTarget; // 0x57c	
	int32_t m_iTrackerProjectile; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Enchantress_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Juggernaut_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BigThunderLizard_Wardrums : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seasonal_TI11_CongaLineSlow : public CDOTA_Buff
{
public:
	float m_flMaxSpeed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Tree_Walking : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_MP_Regen_Amp : public CDOTA_Buff
{
public:
	float value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_ItemSpawner : public CPointEntity
{
public:
	CUtlSymbolLarge m_szItemName; // 0x4a8	
	
	// Datamap fields:
	// void InputSpawnItem; // 0x0
	// CUtlSymbolLarge InputSetItemName; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Avianas_Feather : public CDOTA_Buff_Item
{
public:
	int32_t evasion; // 0x1338	
	int32_t move_speed; // 0x133c	
	int32_t flight_threshold; // 0x1340	
	ParticleIndex_t m_nFXIndex; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Essence_Ring : public CDOTA_Buff_Item
{
public:
	int32_t bonus_int; // 0x1338	
	float mp_regen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Hurricane_Pike : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Bloodstone : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Hoodwink_SharpshooterPureDamage : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tusk_Tag_Team_Attack_Slow_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lycan_SummonWolves_CriticalStrike : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DoomBringer_ScorchedEarth_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Life_Stealer_Infest : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_QueenOfPain_ScreamOfPain_Fear : public CDOTA_Buff
{
public:
	Vector m_vOriginal; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_Flag_Trapped : public CDOTA_Buff
{
public:
	int32_t bonus_spell_damage_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoCourierSpawn : public CPointEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tiny_TossTree_Slow : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Earthshaker_Fissure_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_Decorate_Tree : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Movement_Speed_Percentage_14 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CIngameEvent_Fall2021 : public CIngameEvent_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Warlock : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Sniper : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Unwavering_Condition : public CDOTA_Buff_Item
{
public:
	int32_t max_health; // 0x1338	
	int32_t magic_resist; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Bullwhip : public CDOTA_Buff_Item
{
public:
	float bonus_health_regen; // 0x1338	
	float bonus_mana_regen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Vengeances_Shadow : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Illusionsts_Cape_Marker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Timeless_Relic : public CDOTA_Buff_Item
{
public:
	int32_t spell_amp; // 0x1338	
	int32_t debuff_amp; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_AetherialHalo : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Necronomicon_Warrior_LastWill : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_Luminosity_Crit : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Disruptor_KineticField : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	Vector m_vOriginLoc; // 0x133c	
	bool m_bTruesight; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad1349[0x3]; // 0x1349
public:
	float damage_per_second; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Ogre_Magi_Fireblast : public CDOTABaseAbility
{
public:
	int32_t m_nMostRecentMulticastCount; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Treant_NaturesGrasp_Creation_Thinker : public CDOTA_Buff
{
public:
	float creation_interval; // 0x1338	
	float vines_duration; // 0x133c	
	int32_t vine_spawn_interval; // 0x1340	
	Vector m_vInitialLoc; // 0x1344	
	Vector m_vFinalLoc; // 0x1350	
	int32_t m_iVineCount; // 0x135c	
	int32_t m_iVinesIndex; // 0x1360	
	bool m_bFoundTree; // 0x1364	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Alchemist_ChemicalRage : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TemplarAssassin_MeldArmor : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "EHANDLE m_hTarget"
class CDOTA_Ability_Pugna_LifeDrain : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTarget; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Warlock_Shadow_Word : public CDOTA_Buff
{
public:
	float tick_interval; // 0x1338	
	int32_t damage; // 0x133c	
	int32_t shard_movement_speed_pct; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Zuus_Thunder_Trail : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad0590[0x8]; // 0x590
public:
	int32_t damage; // 0x598	
	int32_t debuff_spell_amp_min; // 0x59c	
	int32_t debuff_spell_amp_max; // 0x5a0	
	Vector m_vStartPos; // 0x5a4	
	int32_t m_nMaxRange; // 0x5b0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Skeleton_King_Scepter_Tracker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5f8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Mirana_Arrow : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x578	
	int32_t scepter_radius; // 0x57c	
	Vector m_vStartPos; // 0x580	
	ParticleIndex_t m_nFXIndex; // 0x58c	
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList[2]; // 0x590	
	CUtlVector< CHandle< CBaseEntity > > hStarfallList[2]; // 0x5c0	
	int32_t m_nActiveArrow; // 0x5f0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4e8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CKeepUpright : public CPointEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x8]; // 0x4a8
public:
	Vector m_worldGoalAxis; // 0x4b0	
	Vector m_localTestAxis; // 0x4bc	
private:
	[[maybe_unused]] uint8_t __pad04c8[0x8]; // 0x4c8
public:
	CUtlSymbolLarge m_nameAttach; // 0x4d0	
	CHandle< CBaseEntity > m_attachedObject; // 0x4d8	
	float m_angularLimit; // 0x4dc	
	bool m_bActive; // 0x4e0	
	bool m_bDampAllRotation; // 0x4e1	
	
	// Datamap fields:
	// void m_pController; // 0x4c8
	// void InputTurnOn; // 0x0
	// void InputTurnOff; // 0x0
	// float InputSetAngularLimit; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x768
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CRevertSaved : public CModelPointEntity
{
public:
	float m_loadTime; // 0x758	
	float m_Duration; // 0x75c	
	float m_HoldTime; // 0x760	
	
	// Datamap fields:
	// void InputReload; // 0x0
	// void CRevertSavedLoadThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Aghsfort_Pugna_Grandmaster_NetherWard : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Wraith_King_11 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ursa : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tidehunter_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Spectre_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Magic_Resistance_12 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EnragedWildkin_Hurricane : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1338	
	float m_flEndTime; // 0x1344	
	float m_flCurTime; // 0x1348	
	ParticleIndex_t m_FX; // 0x134c	
	int32_t distance; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_TorrentEffectPotion_Torrent : public CDOTA_Buff_Item
{
public:
	int32_t m_nTorrentDamage; // 0x1338	
	float m_flStartZ; // 0x133c	
	float m_flCurTime; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Morty_Hop : public CDOTA_Buff
{
public:
	Vector m_vStartPosition; // 0x1338	
	Vector m_vTargetPosition; // 0x1344	
	float m_flCurrentTimeHoriz; // 0x1350	
	float m_flCurrentTimeVert; // 0x1354	
	float m_flZCoefficientA; // 0x1358	
	float m_flZCoefficientB; // 0x135c	
	bool m_bInterrupted; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1361[0x3]; // 0x1361
public:
	float duration; // 0x1364	
	int32_t height; // 0x1368	
	int32_t damage; // 0x136c	
	int32_t damage_radius; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Paladin_Sword : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Essence_Ring_Active : public CDOTA_Buff
{
public:
	int32_t health_gain; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_HelmOfTheDominator_BonusHealth : public CDOTA_Buff
{
public:
	int32_t health_min; // 0x1338	
	int32_t new_max; // 0x133c	
	int32_t health_bonus; // 0x1340	
	int32_t model_scale; // 0x1344	
	int32_t creep_bonus_damage; // 0x1348	
	int32_t creep_bonus_hp_regen; // 0x134c	
	int32_t creep_bonus_mp_regen; // 0x1350	
	int32_t creep_bonus_armor; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Crimson_Guard : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_BootsOfSpeed : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Primalbeast_Trample : public CDOTA_Buff
{
public:
	int32_t effect_radius; // 0x1338	
	Vector vLastPos; // 0x133c	
	float flCurrentDistance; // 0x1348	
	int32_t step_distance; // 0x134c	
	int32_t bonus_magic_resistance; // 0x1350	
	bool m_bIsUnslowable; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dawnbreaker_Fire_Wreath_Slow : public CDOTA_Buff
{
public:
	int32_t swipe_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VoidSpirit_AetherRemnant_Pull : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
	PlayerID_t m_nPlayerID; // 0x133c	
	float m_fMovementSpeed; // 0x1340	
	CHandle< CDOTA_BaseNPC > m_hPullTarget; // 0x1344	
	float think_interval; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DarkWillow_BrambleMaze : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_MonkeyKing_QuadrupleTap : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_RightClickJump_Activity : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_SpiritBreaker_EmpoweringHaste : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Furion_Greater_Sprout : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Rattletrap_BatteryAssault : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Leshrac_Lightning_Storm : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
	int32_t radius; // 0x133c	
	int32_t jump_count; // 0x1340	
	float slow_duration; // 0x1344	
	float jump_delay; // 0x1348	
	CHandle< CBaseEntity > hInitialTarget; // 0x134c	
	float m_flDamage; // 0x1350	
	int32_t m_iCurJumpCount; // 0x1354	
	Vector m_vCurTargetLoc; // 0x1358	
private:
	[[maybe_unused]] uint8_t __pad1364[0x4]; // 0x1364
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1368	
	bool m_bGrantedGem; // 0x1380	
	bool m_bBounceTwice; // 0x1381	
private:
	[[maybe_unused]] uint8_t __pad1382[0x2]; // 0x1382
public:
	CHandle< CBaseEntity > m_eLastTarget; // 0x1384	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ursa_Earthshock : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Kunkka_Torrent_Thinker : public CDOTA_Buff
{
public:
	bool m_bShowEnemies; // 0x1338	
	bool m_bTorrentStorm; // 0x1339	
	bool m_bTorrentStarted; // 0x133a	
private:
	[[maybe_unused]] uint8_t __pad133b[0x1]; // 0x133b
public:
	GameTime_t m_fTorrentStartTime; // 0x133c	
	float flDamagePerTick; // 0x1340	
	float flFirstDamage; // 0x1344	
	float damage_tick_interval; // 0x1348	
	float percent_instant; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nevermore_Requiem_InvisBreak : public CDOTA_Buff
{
public:
	bool bDisableInvis; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CHandle< CBaseEntity> m_hVictim"
class CDOTA_Ability_Pudge_Dismember : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hVictim; // 0x578	
	int32_t shard_cast_range; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AntiMage_Counterspell : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFuncTimescale : public CBaseEntity
{
public:
	float m_flDesiredTimescale; // 0x4a8	
	float m_flAcceleration; // 0x4ac	
	float m_flMinBlendRate; // 0x4b0	
	float m_flBlendDeltaMultiplier; // 0x4b4	
	bool m_isStarted; // 0x4b8	
	
	// Datamap fields:
	// void InputStart; // 0x0
	// void InputStop; // 0x0
	// void InputReset; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Templar_Assassin_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dragon_Knight_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Gold_Income_30 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Intelligence_14 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_150 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Aghsfort_Walrus_Pudge_Harpoon : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x10]; // 0x578
public:
	Vector m_vProjectileLocation; // 0x588	
	float hook_speed; // 0x594	
	int32_t hook_width; // 0x598	
	int32_t hook_distance; // 0x59c	
	bool m_bRetracting; // 0x5a0	
	bool m_bDiedInHook; // 0x5a1	
private:
	[[maybe_unused]] uint8_t __pad05a2[0x2]; // 0x5a2
public:
	CHandle< CBaseEntity > m_hVictim; // 0x5a4	
	Vector m_vTargetPosition; // 0x5a8	
	Vector m_vCasterPosition; // 0x5b4	
	bool m_bChainDetached; // 0x5c0	
private:
	[[maybe_unused]] uint8_t __pad05c1[0x3]; // 0x5c1
public:
	ParticleIndex_t m_iChainParticle; // 0x5c4	
	int32_t m_iHookParticle; // 0x5c8	
	int32_t m_nManaCost; // 0x5cc	
	CHandle< CBaseEntity > m_hSourceCaster; // 0x5d0	
	ParticleIndex_t m_nPreviewFX; // 0x5d4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Wave_Blast_Disarm : public CDOTA_Modifier_Disarmed
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Gladiator_Helm : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Venom_Gland : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Gloves_Of_Travel : public CDOTA_Buff_Item
{
public:
	int32_t attack_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Nullifier : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SheepStick_Debuff : public CDOTA_Modifier_Hexed
{
public:
	float sheep_movement_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_UltimateOrb : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PrimalBeast_Uproar_Roared_Self : public CDOTA_Buff
{
public:
	int32_t roared_bonus_attack_speed; // 0x1338	
	int32_t roared_bonus_armor; // 0x133c	
	int32_t m_nBuffStackCount; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PrimalBeast_Pulverize_Self : public CDOTA_Buff
{
public:
	CHandle< CDOTA_BaseNPC > m_hTarget; // 0x1338	
	Vector m_vPulverizeCenter; // 0x133c	
	Vector m_vCasterStartPos; // 0x1348	
	int32_t splash_radius; // 0x1354	
	float interval; // 0x1358	
	float ministun; // 0x135c	
	int32_t damage; // 0x1360	
	int32_t bonus_damage_per_hit; // 0x1364	
	int32_t m_nHitCount; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hoodwink_Sharpshooter_Debuff : public CDOTA_Buff
{
public:
	int32_t slow_move_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ArcWarden_TempestDouble : public CDOTA_Buff
{
public:
	int32_t penalty_distance; // 0x1338	
	int32_t attack_damage_penalty; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Underlord_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Visage_GravekeepersCloak : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Wisp_Spirits_Out : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rubick_FadeBoltBuff : public CDOTA_Buff
{
public:
	int32_t attack_damage_bonus; // 0x1338	
	int32_t attack_damage_reduction; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Clinkz_DeathPact : public CDOTABaseAbility
{
public:
	int32_t m_nDevourFirstSlot; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad057c[0x4]; // 0x57c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hSkeletonSummons; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Life_Stealer_Rage : public CDOTA_Buff
{
public:
	int32_t movement_speed_bonus; // 0x1338	
	int32_t bonus_armor; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Beastmaster_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lich_FrostAura : public CDOTA_Buff
{
public:
	float duration; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PhantomLancer_PhantomEdge_Boost : public CDOTA_Buff
{
public:
	int32_t bonus_speed; // 0x1338	
	float agility_duration; // 0x133c	
	bool m_bGiveAgility; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_CrystalMaiden_BrillianceAura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Followthrough : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Greevil_Miniboss_White_Purification : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float m_flAutoExposureMin"
// MNetworkVarNames "float m_flAutoExposureMax"
// MNetworkVarNames "float m_flTonemapPercentTarget"
// MNetworkVarNames "float m_flTonemapPercentBrightPixels"
// MNetworkVarNames "float m_flTonemapMinAvgLum"
// MNetworkVarNames "float m_flExposureAdaptationSpeedUp"
// MNetworkVarNames "float m_flExposureAdaptationSpeedDown"
// MNetworkVarNames "float m_flTonemapEVSmoothingRange"
class CTonemapController2 : public CBaseEntity
{
public:
	// MNetworkEnable
	float m_flAutoExposureMin; // 0x4a8	
	// MNetworkEnable
	float m_flAutoExposureMax; // 0x4ac	
	// MNetworkEnable
	float m_flTonemapPercentTarget; // 0x4b0	
	// MNetworkEnable
	float m_flTonemapPercentBrightPixels; // 0x4b4	
	// MNetworkEnable
	float m_flTonemapMinAvgLum; // 0x4b8	
	// MNetworkEnable
	float m_flExposureAdaptationSpeedUp; // 0x4bc	
	// MNetworkEnable
	float m_flExposureAdaptationSpeedDown; // 0x4c0	
	// MNetworkEnable
	float m_flTonemapEVSmoothingRange; // 0x4c4	
	
	// Datamap fields:
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
	// float InputSetMinExposure; // 0x0
	// float InputSetMaxExposure; // 0x0
	// float InputSetPercentTarget; // 0x0
	// float InputSetPercentBrightPixels; // 0x0
	// float InputSetMinAverageLuminosity; // 0x0
	// float InputSetExposureAdaptationSpeedUp; // 0x0
	// float InputSetExposureAdaptationSpeedDown; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Kunkka_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tidehunter_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Monkey_King_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x928
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "char m_pszQuestTitle"
// MNetworkVarNames "char m_pszQuestText"
// MNetworkVarNames "int m_nQuestType"
// MNetworkVarNames "CHandle< CDotaSubquestBase > m_hSubquests"
// MNetworkVarNames "bool m_bHidden"
// MNetworkVarNames "bool m_bCompleted"
// MNetworkVarNames "bool m_bWinIfCompleted"
// MNetworkVarNames "bool m_bLoseIfCompleted"
// MNetworkVarNames "char m_pszGameEndText"
// MNetworkVarNames "int m_pnTextReplaceValuesCDotaQuest"
// MNetworkVarNames "char m_pszTextReplaceString"
// MNetworkVarNames "int m_nTextReplaceValueVersion"
class CDotaQuest : public CBaseEntity
{
public:
	// MNetworkEnable
	char m_pszQuestTitle[256]; // 0x4a8	
	// MNetworkEnable
	char m_pszQuestText[256]; // 0x5a8	
	// MNetworkEnable
	int32_t m_nQuestType; // 0x6a8	
	// MNetworkEnable
	CHandle< CDotaSubquestBase > m_hSubquests[8]; // 0x6ac	
	// MNetworkEnable
	bool m_bHidden; // 0x6cc	
	// MNetworkEnable
	bool m_bCompleted; // 0x6cd	
	// MNetworkEnable
	bool m_bWinIfCompleted; // 0x6ce	
	// MNetworkEnable
	bool m_bLoseIfCompleted; // 0x6cf	
	// MNetworkEnable
	char m_pszGameEndText[256]; // 0x6d0	
	// MNetworkEnable
	int32_t m_pnTextReplaceValuesCDotaQuest[4]; // 0x7d0	
	// MNetworkEnable
	char m_pszTextReplaceString[64]; // 0x7e0	
	// MNetworkEnable
	int32_t m_nTextReplaceValueVersion; // 0x820	
	int32_t m_nQuestCompleteFadeAlpha; // 0x824	
	char m_pszQuestName[256]; // 0x828	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c8
// Has VTable
// 
// MNetworkOverride "m_baseLayer.m_hSequence"
// MNetworkVarNames "CNetworkedSequenceOperation m_baseLayer"
// MNetworkVarNames "float m_flPoseParameter"
// MNetworkVarNames "int m_nNewSequenceParity"
// MNetworkVarNames "int m_nResetEventsParity"
// MNetworkVarNames "AnimLoopMode_t m_nAnimLoopMode"
class CBaseAnimatingController : public CSkeletonAnimationController
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "baseAnimBaseLayerChanged"
	CNetworkedSequenceOperation m_baseLayer; // 0x10	
	// MNetworkDisable
	bool m_bSequenceFinished; // 0x38	
private:
	[[maybe_unused]] uint8_t __pad0039[0x3]; // 0x39
public:
	// MNetworkDisable
	float m_flGroundSpeed; // 0x3c	
	// MNetworkDisable
	float m_flLastEventCycle; // 0x40	
	// MNetworkDisable
	GameTime_t m_flLastEventAnimTime; // 0x44	
	// MNetworkDisable
	float m_flSoundSyncTime; // 0x48	
	// MNetworkEnable
	// MNetworkBitCount "10"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "5,000000"
	// MNetworkEncodeFlags "8"
	// MNetworkPriority "32"
	// MNetworkChangeCallback "playbackRateChanged"
	CNetworkedQuantizedFloat m_flPlaybackRate; // 0x4c	
	// MNetworkDisable
	GameTime_t m_flPrevAnimTime; // 0x54	
	// MNetworkDisable
	GameTime_t m_flSeqStartTime; // 0x58	
	// MNetworkEnable
	// MNetworkBitCount "11"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "1,000000"
	// MNetworkUserGroup "m_flPoseParameter"
	// MNetworkChangeCallback "poseParametersChanged"
	float m_flPoseParameter[24]; // 0x5c	
	// MNetworkDisable
	bool m_bNetworkedAnimationInputsChanged; // 0xbc	
private:
	[[maybe_unused]] uint8_t __pad00bd[0x3]; // 0xbd
public:
	// MNetworkEnable
	// MNetworkPriority "32"
	// MNetworkChangeCallback "clientSideAnimCycleReset"
	int32_t m_nNewSequenceParity; // 0xc0	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_nResetEventsParity; // 0xc4	
	// MNetworkEnable
	AnimLoopMode_t m_nAnimLoopMode; // 0xc8	
	// MNetworkDisable
	float m_flCachedSequenceCycleRate; // 0xcc	
	// MNetworkDisable
	float m_flCachedGroundSpeed; // 0xd0	
	// MNetworkDisable
	SequenceFinishNotifyState_t m_nNotifyState; // 0xd4	
	// MNetworkDisable
	bool m_bHasEverDispatchedAnimEvents; // 0xd5	
private:
	[[maybe_unused]] uint8_t __pad00d6[0x29a]; // 0xd6
public:
	// MNetworkDisable
	// -> m_currentOp - 0x370
	// -> m_flCurrentPlaybackRate - 0x398
	// -> m_flCurrentAnimTime - 0x39c
	// -> m_transitioningLayers[4] - 0x3a0
	// -> m_pOwner - 0x4c0
	CSequenceTransitioner2 m_SequenceTransitioner; // 0x370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_WitchDoctor : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_PhantomLancer : public CDOTA_BaseNPC_Hero
{
public:
	bool m_bInventoryEnabled; // 0x1d98	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7b0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CRopeKeyframeAlias_move_rope : public CRopeKeyframe
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Night_Vision : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_WandOfTheBrine : public CDOTA_Buff_Item
{
public:
	int32_t heal_increase; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Mechanical_Arm : public CDOTA_Buff_Item
{
public:
	bool m_bAppliesToCreeps; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	float bat; // 0x133c	
	float stun_duration; // 0x1340	
	int32_t stun_chance; // 0x1344	
	int32_t m_nAttack; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Nether_Shawl : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Solar_Crest : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_GreaterCritical : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t crit_chance; // 0x133c	
	int32_t crit_multiplier; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_OblivionStaff : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_HandOfMidas : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Underlord_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Abaddon_Frostmourne : public CDOTA_Buff
{
public:
	float slow_duration; // 0x1338	
	float curse_duration; // 0x133c	
	int32_t hit_count; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Skywrath_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tusk_Tag_Team_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tusk_WalrusKick : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nTargetFXIndex; // 0x578	
	Vector m_vEndpoint; // 0x57c	
	int32_t landing_radius; // 0x588	
	int32_t push_length; // 0x58c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Shredder_Reactive_Armor_Stack : public CDOTA_Buff
{
public:
	float bonus_armor; // 0x1338	
	float bonus_hp_regen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Centaur_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Centaur_HoofStomp_Windup : public CDOTA_Buff
{
public:
	bool bInterrupted; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Disruptor_StaticStorm : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Meepo_Petrify : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
	int32_t hp_restore; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Spirit_Bear_Attack_Damage : public CDOTA_Buff
{
public:
	float bear_bat; // 0x1338	
	int32_t bear_magic_resistance; // 0x133c	
	int32_t bonus_bear_hp; // 0x1340	
	int32_t bear_movespeed; // 0x1344	
	int32_t bonus_bear_armor; // 0x1348	
	int32_t hp_gain_per_druid_level; // 0x134c	
	int32_t damage_gain_per_druid_level; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Shadow_Demon_Soul_Catcher_Illusion : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > hTarget; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Alchemist_UnstableConcoction : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Spectre_Desolate : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Enchantress_Untouchable : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Animation_Attack : public CDOTABaseAbility
{
public:
	float m_flPlaybackRate; // 0x578	
	float animation_time; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_CrystalMaiden_FreezingField_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1338	
	int32_t attack_slow; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_Gyrocopter_Multi_Homing_Missile : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x640
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_Dragon_Potion : public CDOTA_Item
{
public:
	int32_t bonus_movement_speed; // 0x620	
	int32_t bonus_attack_damage; // 0x624	
	int32_t bonus_attack_range; // 0x628	
	int32_t magic_resistance; // 0x62c	
	int32_t model_scale; // 0x630	
	int32_t skin_number; // 0x634	
	bool flying_movement; // 0x638	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_BagOfGold : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Slithereen_Riptide : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Amplify_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Intelligence_16 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mutation_DeathExplosion : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Creature_Phoenix_FireSpiritCount : public CDOTA_Buff
{
public:
	int32_t spirit_count; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_SuperArcane_Blink : public CDOTA_Modifier_Item_Arcane_Blink
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Paladin_Sword : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t bonus_lifesteal; // 0x133c	
	int32_t bonus_spell_lifesteal; // 0x1340	
	int32_t bonus_amp; // 0x1344	
	int32_t creep_lifesteal_reduction_pct; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Phoenix_Ash : public CDOTA_Buff_Item
{
public:
	int32_t health_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Tenderizer : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
	int32_t bonus_agility; // 0x133c	
	int32_t bash_chance_melee; // 0x1340	
	int32_t bash_chance_ranged; // 0x1344	
	float bash_duration; // 0x1348	
	float bash_cooldown; // 0x134c	
	int32_t bonus_chance_damage; // 0x1350	
	int32_t bonus_damage; // 0x1354	
	int32_t weaken_per_hit; // 0x1358	
	float weaken_duration; // 0x135c	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x630
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_GemOfTrueSight : public CDOTA_Item
{
public:
	int32_t m_iTempViewer; // 0x620	
	int32_t m_iTeam; // 0x624	
	int32_t m_nFXIndex; // 0x628	
	CHandle< CBaseEntity > m_hThinker; // 0x62c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_OgreAxe : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1390
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Primal_Beast_Uproar_Projectile_Thinker : public CDOTA_Buff
{
public:
	int32_t projectiles_per_stack; // 0x1338	
	int32_t projectile_speed; // 0x133c	
	int32_t projectile_distance; // 0x1340	
	int32_t projectile_width; // 0x1344	
	int32_t splinter_angle; // 0x1348	
	float split_delay; // 0x134c	
	int32_t projectile_waves; // 0x1350	
	int32_t m_nCurrentWaveCount; // 0x1354	
	int32_t tectonic_shift_projectiles; // 0x1358	
private:
	[[maybe_unused]] uint8_t __pad135c[0x4]; // 0x135c
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecEnemiesHit; // 0x1360	
	CUtlVector< int32 > m_vecProjectileHandles; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AbyssalUnderlord_AtrophyAura_Scepter : public CDOTA_Buff
{
public:
	int32_t bonus_damage_from_creep; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Techies_Suicide_Leap_Animation : public CDOTA_Modifier_Disarmed
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Slark_ShadowDance : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Wisp_Tether_Scepter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lycan_SummonWolves_PermanentInvisibility : public CDOTA_Modifier_PersistentInvisibility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Gyrocopter_HomingMissile_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Jakiro_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Jakiro_Liquid_Ice : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_NightStalker_CripplingFear_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DarkSeer_IonShell_IllusionInvulnerability : public CDOTA_Modifier_Invulnerable
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_TemplarAssassin_Trap_Teleport : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTrap; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Assassin_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Animation_LeftClawSwipe : public CDOTA_Ability_Animation_Attack
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Enigma_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tiny_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Holdout_CullingBlade : public CDOTA_Ability_Axe_CullingBlade
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4e8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CEnvInstructorVRHint : public CPointEntity
{
public:
	CUtlSymbolLarge m_iszName; // 0x4a8	
	CUtlSymbolLarge m_iszHintTargetEntity; // 0x4b0	
	int32_t m_iTimeout; // 0x4b8	
private:
	[[maybe_unused]] uint8_t __pad04bc[0x4]; // 0x4bc
public:
	CUtlSymbolLarge m_iszCaption; // 0x4c0	
	CUtlSymbolLarge m_iszStartSound; // 0x4c8	
	int32_t m_iLayoutFileType; // 0x4d0	
private:
	[[maybe_unused]] uint8_t __pad04d4[0x4]; // 0x4d4
public:
	CUtlSymbolLarge m_iszCustomLayoutFile; // 0x4d8	
	int32_t m_iAttachType; // 0x4e0	
	float m_flHeightOffset; // 0x4e4	
	
	// Datamap fields:
	// CUtlSymbolLarge InputShowHint; // 0x0
	// void InputEndHint; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_TI9_Shovel : public CDOTABaseAbility
{
public:
	Vector m_vChannelPos; // 0x578	
	bool m_bIsUnderwater; // 0x584	
private:
	[[maybe_unused]] uint8_t __pad0585[0x3]; // 0x585
public:
	ParticleIndex_t m_nPhaseStartFXIndex; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bristleback_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Storm_Spirit_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lifestealer_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Amplify_14 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Night_Vision_500 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa8
// Has VTable
// 
// MNetworkVarNames "CNetworkedSequenceOperation m_op"
// MNetworkVarNames "int m_nOrder"
// MNetworkVarNames "AnimLoopMode_t m_nSeqLoopMode"
// MNetworkVarNames "int m_nNewSequenceParity"
// MNetworkReplayCompatField "m_bLooping"
class CAnimationLayer
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	// MNetworkChangeCallback "animationLayerOpChanged"
	CNetworkedSequenceOperation m_op; // 0x30	
	// MNetworkEnable
	// MNetworkChangeCallback "animationLayerOrderChanged"
	int32_t m_nOrder; // 0x58	
	// MNetworkEnable
	// MNetworkBitCount "10"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "5,000000"
	// MNetworkEncodeFlags "8"
	CNetworkedQuantizedFloat m_flPlaybackRate; // 0x5c	
	// MNetworkEnable
	AnimLoopMode_t m_nSeqLoopMode; // 0x64	
	// MNetworkEnable
	// MNetworkPriority "32"
	// MNetworkChangeCallback "animationLayerCycleReset"
	int32_t m_nNewSequenceParity; // 0x68	
	// MNetworkDisable
	GameTime_t m_flSeqStartTime; // 0x6c	
	// MNetworkDisable
	float m_flCachedSequenceCycleRate; // 0x70	
	// MNetworkDisable
	int32_t m_nFlags; // 0x74	
	// MNetworkDisable
	bool m_bSequenceFinished; // 0x78	
private:
	[[maybe_unused]] uint8_t __pad0079[0x3]; // 0x79
public:
	// MNetworkDisable
	GameTime_t m_flKillStartTime; // 0x7c	
	// MNetworkDisable
	float m_flKillRate; // 0x80	
	// MNetworkDisable
	GameTime_t m_flLayerSuppressChangeTime; // 0x84	
	// MNetworkDisable
	int32_t m_nActivity; // 0x88	
	// MNetworkDisable
	int32_t m_nPriority; // 0x8c	
	// MNetworkDisable
	float m_flLastEventCycle; // 0x90	
	// MNetworkDisable
	float m_flFadeInFraction; // 0x94	
	// MNetworkDisable
	float m_flFadeOutFraction; // 0x98	
	// MNetworkDisable
	bool m_bHasFadedIn; // 0x9c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Rattletrap : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Greevil_Miniboss_Red_Overpower : public CDOTA_Buff
{
public:
	int32_t attack_speed_bonus_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ghost_FrostAttack_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1338	
	int32_t attackspeed_slow; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifer_Item_TurtleShell_Shell : public CDOTA_Buff_Item
{
public:
	int32_t damage_reduction; // 0x1338	
	Vector m_vecPosition; // 0x133c	
	ParticleIndex_t m_nFXIndex; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifer_Item_BlightedSpirit : public CDOTA_Buff_Item
{
public:
	int32_t magic_resist; // 0x1338	
	float duration; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Witches_Switch_Aura_Effect : public CDOTA_Buff
{
public:
	float aura_mana_regen; // 0x1338	
	float aura_health_regen; // 0x133c	
	int32_t aura_armor; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Ex_Machina : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Apex : public CDOTA_Buff_Item
{
public:
	int32_t primary_stat; // 0x1338	
	int32_t primary_stat_universal; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Spider_Legs_Active : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed_active; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Lotus_Orb : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_HelmOfTheDominator : public CDOTA_Buff_Item
{
public:
	int32_t bonus_stats; // 0x1338	
	int32_t bonus_armor; // 0x133c	
	float bonus_regen; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_RefresherOrb : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health_regen; // 0x1338	
	float bonus_mana_regen; // 0x133c	
	int32_t bonus_damage; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Broadsword : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_VoidStone : public CDOTA_Buff_Item
{
public:
	float bonus_mana_regen; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Bracer : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
	int32_t bonus_agility; // 0x133c	
	int32_t bonus_intellect; // 0x1340	
	int32_t clock_time; // 0x1344	
	float bonus_health_regen; // 0x1348	
	int32_t bonus_damage; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mars_Gods_Rebuke : public CDOTA_Buff
{
public:
	int32_t knockback_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_DarkWillow_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Shredder_ReturnChakram : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Shredder_WhirlingDeath : public CDOTABaseAbility
{
public:
	int32_t whirling_radius; // 0x578	
	int32_t whirling_damage; // 0x57c	
	float whirling_tick; // 0x580	
	float duration; // 0x584	
	int32_t tree_damage_scale; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_Tornado : public CDOTA_Modifier_Cyclone
{
public:
	float m_flLandDamage; // 0x1350	
	float spell_lifesteal; // 0x1354	
	float spell_amp; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Omniknight_Repel : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5f0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Warlock_Upheaval : public CDOTABaseAbility
{
public:
	Vector m_vPosition; // 0x578	
	float aoe; // 0x584	
	int32_t slow_per_second; // 0x588	
	int32_t aspd_per_second; // 0x58c	
	int32_t max_slow; // 0x590	
	int32_t damage_per_second; // 0x594	
	int32_t max_damage; // 0x598	
	float damage_tick_interval; // 0x59c	
	CountdownTimer m_timer; // 0x5a0	
	CountdownTimer m_shardTimer; // 0x5b8	
	float duration; // 0x5d0	
	GameTime_t m_flElapsedTime; // 0x5d4	
	float m_flCurrentSlow; // 0x5d8	
	ParticleIndex_t m_nFXIndex; // 0x5dc	
private:
	[[maybe_unused]] uint8_t __pad05e0[0x8]; // 0x5e0
public:
	bool m_bTargetCast; // 0x5e8	
private:
	[[maybe_unused]] uint8_t __pad05e9[0x3]; // 0x5e9
public:
	CHandle< CBaseEntity > m_hTarget; // 0x5ec	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Morphling_Waveform : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x10]; // 0x578
public:
	int32_t m_nProjectileID; // 0x588	
	Vector m_vProjectileLocation; // 0x58c	
	CHandle< CBaseEntity > m_hHitHero; // 0x598	
	bool m_bGrantedGem; // 0x59c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Juggernaut_Swift_Slash : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x760
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPlatTrigger : public CBaseModelEntity
{
public:
	CHandle< CFuncPlat > m_pPlatform; // 0x758	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Pangolier : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Riki_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Exp_Boost_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_150 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Armor_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_HillTroll_Rally : public CDOTA_Buff
{
public:
	int32_t damage_bonus; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EnragedWildkin_ToughnessAura_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Status_Resistance : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Orb_Of_Revelations : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mirror_Shield_Delay : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Satanic : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t bonus_strength; // 0x133c	
	int32_t lifesteal_percent; // 0x1340	
	int32_t unholy_lifesteal_percent; // 0x1344	
	int32_t creep_lifesteal_reduction_pct; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_OrchidMalevolence : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Snapfire_Scatterblast_Disarm : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Pangolier_RollupStop : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ArcWarden_MagneticField_Evasion : public CDOTA_Buff
{
public:
	int32_t evasion_chance; // 0x1338	
	int32_t radius; // 0x133c	
	int32_t shard_magic_resist; // 0x1340	
	int32_t shard_slow_pct; // 0x1344	
	float aura_origin_x; // 0x1348	
	float aura_origin_y; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ogre_Magi_Arcana : public CDOTA_Buff
{
public:
	int32_t m_nLastMulticastCount; // 0x1338	
	int32_t m_nMulticastStreakCount; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Broodmother_SpawnSpiderite : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FacelessVoid_TimeWalk_ShardBuff : public CDOTA_Buff
{
public:
	Vector m_vStartLocation; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Courier_Burst : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Windrunner_Windrun : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Kunkka_XMarksTheSpotMarker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Scout_Bonuses : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghanimsFortress_SkeletonKing_VampiricAura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_Summon_CNY_Tree : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Alchemist_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tusk_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Riki_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Amplify_16 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x258
// Has VTable
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "GameTime_t m_flStartTime"
// MNetworkVarNames "uint32 m_iWindSeed"
// MNetworkVarNames "uint16 m_iMinWind"
// MNetworkVarNames "uint16 m_iMaxWind"
// MNetworkVarNames "int32 m_windRadius"
// MNetworkVarNames "uint16 m_iMinGust"
// MNetworkVarNames "uint16 m_iMaxGust"
// MNetworkVarNames "float32 m_flMinGustDelay"
// MNetworkVarNames "float32 m_flMaxGustDelay"
// MNetworkVarNames "float32 m_flGustDuration"
// MNetworkVarNames "uint16 m_iGustDirChange"
// MNetworkVarNames "Vector m_location"
// MNetworkVarNames "uint16 m_iInitialWindDir"
// MNetworkVarNames "float32 m_flInitialWindSpeed"
class CEnvWindShared
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	GameTime_t m_flStartTime; // 0x8	
	// MNetworkEnable
	uint32_t m_iWindSeed; // 0xc	
	// MNetworkEnable
	uint16_t m_iMinWind; // 0x10	
	// MNetworkEnable
	uint16_t m_iMaxWind; // 0x12	
	// MNetworkEnable
	int32_t m_windRadius; // 0x14	
	// MNetworkEnable
	uint16_t m_iMinGust; // 0x18	
	// MNetworkEnable
	uint16_t m_iMaxGust; // 0x1a	
	// MNetworkEnable
	float m_flMinGustDelay; // 0x1c	
	// MNetworkEnable
	float m_flMaxGustDelay; // 0x20	
	// MNetworkEnable
	float m_flGustDuration; // 0x24	
	// MNetworkEnable
	uint16_t m_iGustDirChange; // 0x28	
private:
	[[maybe_unused]] uint8_t __pad002a[0x2]; // 0x2a
public:
	// MNetworkEnable
	// MNetworkEncoder "coord"
	Vector m_location; // 0x2c	
	int32_t m_iszGustSound; // 0x38	
	int32_t m_iWindDir; // 0x3c	
	float m_flWindSpeed; // 0x40	
	Vector m_currentWindVector; // 0x44	
	Vector m_CurrentSwayVector; // 0x50	
	Vector m_PrevSwayVector; // 0x5c	
	// MNetworkEnable
	uint16_t m_iInitialWindDir; // 0x68	
private:
	[[maybe_unused]] uint8_t __pad006a[0x2]; // 0x6a
public:
	// MNetworkEnable
	float m_flInitialWindSpeed; // 0x6c	
	CEntityIOOutput m_OnGustStart; // 0x70	
	CEntityIOOutput m_OnGustEnd; // 0x98	
	GameTime_t m_flVariationTime; // 0xc0	
	GameTime_t m_flSwayTime; // 0xc4	
	GameTime_t m_flSimTime; // 0xc8	
	GameTime_t m_flSwitchTime; // 0xcc	
	float m_flAveWindSpeed; // 0xd0	
	bool m_bGusting; // 0xd4	
private:
	[[maybe_unused]] uint8_t __pad00d5[0x3]; // 0xd5
public:
	float m_flWindAngleVariation; // 0xd8	
	float m_flWindSpeedVariation; // 0xdc	
	CEntityIndex m_iEntIndex; // 0xe0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Beastmaster : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Neutral_Upgrade : public CDOTA_Buff
{
public:
	float increase_time; // 0x1338	
	int32_t increase_damage; // 0x133c	
	int32_t increase_health; // 0x1340	
	float increase_armor; // 0x1344	
	int32_t increase_aspd; // 0x1348	
	int32_t increase_gold; // 0x134c	
	int32_t increase_xp; // 0x1350	
	int32_t current_level; // 0x1354	
	int32_t max_level; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tornado_ExpirationTime : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_OgreSealTotem : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Quicksilver_Amulet : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Arcane_Ring : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1338	
	int32_t bonus_intelligence; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Minotaur_Horn : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Spirit_Vessel : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EmberSpirit_FlameGuard : public CDOTA_Buff
{
public:
	int32_t absorb_amount; // 0x1338	
	int32_t damage_per_second; // 0x133c	
	int32_t radius; // 0x1340	
	float tick_interval; // 0x1344	
	int32_t shield_pct_absorb; // 0x1348	
	int32_t m_nAbsorbRemaining; // 0x134c	
	float m_flShowParticleInterval; // 0x1350	
	bool m_bDestroy; // 0x1354	
private:
	[[maybe_unused]] uint8_t __pad1355[0x3]; // 0x1355
public:
	float linger_duration; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ogre_Magi_Bloodlust_Autocast : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Broodmother_Silken_Bola : public CDOTA_Buff
{
public:
	int32_t attack_damage; // 0x1338	
	int32_t movement_speed; // 0x133c	
	int32_t miss_chance; // 0x1340	
	int32_t shard_miss_chance; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Huskar_Burning_Spear_Debuff : public CDOTA_Buff
{
public:
	int32_t burn_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Sniper_Concussive_Grenade : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Sven_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_MonkeyKing_FurArmy : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hThinker; // 0x578	
	ParticleIndex_t m_nFXIndex; // 0x57c	
	int32_t num_first_soldiers; // 0x580	
	int32_t num_second_soldiers; // 0x584	
	bool m_bCreateMonkeys; // 0x588	
private:
	[[maybe_unused]] uint8_t __pad0589[0x3]; // 0x589
public:
	GameTime_t m_flNextCreationTime; // 0x58c	
	GameTime_t m_flScepterTime; // 0x590	
private:
	[[maybe_unused]] uint8_t __pad0594[0x4]; // 0x594
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecSoldiers; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x6a0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_bDisabled"
// MNetworkVarNames "bool m_bUpdateOnClient"
// MNetworkVarNames "ValueRemapperInputType_t m_nInputType"
// MNetworkVarNames "CHandle< CBaseEntity> m_hRemapLineStart"
// MNetworkVarNames "CHandle< CBaseEntity> m_hRemapLineEnd"
// MNetworkVarNames "float m_flMaximumChangePerSecond"
// MNetworkVarNames "float m_flDisengageDistance"
// MNetworkVarNames "float m_flEngageDistance"
// MNetworkVarNames "bool m_bRequiresUseKey"
// MNetworkVarNames "ValueRemapperOutputType_t m_nOutputType"
// MNetworkVarNames "CHandle< CBaseEntity > m_hOutputEntities"
// MNetworkVarNames "ValueRemapperHapticsType_t m_nHapticsType"
// MNetworkVarNames "ValueRemapperMomentumType_t m_nMomentumType"
// MNetworkVarNames "float m_flMomentumModifier"
// MNetworkVarNames "float m_flSnapValue"
// MNetworkVarNames "ValueRemapperRatchetType_t m_nRatchetType"
// MNetworkVarNames "float m_flInputOffset"
class CPointValueRemapper : public CBaseEntity
{
public:
	// MNetworkEnable
	bool m_bDisabled; // 0x4a8	
	// MNetworkEnable
	bool m_bUpdateOnClient; // 0x4a9	
private:
	[[maybe_unused]] uint8_t __pad04aa[0x2]; // 0x4aa
public:
	// MNetworkEnable
	ValueRemapperInputType_t m_nInputType; // 0x4ac	
	CUtlSymbolLarge m_iszRemapLineStartName; // 0x4b0	
	CUtlSymbolLarge m_iszRemapLineEndName; // 0x4b8	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hRemapLineStart; // 0x4c0	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hRemapLineEnd; // 0x4c4	
	// MNetworkEnable
	float m_flMaximumChangePerSecond; // 0x4c8	
	// MNetworkEnable
	float m_flDisengageDistance; // 0x4cc	
	// MNetworkEnable
	float m_flEngageDistance; // 0x4d0	
	// MNetworkEnable
	bool m_bRequiresUseKey; // 0x4d4	
private:
	[[maybe_unused]] uint8_t __pad04d5[0x3]; // 0x4d5
public:
	// MNetworkEnable
	ValueRemapperOutputType_t m_nOutputType; // 0x4d8	
private:
	[[maybe_unused]] uint8_t __pad04dc[0x4]; // 0x4dc
public:
	CUtlSymbolLarge m_iszOutputEntityName; // 0x4e0	
	CUtlSymbolLarge m_iszOutputEntity2Name; // 0x4e8	
	CUtlSymbolLarge m_iszOutputEntity3Name; // 0x4f0	
	CUtlSymbolLarge m_iszOutputEntity4Name; // 0x4f8	
	// MNetworkEnable
	CNetworkUtlVectorBase< CHandle< CBaseEntity > > m_hOutputEntities; // 0x500	
	// MNetworkEnable
	ValueRemapperHapticsType_t m_nHapticsType; // 0x518	
	// MNetworkEnable
	ValueRemapperMomentumType_t m_nMomentumType; // 0x51c	
	// MNetworkEnable
	float m_flMomentumModifier; // 0x520	
	// MNetworkEnable
	float m_flSnapValue; // 0x524	
	float m_flCurrentMomentum; // 0x528	
	// MNetworkEnable
	ValueRemapperRatchetType_t m_nRatchetType; // 0x52c	
	float m_flRatchetOffset; // 0x530	
	// MNetworkEnable
	float m_flInputOffset; // 0x534	
	bool m_bEngaged; // 0x538	
	bool m_bFirstUpdate; // 0x539	
private:
	[[maybe_unused]] uint8_t __pad053a[0x2]; // 0x53a
public:
	float m_flPreviousValue; // 0x53c	
	GameTime_t m_flPreviousUpdateTickTime; // 0x540	
	Vector m_vecPreviousTestPoint; // 0x544	
	CHandle< CBasePlayerPawn > m_hUsingPlayer; // 0x550	
	float m_flCustomOutputValue; // 0x554	
	CUtlSymbolLarge m_iszSoundEngage; // 0x558	
	CUtlSymbolLarge m_iszSoundDisengage; // 0x560	
	CUtlSymbolLarge m_iszSoundReachedValueZero; // 0x568	
	CUtlSymbolLarge m_iszSoundReachedValueOne; // 0x570	
	CUtlSymbolLarge m_iszSoundMovingLoop; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad0580[0x8]; // 0x580
public:
	CEntityOutputTemplate< float32 > m_Position; // 0x588	
	CEntityOutputTemplate< float32 > m_PositionDelta; // 0x5b0	
	CEntityIOOutput m_OnReachedValueZero; // 0x5d8	
	CEntityIOOutput m_OnReachedValueOne; // 0x600	
	CEntityIOOutput m_OnReachedValueCustom; // 0x628	
	CEntityIOOutput m_OnEngage; // 0x650	
	CEntityIOOutput m_OnDisengage; // 0x678	
	
	// Datamap fields:
	// void CPointValueRemapperUpdateThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x818
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLogicNPCCounterAABB : public CLogicNPCCounter
{
public:
	Vector m_vDistanceOuterMins; // 0x7e8	
	Vector m_vDistanceOuterMaxs; // 0x7f4	
	Vector m_vOuterMins; // 0x800	
	Vector m_vOuterMaxs; // 0x80c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_TI11_Paper : public CDOTA_Ability_Seasonal_TI11_RockPaperScissors_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dragon_Knight_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Phoenix_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_12 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Agility_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFoWRevealerEntity : public CBaseEntity
{
public:
	uint32_t m_unViewerTeam; // 0x4a8	
	int32_t m_nVisionRange; // 0x4ac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x48
// Has VTable
// 
// MNetworkVarNames "string_t m_iszBroadcasterChannelDescription"
// MNetworkVarNames "string_t m_iszBroadcasterChannelCountryCode"
// MNetworkVarNames "string_t m_iszBroadcasterChannelLanguageCode"
struct PlayerResourceBroadcasterData_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	CUtlSymbolLarge m_iszBroadcasterChannelDescription; // 0x30	
	// MNetworkEnable
	CUtlSymbolLarge m_iszBroadcasterChannelCountryCode; // 0x38	
	// MNetworkEnable
	CUtlSymbolLarge m_iszBroadcasterChannelLanguageCode; // 0x40	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_bShouldRespawn"
// MNetworkVarNames "bool m_bStolen"
class CDOTA_Unit_SpiritBear : public CDOTA_BaseNPC_Hero
{
public:
	// MNetworkEnable
	bool m_bShouldRespawn; // 0x1d98	
	// MNetworkEnable
	bool m_bStolen; // 0x1d99	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Lion : public CDOTA_BaseNPC_Hero
{
public:
	uint32_t m_unFingerPrestigeKills; // 0x1d98	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BigThunderLizard_Wardrums_Aura : public CDOTA_Buff
{
public:
	int32_t speed_bonus; // 0x1338	
	int32_t accuracy; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x760
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLightOrthoEntity : public CLightEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Plus_HighFiveRequested : public CDOTA_Buff
{
public:
	int32_t acknowledge_range; // 0x1338	
	float think_interval; // 0x133c	
	float acknowledged_cooldown; // 0x1340	
	bool m_bAcknowledged; // 0x1344	
	bool m_bFirstThink; // 0x1345	
private:
	[[maybe_unused]] uint8_t __pad1346[0x2]; // 0x1346
public:
	int32_t high_five_level; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Whisper_Of_The_Dread : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Tree_Processor : public CDOTA_Buff_Item
{
public:
	int32_t bonus_int; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Chipped_Vest : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Witless_shako : public CDOTA_Buff_Item
{
public:
	int32_t max_health; // 0x1338	
	int32_t max_mana; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Spider_Legs : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_InvisibilityEdge_WindWalk : public CDOTA_Modifier_Invisible
{
public:
	int32_t windwalk_bonus_damage; // 0x1348	
	int32_t windwalk_movement_speed; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Armlet_UnholyStrength : public CDOTA_Buff
{
public:
	int32_t unholy_bonus_damage; // 0x1338	
	int32_t unholy_bonus_attack_speed; // 0x133c	
	int32_t unholy_bonus_strength; // 0x1340	
	int32_t unholy_bonus_armor; // 0x1344	
	int32_t unholy_health_drain_per_second; // 0x1348	
	int32_t str_tick_count; // 0x134c	
	int32_t unholy_bonus_slow_resistance; // 0x1350	
	float tick_interval; // 0x1354	
	float m_flDamageRemainder; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_MagicWand : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_EnergyBooster : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Grimstroke_Return : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13b0
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Phoenix_SunRay : public CDOTA_Buff
{
public:
	int32_t hp_cost_perc_per_second; // 0x1338	
	int32_t beam_range; // 0x133c	
	int32_t base_damage; // 0x1340	
	int32_t base_heal; // 0x1344	
	float tick_interval; // 0x1348	
	float forward_move_speed; // 0x134c	
	float turn_rate_initial; // 0x1350	
	float turn_rate; // 0x1354	
	int32_t radius; // 0x1358	
	float m_flCurrentTime; // 0x135c	
	float m_flAccumulatedSelfDamage; // 0x1360	
	bool m_bMovingForward; // 0x1364	
	bool m_bTurningFast; // 0x1365	
private:
	[[maybe_unused]] uint8_t __pad1366[0x2]; // 0x1366
public:
	float m_flFacingTarget; // 0x1368	
	float hp_perc_damage; // 0x136c	
	float hp_perc_heal; // 0x1370	
	float blind_duration; // 0x1374	
	int32_t blind_per_second; // 0x1378	
	ParticleIndex_t m_nBeamFXIndex; // 0x137c	
	CHandle< CBaseEntity > m_hVisionThinkers[8]; // 0x1380	
	CHandle< CBaseEntity > m_hBeamEnd; // 0x13a0	
	bool m_bCreatedVisionThinkers; // 0x13a4	
private:
	[[maybe_unused]] uint8_t __pad13a5[0x3]; // 0x13a5
public:
	CHandle< CBaseEntity > m_hBeamEndSound; // 0x13a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Abaddon_Frostmourne : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Ogre_Magi_Unrefined_Fireblast : public CDOTA_Ability_Ogre_Magi_Fireblast
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Gyrocopter_Flak_Cannon : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Spectre_SpectralDaggerPathPhased : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Spectre_SpectralDaggerInPath : public CDOTA_Buff
{
public:
	int32_t bonus_movespeed; // 0x1338	
	CHandle< CBaseEntity > m_hTrackingTarget; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Spectre_Arcana : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Clinkz_DeathPact_Permanent_Buff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Razor_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Sven_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Greevil_Miniboss_Purple_VenomousGale : public CDOTABaseAbility
{
public:
	float duration; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x540
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CEnvSoundscapeTriggerable : public CEnvSoundscape
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Nevermore_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Faceless_Void_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Strength_20 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa10
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CSpeechBubbleInfo m_SpeechBubbles"
class CSpeechBubbleManager : public CBaseEntity
{
public:
	// MNetworkEnable
	// MNetworkTypeAlias "m_SpeechBubbles"
	CUtlVectorEmbeddedNetworkVar< CSpeechBubbleInfo > m_SpeechBubbles; // 0x4a8	
	uint16_t m_unBubbleCount; // 0xa08	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x650
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CSoundOpvarSetPointEntity : public CSoundOpvarSetPointBase
{
public:
	CEntityIOOutput m_OnEnter; // 0x540	
	CEntityIOOutput m_OnExit; // 0x568	
	bool m_bAutoDisable; // 0x590	
private:
	[[maybe_unused]] uint8_t __pad0591[0x43]; // 0x591
public:
	float m_flDistanceMin; // 0x5d4	
	float m_flDistanceMax; // 0x5d8	
	float m_flDistanceMapMin; // 0x5dc	
	float m_flDistanceMapMax; // 0x5e0	
	float m_flOcclusionRadius; // 0x5e4	
	float m_flOcclusionMin; // 0x5e8	
	float m_flOcclusionMax; // 0x5ec	
	float m_flValSetOnDisable; // 0x5f0	
	bool m_bSetValueOnDisable; // 0x5f4	
private:
	[[maybe_unused]] uint8_t __pad05f5[0x3]; // 0x5f5
public:
	int32_t m_nSimulationMode; // 0x5f8	
	int32_t m_nVisibilitySamples; // 0x5fc	
	Vector m_vDynamicProxyPoint; // 0x600	
	float m_flDynamicMaximumOcclusion; // 0x60c	
	CEntityHandle m_hDynamicEntity; // 0x610	
private:
	[[maybe_unused]] uint8_t __pad0614[0x4]; // 0x614
public:
	CUtlSymbolLarge m_iszDynamicEntityName; // 0x618	
	float m_flPathingDistanceNormFactor; // 0x620	
	Vector m_vPathingSourcePos; // 0x624	
	Vector m_vPathingListenerPos; // 0x630	
	Vector m_vPathingDirection; // 0x63c	
	int32_t m_nPathingSourceIndex; // 0x648	
	
	// Datamap fields:
	// void InputSetDisabledValue; // 0x0
	// void CSoundOpvarSetPointEntitySetOpvarThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9d8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkUserGroupProxy "CBasePlayerPawn"
// MNetworkUserGroupProxy "CBasePlayerPawn"
// MNetworkExcludeByUserGroup "FogController"
// MNetworkIncludeByUserGroup "Player"
// MNetworkIncludeByUserGroup "Water"
// MNetworkIncludeByUserGroup "LocalPlayerExclusive"
// MNetworkIncludeByName "m_iMaxHealth"
// MNetworkExcludeByName "m_pWeaponServices"
// MNetworkExcludeByName "m_pItemServices"
// MNetworkExcludeByName "m_pAutoaimServices"
// MNetworkExcludeByName "m_pObserverServices"
// MNetworkExcludeByName "m_pWaterServices"
// MNetworkExcludeByName "m_pUseServices"
// MNetworkExcludeByName "m_pFlashlightServices"
// MNetworkExcludeByName "m_pMovementServices"
// MNetworkVarNames "CPlayer_WeaponServices * m_pWeaponServices"
// MNetworkVarNames "CPlayer_ItemServices * m_pItemServices"
// MNetworkVarNames "CPlayer_AutoaimServices * m_pAutoaimServices"
// MNetworkVarNames "CPlayer_ObserverServices * m_pObserverServices"
// MNetworkVarNames "CPlayer_WaterServices * m_pWaterServices"
// MNetworkVarNames "CPlayer_UseServices * m_pUseServices"
// MNetworkVarNames "CPlayer_FlashlightServices * m_pFlashlightServices"
// MNetworkVarNames "CPlayer_CameraServices * m_pCameraServices"
// MNetworkVarNames "CPlayer_MovementServices * m_pMovementServices"
// MNetworkUserGroupProxy "CBasePlayerPawn"
// MNetworkVarNames "uint32 m_iHideHUD"
// MNetworkVarNames "sky3dparams_t m_skybox3d"
// MNetworkVarNames "GameTime_t m_flDeathTime"
// MNetworkVarNames "CHandle< CBasePlayerController> m_hController"
class CBasePlayerPawn : public CBaseCombatCharacter
{
public:
	// MNetworkEnable
	CPlayer_WeaponServices* m_pWeaponServices; // 0x890	
	// MNetworkEnable
	CPlayer_ItemServices* m_pItemServices; // 0x898	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	CPlayer_AutoaimServices* m_pAutoaimServices; // 0x8a0	
	// MNetworkEnable
	CPlayer_ObserverServices* m_pObserverServices; // 0x8a8	
	// MNetworkEnable
	CPlayer_WaterServices* m_pWaterServices; // 0x8b0	
	// MNetworkEnable
	CPlayer_UseServices* m_pUseServices; // 0x8b8	
	// MNetworkEnable
	CPlayer_FlashlightServices* m_pFlashlightServices; // 0x8c0	
	// MNetworkEnable
	CPlayer_CameraServices* m_pCameraServices; // 0x8c8	
	// MNetworkEnable
	CPlayer_MovementServices* m_pMovementServices; // 0x8d0	
private:
	[[maybe_unused]] uint8_t __pad08d8[0x8]; // 0x8d8
public:
	QAngle v_angle; // 0x8e0	
	QAngle v_anglePrevious; // 0x8ec	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	uint32_t m_iHideHUD; // 0x8f8	
private:
	[[maybe_unused]] uint8_t __pad08fc[0x4]; // 0x8fc
public:
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	// -> scale - 0x908
	// -> origin - 0x90c
	// -> bClip3DSkyBoxNearToWorldFar - 0x918
	// -> flClip3DSkyBoxNearToWorldFarOffset - 0x91c
	// -> fog - 0x920
	// -> m_nWorldGroupID - 0x988
	sky3dparams_t m_skybox3d; // 0x900	
	GameTime_t m_fTimeLastHurt; // 0x990	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	GameTime_t m_flDeathTime; // 0x994	
	GameTime_t m_fNextSuicideTime; // 0x998	
	bool m_fInitHUD; // 0x99c	
private:
	[[maybe_unused]] uint8_t __pad099d[0x3]; // 0x99d
public:
	CAI_Expresser* m_pExpresser; // 0x9a0	
	// MNetworkEnable
	CHandle< CBasePlayerController > m_hController; // 0x9a8	
private:
	[[maybe_unused]] uint8_t __pad09ac[0x4]; // 0x9ac
public:
	float m_fHltvReplayDelay; // 0x9b0	
	float m_fHltvReplayEnd; // 0x9b4	
	CEntityIndex m_iHltvReplayEntity; // 0x9b8	
private:
	[[maybe_unused]] uint8_t __pad09bc[0x4]; // 0x9bc
public:
	CUtlVector< sndopvarlatchdata_t > m_sndOpvarLatchData; // 0x9c0	
	
	// Datamap fields:
	// void m_hPawnListEntry; // 0x9ac
	// void m_hLastValidNavArea; // 0x840
	// void m_hCurrentNavArea; // 0x830
	// void m_hCurrentNavAreaBlocked; // 0x850
	// CHandle< CBaseEntity > controller; // 0x7fffffff
	// int32_t InputSetHealth; // 0x0
	// bool InputSetHUDVisibility; // 0x0
	// CUtlSymbolLarge InputSetFogController; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Wisp_Spirit : public CDOTA_BaseNPC
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Zuus : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkIncludeByName "m_angRotation"
// MNetworkIncludeByName "m_angRotation[0]"
// MNetworkIncludeByName "m_angRotation[1]"
class CDOTA_BaseNPC_RotatableBuilding : public CDOTA_BaseNPC
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Psychic_Headband : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1338	
	float m_flEndTime; // 0x1344	
	float m_flCurTime; // 0x1348	
	int32_t push_length; // 0x134c	
	float push_duration; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Voodoo_Mask : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Panic_Button : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Timeless_Relic : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Kaya : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Guardian_Greaves_Aura : public CDOTA_Buff
{
public:
	float aura_health_regen; // 0x1338	
	float aura_armor; // 0x133c	
	float aura_health_regen_bonus; // 0x1340	
	float aura_armor_bonus; // 0x1344	
	float aura_mana_regen; // 0x1348	
	float aura_mana_regen_bonus; // 0x134c	
	int32_t aura_bonus_threshold; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Soul_Ring : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
	float bonus_armor; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Claymore : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_BladesOfAttack : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x640
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_TranquilBoots2 : public CDOTA_Item
{
public:
	int32_t break_count; // 0x620	
private:
	[[maybe_unused]] uint8_t __pad0624[0x4]; // 0x624
public:
	CUtlVector< GameTime_t > m_DamageList; // 0x628	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Grimstroke_Shard_Buff : public CDOTA_Buff
{
public:
	int32_t total_damage; // 0x1338	
	int32_t attack_speed; // 0x133c	
	int32_t move_speed; // 0x1340	
	float m_flInterval; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Winter_Wyvern_Cold_Embrace : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EmberSpirit_FireRemnant_RemnantTracker : public CDOTA_Buff
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_vActiveRemnants; // 0x1338	
	CUtlVector< CHandle< CBaseEntity > > m_vTrackingDelayedRemnants; // 0x1350	
	int32_t shard_charge_radius; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Techies_StickyBomb_Slow_Secondary : public CDOTA_Buff
{
public:
	int32_t secondary_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Techies_StickyBomb_Chase : public CDOTA_Buff
{
public:
	int32_t acceleration; // 0x1338	
	int32_t m_nTeamNumber; // 0x133c	
	float speed; // 0x1340	
	float pre_chase_time; // 0x1344	
	CHandle< CBaseEntity > m_hAttachTarget; // 0x1348	
	Vector m_vStartPosition; // 0x134c	
	CountdownTimer m_MoveTime; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Obsidian_Destroyer_Equilibrium : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1390
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Batrider_Firefly : public CDOTA_Buff
{
public:
	bool m_bActive; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	int32_t radius; // 0x133c	
	int32_t m_ifirefly_Active; // 0x1340	
	int32_t tree_radius; // 0x1344	
	int32_t damage_per_second; // 0x1348	
	int32_t movement_speed; // 0x134c	
	int32_t bonus_slow_resistance; // 0x1350	
	float tick_interval; // 0x1354	
	ParticleIndex_t m_nFXIndex; // 0x1358	
	ParticleIndex_t m_nFXIndexB; // 0x135c	
	GameTime_t m_fNextDamageTick; // 0x1360	
	Vector m_vLastFirePoolLoc; // 0x1364	
	int32_t bonus_vision; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DarkSeer_WallOfReplica_Illusion : public CDOTA_Buff
{
public:
	int32_t replica_scale; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_FacelessVoid_Chronosphere : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nian_Whirlpool : public CDOTABaseAbility
{
public:
	int32_t pool_count; // 0x578	
	int32_t min_distance; // 0x57c	
	int32_t max_distance; // 0x580	
	int32_t pull_radius; // 0x584	
	float fire_interval; // 0x588	
private:
	[[maybe_unused]] uint8_t __pad058c[0x4]; // 0x58c
public:
	CountdownTimer m_ctTimer; // 0x590	
	float m_flTiming; // 0x5a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Morphling_Morph_Agi : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x550
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLogicPlayerProxy : public CLogicalEntity
{
public:
	CHandle< CBaseEntity > m_hPlayer; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04ac[0x4]; // 0x4ac
public:
	CEntityIOOutput m_PlayerHasAmmo; // 0x4b0	
	CEntityIOOutput m_PlayerHasNoAmmo; // 0x4d8	
	CEntityIOOutput m_PlayerDied; // 0x500	
	CEntityOutputTemplate< int32 > m_RequestedPlayerHealth; // 0x528	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Treant_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Warlock_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lycan_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Storm_Spirit_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Broodmother_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Magic_Resistance_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x50
// Has VTable
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "uint8 m_iObserverMode"
// MNetworkVarNames "CHandle< CBaseEntity> m_hObserverTarget"
class CPlayer_ObserverServices : public CPlayerPawnComponent
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnObserverModeChanged"
	uint8_t m_iObserverMode; // 0x40	
private:
	[[maybe_unused]] uint8_t __pad0041[0x3]; // 0x41
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnObserverTargetChanged"
	CHandle< CBaseEntity > m_hObserverTarget; // 0x44	
	ObserverMode_t m_iObserverLastMode; // 0x48	
	bool m_bForcedObserverMode; // 0x4c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Devastator_Debuff : public CDOTA_Buff
{
public:
	int32_t active_mres_reduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Heart : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Clarity : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Hoodwink_Camouflague : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Elder_Titan_EchoStomp_Magic_Immune : public CDOTA_Modifier_DebuffImmune
{
public:
	int32_t model_scale; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x680
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Medusa_MysticSnake : public CDOTABaseAbility
{
public:
	int32_t radius; // 0x578	
	int32_t snake_jumps; // 0x57c	
	int32_t snake_damage; // 0x580	
	int32_t snake_damage_pct; // 0x584	
	int32_t snake_mana_steal; // 0x588	
	int32_t snake_scale; // 0x58c	
	int32_t snake_speed_scale; // 0x590	
	int32_t initial_speed; // 0x594	
	int32_t return_speed; // 0x598	
	float jump_delay; // 0x59c	
	float slow_duration; // 0x5a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_NagaSiren_Ensnare : public CDOTA_Modifier_Rooted
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ogre_Magi_Ignite : public CDOTA_Buff
{
public:
	int32_t slow_movement_speed_pct; // 0x1338	
	int32_t burn_damage; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Brewmaster_ThunderClap : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1338	
	int32_t attack_speed_slow; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Batrider_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Omniknight_Degen_Aura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_Torrent_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nian_Dive : public CDOTABaseAbility
{
public:
	float m_flPlaybackRate; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Roshan_Bash : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Axe_CounterHelix : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Antimage_DampenMagic_Aura_Strong : public CDOTA_Buff
{
public:
	int32_t shard_bonus_aura_range; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_FelBeast_Haunt : public CDOTABaseAbility
{
public:
	int32_t radius; // 0x578	
	float duration; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPhysImpact : public CPointEntity
{
public:
	float m_damage; // 0x4a8	
	float m_distance; // 0x4ac	
	CUtlSymbolLarge m_directionEntityName; // 0x4b0	
	
	// Datamap fields:
	// void CPhysImpactPointAtEntity; // 0x0
	// void InputImpact; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x15a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "Color m_Entity_Color"
// MNetworkVarNames "float m_Entity_flBrightness"
// MNetworkVarNames "HRenderTextureStrong m_Entity_hCubemapTexture"
// MNetworkVarNames "bool m_Entity_bCustomCubemapTexture"
// MNetworkVarNames "HRenderTextureStrong m_Entity_hLightProbeTexture"
// MNetworkVarNames "HRenderTextureStrong m_Entity_hLightProbeDirectLightIndicesTexture"
// MNetworkVarNames "HRenderTextureStrong m_Entity_hLightProbeDirectLightScalarsTexture"
// MNetworkVarNames "HRenderTextureStrong m_Entity_hLightProbeDirectLightShadowsTexture"
// MNetworkVarNames "Vector m_Entity_vBoxMins"
// MNetworkVarNames "Vector m_Entity_vBoxMaxs"
// MNetworkVarNames "bool m_Entity_bMoveable"
// MNetworkVarNames "int m_Entity_nHandshake"
// MNetworkVarNames "int m_Entity_nEnvCubeMapArrayIndex"
// MNetworkVarNames "int m_Entity_nPriority"
// MNetworkVarNames "bool m_Entity_bStartDisabled"
// MNetworkVarNames "float m_Entity_flEdgeFadeDist"
// MNetworkVarNames "Vector m_Entity_vEdgeFadeDists"
// MNetworkVarNames "int m_Entity_nLightProbeSizeX"
// MNetworkVarNames "int m_Entity_nLightProbeSizeY"
// MNetworkVarNames "int m_Entity_nLightProbeSizeZ"
// MNetworkVarNames "int m_Entity_nLightProbeAtlasX"
// MNetworkVarNames "int m_Entity_nLightProbeAtlasY"
// MNetworkVarNames "int m_Entity_nLightProbeAtlasZ"
// MNetworkVarNames "bool m_Entity_bEnabled"
class CEnvCombinedLightProbeVolume : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x1058]; // 0x4a8
public:
	// MNetworkEnable
	// MNetworkChangeCallback "StateChanged"
	Color m_Entity_Color; // 0x1500	
	// MNetworkEnable
	// MNetworkChangeCallback "StateChanged"
	float m_Entity_flBrightness; // 0x1504	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_Entity_hCubemapTexture; // 0x1508	
	// MNetworkEnable
	bool m_Entity_bCustomCubemapTexture; // 0x1510	
private:
	[[maybe_unused]] uint8_t __pad1511[0x7]; // 0x1511
public:
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_Entity_hLightProbeTexture; // 0x1518	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_Entity_hLightProbeDirectLightIndicesTexture; // 0x1520	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_Entity_hLightProbeDirectLightScalarsTexture; // 0x1528	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_Entity_hLightProbeDirectLightShadowsTexture; // 0x1530	
	// MNetworkEnable
	Vector m_Entity_vBoxMins; // 0x1538	
	// MNetworkEnable
	Vector m_Entity_vBoxMaxs; // 0x1544	
	// MNetworkEnable
	bool m_Entity_bMoveable; // 0x1550	
private:
	[[maybe_unused]] uint8_t __pad1551[0x3]; // 0x1551
public:
	// MNetworkEnable
	int32_t m_Entity_nHandshake; // 0x1554	
	// MNetworkEnable
	int32_t m_Entity_nEnvCubeMapArrayIndex; // 0x1558	
	// MNetworkEnable
	int32_t m_Entity_nPriority; // 0x155c	
	// MNetworkEnable
	bool m_Entity_bStartDisabled; // 0x1560	
private:
	[[maybe_unused]] uint8_t __pad1561[0x3]; // 0x1561
public:
	// MNetworkEnable
	float m_Entity_flEdgeFadeDist; // 0x1564	
	// MNetworkEnable
	Vector m_Entity_vEdgeFadeDists; // 0x1568	
	// MNetworkEnable
	int32_t m_Entity_nLightProbeSizeX; // 0x1574	
	// MNetworkEnable
	int32_t m_Entity_nLightProbeSizeY; // 0x1578	
	// MNetworkEnable
	int32_t m_Entity_nLightProbeSizeZ; // 0x157c	
	// MNetworkEnable
	int32_t m_Entity_nLightProbeAtlasX; // 0x1580	
	// MNetworkEnable
	int32_t m_Entity_nLightProbeAtlasY; // 0x1584	
	// MNetworkEnable
	int32_t m_Entity_nLightProbeAtlasZ; // 0x1588	
private:
	[[maybe_unused]] uint8_t __pad158c[0x15]; // 0x158c
public:
	// MNetworkEnable
	bool m_Entity_bEnabled; // 0x15a1	
	
	// Datamap fields:
	// void m_Entity_pEnvMap; // 0x1590
	// void m_Entity_pLightProbeVolume; // 0x1598
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Aghsfort_Ability_CrystalMaiden_CrystalNova : public CDOTABaseAbility
{
public:
	int32_t nova_damage; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dragon_Knight_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Riki_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Base : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x40
// Has VTable
// MNetworkAssumeNotNetworkable
class CPlayer_WaterServices : public CPlayerPawnComponent
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xce8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float32 m_flAlphaScale"
// MNetworkVarNames "float32 m_flRadiusScale"
// MNetworkVarNames "float32 m_flSelfIllumScale"
// MNetworkVarNames "Color m_ColorTint"
// MNetworkVarNames "HRenderTextureStrong m_hTextureOverride"
class CEnvParticleGlow : public CParticleSystem
{
public:
	// MNetworkEnable
	float m_flAlphaScale; // 0xcd0	
	// MNetworkEnable
	float m_flRadiusScale; // 0xcd4	
	// MNetworkEnable
	float m_flSelfIllumScale; // 0xcd8	
	// MNetworkEnable
	Color m_ColorTint; // 0xcdc	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_hTextureOverride; // 0xce0	
	
	// Datamap fields:
	// float InputSetScale; // 0x0
	// float InputSetAlphaScale; // 0x0
	// Color InputSetColorTint; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Creature_Flamestrike : public CDOTA_Buff
{
public:
	int32_t impact_radius; // 0x1338	
	float ground_burn_duration; // 0x133c	
	float damage; // 0x1340	
	int32_t vision_distance; // 0x1344	
	float vision_duration; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Whisper_Of_The_Dread : public CDOTA_Buff_Item
{
public:
	int32_t bonus_mana; // 0x1338	
	int32_t bonus_spell_damage; // 0x133c	
	int32_t vision_penalty; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Keen_Optic : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Necronomicon_Level3 : public CDOTA_Item_Necronomicon
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_MonkeyKingBar : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1338	
	int32_t bonus_chance; // 0x133c	
	int32_t bonus_chance_damage; // 0x1340	
	int32_t bonus_damage; // 0x1344	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_SentryWard : public CDOTA_Buff_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_TranquilBoots : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pangolier_Gyroshell_Stun : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_ArcWarden_Scepter : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_KeeperOfTheLight_BlindingLight : public CDOTA_Buff
{
public:
	int32_t miss_rate; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Treant_Overgrowth : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_TemplarAssassin_Trap : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TemplarAssassin_Meld_Animation : public CDOTA_Buff
{
public:
	bool launched_attack; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_FacelessVoid_TimeLock : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tinker_Defensive_Matrix : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lich_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Morphling_ScepterStatsDrain_Strength_Debuff : public CDOTA_Buff
{
public:
	int32_t scepter_stat_steal; // 0x1338	
	int32_t scepter_status_resist; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_NoHealthBar : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ScoutBonuses : public CDOTA_Buff
{
public:
	int32_t reveal_radius; // 0x1338	
	float increase_health; // 0x133c	
	int32_t max_health; // 0x1340	
	float increase_armor; // 0x1344	
	float max_armor; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x758
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFuncVehicleClip : public CBaseModelEntity
{
public:
	// Datamap fields:
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c8
// Has VTable
// Construct disallowed
// MConstructibleClassBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_bDisabled"
// MNetworkVarNames "string_t m_iszSoundAreaType"
// MNetworkVarNames "Vector m_vPos"
class CSoundAreaEntityBase : public CBaseEntity
{
public:
	// MNetworkEnable
	bool m_bDisabled; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x7]; // 0x4a9
public:
	// MNetworkEnable
	CUtlSymbolLarge m_iszSoundAreaType; // 0x4b0	
	// MNetworkEnable
	Vector m_vPos; // 0x4b8	
	
	// Datamap fields:
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_Arcanist_Potion : public CDOTA_Item
{
public:
	int32_t cooldown_reduction_pct; // 0x620	
	int32_t manacost_reduction_pct; // 0x624	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tinker : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Mana_Reduction_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x700
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "char m_pszSubquestText"
// MNetworkVarNames "bool m_bHidden"
// MNetworkVarNames "bool m_bCompleted"
// MNetworkVarNames "bool m_bShowProgressBar"
// MNetworkVarNames "int m_nProgressBarHueShift"
// MNetworkVarNames "int m_pnTextReplaceValuesCDotaSubquestBase"
// MNetworkVarNames "char m_pszTextReplaceString"
// MNetworkVarNames "int m_nTextReplaceValueVersion"
class CDotaSubquestBase : public CBaseEntity
{
public:
	// MNetworkEnable
	char m_pszSubquestText[256]; // 0x4a8	
	// MNetworkEnable
	bool m_bHidden; // 0x5a8	
	// MNetworkEnable
	bool m_bCompleted; // 0x5a9	
	// MNetworkEnable
	bool m_bShowProgressBar; // 0x5aa	
private:
	[[maybe_unused]] uint8_t __pad05ab[0x1]; // 0x5ab
public:
	// MNetworkEnable
	int32_t m_nProgressBarHueShift; // 0x5ac	
	// MNetworkEnable
	int32_t m_pnTextReplaceValuesCDotaSubquestBase[2]; // 0x5b0	
	// MNetworkEnable
	char m_pszTextReplaceString[64]; // 0x5b8	
	// MNetworkEnable
	int32_t m_nTextReplaceValueVersion; // 0x5f8	
	char m_pszSubquestName[256]; // 0x5fc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CIngameEvent_TI2020 : public CIngameEvent_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x48
// Has VTable
// Construct allowed
// 
// MNetworkVarNames "int m_nNumPoints"
// MNetworkVarNames "GameTime_t m_flShowPopupTime"
class CDOTA_ArcanaDataEntity_FacelessVoid : public CDOTA_ArcanaDataEntity_Base
{
private:
	[[maybe_unused]] uint8_t __pad0030[0xc]; // 0x30
public:
	// MNetworkEnable
	int32_t m_nNumPoints; // 0x3c	
	// MNetworkEnable
	// MNetworkChangeCallback "OnFacelessVoidArcanaChanged"
	GameTime_t m_flShowPopupTime; // 0x40	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_GnollAssassin_EnvenomedWeapon : public CDOTA_Buff
{
public:
	int32_t damage_per_second; // 0x1338	
	float non_hero_duration; // 0x133c	
	float hero_duration; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Grandmasters_Glaive : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_AsceticCap : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Spirit_Vessel : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Moonshard_Consumed : public CDOTA_Buff
{
public:
	int32_t consumed_bonus; // 0x1338	
	int32_t consumed_bonus_night_vision; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_GhostScepter_Active : public CDOTA_Buff
{
public:
	int32_t extra_spell_damage_percent; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Snapfire_FiresnapCookie_AllyFlailAnim : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Terrorblade_Demon_Zeal_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Centaur_HoofStomp : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Disruptor_StaticStormThinker : public CDOTA_Buff
{
public:
	int32_t m_nCurrentPulse; // 0x1338	
	int32_t radius; // 0x133c	
	int32_t damage_max; // 0x1340	
	int32_t pulses; // 0x1344	
	float duration; // 0x1348	
	bool m_bHasGrantedThreeHeroKillEater; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_EMP : public CDOTA_Buff
{
public:
	int32_t area_of_effect; // 0x1338	
	int32_t mana_burned; // 0x133c	
	float damage_per_mana; // 0x1340	
	float spell_lifesteal; // 0x1344	
	float spell_amp; // 0x1348	
	int32_t self_mana_restore_pct; // 0x134c	
	CHandle< CBaseEntity > m_hPullThinker; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Alchemist_Berserk_Potion : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Chen_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Chen_TestOfFaith : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Clinkz_Empty1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PhantomAssassin_StiflingDagger : public CDOTA_Buff
{
public:
	int32_t move_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Beastmaster_InnerBeast : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Courier_Passive_Bonus : public CDOTA_Buff
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecTriggers; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_WitchDoctor_DeathWard : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t m_iBounceRadius; // 0x133c	
	int32_t bonus_accuracy; // 0x1340	
	bool m_bFirstAttack; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Enigma_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lich_FrostArmor_Slow : public CDOTA_Buff
{
public:
	int32_t slow_movement_speed; // 0x1338	
	int32_t slow_attack_speed; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tiny_Tree_Grab : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hStolenTree; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Axe_CullingBlade_Boost : public CDOTA_Buff
{
public:
	int32_t speed_bonus; // 0x1338	
	int32_t armor_bonus; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_StormSpirit_OverloadSlow : public CDOTA_Buff
{
public:
	int32_t overload_move_slow; // 0x1338	
	int32_t overload_attack_slow; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Vision_200 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Mana_Break_35 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x48
// Has VTable
// 
// MNetworkVarNames "float m_flMinX"
// MNetworkVarNames "float m_flMaxX"
// MNetworkVarNames "float m_flMinY"
// MNetworkVarNames "float m_flMaxY"
// MNetworkVarNames "FowBlockerShape_t m_fowBlockerShape"
// MNetworkVarNames "bool m_bClearRegion"
struct FowBlocker_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	float m_flMinX; // 0x30	
	// MNetworkEnable
	float m_flMaxX; // 0x34	
	// MNetworkEnable
	float m_flMinY; // 0x38	
	// MNetworkEnable
	float m_flMaxY; // 0x3c	
	// MNetworkEnable
	FowBlockerShape_t m_fowBlockerShape; // 0x40	
	// MNetworkEnable
	bool m_bClearRegion; // 0x44	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has Trivial Destructor
struct SequenceHistory_t
{
public:
	HSequence m_hSequence; // 0x0	
	GameTime_t m_flSeqStartTime; // 0x4	
	float m_flSeqFixedCycle; // 0x8	
	AnimLoopMode_t m_nSeqLoopMode; // 0xc	
	float m_flPlaybackRate; // 0x10	
	float m_flCyclesPerSecond; // 0x14	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_MartyrsPlate_Aura : public CDOTA_Buff_Item
{
public:
	int32_t aura_radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_iStat"
class CDOTA_Item_Grandmasters_Glaive : public CDOTA_Item
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnGrandmastersStatChanged"
	int32_t m_iStat; // 0x620	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Broom_Handle : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Spy_Gadget : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Arcane_Boots : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_OrchidMalevolence : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1338	
	float bonus_mana_regen; // 0x133c	
	float bonus_health_regen; // 0x1340	
	int32_t bonus_damage; // 0x1344	
	int32_t bonus_attack_speed; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PrimalBeast_Onslaught_Windup : public CDOTA_Buff
{
public:
	bool m_bReachedMax; // 0x1338	
	bool m_bShouldCharge; // 0x1339	
private:
	[[maybe_unused]] uint8_t __pad133a[0x2]; // 0x133a
public:
	float m_flLastOverheadTime; // 0x133c	
	float m_flFacingTarget; // 0x1340	
	Vector m_vAimTarget; // 0x1344	
	ParticleIndex_t m_nCrosshairFX; // 0x1350	
	float m_flChargeDuration; // 0x1354	
	int32_t max_distance; // 0x1358	
	float max_charge_time; // 0x135c	
	float turn_rate; // 0x1360	
	float base_power; // 0x1364	
	int32_t charge_speed; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Techies_ReactiveTazer_Stop : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Centaur_Hitched_Into_Cart : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Brewmaster_Void_Brawler_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed; // 0x1338	
	float active_multiplier; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_SunStrike_Cataclysm : public CDOTA_Buff
{
public:
	int32_t area_of_effect; // 0x1338	
	float damage; // 0x133c	
	int32_t vision_distance; // 0x1340	
	float vision_duration; // 0x1344	
	float spell_amp; // 0x1348	
	float spell_lifesteal; // 0x134c	
	Vector m_vSoundPos; // 0x1350	
	bool m_bPlaySound; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_NightStalker_Darkness : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t status_resistance; // 0x133c	
	int32_t hp_regen; // 0x1340	
	ParticleIndex_t m_nFXIndex; // 0x1344	
	bool m_bIsDay; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lion_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Witch_Doctor_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13a0
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mirana_Leap : public CDOTA_Buff
{
public:
	float m_flTotalTime; // 0x1338	
	float m_flInitialVelocity; // 0x133c	
	Vector m_vStartPosition; // 0x1340	
	Vector m_vTargetHorizontalDirection; // 0x134c	
	float m_flCurrentTimeHoriz; // 0x1358	
	float m_flCurrentTimeVert; // 0x135c	
	bool m_bInterrupted; // 0x1360	
	bool m_bIsVectorTargeted; // 0x1361	
private:
	[[maybe_unused]] uint8_t __pad1362[0x2]; // 0x1362
public:
	Vector m_vFaceDirection; // 0x1364	
	int32_t leap_distance; // 0x1370	
	float shard_radius; // 0x1374	
	float shard_radius_end; // 0x1378	
	float shard_damage; // 0x137c	
	float shard_slow_pct; // 0x1380	
	float shard_slow_duration; // 0x1384	
	float leap_speed; // 0x1388	
	float leap_acceleration; // 0x138c	
	int32_t leap_radius; // 0x1390	
	float leap_bonus_duration; // 0x1394	
	bool m_bLaunched; // 0x1398	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_InvisibleTrueSightImmune : public CDOTA_Modifier_Invisible
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7e0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "Vector m_vecTreeCircleCenter"
// MNetworkVarNames "bool m_bCanApplyTreeCostume"
// MNetworkVarNames "bool m_bIsMangoTree"
// MNetworkVarNames "bool m_bIsPartOfFowSystem"
class CDOTA_TempTree : public CBaseAnimatingActivity
{
private:
	[[maybe_unused]] uint8_t __pad0768[0x20]; // 0x768
public:
	GameTime_t m_fExpireTime; // 0x788	
	// MNetworkEnable
	Vector m_vecTreeCircleCenter; // 0x78c	
	// MNetworkEnable
	bool m_bCanApplyTreeCostume; // 0x798	
	// MNetworkEnable
	bool m_bIsMangoTree; // 0x799	
private:
	[[maybe_unused]] uint8_t __pad079a[0x6]; // 0x79a
public:
	CUtlVector< ParticleIndex_t > m_ParticleList; // 0x7a0	
	// MNetworkEnable
	bool m_bIsPartOfFowSystem; // 0x7b8	
	bool m_bForceVisible[15]; // 0x7b9	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Winter_Wyvern : public CDOTA_BaseNPC_Hero
{
public:
	ParticleIndex_t m_nFXDeath; // 0x1d98	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1798
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Pet : public CDOTA_BaseNPC
{
public:
	CHandle< CDOTA_BaseNPC_Hero > m_hHeroHandle; // 0x1768	
	float m_flPetThreatLevel; // 0x176c	
	bool m_bReadyToPerformCoopTeleport; // 0x1770	
	bool m_bSupportsCoopTeleport; // 0x1771	
private:
	[[maybe_unused]] uint8_t __pad1772[0x2]; // 0x1772
public:
	PetCoopStates_t m_nCoopState; // 0x1774	
	CUtlString m_strPickupItemModel; // 0x1778	
	CHandle< CDOTA_Pet_CarriedItem > m_hCarriedItem; // 0x1780	
	int32_t m_nPetLevel; // 0x1784	
	PetLevelup_Rule_t m_nLevelupRule; // 0x1788	
private:
	[[maybe_unused]] uint8_t __pad178c[0x4]; // 0x178c
public:
	int32_t m_nXPCompendiumEventID; // 0x1790	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Ninja_Gear : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1338	
	int32_t passive_movement_bonus; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_AetherialHalo : public CDOTA_Item
{
public:
	ParticleIndex_t m_nFXIndex; // 0x620	
	ParticleIndex_t m_nFXIndexB; // 0x624	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Sange : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_PlaneswalkersCloak : public CDOTA_Buff_Item
{
public:
	int32_t bonus_magical_armor; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_MithrilHammer : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_MithrilHammer : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Underlord_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Abaddon_BorrowedTime : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Treant_NaturesGrasp_Damage : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1338	
	int32_t damage_per_second; // 0x133c	
	float tick_interval; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_LoneDruid_SpiritLink_Active : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Chen_Divine_Favor_Armor : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1338	
	int32_t heal_amp; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Broodmother_PoisonSting : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PhantomAssassin_BlurActive : public CDOTA_Modifier_Invisible
{
public:
	int32_t radius; // 0x1348	
	float fade_duration; // 0x134c	
	float scepter_fade_duration; // 0x1350	
	bool m_bDestroyNext; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_PhantomAssassin_Blur : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoCourierSpawnRadiant5 : public CPointEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DrowRanger_Trueshot : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nevermore_Shadowraze : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x578	
	ParticleIndex_t m_nFXIndexB; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x180
// Has VTable
class CDOTABehaviorNeutralHome
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	Vector m_vHomePosition; // 0x148	
	Vector m_vHomeFacing; // 0x154	
	bool m_bHomePositionSet; // 0x160	
private:
	[[maybe_unused]] uint8_t __pad0161[0x7]; // 0x161
public:
	CountdownTimer m_IdleRareAnimationTime; // 0x168	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Winter_Wyvern_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Faceless_Void_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Storm_Spirit : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cooldown_Reduction_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_Regen_250 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_125 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mars_Bulwark : public CDOTA_Buff
{
public:
	float physical_damage_reduction; // 0x1338	
	float physical_damage_reduction_side; // 0x133c	
	float forward_angle; // 0x1340	
	float side_angle; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1348[0x18]; // 0x1348
public:
	float m_flRecentDamage; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rubick_SpellSteal : public CDOTA_Buff
{
public:
	CUtlString m_strActivityModifier; // 0x1338	
	CUtlVector< CHandle< CBaseEntity > > m_vecAbilities; // 0x1340	
	bool m_bUsesTwoSlots; // 0x1358	
private:
	[[maybe_unused]] uint8_t __pad1359[0x3]; // 0x1359
public:
	int32_t stolen_debuff_amp; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Warlock_Imp_AutoAttack : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hBestTarget; // 0x1338	
	float bonus_hp; // 0x133c	
	float bonus_dmg; // 0x1340	
	float bonus_movespeed; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_Apocalypse : public CDOTA_Buff
{
public:
	int32_t area_of_effect; // 0x1338	
	float damage; // 0x133c	
	float stun_duration; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tiny_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bloodseeker_Rupture : public CDOTA_Buff
{
public:
	int32_t movement_damage_pct; // 0x1338	
	float hp_pct; // 0x133c	
	Vector vLastPos; // 0x1340	
	bool bResetPosition; // 0x134c	
private:
	[[maybe_unused]] uint8_t __pad134d[0x3]; // 0x134d
public:
	float m_fAccumulatedDamage; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Generic_Hidden : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPointAngularVelocitySensor : public CPointEntity
{
public:
	CHandle< CBaseEntity > m_hTargetEntity; // 0x4a8	
	float m_flThreshold; // 0x4ac	
	int32_t m_nLastCompareResult; // 0x4b0	
	int32_t m_nLastFireResult; // 0x4b4	
	GameTime_t m_flFireTime; // 0x4b8	
	float m_flFireInterval; // 0x4bc	
	float m_flLastAngVelocity; // 0x4c0	
	QAngle m_lastOrientation; // 0x4c4	
	Vector m_vecAxis; // 0x4d0	
	bool m_bUseHelper; // 0x4dc	
private:
	[[maybe_unused]] uint8_t __pad04dd[0x3]; // 0x4dd
public:
	CEntityOutputTemplate< float32 > m_AngularVelocity; // 0x4e0	
	CEntityIOOutput m_OnLessThan; // 0x508	
	CEntityIOOutput m_OnLessThanOrEqualTo; // 0x530	
	CEntityIOOutput m_OnGreaterThan; // 0x558	
	CEntityIOOutput m_OnGreaterThanOrEqualTo; // 0x580	
	CEntityIOOutput m_OnEqualTo; // 0x5a8	
	
	// Datamap fields:
	// void InputTest; // 0x0
	// void InputTestWithInterval; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_Throw_Snowball : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Phoenix_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Windranger_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Undefined : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_ShadowShaman_Shackles : public CDOTA_Buff
{
public:
	float tick_interval; // 0x1338	
	float total_damage; // 0x133c	
	float channel_time; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Satchel : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Heavy_Blade : public CDOTA_Buff_Item
{
public:
	float damage; // 0x1338	
	int32_t attack_speed; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Spirit_Vessel_Heal : public CDOTA_Buff
{
public:
	int32_t soul_heal_amount; // 0x1338	
	float m_fHealingDone; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Hoodwink_Decoy : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > hIllusion; // 0x578	
	float decoy_stun_duration; // 0x590	
	int32_t decoy_detonate_radius; // 0x594	
	int32_t projectile_speed; // 0x598	
	ParticleIndex_t m_nFXIndex; // 0x59c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_BoundlessStrike_ShardMovement : public CDOTA_Buff
{
public:
	float m_flPredictedTotalTime; // 0x1338	
	Vector m_vStartPosition; // 0x133c	
	float m_flCurrentTimeHoriz; // 0x1348	
	float m_flCurrentTimeVert; // 0x134c	
	bool m_bHorizontalMotionInterrupted; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1351[0x3]; // 0x1351
public:
	Vector m_vHorizontalVelocity; // 0x1354	
	Vector m_vLastKnownTargetPosition; // 0x1360	
	float m_flInitialVelocityZ; // 0x136c	
	int32_t acceleration_z; // 0x1370	
	int32_t min_height_above_lowest; // 0x1374	
	int32_t min_height_above_highest; // 0x1378	
	int32_t max_horizontal_acceleration; // 0x137c	
	int32_t spring_channel_pct; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Techies_Suicide_Leap : public CDOTA_Buff
{
public:
	Vector m_vLoc; // 0x1338	
	float m_flPredictedTotalTime; // 0x1344	
	Vector m_vStartPosition; // 0x1348	
	float m_flCurrentTimeHoriz; // 0x1354	
	float m_flCurrentTimeVert; // 0x1358	
	bool m_bHorizontalMotionInterrupted; // 0x135c	
	bool m_bDamageApplied; // 0x135d	
	bool m_bTargetTeleported; // 0x135e	
private:
	[[maybe_unused]] uint8_t __pad135f[0x1]; // 0x135f
public:
	Vector m_vHorizontalVelocity; // 0x1360	
	Vector m_vLastKnownTargetPosition; // 0x136c	
	float m_flInitialVelocityZ; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slark_ShadowDance_PassiveRegen : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed; // 0x1338	
	float bonus_regen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Shadow_Demon_Disruption : public CDOTA_Buff
{
public:
	float m_flHealth; // 0x1338	
	float m_flDisseminate_Duration; // 0x133c	
	CHandle< CBaseEntity > m_hDisseminateAbility; // 0x1340	
	ParticleIndex_t m_nFXIndex; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Life_Stealer_Control : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PhantomLancer_Juxtapose_Thinker : public CDOTA_Buff
{
public:
	int32_t max_illusions; // 0x1338	
	int32_t scepter_bonus_illusions; // 0x133c	
	float illusion_duration; // 0x1340	
	int32_t illusion_damage_out_pct; // 0x1344	
	int32_t illusion_damage_in_pct; // 0x1348	
	float scepter_bonus_duration; // 0x134c	
	int32_t m_iIllusionsSoFar; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Earthshaker_Aftershock : public CDOTA_Buff
{
public:
	int32_t aftershock_range; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ProjectileVisionOnMinimap : public CDOTA_Modifier_ProjectileVision
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_WarpineRaider_SeedShot : public CDOTABaseAbility
{
public:
	int32_t m_iBounces; // 0x578	
	int32_t bounces; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x518
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CEnvInstructorHint : public CPointEntity
{
public:
	CUtlSymbolLarge m_iszName; // 0x4a8	
	CUtlSymbolLarge m_iszReplace_Key; // 0x4b0	
	CUtlSymbolLarge m_iszHintTargetEntity; // 0x4b8	
	int32_t m_iTimeout; // 0x4c0	
	int32_t m_iDisplayLimit; // 0x4c4	
	CUtlSymbolLarge m_iszIcon_Onscreen; // 0x4c8	
	CUtlSymbolLarge m_iszIcon_Offscreen; // 0x4d0	
	CUtlSymbolLarge m_iszCaption; // 0x4d8	
	CUtlSymbolLarge m_iszActivatorCaption; // 0x4e0	
	Color m_Color; // 0x4e8	
	float m_fIconOffset; // 0x4ec	
	float m_fRange; // 0x4f0	
	uint8_t m_iPulseOption; // 0x4f4	
	uint8_t m_iAlphaOption; // 0x4f5	
	uint8_t m_iShakeOption; // 0x4f6	
	bool m_bStatic; // 0x4f7	
	bool m_bNoOffscreen; // 0x4f8	
	bool m_bForceCaption; // 0x4f9	
private:
	[[maybe_unused]] uint8_t __pad04fa[0x2]; // 0x4fa
public:
	int32_t m_iInstanceType; // 0x4fc	
	bool m_bSuppressRest; // 0x500	
private:
	[[maybe_unused]] uint8_t __pad0501[0x7]; // 0x501
public:
	CUtlSymbolLarge m_iszBinding; // 0x508	
	bool m_bAllowNoDrawTarget; // 0x510	
	bool m_bAutoStart; // 0x511	
	bool m_bLocalPlayerOnly; // 0x512	
	
	// Datamap fields:
	// CUtlSymbolLarge InputShowHint; // 0x0
	// void InputEndHint; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoGameEventProxy : public CPointEntity
{
public:
	CUtlSymbolLarge m_iszEventName; // 0x4a8	
	float m_flRange; // 0x4b0	
	
	// Datamap fields:
	// CUtlSymbolLarge InputGenerateGameEvent; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x510
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float m_FOV"
// MNetworkVarNames "float m_Resolution"
// MNetworkVarNames "bool m_bFogEnable"
// MNetworkVarNames "Color m_FogColor"
// MNetworkVarNames "float m_flFogStart"
// MNetworkVarNames "float m_flFogEnd"
// MNetworkVarNames "float m_flFogMaxDensity"
// MNetworkVarNames "bool m_bActive"
// MNetworkVarNames "bool m_bUseScreenAspectRatio"
// MNetworkVarNames "float m_flAspectRatio"
// MNetworkVarNames "bool m_bNoSky"
// MNetworkVarNames "float m_fBrightness"
// MNetworkVarNames "float m_flZFar"
// MNetworkVarNames "float m_flZNear"
// MNetworkVarNames "bool m_bCanHLTVUse"
// MNetworkVarNames "float m_flOverrideShadowFarZ"
// MNetworkVarNames "bool m_bDofEnabled"
// MNetworkVarNames "float m_flDofNearBlurry"
// MNetworkVarNames "float m_flDofNearCrisp"
// MNetworkVarNames "float m_flDofFarCrisp"
// MNetworkVarNames "float m_flDofFarBlurry"
// MNetworkVarNames "float m_flDofTiltToGround"
class CPointCamera : public CBaseEntity
{
public:
	// MNetworkEnable
	float m_FOV; // 0x4a8	
	// MNetworkEnable
	float m_Resolution; // 0x4ac	
	// MNetworkEnable
	bool m_bFogEnable; // 0x4b0	
	// MNetworkEnable
	Color m_FogColor; // 0x4b1	
private:
	[[maybe_unused]] uint8_t __pad04b5[0x3]; // 0x4b5
public:
	// MNetworkEnable
	float m_flFogStart; // 0x4b8	
	// MNetworkEnable
	float m_flFogEnd; // 0x4bc	
	// MNetworkEnable
	float m_flFogMaxDensity; // 0x4c0	
	// MNetworkEnable
	bool m_bActive; // 0x4c4	
	// MNetworkEnable
	bool m_bUseScreenAspectRatio; // 0x4c5	
private:
	[[maybe_unused]] uint8_t __pad04c6[0x2]; // 0x4c6
public:
	// MNetworkEnable
	float m_flAspectRatio; // 0x4c8	
	// MNetworkEnable
	bool m_bNoSky; // 0x4cc	
private:
	[[maybe_unused]] uint8_t __pad04cd[0x3]; // 0x4cd
public:
	// MNetworkEnable
	float m_fBrightness; // 0x4d0	
	// MNetworkEnable
	float m_flZFar; // 0x4d4	
	// MNetworkEnable
	float m_flZNear; // 0x4d8	
	// MNetworkEnable
	bool m_bCanHLTVUse; // 0x4dc	
private:
	[[maybe_unused]] uint8_t __pad04dd[0x3]; // 0x4dd
public:
	// MNetworkEnable
	float m_flOverrideShadowFarZ; // 0x4e0	
	// MNetworkEnable
	bool m_bDofEnabled; // 0x4e4	
private:
	[[maybe_unused]] uint8_t __pad04e5[0x3]; // 0x4e5
public:
	// MNetworkEnable
	float m_flDofNearBlurry; // 0x4e8	
	// MNetworkEnable
	float m_flDofNearCrisp; // 0x4ec	
	// MNetworkEnable
	float m_flDofFarCrisp; // 0x4f0	
	// MNetworkEnable
	float m_flDofFarBlurry; // 0x4f4	
	// MNetworkEnable
	float m_flDofTiltToGround; // 0x4f8	
	float m_TargetFOV; // 0x4fc	
	float m_DegreesPerSecond; // 0x500	
	bool m_bIsOn; // 0x504	
private:
	[[maybe_unused]] uint8_t __pad0505[0x3]; // 0x505
public:
	CPointCamera* m_pNext; // 0x508	
	
	// Datamap fields:
	// CUtlSymbolLarge InputChangeFOV; // 0x0
	// void InputSetOnAndTurnOthersOff; // 0x0
	// void InputSetOn; // 0x0
	// void InputSetOff; // 0x0
	// void InputForceActive; // 0x0
	// void InputForceInactive; // 0x0
	// void InputEnableDOF; // 0x0
	// void InputDisableDOF; // 0x0
	// float InputSetDOFNearBlurry; // 0x0
	// float InputSetDOFNearCrisp; // 0x0
	// float InputSetDOFFarCrisp; // 0x0
	// float InputSetDOFFarBlurry; // 0x0
	// float InputSetDOFTiltToGround; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Morphling_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x460
// Has VTable
// Construct disallowed
// MNetworkAssumeNotNetworkable
class CBodyComponentBaseModelEntity : public CBodyComponentSkeletonInstance
{
public:
	// Static fields:
	static EntComponentInfo_t &Get_s_EntComponentInfo(){return *reinterpret_cast<EntComponentInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponentBaseModelEntity")->GetStaticFields()[0]->m_pInstance);};
	static int32_t &Get_entity_component_error_class_decl_says_contained_but_impl_is_referenced(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponentBaseModelEntity")->GetStaticFields()[1]->m_pInstance);};
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Seasonal_Dragon : public CDOTA_BaseNPC_Additive
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_AncientApparition : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Neutral_Sleep_AI : public CDOTA_Buff
{
public:
	ParticleIndex_t m_iFXIndex; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_GreaterClarity : public CDOTA_Buff
{
public:
	int32_t total_mana; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Arcane_Blink : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_iStat"
class CDOTA_Item_Vambrace : public CDOTA_Item
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnVambraceStatChanged"
	int32_t m_iStat; // 0x620	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Cornucopia : public CDOTA_Buff_Item
{
public:
	float bonus_health_regen; // 0x1338	
	float bonus_mana_regen; // 0x133c	
	int32_t bonus_damage; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Blight_Stone : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Shivas_Guard : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1338	
	int32_t bonus_armor; // 0x133c	
	int32_t aura_radius; // 0x1340	
	int32_t bonus_hp_regen; // 0x1344	
	int32_t bonus_strength; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Shivas_Guard : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_CraniumBasher : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
	int32_t bash_chance_melee; // 0x133c	
	int32_t bash_chance_ranged; // 0x1340	
	float bash_duration; // 0x1344	
	float bash_cooldown; // 0x1348	
	int32_t bonus_chance_damage; // 0x134c	
	int32_t bonus_damage; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1354[0x4]; // 0x1354
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TrollWarlord_Axe_Invulnerable : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lycan_Shapeshift_Transform : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Jakiro_Liquid_Fire : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DragonKnight_FrostBreath : public CDOTA_Buff
{
public:
	float frost_duration; // 0x1338	
	float frost_aoe; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lich_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lich_ChainFrost : public CDOTABaseAbility
{
public:
	int32_t jump_range; // 0x578	
	int32_t jumps; // 0x57c	
	float slow_duration; // 0x580	
	int32_t vision_radius; // 0x584	
	int32_t projectile_speed; // 0x588	
	int32_t initial_projectile_speed; // 0x58c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Kunkka_GhostShip_Loaded : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Morphling_MorphReplicate : public CDOTABaseAbility
{
public:
	float m_flOldHealthPct; // 0x578	
	float m_flOldManaPct; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Throw_Coal : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Windranger_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Broodmother_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_18 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Reincarnation_250 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_900 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_325 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_150 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Greevil_Miniboss_White_Degen_Aura_Effect : public CDOTA_Buff
{
public:
	int32_t speed_bonus; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Mechanical_Arm : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Woodland_Striders_Active : public CDOTA_Buff
{
public:
	float tree_duration; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Flicker : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_Item_RiverPainter4 : public CDOTA_Item_RiverPainter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_UltimateScepter_Roshan : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_SacredRelic : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VoidSpirit_AstralStep_Intrinsic : public CDOTA_Buff
{
public:
	int32_t ability_chance_pct; // 0x1338	
	int32_t attack_chance_pct; // 0x133c	
	float pop_damage_delay; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mars_ArenaOfBlood_BuffAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Terrorblade_Demon_Zeal : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_EmberSpirit_SleightOfFist : public CDOTABaseAbility
{
public:
	Vector m_vCastLoc; // 0x578	
	int32_t m_nHeroesKilled; // 0x584	
	CUtlVector< CHandle< CBaseEntity > > m_hAttackEntities; // 0x588	
	ParticleIndex_t m_nFXMarkerIndex; // 0x5a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5e8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tusk_IceShards : public CDOTABaseAbility
{
public:
	int32_t m_iProjectile; // 0x578	
	int32_t shard_width; // 0x57c	
	int32_t shard_damage; // 0x580	
	int32_t shard_count; // 0x584	
	float shard_speed; // 0x588	
	float shard_duration; // 0x58c	
	float shard_angle_step; // 0x590	
	int32_t shard_distance; // 0x594	
	Vector m_vSpawnOrigin; // 0x598	
	Vector m_vDirection; // 0x5a4	
	CUtlVector< CHandle< CBaseEntity > > m_vecShards; // 0x5b0	
private:
	[[maybe_unused]] uint8_t __pad05c8[0x8]; // 0x5c8
public:
	CDOTABaseAbility* m_pIceShardsStop; // 0x5d0	
private:
	[[maybe_unused]] uint8_t __pad05d8[0x8]; // 0x5d8
public:
	ParticleIndex_t m_nFXIndex; // 0x5e0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Magnataur_Shockwave_Eruption_Slow : public CDOTA_Buff
{
public:
	int32_t scepter_slow_pct; // 0x1338	
	int32_t scepter_armor_pct; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_KeeperOfTheLight_Illuminate : public CDOTABaseAbility
{
public:
	GameTime_t m_fStartTime; // 0x578	
	int32_t m_iProjectile; // 0x57c	
	ParticleIndex_t m_nFXIndex; // 0x580	
	ParticleIndex_t m_nFXIndexB; // 0x584	
	Vector m_vPos; // 0x588	
	int32_t total_damage; // 0x594	
	bool m_bStarted; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Treant_NaturesGrasp : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_ExortInstance : public CDOTA_Modifier_Invoker_Instance
{
public:
	int32_t bonus_damage_per_instance; // 0x1338	
	float spell_amp; // 0x133c	
	char* m_pSlotName; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Gyrocopter_Flak_Cannon : public CDOTA_Buff
{
public:
	int32_t max_attacks; // 0x1338	
	int32_t bonus_damage; // 0x133c	
	int32_t m_iNumAttacks; // 0x1340	
	int32_t projectile_speed; // 0x1344	
	int32_t bonus_night_vision; // 0x1348	
	int32_t radius; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Batrider_StickyNapalm : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BountyHunter_TrackEffect : public CDOTA_Buff
{
public:
	int32_t bonus_move_speed_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Clockwerk_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Assassin_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Vermillion_Robe : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Courier_ReturnToBase : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Riki_SmokeScreen : public CDOTA_Buff
{
public:
	int32_t miss_rate; // 0x1338	
	int32_t dodge_chance; // 0x133c	
	int32_t block_targeting; // 0x1340	
	int32_t armor_reduction; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lina_LagunaBlade_Superheated : public CDOTA_Buff
{
public:
	int32_t increased_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_ForestTrollHighPriest_ManaAura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x158
// Has VTable
class CDOTABehaviorInvade
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	CHandle< CBaseEntity > m_goalEntity; // 0x148	
	CHandle< CBaseEntity > m_nextGoalEntity; // 0x14c	
	bool m_bReachedFinalGoal; // 0x150	
	bool m_bRequireReachingEndPath; // 0x151	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Aghanim_Spear : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x578	
	CUtlVector< int32 > m_vecProjectileHandles; // 0x590	
private:
	[[maybe_unused]] uint8_t __pad05a8[0x8]; // 0x5a8
public:
	Vector m_vTarget; // 0x5b0	
	Vector m_vSourcePosition; // 0x5bc	
	int32_t damage; // 0x5c8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_Firecrackers : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CDOTASpectatorGraphManager * m_pGraphManager"
class CDOTASpectatorGraphManagerProxy : public CBaseEntity
{
public:
	// MNetworkEnable
	// MNetworkTypeAlias "CDOTASpectatorGraphManager*"
	CDOTASpectatorGraphManager* m_pGraphManager; // 0x4a8	
	
	// Static fields:
	static CDOTASpectatorGraphManagerProxy* &Get_s_pDotaSpectatorGraphProxy(){return *reinterpret_cast<CDOTASpectatorGraphManagerProxy**>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTASpectatorGraphManagerProxy")->GetStaticFields()[0]->m_pInstance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Venomancer_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Naga_Siren_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_Regen_40 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Speed_70 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PudgeMiniboss_ArmorCorruptionStack : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Morty_Hop_Controller : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Day_Vision : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Overflowing_Elixir : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Mirror_Shield : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_MysticStaff : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mars_Spear_Impale : public CDOTA_Buff
{
public:
	int32_t m_nProjectileHandle; // 0x1338	
	bool m_bLatched; // 0x133c	
	bool m_bHitArenaOfBlood; // 0x133d	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_MonkeyKing_Spring_Early : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Shredder_WhirlingDeath_Debuff : public CDOTA_Buff
{
public:
	float stat_loss_pct; // 0x1338	
	int32_t stat_loss_univ; // 0x133c	
	int32_t iPrimaryAttribute; // 0x1340	
	float flStatLossStr; // 0x1344	
	float flStatLossAgi; // 0x1348	
	float flStatLossInt; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Chen_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_ShadowShaman_Serpentine : public CDOTABaseAbility
{
public:
	int32_t length; // 0x578	
	int32_t count; // 0x57c	
	Vector m_vStartPosition; // 0x580	
	Vector m_vEndPosition; // 0x58c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Bloodseeker_BloodMist : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Taunt : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Fountain_Truesight_Aura : public CDOTA_Modifier_Truesight_Aura
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 16
// Size: 0x540
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CBaseMoveBehavior : public CPathKeyFrame
{
public:
	int32_t m_iPositionInterpolator; // 0x500	
	int32_t m_iRotationInterpolator; // 0x504	
	float m_flAnimStartTime; // 0x508	
	float m_flAnimEndTime; // 0x50c	
	float m_flAverageSpeedAcrossFrame; // 0x510	
private:
	[[maybe_unused]] uint8_t __pad0514[0x4]; // 0x514
public:
	CPathKeyFrame* m_pCurrentKeyFrame; // 0x518	
	CPathKeyFrame* m_pTargetKeyFrame; // 0x520	
	CPathKeyFrame* m_pPreKeyFrame; // 0x528	
	CPathKeyFrame* m_pPostKeyFrame; // 0x530	
	float m_flTimeIntoFrame; // 0x538	
	int32_t m_iDirection; // 0x53c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x770
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFuncInteractionLayerClip : public CBaseModelEntity
{
public:
	bool m_bDisabled; // 0x758	
private:
	[[maybe_unused]] uint8_t __pad0759[0x7]; // 0x759
public:
	CUtlSymbolLarge m_iszInteractsAs; // 0x760	
	CUtlSymbolLarge m_iszInteractsWith; // 0x768	
	
	// Datamap fields:
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Consumable_Hidden : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Abaddon : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Slark : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Sniper_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lone_Druid_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Gold_lvl25_l : public CDOTA_Ability_Special_Bonus_Gold_Ability_Draft
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x128
// Has VTable
// MNetworkNoBase
// 
// MNetworkIncludeByName "m_ProviderType"
// MNetworkIncludeByName "m_hOuter"
// MNetworkIncludeByName "m_iReapplyProvisionParity"
// MNetworkIncludeByName "m_Item"
// MNetworkVarNames "CEconItemView m_Item"
class CAttributeContainer : public CAttributeManager
{
public:
	// MNetworkEnable
	CEconItemView m_Item; // 0x68	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xc0
// Has VTable
// Is Abstract
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_nTotalPausedTicks"
// MNetworkVarNames "int m_nPauseStartTick"
// MNetworkVarNames "bool m_bGamePaused"
class CGameRules
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	CNetworkVarChainer __m_pChainEntity; // 0x8	
	char m_szQuestName[128]; // 0x30	
	int32_t m_nQuestPhase; // 0xb0	
	// MNetworkEnable
	int32_t m_nTotalPausedTicks; // 0xb4	
	// MNetworkEnable
	int32_t m_nPauseStartTick; // 0xb8	
	// MNetworkEnable
	bool m_bGamePaused; // 0xbc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Hoodwink : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mutation_KillstreakPower_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9f8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class COrnamentProp : public CDynamicProp
{
public:
	CUtlSymbolLarge m_initialOwner; // 0x9f0	
	
	// Datamap fields:
	// CUtlSymbolLarge InputSetAttached; // 0x0
	// void InputDetach; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x978
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkExcludeByName "m_flAnimTime"
// MNetworkExcludeByUserGroup "m_flCycle"
// MNetworkExcludeByName "m_flPoseParameter"
// MNetworkExcludeByName "m_flSimulationTime"
// MNetworkVarNames "int m_iRuneType"
// MNetworkVarNames "float m_flRuneTime"
// MNetworkVarNames "int m_nMapLocationTeam"
// MNetworkVarNames "char m_szLocation"
class CDOTA_Item_Rune : public CBaseAnimatingActivity
{
public:
	CHandle< CBaseEntity > m_hRuneSpawner; // 0x768	
	// MNetworkEnable
	int32_t m_iRuneType; // 0x76c	
	// MNetworkEnable
	// MNetworkBitCount "4"
	float m_flRuneTime; // 0x770	
	// MNetworkEnable
	int32_t m_nMapLocationTeam; // 0x774	
	// MNetworkEnable
	char m_szLocation[512]; // 0x778	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_SpecialistsArray : public CDOTA_Buff_Item
{
public:
	int32_t all_stats; // 0x1338	
	int32_t bonus_damage; // 0x133c	
	int32_t proc_bonus_damage; // 0x1340	
	int32_t count; // 0x1344	
	int32_t secondary_target_range_bonus; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Wind_Waker : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hBlocker; // 0x1338	
	GameTime_t m_flStartTime; // 0x133c	
	Vector m_vStartPos; // 0x1340	
	float m_flCurTime; // 0x134c	
	float m_flHeightT; // 0x1350	
	Vector m_vMoveToPos; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_SuperSwift_Blink : public CDOTA_Modifier_Item_Swift_Blink
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Passive_Mango_Tree : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTree; // 0x1338	
	int32_t m_nMangoSeconds; // 0x133c	
	CountdownTimer m_MangoTimer; // 0x1340	
	int32_t m_nRespawnSeconds; // 0x1358	
private:
	[[maybe_unused]] uint8_t __pad135c[0x4]; // 0x135c
public:
	CountdownTimer m_RespawnTimer; // 0x1360	
	int32_t m_nMangosAvailable; // 0x1378	
	int32_t m_nChannelCount; // 0x137c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Helm_Of_The_Undying : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Grove_Bow : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Solar_Crest_Armor_Addition : public CDOTA_Buff
{
public:
	int32_t target_armor; // 0x1338	
	int32_t target_attack_speed; // 0x133c	
	int32_t target_movement_speed; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Smoke_Of_Deceit : public CDOTA_Modifier_Invisible
{
public:
	int32_t bonus_movement_speed; // 0x1348	
	int32_t visibility_radius; // 0x134c	
	int32_t secondary_application_radius; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_VoidwalkerScythe : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x630
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Armlet : public CDOTA_Item
{
public:
	float toggle_cooldown; // 0x620	
	GameTime_t m_flLastActivateTime; // 0x624	
	GameTime_t m_flLastDeactivateTime; // 0x628	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hoodwink_HeavyQuiver : public CDOTA_Buff
{
public:
	int32_t bonus_projectile_speed_pct; // 0x1338	
	int32_t bonus_attack_range; // 0x133c	
	int32_t deadly_blow_multiplier; // 0x1340	
	float maim_duration; // 0x1344	
	int32_t m_nAttackRecord; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13a0
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mars_ArenaOfBlood : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t width; // 0x133c	
	int32_t spear_damage; // 0x1340	
	int32_t spear_distance_from_wall; // 0x1344	
	float spear_attack_interval; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad134c[0x34]; // 0x134c
public:
	int32_t m_hObstruction; // 0x1380	
private:
	[[maybe_unused]] uint8_t __pad1384[0x4]; // 0x1384
public:
	CUtlVector< Vector > m_vecAvoidLocations; // 0x1388	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Grimstroke_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Magnus_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nyx_Assassin_Vendetta : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Undying_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DeathProphet_SpiritSiphon_Buff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Riki_Poison_Dart : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ShadowShaman_Voodoo : public CDOTA_Modifier_Hexed
{
public:
	int32_t movespeed; // 0x1338	
	int32_t damage_amp; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Greevil_Miniboss_Orange_DragonSlave : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLogicGameEvent : public CLogicalEntity
{
public:
	CUtlSymbolLarge m_iszEventName; // 0x4a8	
	
	// Datamap fields:
	// void InputFireEvent; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bounty_Hunter_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Doom_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dragon_Knight : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Viper_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Movement_Speed_40 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Speed_160 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mutation_StationaryDamageReduction : public CDOTA_Buff
{
public:
	int32_t m_iReductionPct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_Aziyog_Underlord_Firestorm_Thinker : public CDOTA_Buff
{
public:
	int32_t wave_damage; // 0x1338	
	int32_t wave_count; // 0x133c	
	int32_t radius; // 0x1340	
	int32_t summon_count; // 0x1344	
	float wave_interval; // 0x1348	
	float burn_duration; // 0x134c	
	float first_wave_delay; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_ManaclesOfPower_Effect : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hPartner; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
	float leash_distance; // 0x1340	
	float leash_limit_multiplier; // 0x1344	
	CHandle< CBaseEntity > m_hAnchor; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_PogoStick : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_PhaseBoots : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ClarityPotion : public CDOTA_Buff
{
public:
	float mana_regen; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Muerta_PierceTheVeil : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DarkWillow_Terrorize_Thinker : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hWisp; // 0x1338	
	int32_t destination_travel_speed; // 0x133c	
	int32_t return_travel_speed; // 0x1340	
	int32_t destination_radius; // 0x1344	
	float destination_status_duration; // 0x1348	
	float initial_delay; // 0x134c	
	float starting_height; // 0x1350	
	Vector m_vAttackLocation; // 0x1354	
	bool m_bAttacking; // 0x1360	
	bool m_bReturning; // 0x1361	
private:
	[[maybe_unused]] uint8_t __pad1362[0x2]; // 0x1362
public:
	float m_fCurHeight; // 0x1364	
	float m_fEstimatedTravelTime; // 0x1368	
	float think_interval; // 0x136c	
	bool m_bInFlight; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Silence : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Furion_Sprout_Tether : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slardar_Sprint_River : public CDOTA_Buff
{
public:
	int32_t river_speed; // 0x1338	
	int32_t puddle_regen; // 0x133c	
	int32_t puddle_armor; // 0x1340	
	int32_t puddle_status_resistance; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Necrolyte_Heartstopper_Aura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Earthshaker_Shard : public CDOTA_Buff_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DrowRanger_Arcana : public CDOTA_Buff
{
public:
	bool m_bFlawlessVictoryProgressGranted; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DrowRanger_Marksmanship : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nevermore_Necromastery : public CDOTA_Buff
{
public:
	int32_t necromastery_damage_per_soul; // 0x1338	
	int32_t necromastery_max_souls; // 0x133c	
	int32_t necromastery_max_souls_scepter; // 0x1340	
	int32_t shard_crit_pct; // 0x1344	
	int32_t shard_souls_per_kill; // 0x1348	
	float shard_fear_duration; // 0x134c	
	ParticleIndex_t m_iParticleSoulsIndex; // 0x1350	
	ParticleIndex_t m_FXIndex; // 0x1354	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1510
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AntiMage_Counterspell : public CDOTA_Buff
{
public:
	CModifierParams m_LastParams; // 0x1338	
	int32_t magic_resistance; // 0x1508	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4f0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPhysicsSpring : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x8]; // 0x4a8
public:
	float m_flFrequency; // 0x4b0	
	float m_flDampingRatio; // 0x4b4	
	float m_flRestLength; // 0x4b8	
private:
	[[maybe_unused]] uint8_t __pad04bc[0x4]; // 0x4bc
public:
	CUtlSymbolLarge m_nameAttachStart; // 0x4c0	
	CUtlSymbolLarge m_nameAttachEnd; // 0x4c8	
	Vector m_start; // 0x4d0	
	Vector m_end; // 0x4dc	
	uint32_t m_teleportTick; // 0x4e8	
	
	// Datamap fields:
	// void m_pSpringJoint; // 0x4a8
	// float InputSetFrequency; // 0x0
	// float InputSetDampingRatio; // 0x0
	// float InputSetRestLength; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x14f0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "HRenderTextureStrong m_Entity_hLightProbeTexture"
// MNetworkVarNames "HRenderTextureStrong m_Entity_hLightProbeDirectLightIndicesTexture"
// MNetworkVarNames "HRenderTextureStrong m_Entity_hLightProbeDirectLightScalarsTexture"
// MNetworkVarNames "HRenderTextureStrong m_Entity_hLightProbeDirectLightShadowsTexture"
// MNetworkVarNames "Vector m_Entity_vBoxMins"
// MNetworkVarNames "Vector m_Entity_vBoxMaxs"
// MNetworkVarNames "bool m_Entity_bMoveable"
// MNetworkVarNames "int m_Entity_nHandshake"
// MNetworkVarNames "int m_Entity_nPriority"
// MNetworkVarNames "bool m_Entity_bStartDisabled"
// MNetworkVarNames "int m_Entity_nLightProbeSizeX"
// MNetworkVarNames "int m_Entity_nLightProbeSizeY"
// MNetworkVarNames "int m_Entity_nLightProbeSizeZ"
// MNetworkVarNames "int m_Entity_nLightProbeAtlasX"
// MNetworkVarNames "int m_Entity_nLightProbeAtlasY"
// MNetworkVarNames "int m_Entity_nLightProbeAtlasZ"
// MNetworkVarNames "bool m_Entity_bEnabled"
class CEnvLightProbeVolume : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0xfd8]; // 0x4a8
public:
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_Entity_hLightProbeTexture; // 0x1480	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_Entity_hLightProbeDirectLightIndicesTexture; // 0x1488	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_Entity_hLightProbeDirectLightScalarsTexture; // 0x1490	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_Entity_hLightProbeDirectLightShadowsTexture; // 0x1498	
	// MNetworkEnable
	Vector m_Entity_vBoxMins; // 0x14a0	
	// MNetworkEnable
	Vector m_Entity_vBoxMaxs; // 0x14ac	
	// MNetworkEnable
	bool m_Entity_bMoveable; // 0x14b8	
private:
	[[maybe_unused]] uint8_t __pad14b9[0x3]; // 0x14b9
public:
	// MNetworkEnable
	int32_t m_Entity_nHandshake; // 0x14bc	
	// MNetworkEnable
	int32_t m_Entity_nPriority; // 0x14c0	
	// MNetworkEnable
	bool m_Entity_bStartDisabled; // 0x14c4	
private:
	[[maybe_unused]] uint8_t __pad14c5[0x3]; // 0x14c5
public:
	// MNetworkEnable
	int32_t m_Entity_nLightProbeSizeX; // 0x14c8	
	// MNetworkEnable
	int32_t m_Entity_nLightProbeSizeY; // 0x14cc	
	// MNetworkEnable
	int32_t m_Entity_nLightProbeSizeZ; // 0x14d0	
	// MNetworkEnable
	int32_t m_Entity_nLightProbeAtlasX; // 0x14d4	
	// MNetworkEnable
	int32_t m_Entity_nLightProbeAtlasY; // 0x14d8	
	// MNetworkEnable
	int32_t m_Entity_nLightProbeAtlasZ; // 0x14dc	
private:
	[[maybe_unused]] uint8_t __pad14e0[0x9]; // 0x14e0
public:
	// MNetworkEnable
	bool m_Entity_bEnabled; // 0x14e9	
	
	// Datamap fields:
	// void m_Entity_pSceneObject; // 0x14e0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Enchantress_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Arc_Warden_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Queen_Of_Pain : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cooldown_Reduction_50 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1870
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "char m_pszNetworkedSoundLoop"
// MNetworkVarNames "int m_nLoopingSoundParity"
class CDOTA_Unit_LoopingSound : public CDOTA_BaseNPC_Additive
{
public:
	// MNetworkEnable
	char m_pszNetworkedSoundLoop[256]; // 0x1768	
	// MNetworkEnable
	int32_t m_nLoopingSoundParity; // 0x1868	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Greevil_Miniboss_White_Degen_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AncientRockGolem_Weakening : public CDOTA_Buff
{
public:
	int32_t armor_reduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Turbo_Courier_Haste : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x970
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CScriptTriggerPush : public CTriggerPush
{
public:
	Vector m_vExtent; // 0x960	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_GuardianShell_Active : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_SamplePicker : public CDOTA_Buff_Item
{
public:
	int32_t base_gold; // 0x1338	
	int32_t gold_per_level; // 0x133c	
	int32_t strength_penalty; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Ironwood_tree : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Nullifier : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_MaskOfMadness : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_TalismanOfEvasion : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_ChainMail : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_BootsOfTravel_2 : public CDOTA_Item_Recipe_BootsOfTravel
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Snapfire_Magma_Burn_Slow : public CDOTA_Buff
{
public:
	int32_t m_nMoveSlowPct; // 0x1338	
	float m_fBurnDamagePerTick; // 0x133c	
	int32_t move_slow_pct; // 0x1340	
	float burn_interval; // 0x1344	
	int32_t burn_damage; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_Spring_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EmberSpirit_FireRemnant_Shard : public CDOTA_Buff
{
public:
	int32_t shard_radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Brewmaster_DrunkenBrawler_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_FacelessVoid_TimeWalk : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x10]; // 0x578
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x588	
	int32_t speed; // 0x58c	
	int32_t range; // 0x590	
	int32_t radius; // 0x594	
	int32_t m_nProjectileID; // 0x598	
	Vector m_vProjectileLocation; // 0x59c	
	Vector m_vStartLocation; // 0x5a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Beastmaster_PrimalRoar : public CDOTABaseAbility
{
public:
	float duration; // 0x578	
	float slow_duration; // 0x57c	
	int32_t side_damage; // 0x580	
	int32_t damage_radius; // 0x584	
	int32_t path_width; // 0x588	
	float push_duration; // 0x58c	
	int32_t push_distance; // 0x590	
	int32_t damage; // 0x594	
	float movement_speed_duration; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Warlock_Shadow_Word : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Puck : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Greevil_Miniboss_Yellow_IonShell : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Greevil_Miniboss_Red_Overpower : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoSpawnGroupLoadUnloadAlias_info_spawngroup_unload : public CInfoSpawnGroupLoadUnload
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x760
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFuncWallToggle : public CFuncWall
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bounty_Hunter_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Necrophos_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Huskar_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cast_Speed_30 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x50
// Has VTable
// 
// MNetworkVarNames "int m_nTier"
// MNetworkVarNames "AbilityID_t m_nAbilityID"
struct TierNeutralInfo_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	int32_t m_nTier; // 0x30	
private:
	[[maybe_unused]] uint8_t __pad0034[0x4]; // 0x34
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< AbilityID_t > m_nAbilityID; // 0x38	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x180
// Has VTable
// MNetworkNoBase
// 
// MNetworkVarNames "char m_CustomShopName"
// MNetworkVarNames "CDOTACustomShopItemInfo m_CustomShopItems"
class CDOTACustomShopInfo
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	char m_CustomShopName[256]; // 0x30	
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< CDOTACustomShopItemInfo > m_CustomShopItems; // 0x130	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Greevil_Miniboss_Yellow_IonShell : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t damage_per_second; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BlueDragonspawnOverseer_DevotionAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seasonal_TI11_DuelAccepted : public CDOTA_Buff
{
public:
	PlayerID_t m_nDuelOpponent; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Wave_Blast_Knockback : public CDOTA_Buff
{
public:
	float disarm_duration; // 0x1338	
	Vector m_vPushDir; // 0x133c	
	GameTime_t m_flStartTime; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Witch_Blade_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
	float int_damage_multiplier; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Royale_With_Cheese : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Necronomicon_Warrior_Sight : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Crimson_Guard : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_DustofAppearance : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Broadsword : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Marci_Grapple_VictimMotion : public CDOTA_Buff
{
public:
	int32_t impact_damage; // 0x1338	
	float debuff_duration; // 0x133c	
	int32_t landing_radius; // 0x1340	
	float air_duration; // 0x1344	
	int32_t air_height; // 0x1348	
	int32_t travel_distance; // 0x134c	
	Vector m_vDestination; // 0x1350	
	float m_flStartZ; // 0x135c	
	float m_flCurTime; // 0x1360	
	float m_flJumpDuration; // 0x1364	
	float m_flJumpHeight; // 0x1368	
	Vector m_vTargetHorizontalDirection; // 0x136c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AbyssalUnderlord_DarkRift : public CDOTABaseAbility
{
public:
	float teleport_delay; // 0x578	
	CHandle< CBaseEntity > m_hTeleportTarget; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Magnus_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13b8
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rattletrap_JetPack : public CDOTA_Buff
{
public:
	int32_t m_nMovementSpeed; // 0x1338	
	int32_t bonus_speed; // 0x133c	
	float turn_rate; // 0x1340	
	GameTime_t m_flStartTime; // 0x1344	
	float tick_interval; // 0x1348	
	float m_flFacingTarget; // 0x134c	
	ParticleIndex_t m_nFXIndex; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1354[0x4]; // 0x1354
public:
	CUtlVector< float32 > m_flTurnHistory; // 0x1358	
	CUtlVector< CHandle< CBaseEntity > > m_vecHeroesHitLastRicochet; // 0x1370	
	CUtlVector< CHandle< CBaseEntity > > m_vecHeroesCredited; // 0x1388	
	CUtlVector< CHandle< CBaseEntity > > m_vecHeroesHitCurrentRicochet; // 0x13a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_CallOfTheWild_Boar_PoisonEffect : public CDOTA_Buff
{
public:
	int32_t attack_speed; // 0x1338	
	int32_t movement_speed; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_CallOfTheWild_Boar_Poison : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tidehunter_Ravage : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hEntsHit; // 0x578	
	bool m_bAwardedKillEater; // 0x590	
private:
	[[maybe_unused]] uint8_t __pad0591[0x3]; // 0x591
public:
	float duration; // 0x594	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bane_FiendsGrip_Illusion : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLogicAutosave : public CLogicalEntity
{
public:
	bool m_bForceNewLevelUnit; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	int32_t m_minHitPoints; // 0x4ac	
	int32_t m_minHitPointsToCommit; // 0x4b0	
	
	// Datamap fields:
	// void InputSave; // 0x0
	// float InputSaveDangerous; // 0x0
	// int32_t InputSetMinHitpointsThreshold; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x158
// Has VTable
class CDOTABehaviorCommandMoveToNPCToGive
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	CHandle< CBaseEntity > m_hTarget; // 0x148	
	int32_t m_nMovementState; // 0x14c	
	CHandle< CBaseEntity > m_hItem; // 0x150	
	float m_flRange; // 0x154	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Slark_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ember_Spirit_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Death_Prophet_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cooldown_Reduction_20 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xb8
// Has VTable
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CRenderComponent : public CEntityComponent
{
private:
	[[maybe_unused]] uint8_t __pad0008[0x8]; // 0x8
public:
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	CNetworkVarChainer __m_pChainEntity; // 0x10	
private:
	[[maybe_unused]] uint8_t __pad0038[0x18]; // 0x38
public:
	bool m_bIsRenderingWithViewModels; // 0x50	
private:
	[[maybe_unused]] uint8_t __pad0051[0x3]; // 0x51
public:
	uint32_t m_nSplitscreenFlags; // 0x54	
private:
	[[maybe_unused]] uint8_t __pad0058[0x8]; // 0x58
public:
	bool m_bEnableRendering; // 0x60	
private:
	[[maybe_unused]] uint8_t __pad0061[0x4f]; // 0x61
public:
	bool m_bInterpolationReadyToDraw; // 0xb0	
	
	// Static fields:
	static EntComponentInfo_t &Get_s_EntComponentInfo(){return *reinterpret_cast<EntComponentInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CRenderComponent")->GetStaticFields()[0]->m_pInstance);};
	static int32_t &Get_entity_component_error_class_decl_says_contained_but_impl_is_referenced(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CRenderComponent")->GetStaticFields()[1]->m_pInstance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Jakiro : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Swift_Blink : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Trident : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Bracer : public CDOTA_Item
{
public:
	int32_t counter; // 0x620	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_PrimalBeast_Pulverize : public CDOTABaseAbility
{
public:
	CDOTA_BaseNPC* m_hTarget; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_TrollWarlord_BattleTrance : public CDOTABaseAbility
{
public:
	float trance_duration; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5f0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_SpiritBreaker_ChargeOfDarkness : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x10]; // 0x578
public:
	bool m_bFinished; // 0x588	
	bool m_bInterrupted; // 0x589	
	bool m_bPlayedChargeAnimation; // 0x58a	
private:
	[[maybe_unused]] uint8_t __pad058b[0x1]; // 0x58b
public:
	Vector m_vProjectileLocation; // 0x58c	
	Vector m_vTargetLocation; // 0x598	
	CHandle< CBaseEntity > m_hTarget; // 0x5a4	
	CUtlVector< CHandle< CBaseEntity > > m_hTrackingProjectileHits; // 0x5a8	
	CUtlVector< CDOTA_Tree* > m_hTrackingProjectileTrees; // 0x5c0	
	int32_t nFXIndex; // 0x5d8	
	int32_t m_iCurProjectileIndex; // 0x5dc	
	Vector m_vChargeStartPos; // 0x5e0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Spectre_Reality : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Chen_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Clinkz_11 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lina_SuperCharged : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Earthshaker_Fissure_Shard : public CDOTA_Buff
{
public:
	int32_t shard_aftershock_stun_duration_pct; // 0x1338	
	float shard_free_pathing_linger_duration; // 0x133c	
	Vector m_vStartPos; // 0x1340	
	Vector m_vEndPos; // 0x134c	
	GameTime_t m_flEndTime; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_StormSpirit_Overload : public CDOTA_Buff
{
public:
	int32_t overload_aoe; // 0x1338	
	int32_t overload_cast_range; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Juggernaut_Healing_Ward_Aura : public CDOTA_Buff
{
public:
	int32_t healing_ward_movespeed_tooltip; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Greevil_Miniboss_Sight : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CSoundEventPathCornerEntity : public CSoundEventEntity
{
public:
	CUtlSymbolLarge m_iszPathCorner; // 0x558	
	int32_t m_iCountMax; // 0x560	
	float m_flDistanceMax; // 0x564	
	float m_flDistMaxSqr; // 0x568	
	float m_flDotProductMax; // 0x56c	
	bool bPlaying; // 0x570	
	
	// Datamap fields:
	// void CSoundEventPathCornerEntitySoundEventPathCornerThink; // 0x0
	// void m_vecPathCornerPairs; // 0x578
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Abaddon_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
class CGameRulesProxy : public CBaseEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x548
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CEnvSoundscapeProxyAlias_snd_soundscape_proxy : public CEnvSoundscapeProxy
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1b8
// Has VTable
// Construct disallowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "Color m_Color"
// MNetworkVarNames "Color m_SecondaryColor"
// MNetworkVarNames "float m_flBrightness"
// MNetworkVarNames "float m_flBrightnessScale"
// MNetworkVarNames "float m_flBrightnessMult"
// MNetworkVarNames "float m_flRange"
// MNetworkVarNames "float m_flFalloff"
// MNetworkVarNames "float m_flAttenuation0"
// MNetworkVarNames "float m_flAttenuation1"
// MNetworkVarNames "float m_flAttenuation2"
// MNetworkVarNames "float m_flTheta"
// MNetworkVarNames "float m_flPhi"
// MNetworkVarNames "HRenderTextureStrong m_hLightCookie"
// MNetworkVarNames "int m_nCascades"
// MNetworkVarNames "int m_nCastShadows"
// MNetworkVarNames "int m_nShadowWidth"
// MNetworkVarNames "int m_nShadowHeight"
// MNetworkVarNames "bool m_bRenderDiffuse"
// MNetworkVarNames "int m_nRenderSpecular"
// MNetworkVarNames "bool m_bRenderTransmissive"
// MNetworkVarNames "float m_flOrthoLightWidth"
// MNetworkVarNames "float m_flOrthoLightHeight"
// MNetworkVarNames "int m_nStyle"
// MNetworkVarNames "CUtlString m_Pattern"
// MNetworkVarNames "int m_nCascadeRenderStaticObjects"
// MNetworkVarNames "float m_flShadowCascadeCrossFade"
// MNetworkVarNames "float m_flShadowCascadeDistanceFade"
// MNetworkVarNames "float m_flShadowCascadeDistance0"
// MNetworkVarNames "float m_flShadowCascadeDistance1"
// MNetworkVarNames "float m_flShadowCascadeDistance2"
// MNetworkVarNames "float m_flShadowCascadeDistance3"
// MNetworkVarNames "int m_nShadowCascadeResolution0"
// MNetworkVarNames "int m_nShadowCascadeResolution1"
// MNetworkVarNames "int m_nShadowCascadeResolution2"
// MNetworkVarNames "int m_nShadowCascadeResolution3"
// MNetworkVarNames "bool m_bUsesBakedShadowing"
// MNetworkVarNames "int m_nShadowPriority"
// MNetworkVarNames "int m_nBakedShadowIndex"
// MNetworkVarNames "bool m_bRenderToCubemaps"
// MNetworkVarNames "int m_nDirectLight"
// MNetworkVarNames "int m_nIndirectLight"
// MNetworkVarNames "float m_flFadeMinDist"
// MNetworkVarNames "float m_flFadeMaxDist"
// MNetworkVarNames "float m_flShadowFadeMinDist"
// MNetworkVarNames "float m_flShadowFadeMaxDist"
// MNetworkVarNames "bool m_bEnabled"
// MNetworkVarNames "bool m_bFlicker"
// MNetworkVarNames "bool m_bPrecomputedFieldsValid"
// MNetworkVarNames "Vector m_vPrecomputedBoundsMins"
// MNetworkVarNames "Vector m_vPrecomputedBoundsMaxs"
// MNetworkVarNames "Vector m_vPrecomputedOBBOrigin"
// MNetworkVarNames "QAngle m_vPrecomputedOBBAngles"
// MNetworkVarNames "Vector m_vPrecomputedOBBExtent"
// MNetworkVarNames "float m_flPrecomputedMaxRange"
// MNetworkVarNames "int m_nFogLightingMode"
// MNetworkVarNames "float m_flFogContributionStength"
// MNetworkVarNames "float m_flNearClipPlane"
// MNetworkVarNames "Color m_SkyColor"
// MNetworkVarNames "float m_flSkyIntensity"
// MNetworkVarNames "Color m_SkyAmbientBounce"
// MNetworkVarNames "bool m_bUseSecondaryColor"
// MNetworkVarNames "bool m_bMixedShadows"
// MNetworkVarNames "GameTime_t m_flLightStyleStartTime"
// MNetworkVarNames "float m_flCapsuleLength"
// MNetworkVarNames "float m_flMinRoughness"
class CLightComponent : public CEntityComponent
{
private:
	[[maybe_unused]] uint8_t __pad0008[0x30]; // 0x8
public:
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	CNetworkVarChainer __m_pChainEntity; // 0x38	
private:
	[[maybe_unused]] uint8_t __pad0060[0x15]; // 0x60
public:
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	Color m_Color; // 0x75	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	Color m_SecondaryColor; // 0x79	
private:
	[[maybe_unused]] uint8_t __pad007d[0x3]; // 0x7d
public:
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flBrightness; // 0x80	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flBrightnessScale; // 0x84	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flBrightnessMult; // 0x88	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flRange; // 0x8c	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flFalloff; // 0x90	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flAttenuation0; // 0x94	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flAttenuation1; // 0x98	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flAttenuation2; // 0x9c	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flTheta; // 0xa0	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flPhi; // 0xa4	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	CStrongHandle< InfoForResourceTypeCTextureBase > m_hLightCookie; // 0xa8	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nCascades; // 0xb0	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nCastShadows; // 0xb4	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nShadowWidth; // 0xb8	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nShadowHeight; // 0xbc	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	bool m_bRenderDiffuse; // 0xc0	
private:
	[[maybe_unused]] uint8_t __pad00c1[0x3]; // 0xc1
public:
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nRenderSpecular; // 0xc4	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	bool m_bRenderTransmissive; // 0xc8	
private:
	[[maybe_unused]] uint8_t __pad00c9[0x3]; // 0xc9
public:
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flOrthoLightWidth; // 0xcc	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flOrthoLightHeight; // 0xd0	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nStyle; // 0xd4	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	CUtlString m_Pattern; // 0xd8	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nCascadeRenderStaticObjects; // 0xe0	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flShadowCascadeCrossFade; // 0xe4	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flShadowCascadeDistanceFade; // 0xe8	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flShadowCascadeDistance0; // 0xec	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flShadowCascadeDistance1; // 0xf0	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flShadowCascadeDistance2; // 0xf4	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flShadowCascadeDistance3; // 0xf8	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nShadowCascadeResolution0; // 0xfc	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nShadowCascadeResolution1; // 0x100	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nShadowCascadeResolution2; // 0x104	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nShadowCascadeResolution3; // 0x108	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	// MNetworkAlias "m_bUsesIndexedBakedLighting"
	bool m_bUsesBakedShadowing; // 0x10c	
private:
	[[maybe_unused]] uint8_t __pad010d[0x3]; // 0x10d
public:
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nShadowPriority; // 0x110	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	int32_t m_nBakedShadowIndex; // 0x114	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	bool m_bRenderToCubemaps; // 0x118	
private:
	[[maybe_unused]] uint8_t __pad0119[0x3]; // 0x119
public:
	// MNetworkEnable
	int32_t m_nDirectLight; // 0x11c	
	// MNetworkEnable
	int32_t m_nIndirectLight; // 0x120	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flFadeMinDist; // 0x124	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flFadeMaxDist; // 0x128	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flShadowFadeMinDist; // 0x12c	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flShadowFadeMaxDist; // 0x130	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	bool m_bEnabled; // 0x134	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	bool m_bFlicker; // 0x135	
	// MNetworkEnable
	bool m_bPrecomputedFieldsValid; // 0x136	
private:
	[[maybe_unused]] uint8_t __pad0137[0x1]; // 0x137
public:
	// MNetworkEnable
	Vector m_vPrecomputedBoundsMins; // 0x138	
	// MNetworkEnable
	Vector m_vPrecomputedBoundsMaxs; // 0x144	
	// MNetworkEnable
	Vector m_vPrecomputedOBBOrigin; // 0x150	
	// MNetworkEnable
	QAngle m_vPrecomputedOBBAngles; // 0x15c	
	// MNetworkEnable
	Vector m_vPrecomputedOBBExtent; // 0x168	
	// MNetworkEnable
	float m_flPrecomputedMaxRange; // 0x174	
	// MNetworkEnable
	int32_t m_nFogLightingMode; // 0x178	
	// MNetworkEnable
	float m_flFogContributionStength; // 0x17c	
	// MNetworkEnable
	float m_flNearClipPlane; // 0x180	
	// MNetworkEnable
	Color m_SkyColor; // 0x184	
	// MNetworkEnable
	float m_flSkyIntensity; // 0x188	
	// MNetworkEnable
	Color m_SkyAmbientBounce; // 0x18c	
	// MNetworkEnable
	bool m_bUseSecondaryColor; // 0x190	
	// MNetworkEnable
	// MNetworkChangeCallback "MixedShadowsChanged"
	bool m_bMixedShadows; // 0x191	
private:
	[[maybe_unused]] uint8_t __pad0192[0x2]; // 0x192
public:
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	GameTime_t m_flLightStyleStartTime; // 0x194	
	// MNetworkEnable
	float m_flCapsuleLength; // 0x198	
	// MNetworkEnable
	// MNetworkChangeCallback "LightRenderingChanged"
	float m_flMinRoughness; // 0x19c	
private:
	[[maybe_unused]] uint8_t __pad01a0[0x10]; // 0x1a0
public:
	bool m_bPvsModifyEntity; // 0x1b0	
	
	// Static fields:
	static EntComponentInfo_t &Get_s_EntComponentInfo(){return *reinterpret_cast<EntComponentInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CLightComponent")->GetStaticFields()[0]->m_pInstance);};
	static int32_t &Get_entity_component_error_class_decl_says_contained_but_impl_is_referenced(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CLightComponent")->GetStaticFields()[1]->m_pInstance);};
	
	// Datamap fields:
	// SHIM m_bRenderSpecular; // 0xc4
	// SHIM m_bCastShadows; // 0xb4
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BlackDragon_DragonhideAura_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x960
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CScriptTriggerMultiple : public CTriggerMultiple
{
public:
	Vector m_vExtent; // 0x950	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1398
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Gungir : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t bonus_attack_speed; // 0x133c	
	int32_t bonus_strength; // 0x1340	
	int32_t bonus_agility; // 0x1344	
	int32_t bonus_intellect; // 0x1348	
	int32_t bonus_hp; // 0x134c	
	int32_t chain_chance; // 0x1350	
	int32_t chain_strikes; // 0x1354	
	int32_t chain_damage; // 0x1358	
	int32_t chain_radius; // 0x135c	
	float chain_cooldown; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1364[0x4]; // 0x1364
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1368	
	CountdownTimer m_ChainTimer; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Elven_Tunic : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Muerta_PierceTheVeil_Buff : public CDOTA_Buff
{
public:
	int32_t modelscale; // 0x1338	
	int32_t bonus_damage; // 0x133c	
	int32_t spell_lifesteal; // 0x1340	
	int32_t attack_projectile_speed_bonus; // 0x1344	
	int32_t attack_range_bonus; // 0x1348	
	int32_t m_iOriginalAttackCapabilities; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Grimstroke_InkCreature_Spawning : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hAttachTarget; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_11 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Undying_Tombstone_Zombie_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	float zombie_interval; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ChaosKnight_Chaos_Strike_Debuff : public CDOTA_Buff
{
public:
	int32_t maim_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Brewmaster_Void_AstralPulse : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Alchemist_UnstableConcoctionThrow : public CDOTABaseAbility
{
public:
	float m_fCookTime; // 0x578	
	Vector m_vProjectileLoc; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Batrider_FlamingLasso_Damage : public CDOTA_Buff
{
public:
	int32_t max_ticks; // 0x1338	
	float damage; // 0x133c	
	float duration; // 0x1340	
	float tick_rate; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Roshan_RevengeRoar : public CDOTA_Buff
{
public:
	int32_t damage_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_WitchDoctor_Voodoo_Restoration_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Morphling_ScepterStatsDrain_Agility_Buff : public CDOTA_Buff
{
public:
	int32_t scepter_stat_steal; // 0x1338	
	int32_t scepter_attack_speed; // 0x133c	
	int32_t nStrengthSteal; // 0x1340	
	int32_t nAgilitySteal; // 0x1344	
	int32_t nIntSteal; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mirana_Starfall_Thinker : public CDOTA_Buff
{
public:
	int32_t starfall_secondary_radius; // 0x1338	
	CHandle< CBaseEntity > m_hTarget; // 0x133c	
	int32_t m_iDamage; // 0x1340	
	bool m_bStarDropped; // 0x1344	
	bool m_bSecondStar; // 0x1345	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Pudge_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Drow_Ranger_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Brewmaster_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ogre_Magi : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_70 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_30 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x708
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
class CDotaSubquestTutorialEvent : public CDotaSubquestBase
{
public:
	CUtlSymbolLarge m_sTutorialEvent; // 0x700	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x690
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CSoundOpvarSetAutoRoomEntity : public CSoundOpvarSetPointEntity
{
public:
	CUtlVector< SoundOpvarTraceResult_t > m_traceResults; // 0x650	
private:
	[[maybe_unused]] uint8_t __pad0668[0x18]; // 0x668
public:
	float m_flSize; // 0x680	
	float m_flHeightTolerance; // 0x684	
	float m_flSizeSqr; // 0x688	
	
	// Datamap fields:
	// void CSoundOpvarSetAutoRoomEntitySetOpvarThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1b0
// Has VTable
// Construct disallowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CGameSceneNode m_sceneNode"
class CBodyComponentPoint : public CBodyComponent
{
public:
	// MNetworkEnable
	CGameSceneNode m_sceneNode; // 0x50	
	
	// Static fields:
	static EntComponentInfo_t &Get_s_EntComponentInfo(){return *reinterpret_cast<EntComponentInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponentPoint")->GetStaticFields()[0]->m_pInstance);};
	static int32_t &Get_entity_component_error_class_decl_says_contained_but_impl_is_referenced(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponentPoint")->GetStaticFields()[1]->m_pInstance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_CentaurKhan_EnduranceAura_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Creature_HybridFlyer : public CDOTA_Buff
{
public:
	CountdownTimer m_ctTimer; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Lunar_Crest : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Force_Field : public CDOTA_Buff_Item
{
public:
	bool m_bAppliesToCreeps; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	int32_t bonus_aoe_radius; // 0x133c	
	int32_t self_armor; // 0x1340	
	int32_t self_mres; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Trickster_Cloak_Invis : public CDOTA_Modifier_Invisible
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Spell_Prism_Active : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Spirit_Vessel : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
	float bonus_mana_regen; // 0x133c	
	float bonus_armor; // 0x1340	
	int32_t bonus_all_stats; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Medallion_Of_Courage : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Boots_Of_Bearing : public CDOTA_Buff_Item
{
public:
	int32_t radius; // 0x1338	
	int32_t bonus_movement_speed; // 0x133c	
	int32_t bonus_health_regen; // 0x1340	
	int32_t bonus_str; // 0x1344	
	int32_t bonus_int; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Desolator_Corruption : public CDOTA_Buff
{
public:
	int32_t corruption_armor; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Blade_Mail : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hoodwink_Caltrops : public CDOTA_Buff
{
public:
	int32_t effect_radius; // 0x1338	
	int32_t caltrops_damage; // 0x133c	
	int32_t activation_radius; // 0x1340	
	float debuff_duration; // 0x1344	
	float activation_delay; // 0x1348	
	ParticleIndex_t m_nFXIndex; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DarkWillow_BrambleMaze : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pangolier_HeartPiercer_Delay : public CDOTA_Buff
{
public:
	float duration; // 0x1338	
	float debuff_delay; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Phoenix_LaunchFireSpirit : public CDOTABaseAbility
{
public:
	int32_t spirit_speed; // 0x578	
	float duration; // 0x57c	
	int32_t radius; // 0x580	
	ParticleIndex_t m_nFXIndex; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Skywrath_Mage_Arcane_Bolt_Lifesteal : public CDOTA_Buff
{
public:
	float lifesteal_amt; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_NagaSiren_SongOfTheSiren_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t m_nAffectedEnemies; // 0x133c	
	CUtlVector< CHandle< CBaseEntity > > m_vhAffectedHeroes; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Unique_Meepo_5 : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Treant_Large_Bonus : public CDOTA_Buff
{
public:
	int32_t treant_large_hp_bonus; // 0x1338	
	int32_t treant_large_damage_bonus; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Viper_CorrosiveSkin_Slow : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1338	
	int32_t damage; // 0x133c	
	int32_t effect_multiplier_distance; // 0x1340	
	int32_t effect_multiplier; // 0x1344	
	bool m_bEffectMultiplied; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Phantom_Assassin_GroundDagger : public CDOTA_Buff
{
public:
	bool m_bLanded; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Warlock_Imp_Explode : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Warlock_Golem_Permanent_Immolation_Debuff : public CDOTA_Buff
{
public:
	int32_t aura_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Windrunner_FocusFire_End : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bonus_Damage : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_GiantWolf_CriticalStrike : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Nevermore_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lycan_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Respawn_Reduction_25 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cast_Range_200 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Reincarnation_300 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cleave_175 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1878
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Twin_Gate : public CDOTA_BaseNPC_Building
{
public:
	CHandle< CBaseEntity > m_hOtherPortal; // 0x1870	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Creep_Siege : public CDOTA_Buff
{
public:
	int32_t bonus_building_damage; // 0x1338	
	int32_t incoming_hero_damage_penalty; // 0x133c	
	int32_t incoming_basic_damage_penalty; // 0x1340	
	int32_t incoming_controlled_unit_penalty; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seasonal_TI9_Shovel_BabyRoshan : public CDOTA_Buff
{
public:
	bool m_bFirstThink; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	GameTime_t m_flStartTime; // 0x133c	
	Vector m_vecStartingPos; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Psychic_Headband : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Hermes_Sandals : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Muerta_TheCalling_Silence : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Hoodwink_HeavyQuiver : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EmberSpirit_FireRemnant : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Legion_Commander_OverwhelmingOdds_Armor : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Wisp_Tentacles : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
	CHandle< CBaseEntity > hCurrentEntity; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_LoneDruid_DruidForm_Transform : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_BountyHunter_ShurikenToss : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x578	
	CHandle< CBaseEntity > m_hSourceCaster; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Huskar_Inner_Vitality : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Rattletrap_JetPack : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_QueenOfPain_Arcana_Kill_Effect : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_BouncePerch : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTree; // 0x1338	
	bool m_bGroundToTree; // 0x133c	
	bool m_bTreeToGround; // 0x133d	
	bool m_bTreeToTree; // 0x133e	
private:
	[[maybe_unused]] uint8_t __pad133f[0x1]; // 0x133f
public:
	float perched_day_vision; // 0x1340	
	float perched_night_vision; // 0x1344	
	bool m_bAbilityIsStolen; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BaseBlocker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x508
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class FilterDamageType : public CBaseFilter
{
public:
	int32_t m_iDamageType; // 0x500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Aghsfort_Reward_ArmorAura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Shaman_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Morphling_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Wraith_King_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Speed_175 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_TrapRoom_MeatHook_PathingFix : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_Aziyog_Underlord_Firestorm_Burn : public CDOTA_Buff
{
public:
	float burn_damage; // 0x1338	
	float burn_interval; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Ascension_Silence_Display : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Misericorde : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t missing_hp; // 0x133c	
	int32_t damage; // 0x1340	
	int32_t aspd; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Diffusal_Blade_Slow : public CDOTA_Buff
{
public:
	int32_t purge_rate; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Buckler_Effect : public CDOTA_Buff
{
public:
	float bonus_aoe_armor; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Soul_Booster : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
	int32_t bonus_mana; // 0x133c	
	int32_t bonus_magical_armor; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Javelin : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Bracer : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DarkWillow_Bedlam : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Abaddon_AphoticShield : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	float damage_absorb; // 0x133c	
	int32_t regen; // 0x1340	
	int32_t m_nDamageAbsorbed; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bristleback_QuillSpray_AutoCast : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Centaur_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_ColdSnap : public CDOTA_Ability_Invoker_InvokedBase
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Batrider_Firefly : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Weaver_TheSwarm : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Broodmother_SpinWeb_Slowed : public CDOTA_Buff
{
public:
	int32_t bonus_movespeed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Huskar_Berserkers_Blood : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Lancer : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Creep_Piercing : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has VTable
// Has Trivial Destructor
class CMotorController
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	float m_speed; // 0x8	
	float m_maxTorque; // 0xc	
	Vector m_axis; // 0x10	
	float m_inertiaFactor; // 0x1c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float m_flRadius"
class CSoundAreaEntitySphere : public CSoundAreaEntityBase
{
public:
	// MNetworkEnable
	float m_flRadius; // 0x4c8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5c0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Creature_Ice_Breath : public CDOTABaseAbility
{
public:
	int32_t speed; // 0x578	
	int32_t projectile_count; // 0x57c	
	float rotation_angle; // 0x580	
	float damage; // 0x584	
	float radius; // 0x588	
	float slow_duration; // 0x58c	
	CountdownTimer ctTimer; // 0x590	
	Vector m_vecStartRot; // 0x5a8	
	Vector m_vecEndRot; // 0x5b4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Doom_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Sand_King_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Storm_Spirit_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Intelligence_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDotaParticleRelay : public CBaseEntity
{
public:
	CUtlSymbolLarge m_particleSystemName; // 0x4a8	
	
	// Datamap fields:
	// void InputStart; // 0x0
	// void InputStop; // 0x0
	// void InputStopImmediate; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Angels_Demise : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Tome_of_Omniscience : public CDOTA_Buff_Item
{
public:
	int32_t bonus_mana; // 0x1338	
	int32_t bonus_xpm; // 0x133c	
	int32_t bonus_armor; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x640
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Orb_Of_Revelations : public CDOTA_Item
{
public:
	CountdownTimer m_ViewerTimer; // 0x620	
	int32_t m_iProjectile; // 0x638	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Overwhelming_Blink : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Apex : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Clumsy_Net : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Imp_Claw : public CDOTA_Buff_Item
{
public:
	int32_t crit_multiplier; // 0x1338	
	int32_t bonus_damage; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Guardian_Greaves : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement; // 0x1338	
	int32_t bonus_mana; // 0x133c	
	int32_t bonus_mres; // 0x1340	
	int32_t bonus_armor; // 0x1344	
	int32_t aura_radius; // 0x1348	
	float mana_regen; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_RingOfAquila : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Ethereal_Blade : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
	int32_t bonus_agility; // 0x133c	
	int32_t bonus_intellect; // 0x1340	
	int32_t bonus_mana; // 0x1344	
	float bonus_mana_regen; // 0x1348	
	int32_t bonus_cast_range; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_SangeAndYasha : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Sange : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Grimstroke_DarkArtistry_Slow : public CDOTA_Buff
{
public:
	int32_t movement_slow_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pangolier_LuckyShot_Silence : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Troll_Warlord_Rampage : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Treant_NaturesGuise : public CDOTA_Buff
{
public:
	CountdownTimer m_RevealTimer; // 0x1338	
	CountdownTimer m_InvisAttackTimer; // 0x1350	
	CountdownTimer m_CooldownTimer; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13a0
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Broodmother_StickySnare : public CDOTA_Buff
{
public:
	Vector m_vOrigin; // 0x1338	
	Vector m_vWallDirection; // 0x1344	
	Vector m_vWallRight; // 0x1350	
	int32_t width; // 0x135c	
	float root_duration; // 0x1360	
	float formation_delay; // 0x1364	
	bool m_bTouching; // 0x1368	
private:
	[[maybe_unused]] uint8_t __pad1369[0x3]; // 0x1369
public:
	CHandle< CBaseEntity > m_hRight; // 0x136c	
	bool m_bParticle; // 0x1370	
private:
	[[maybe_unused]] uint8_t __pad1371[0x3]; // 0x1371
public:
	GameTime_t m_flStartingTime; // 0x1374	
	int32_t m_nFoWID; // 0x1378	
	int32_t m_nTeamID; // 0x137c	
	CUtlVector< CHandle< CBaseEntity > > m_vecAffectedHeroes; // 0x1380	
	ParticleIndex_t m_nWarmupFXIndex; // 0x1398	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Furion : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rattletrap_Cog_Thinker_Leash : public CDOTA_Buff
{
public:
	int32_t cogs_radius; // 0x1338	
	int32_t extra_pull_buffer; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Beastmaster_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Enigma_Malefice : public CDOTA_Buff
{
public:
	float tick_rate; // 0x1338	
	float stun_duration; // 0x133c	
	int32_t damage; // 0x1340	
	float duration; // 0x1344	
	int32_t m_nEidolonSpawnNum; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lich_ChainFrost_Slow : public CDOTA_Buff
{
public:
	int32_t slow_movement_speed; // 0x1338	
	int32_t slow_attack_speed; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bloodseeker_BloodMist_Slow : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9c8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTriggerHurtGhost : public CTriggerHurt
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x538
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPhysBallSocket : public CPhysConstraint
{
public:
	float m_flJointFriction; // 0x520	
	bool m_bEnableSwingLimit; // 0x524	
private:
	[[maybe_unused]] uint8_t __pad0525[0x3]; // 0x525
public:
	float m_flSwingLimit; // 0x528	
	bool m_bEnableTwistLimit; // 0x52c	
private:
	[[maybe_unused]] uint8_t __pad052d[0x3]; // 0x52d
public:
	float m_flMinTwistAngle; // 0x530	
	float m_flMaxTwistAngle; // 0x534	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Brewmaster_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Movement_Speed_Percentage_16 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x108
// Has VTable
// Construct allowed
// 
// MNetworkVarNames "int8 m_vecDrowRangerArcanaTargetPlayerID"
// MNetworkVarNames "GameTime_t m_vecDrowRangerArcanaDeathTime"
// MNetworkVarNames "GameTime_t m_vecDrowRangerArcanaKillTime"
class CDOTA_ArcanaDataEntity_DrowRanger : public CDOTA_ArcanaDataEntity_Base
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnDrowArcanaChanged"
	int8_t m_vecDrowRangerArcanaTargetPlayerID[24]; // 0x30	
	// MNetworkEnable
	// MNetworkChangeCallback "OnDrowArcanaChanged"
	GameTime_t m_vecDrowRangerArcanaDeathTime[24]; // 0x48	
	// MNetworkEnable
	// MNetworkChangeCallback "OnDrowArcanaChanged"
	GameTime_t m_vecDrowRangerArcanaKillTime[24]; // 0xa8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_nTargetAngle"
// MNetworkVarNames "int m_nTargetRange"
class CDOTA_Unit_Hero_Razor : public CDOTA_BaseNPC_Hero
{
public:
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_nTargetAngle; // 0x1d98	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_nTargetRange; // 0x1d9c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_EmberSpirit : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Gold_Bag_Launch : public CDOTA_Modifier_Knockback
{
public:
	int32_t gold_amount; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_EchoSlamPotion_Debuff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seasonal_Summon_TI9_Balloon_Thinker : public CDOTA_Buff
{
public:
	float speed; // 0x1338	
	int32_t min_distance_before_bounce; // 0x133c	
	float drag; // 0x1340	
	float max_height; // 0x1344	
	float max_vertical_move_time; // 0x1348	
	float bounce_turn_angle; // 0x134c	
	float bounce_turn_angle_tree; // 0x1350	
	float bounce_delay; // 0x1354	
	Vector m_vLastPos; // 0x1358	
	Vector m_vDir; // 0x1364	
	float m_flSpeed; // 0x1370	
	float m_flDistRemaining; // 0x1374	
	float m_flTreeTimeRemaining; // 0x1378	
	CHandle< CBaseEntity > m_hLastHit; // 0x137c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Book_Of_Shadows : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1338	
	int32_t night_vision; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_IcarusWings : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MaskOfDispair_Berserk : public CDOTA_Buff
{
public:
	int32_t berserk_spell_amp; // 0x1338	
	int32_t berserk_manacost_reduction; // 0x133c	
	int32_t berserk_magic_resistance; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Ocean_Heart : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hurricane_Pike_Range : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
	int32_t max_attacks; // 0x133c	
	int32_t m_iNumAttacks; // 0x1340	
	bool bActive; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1345[0x3]; // 0x1345
public:
	int32_t bonus_attack_speed; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Ward_Dispenser : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Soul_Ring : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Sphere_Target : public CDOTA_Buff_Item
{
public:
	float upgrade_absorb_duration; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Mars_ArenaOfBlood : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DarkWillow_Terrorize : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Terrorblade_Reflection_Invulnerability : public CDOTA_Modifier_Invulnerable
{
public:
	CHandle< CBaseEntity > hTarget; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_EarthSpirit_GeomagneticGrip : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Visage_SummonFamiliars_StoneForm : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Chen_TestOfFaith_Teleport : public CDOTA_Buff
{
public:
	bool bToChen; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Viper_PoisonAttack : public CDOTA_Buff
{
public:
	float duration; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DrowRanger_FrostArrows_Slow : public CDOTA_Buff
{
public:
	int32_t frost_arrows_movement_speed; // 0x1338	
	int32_t shard_max_stacks; // 0x133c	
	float shard_stack_duration; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_StormSpirit_ElectricVortex_SelfSlow : public CDOTA_Buff
{
public:
	int32_t electric_vortex_self_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Storm_Spirit_Electric_Rave : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_RootedUndispellable : public CDOTA_Modifier_Rooted
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_SatyrHellcaller_UnholyAura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1eb8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CSoundEnt : public CPointEntity
{
public:
	int32_t m_iFreeSound; // 0x4a8	
	int32_t m_iActiveSound; // 0x4ac	
	int32_t m_cLastActiveSounds; // 0x4b0	
	CSound m_SoundPool[128]; // 0x4b4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoSpawnGroupLandmark : public CPointEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_Shadow_Demon_Shadow_Poison : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hPoisonedUnits; // 0x578	
	int32_t radius; // 0x590	
private:
	[[maybe_unused]] uint8_t __pad0594[0x4]; // 0x594
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitUnits; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Demon_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Night_Vision_800 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Block_20 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x228
// Has VTable
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float32 m_flFallVelocity"
// MNetworkVarNames "bool m_bInCrouch"
// MNetworkVarNames "uint32 m_nCrouchState"
// MNetworkVarNames "GameTime_t m_flCrouchTransitionStartTime"
// MNetworkVarNames "bool m_bDucked"
// MNetworkVarNames "bool m_bDucking"
// MNetworkVarNames "bool m_bInDuckJump"
class CPlayer_MovementServices_Humanoid : public CPlayer_MovementServices
{
public:
	float m_flStepSoundTime; // 0x1d8	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	// MNetworkBitCount "17"
	// MNetworkMinValue "-4096,000000"
	// MNetworkMaxValue "4096,000000"
	// MNetworkEncodeFlags "4"
	float m_flFallVelocity; // 0x1dc	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	bool m_bInCrouch; // 0x1e0	
private:
	[[maybe_unused]] uint8_t __pad01e1[0x3]; // 0x1e1
public:
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	uint32_t m_nCrouchState; // 0x1e4	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	GameTime_t m_flCrouchTransitionStartTime; // 0x1e8	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	bool m_bDucked; // 0x1ec	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	bool m_bDucking; // 0x1ed	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	bool m_bInDuckJump; // 0x1ee	
private:
	[[maybe_unused]] uint8_t __pad01ef[0x1]; // 0x1ef
public:
	Vector m_groundNormal; // 0x1f0	
	float m_flSurfaceFriction; // 0x1fc	
	CUtlStringToken m_surfaceProps; // 0x200	
private:
	[[maybe_unused]] uint8_t __pad0204[0xc]; // 0x204
public:
	int32_t m_nStepside; // 0x210	
	int32_t m_iTargetVolume; // 0x214	
	Vector m_vecSmoothedVelocity; // 0x218	
	
	// Datamap fields:
	// void m_pSurfaceData; // 0x208
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Pangolier : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_NPC_Rattletrap_Cog : public CDOTA_BaseNPC_Additive
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Neutral_Creep_Lost : public CDOTA_Buff
{
public:
	bool m_bActive; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	ParticleIndex_t m_iFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x938
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTriggerSave : public CBaseTrigger
{
public:
	bool m_bForceNewLevelUnit; // 0x928	
private:
	[[maybe_unused]] uint8_t __pad0929[0x3]; // 0x929
public:
	float m_fDangerousTimer; // 0x92c	
	int32_t m_minHitPoints; // 0x930	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Bullwhip_Buff_Thinker : public CDOTA_Buff
{
public:
	int32_t speed; // 0x1338	
	CHandle< CBaseEntity > m_hTarget; // 0x133c	
	ParticleIndex_t m_nFXIndex; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_AssassinsDagger : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Fallen_Sky_Land : public CDOTA_Buff
{
public:
	int32_t impact_radius; // 0x1338	
	float land_time; // 0x133c	
	float burn_duration; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Necronomicon_Warrior_Sight : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_MaskOfMadness : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Perseverance : public CDOTA_Buff_Item
{
public:
	float bonus_health_regen; // 0x1338	
	float bonus_mana_regen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EmberSpirit_SleightOfFist_Caster : public CDOTA_Buff
{
public:
	int32_t bonus_hero_damage; // 0x1338	
	int32_t creep_damage_penalty; // 0x133c	
	int32_t radius; // 0x1340	
	float attack_interval; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_TrollWarlord_BerserkersRage : public CDOTABaseAbility
{
public:
	int32_t m_iOriginalAttackCapabilities; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Disruptor_Glimpse : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x10]; // 0x578
public:
	int32_t m_nNPCSpawnedID; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Brewmaster_Pulverize : public CDOTA_Buff
{
public:
	int32_t bonus_building_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Batrider_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Broodmother_SpawnSpiderlingsShard : public CDOTA_Buff
{
public:
	float shard_spiderling_duration; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dazzle_Poison_Touch : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
	float bonus_slow; // 0x133c	
	int32_t bonus_damage; // 0x1340	
	float flAccummulatedBonusSlow; // 0x1344	
	int32_t iAccummulatedBonusDamage; // 0x1348	
	int32_t attack_range_bonus; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PoisonNova_Intrinsic : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_Damage_Reflection : public CDOTA_Buff
{
public:
	GameTime_t m_flReflectionStartTime; // 0x1338	
	float m_flReflectionAmount; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x550
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPhysWheelConstraint : public CPhysConstraint
{
public:
	float m_flSuspensionFrequency; // 0x520	
	float m_flSuspensionDampingRatio; // 0x524	
	float m_flSuspensionHeightOffset; // 0x528	
	bool m_bEnableSuspensionLimit; // 0x52c	
private:
	[[maybe_unused]] uint8_t __pad052d[0x3]; // 0x52d
public:
	float m_flMinSuspensionOffset; // 0x530	
	float m_flMaxSuspensionOffset; // 0x534	
	bool m_bEnableSteeringLimit; // 0x538	
private:
	[[maybe_unused]] uint8_t __pad0539[0x3]; // 0x539
public:
	float m_flMinSteeringAngle; // 0x53c	
	float m_flMaxSteeringAngle; // 0x540	
	float m_flSteeringAxisFriction; // 0x544	
	float m_flSpinAxisFriction; // 0x548	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x538
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPhysFixed : public CPhysConstraint
{
public:
	float m_flLinearFrequency; // 0x520	
	float m_flLinearDampingRatio; // 0x524	
	float m_flAngularFrequency; // 0x528	
	float m_flAngularDampingRatio; // 0x52c	
	bool m_bEnableLinearConstraint; // 0x530	
	bool m_bEnableAngularConstraint; // 0x531	
	
	// Datamap fields:
	// float InputSetLinearFrequency; // 0x0
	// float InputSetLinearDampingRatio; // 0x0
	// float InputSetAngularFrequency; // 0x0
	// float InputSetAngularDampingRatio; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Earthshaker_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lycan_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Zombie_Berserk : public CDOTA_Buff
{
public:
	int32_t berserk_bonus_attack_speed; // 0x1338	
	int32_t berserk_bonus_movement_speed; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Stacking_Gold_Rate_Boost : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Unique_Treant_3 : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Mekansm : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Marci_Lunge_AllyAbsorb : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Mars_Bulwark : public CDOTABaseAbility
{
public:
	GameTime_t m_flNextAttack; // 0x578	
	GameTime_t m_flLastActive; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Elder_Titan_AncestralSpirit : public CDOTA_Buff
{
public:
	int32_t pass_damage; // 0x1338	
	int32_t radius; // 0x133c	
	int32_t m_nCreepsHit; // 0x1340	
	int32_t m_nHeroesHit; // 0x1344	
	float m_flSpeed; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad134c[0x4]; // 0x134c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitUnits; // 0x1350	
	int32_t m_nBonusMoveSpeed; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Naga_Siren_Reel_In : public CDOTA_Buff
{
public:
	float pull_strength; // 0x1338	
	int32_t min_pull_distance; // 0x133c	
	GameTime_t m_flLastThinkTime; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_SunStrike_AD : public CDOTA_Ability_Invoker_SunStrike
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Alchemist_GoblinsGreed : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Weaver_Shukuchi : public CDOTA_Modifier_Invisible
{
public:
	int32_t radius; // 0x1348	
	int32_t damage; // 0x134c	
	int32_t speed; // 0x1350	
	float geminate_attack_mark_duration; // 0x1354	
	CUtlVector< CHandle< CBaseEntity > > m_hEntitiesAffected; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tidehunter_AnchorSmash_Caster : public CDOTA_Buff
{
public:
	int32_t attack_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x178
// Has VTable
// Construct allowed
// 
// MGetKV3ClassDefaults
class CBasePlayerVData : public CEntitySubclassVDataBase
{
public:
	CResourceNameTyped< CWeakHandle< InfoForResourceTypeCModel > > m_sModelName; // 0x28	
	CSkillFloat m_flHeadDamageMultiplier; // 0x108	
	CSkillFloat m_flChestDamageMultiplier; // 0x118	
	CSkillFloat m_flStomachDamageMultiplier; // 0x128	
	CSkillFloat m_flArmDamageMultiplier; // 0x138	
	CSkillFloat m_flLegDamageMultiplier; // 0x148	
	// MPropertyGroupName "Water"
	float m_flHoldBreathTime; // 0x158	
	// MPropertyGroupName "Water"
	// MPropertyDescription "Seconds between drowning ticks"
	float m_flDrowningDamageInterval; // 0x15c	
	// MPropertyGroupName "Water"
	// MPropertyDescription "Amount of damage done on the first drowning tick (+1 each subsequent interval)"
	int32_t m_nDrowningDamageInitial; // 0x160	
	// MPropertyGroupName "Water"
	// MPropertyDescription "Max damage done by a drowning tick"
	int32_t m_nDrowningDamageMax; // 0x164	
	// MPropertyGroupName "Water"
	int32_t m_nWaterSpeed; // 0x168	
	// MPropertyGroupName "Use"
	float m_flUseRange; // 0x16c	
	// MPropertyGroupName "Use"
	float m_flUseAngleTolerance; // 0x170	
	// MPropertyGroupName "Crouch"
	// MPropertyDescription "Time to move between crouch and stand"
	float m_flCrouchTime; // 0x174	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Pangolier_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bounty_Hunter_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dazzle_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Invoker_12 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Intelligence_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Speed_200 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x540
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CEnvSoundscapeTriggerableAlias_snd_soundscape_triggerable : public CEnvSoundscapeTriggerable
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_LightRobes : public CDOTA_Buff_Item
{
public:
	int32_t health_penalty; // 0x1338	
	int32_t attack_speed; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Lotus_Orb : public CDOTA_Buff_Item
{
public:
	float bonus_health_regen; // 0x1338	
	float bonus_mana_regen; // 0x133c	
	int32_t bonus_armor; // 0x1340	
	int32_t bonus_mana; // 0x1344	
	float block_cooldown; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Shivas_Guard_Aura : public CDOTA_Buff
{
public:
	int32_t aura_attack_speed; // 0x1338	
	int32_t hp_regen_degen_aura; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_RefresherShard : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health_regen; // 0x1338	
	float bonus_mana_regen; // 0x133c	
	int32_t bonus_damage; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dawnbreaker_Fire_Wreath_Attack_Bonus : public CDOTA_Buff
{
public:
	int32_t attack_damage; // 0x1338	
	int32_t creep_damage_penalty; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Grimstroke_Ink_Over : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_MonkeyKing_Transform : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AbyssalUnderlord_AtrophyAura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EarthSpirit_BoulderSmash : public CDOTA_Buff
{
public:
	bool m_bInterrupted; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	int32_t m_nProjectileID; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_NagaSiren_RipTide : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Meepo_Earthbind_ChainDuration : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Brewmaster_DispelMagic : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Batrider_Flamebreak_Damage : public CDOTA_Buff
{
public:
	int32_t damage_impact; // 0x1338	
	int32_t damage_per_second; // 0x133c	
	int32_t slow; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Clinkz_DeathPact : public CDOTA_Buff
{
public:
	int32_t health_gain; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rattletrap_Overheated : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DragonKnight_Fireball_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	float linger_duration; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Venomancer_VenomousGale : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1338	
	int32_t tick_damage; // 0x133c	
	float tick_interval; // 0x1340	
	float duration; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Morphling_Adaptive_Strike : public CDOTA_Modifier_Stunned
{
public:
	Vector m_vStartPos; // 0x1338	
	Vector m_vDirection; // 0x1344	
	float m_flTotalDistance; // 0x1350	
	float m_flCurTime; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DrowRanger_Trueshot : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_SandKing_BurrowStrike : public CDOTABaseAbility
{
public:
	int32_t burrow_width; // 0x578	
	int32_t burrow_speed; // 0x57c	
	int32_t burrow_speed_scepter; // 0x580	
	float burrow_anim_time; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Greevil_Miniboss_Blue_IceVortex : public CDOTABaseAbility
{
public:
	int32_t vision_aoe; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Guardian_Shell : public CDOTA_Buff_Item
{
public:
	int32_t all_stats; // 0x1338	
	int32_t bonus_armor; // 0x133c	
	float counter_cooldown; // 0x1340	
	GameTime_t m_flLastCounterTime; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Giants_Ring : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_The_Leveller : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Ethereal_Blade : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_MantaStyle : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1338	
	int32_t bonus_strength; // 0x133c	
	int32_t bonus_agility; // 0x1340	
	int32_t bonus_intellect; // 0x1344	
	int32_t bonus_movement_speed; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bulwark_Speed : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float m_flChannelTime"
class CDOTA_Ability_AbyssalUnderlord_Portal_Warp : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x578	
	// MNetworkEnable
	float m_flChannelTime; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Skywrath_Mage_Shard : public CDOTA_Buff
{
public:
	float stack_duration; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Centaur_Work_Horse : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hCart; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Rubick_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Meepo_Geostrike_Debuff : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
	int32_t damage; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_IceWall_Thinker : public CDOTA_Buff
{
public:
	float damage_per_second; // 0x1338	
	int32_t num_wall_elements; // 0x133c	
	int32_t wall_element_spacing; // 0x1340	
	int32_t wall_element_radius; // 0x1344	
	float spell_amp; // 0x1348	
	float spell_lifesteal; // 0x134c	
	Vector m_vWallDir; // 0x1350	
	bool m_bGrantedGem; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Furion_WrathOfNature_Thinker : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
	int32_t max_targets; // 0x133c	
	int32_t damage_percent_add; // 0x1340	
	float jump_delay; // 0x1344	
	int32_t m_iFixedDamage; // 0x1348	
	GameTime_t m_flLastTickTime; // 0x134c	
	float m_flTimeAccumulator; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1354[0x4]; // 0x1354
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitTargets; // 0x1358	
	int32_t m_nBaseDamage; // 0x1370	
	int32_t m_nMaxTargets; // 0x1374	
	float m_flJumpDelay; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DragonKnight_CorrosiveBreathDoT : public CDOTA_Buff
{
public:
	int32_t corrosive_breath_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pugna_Decrepify : public CDOTA_Buff
{
public:
	int32_t bonus_spell_damage_pct; // 0x1338	
	int32_t bonus_heal_amp_pct_allies; // 0x133c	
	int32_t bonus_movement_speed; // 0x1340	
	int32_t bonus_movement_speed_allies; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Venomancer_NoxiousPlagueSecondary : public CDOTA_Buff
{
public:
	float health_damage; // 0x1338	
	float attack_slow; // 0x133c	
	float movement_slow_max; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// Is Abstract
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_CallOfTheWild_Boar_PoisonBase : public CDOTA_Buff
{
public:
	float duration; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Enigma_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ShadowShaman_Shackles : public CDOTA_Buff
{
public:
	float tick_interval; // 0x1338	
	float total_damage; // 0x133c	
	float channel_time; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tiny_Avalanche : public CDOTABaseAbility
{
public:
	Vector m_vTargetLoc; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Zuus_ThundergodsWrathVisionThinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lina_FierySoul : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bloodseeker_Thirst : public CDOTA_Buff
{
public:
	int32_t hero_kill_heal; // 0x1338	
	int32_t creep_kill_heal; // 0x133c	
	int32_t half_bonus_aoe; // 0x1340	
	int32_t visibility_threshold_pct; // 0x1344	
	int32_t invis_threshold_pct; // 0x1348	
	int32_t min_bonus_pct; // 0x134c	
	int32_t max_bonus_pct; // 0x1350	
	int32_t bonus_movement_speed; // 0x1354	
	float linger_duration; // 0x1358	
	ParticleIndex_t m_nFXIndex; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Axe_CullingBlade_Permanent : public CDOTA_Buff
{
public:
	float armor_per_stack; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_ForestTrollHighPriest_HealAmp_Aura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7c8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "HMaterialStrong m_hSpriteMaterial"
// MNetworkVarNames "CHandle< CBaseEntity> m_hAttachedToEntity"
// MNetworkVarNames "AttachmentHandle_t m_nAttachment"
// MNetworkVarNames "float32 m_flSpriteFramerate"
// MNetworkVarNames "float32 m_flFrame"
// MNetworkVarNames "uint32 m_nBrightness"
// MNetworkVarNames "float32 m_flBrightnessDuration"
// MNetworkVarNames "float32 m_flSpriteScale"
// MNetworkVarNames "float32 m_flScaleDuration"
// MNetworkVarNames "bool m_bWorldSpaceScale"
// MNetworkVarNames "float32 m_flGlowProxySize"
// MNetworkVarNames "float32 m_flHDRColorScale"
class CSprite : public CBaseModelEntity
{
public:
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeIMaterial2 > m_hSpriteMaterial; // 0x758	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hAttachedToEntity; // 0x760	
	// MNetworkEnable
	AttachmentHandle_t m_nAttachment; // 0x764	
private:
	[[maybe_unused]] uint8_t __pad0765[0x3]; // 0x765
public:
	// MNetworkEnable
	// MNetworkBitCount "8"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "60,000000"
	// MNetworkEncodeFlags "2"
	float m_flSpriteFramerate; // 0x768	
	// MNetworkEnable
	// MNetworkBitCount "20"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "256,000000"
	// MNetworkEncodeFlags "1"
	float m_flFrame; // 0x76c	
	GameTime_t m_flDieTime; // 0x770	
private:
	[[maybe_unused]] uint8_t __pad0774[0xc]; // 0x774
public:
	// MNetworkEnable
	uint32_t m_nBrightness; // 0x780	
	// MNetworkEnable
	float m_flBrightnessDuration; // 0x784	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSpriteScaleChanged"
	float m_flSpriteScale; // 0x788	
	// MNetworkEnable
	float m_flScaleDuration; // 0x78c	
	// MNetworkEnable
	bool m_bWorldSpaceScale; // 0x790	
private:
	[[maybe_unused]] uint8_t __pad0791[0x3]; // 0x791
public:
	// MNetworkEnable
	// MNetworkBitCount "6"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "64,000000"
	// MNetworkEncodeFlags "2"
	float m_flGlowProxySize; // 0x794	
	// MNetworkEnable
	float m_flHDRColorScale; // 0x798	
	GameTime_t m_flLastTime; // 0x79c	
	float m_flMaxFrame; // 0x7a0	
	float m_flStartScale; // 0x7a4	
	float m_flDestScale; // 0x7a8	
	GameTime_t m_flScaleTimeStart; // 0x7ac	
	int32_t m_nStartBrightness; // 0x7b0	
	int32_t m_nDestBrightness; // 0x7b4	
	GameTime_t m_flBrightnessTimeStart; // 0x7b8	
	int32_t m_nSpriteWidth; // 0x7bc	
	int32_t m_nSpriteHeight; // 0x7c0	
	
	// Datamap fields:
	// void CSpriteAnimateThink; // 0x0
	// void CSpriteExpandThink; // 0x0
	// void CSpriteAnimateUntilDead; // 0x0
	// void CSpriteBeginFadeOutThink; // 0x0
	// void InputHideSprite; // 0x0
	// void InputShowSprite; // 0x0
	// void InputToggleSprite; // 0x0
	// float InputColorRedValue; // 0x0
	// float InputColorGreenValue; // 0x0
	// float InputColorBlueValue; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Shaman_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tusk_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Sniper_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Gyrocopter_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Agility_13 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Movement_Speed_50 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Mana_Break_25 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CIngameEvent_TI9 : public CIngameEvent_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x6b8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CSoundOpvarSetAABBEntity : public CSoundOpvarSetPointEntity
{
public:
	Vector m_vDistanceInnerMins; // 0x650	
	Vector m_vDistanceInnerMaxs; // 0x65c	
	Vector m_vDistanceOuterMins; // 0x668	
	Vector m_vDistanceOuterMaxs; // 0x674	
	int32_t m_nAABBDirection; // 0x680	
	Vector m_vInnerMins; // 0x684	
	Vector m_vInnerMaxs; // 0x690	
	Vector m_vOuterMins; // 0x69c	
	Vector m_vOuterMaxs; // 0x6a8	
	
	// Datamap fields:
	// void CSoundOpvarSetAABBEntitySetOpvarThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Earthshaker : public CDOTA_BaseNPC_Hero
{
public:
	ParticleIndex_t m_nFXDeath; // 0x1d98	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9f8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTAPropCustomTexture : public CDynamicProp
{
public:
	// MNetworkEnable
	uint32_t m_unTeamID; // 0x9f0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Greevil_Miniboss_Purple_VenomousGale : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1338	
	int32_t tick_damage; // 0x133c	
	float tick_interval; // 0x1340	
	float duration; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BlackDragon_Fireball_Thinker : public CDOTA_Buff
{
public:
	float burn_interval; // 0x1338	
	int32_t radius; // 0x133c	
	int32_t damage; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Creature_Venomancer_PoisonSting_Applier : public CDOTA_Buff
{
public:
	float duration; // 0x1338	
	int32_t damage; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Respawn_Reduction : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_UnstableWand : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Dynamite_Jacket : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Pupils_gift : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Yasha : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DarkWillow_BrambleMaze_Creation_Thinker : public CDOTA_Buff
{
public:
	float latch_creation_interval; // 0x1338	
	float initial_creation_delay; // 0x133c	
	int32_t placement_count; // 0x1340	
	float placement_duration; // 0x1344	
	int32_t m_iBramblesIndex; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Pangolier_Rollup : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFxIndex; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Underlord_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Shadow_Demon_Shadow_Poison_Release : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Jakiro_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Courier_QueuePickupFromStash : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SandKing_CausticFinaleOrb : public CDOTA_Buff
{
public:
	int32_t caustic_finale_radius; // 0x1338	
	int32_t caustic_finale_damage_base; // 0x133c	
	int32_t caustic_finale_damage_pct; // 0x1340	
	int32_t caustic_finale_slow; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AncientApparition_IceVortex : public CDOTABaseAbility
{
public:
	int32_t vision_aoe; // 0x578	
	float vortex_duration; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_CentaurKhan_WarStomp : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Antimage_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Antimage : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dragon_Knight_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Huskar_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Pugna_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Exp_Boost_15 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Respawn_Reduction_30 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7c8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CCommentaryViewPosition : public CSprite
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Lunar_Crest_Barrier_Addition : public CDOTA_Buff
{
public:
	int32_t barrier_block; // 0x1338	
	int32_t barrier_amount; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Mage_Slayer : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Paintball : public CDOTA_Buff_Item
{
public:
	int32_t movespeed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_SamplePicker : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Faded_Broach : public CDOTA_Buff_Item
{
public:
	int32_t bonus_mana; // 0x1338	
	int32_t bonus_movement_speed; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x638
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Demonicon : public CDOTA_Item
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hDemonSummons; // 0x620	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_BeltOfStrength : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Skywrath_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Undying_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Undying_Decay_Debuff : public CDOTA_Buff
{
public:
	int32_t str_steal; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ogre_Magi_Ignite_Multicast : public CDOTA_Buff
{
public:
	CHandle< CDOTA_BaseNPC > m_hTarget; // 0x1338	
	float multicast_delay; // 0x133c	
	int32_t m_nMultiCastCount; // 0x1340	
	int32_t ignite_multicast_aoe; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Chen_DivineFavor_Aura : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Venomancer_PoisonSting_Applier : public CDOTA_Buff
{
public:
	float duration; // 0x1338	
	int32_t damage; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_Roar : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Zuus_ArcLightningSlow : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PhantomLancer_PhantomEdge : public CDOTA_Buff
{
public:
	int32_t min_distance; // 0x1338	
	int32_t max_distance; // 0x133c	
	CHandle< CBaseEntity > m_hTarget; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Axe_BerserkersCallArmor : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Spawnlord_Master_Stomp : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bane_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Huskar : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_25 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Magic_Resistance_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_600 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Roshans_Banner : public CDOTA_BaseNPC_Additive
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Puck : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Morphling : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mutation_CreateTombstone_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTonemapController2Alias_env_tonemap_controller2 : public CTonemapController2
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x780
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float m_flLastSpawnTime"
// MNetworkVarNames "float m_flNextSpawnTime"
class CDOTA_Item_RuneSpawner_Bounty : public CBaseAnimatingActivity
{
public:
	CUtlSymbolLarge m_szPosition; // 0x768	
	int32_t m_nDotaTeam; // 0x770	
	// MNetworkEnable
	float m_flLastSpawnTime; // 0x774	
	// MNetworkEnable
	float m_flNextSpawnTime; // 0x778	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Elven_Tunic : public CDOTA_Buff_Item
{
public:
	int32_t attack_speed; // 0x1338	
	int32_t evasion; // 0x133c	
	int32_t movment; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Flicker : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Mango_Tree : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Silver_Edge : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Necronomicon_3 : public CDOTA_Buff_Item
{
public:
	float bonus_mana_regen; // 0x1338	
	int32_t bonus_strength; // 0x133c	
	int32_t aura_radius; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Phoenix_FireSpiritCount : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Abaddon_Frostmourne_Debuff_Bonus : public CDOTA_Buff
{
public:
	float m_flDamage; // 0x1338	
	int32_t curse_slow; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slark_ShadowDance_Visual : public CDOTA_Buff
{
public:
	bool m_bScepter; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nyx_Assassin_Vendetta_Break : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Brewmaster_DrunkenBrawler : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
	ParticleIndex_t m_nFXIndexB; // 0x133c	
	int32_t min_movement; // 0x1340	
	int32_t max_movement; // 0x1344	
	int32_t m_iMovementBonus; // 0x1348	
	GameTime_t m_flNextUpdateTime; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tidehunter_DeadInTheWater : public CDOTABaseAbility
{
public:
	int32_t radius; // 0x578	
	float duration; // 0x57c	
	int32_t chain_length; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_StormSpirit_StaticRemnant_Talent : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Twin_Gate_Portal_Warp : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_AssaultCaptain_SearingChains : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nWarningFX; // 0x578	
	ParticleIndex_t m_nRadiusFX; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Earthshaker_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Weaver_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Luna_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Arc_Warden : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Enigma : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_Walrus_Pudge_Harpoon : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Waveblaster_Leap : public CDOTA_Buff
{
public:
	float m_flTotalTime; // 0x1338	
	float m_flInitialVelocity; // 0x133c	
	Vector m_vStartPosition; // 0x1340	
	Vector m_vTargetHorizontalDirection; // 0x134c	
	float m_flCurrentTimeHoriz; // 0x1358	
	float m_flCurrentTimeVert; // 0x135c	
	bool m_bInterrupted; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1361[0x3]; // 0x1361
public:
	float leap_speed; // 0x1364	
	float leap_acceleration; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1390
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Firefly : public CDOTA_Buff
{
public:
	float pool_duration; // 0x1338	
	int32_t radius; // 0x133c	
	int32_t m_ifirefly_Active; // 0x1340	
	int32_t tree_radius; // 0x1344	
	int32_t damage_pct_per_second; // 0x1348	
	int32_t movement_speed; // 0x134c	
	float trail_placement_duration; // 0x1350	
	float burn_linger_duration; // 0x1354	
	bool m_bActive; // 0x1358	
private:
	[[maybe_unused]] uint8_t __pad1359[0x3]; // 0x1359
public:
	ParticleIndex_t m_nFXIndex; // 0x135c	
	ParticleIndex_t m_nFXIndexB; // 0x1360	
	GameTime_t m_flStartTime; // 0x1364	
	Vector m_vLastFirePoolLoc; // 0x1368	
private:
	[[maybe_unused]] uint8_t __pad1374[0x4]; // 0x1374
public:
	CUtlVector< Vector > m_vFirePoolLocations; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Pirate_Hat : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1338	
	int32_t bonus_ms; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ethereal_Blade_Ethereal : public CDOTA_Buff
{
public:
	int32_t ethereal_damage_bonus; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Snapfire_LilShredder_Attack_Reduction : public CDOTA_Buff
{
public:
	int32_t damage_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mars_ArenaOfBlood_Buff : public CDOTA_Buff
{
public:
	int32_t health_regen; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Abaddon_DeathCoil_Effect : public CDOTA_Buff
{
public:
	int32_t armor_bonus; // 0x1338	
	int32_t magic_resistance; // 0x133c	
	bool m_bFriendly; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Undying_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Undying_Tombstone_Zombie_DeathStrike : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Meepo_Ransack : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_DeafeningBlast_Knockback : public CDOTA_Buff
{
public:
	float disarm_duration; // 0x1338	
	Vector m_vPushDir; // 0x133c	
	GameTime_t m_flStartTime; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Jakiro_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Venomancer_PoisonNova : public CDOTA_Buff
{
public:
	float damage; // 0x1338	
	float magic_resist; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Beastmaster_Hawk_Perch : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_EruptionPendingThinker : public CDOTA_Buff
{
public:
	int32_t tick_count; // 0x1338	
	int32_t beam_radius; // 0x133c	
	int32_t m_nTickCount; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Miniboss_Reflect : public CDOTA_Buff
{
public:
	int32_t passive_reflection_pct; // 0x1338	
	int32_t passive_reflection_bonus_per_death; // 0x133c	
	bool m_bIsDire; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Riki_TricksOfTheTrade : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Puck_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AncientApparition_ChillingTouch : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x550
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPhysPulley : public CPhysConstraint
{
public:
	Vector m_position2; // 0x520	
	Vector m_offset[2]; // 0x52c	
	float m_addLength; // 0x544	
	float m_gearRatio; // 0x548	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Armor_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_Regen_80 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Speed_15 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_700 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// Construct allowed
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CDOTAGameRules * m_pGameRules"
class CDOTAGamerulesProxy : public CGameRulesProxy
{
public:
	// MNetworkEnable
	// MNetworkTypeAlias "CDOTAGameRules*"
	// MNetworkPriority "32"
	CDOTAGameRules* m_pGameRules; // 0x4a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Batrider : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7b0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkExcludeByName "m_flexWeight"
// MNetworkExcludeByName "m_blinktoggle"
// MNetworkIncludeByName "m_nNextThinkTick"
// MNetworkExcludeByUserGroup "m_flPoseParameter"
// MNetworkExcludeByUserGroup "m_flCycle"
// MNetworkExcludeByUserGroup "overlay_vars"
// MNetworkUserGroupProxy "CBasePlayerWeapon"
// MNetworkVarNames "GameTick_t m_nNextPrimaryAttackTick"
// MNetworkVarNames "float32 m_flNextPrimaryAttackTickRatio"
// MNetworkVarNames "GameTick_t m_nNextSecondaryAttackTick"
// MNetworkVarNames "float32 m_flNextSecondaryAttackTickRatio"
// MNetworkVarNames "int32 m_iClip1"
// MNetworkVarNames "int32 m_iClip2"
// MNetworkVarNames "int m_pReserveAmmo"
class CBasePlayerWeapon : public CBaseAnimatingActivity
{
public:
	// MNetworkEnable
	// MNetworkUserGroup "LocalWeaponExclusive"
	GameTick_t m_nNextPrimaryAttackTick; // 0x768	
	// MNetworkEnable
	// MNetworkUserGroup "LocalWeaponExclusive"
	float m_flNextPrimaryAttackTickRatio; // 0x76c	
	// MNetworkEnable
	// MNetworkUserGroup "LocalWeaponExclusive"
	GameTick_t m_nNextSecondaryAttackTick; // 0x770	
	// MNetworkEnable
	// MNetworkUserGroup "LocalWeaponExclusive"
	float m_flNextSecondaryAttackTickRatio; // 0x774	
	// MNetworkEnable
	// MNetworkSerializer "minusone"
	// MNetworkPriority "32"
	int32_t m_iClip1; // 0x778	
	// MNetworkEnable
	// MNetworkSerializer "minusone"
	// MNetworkUserGroup "LocalWeaponExclusive"
	int32_t m_iClip2; // 0x77c	
	// MNetworkEnable
	// MNetworkUserGroup "LocalWeaponExclusive"
	int32_t m_pReserveAmmo[2]; // 0x780	
	CEntityIOOutput m_OnPlayerUse; // 0x788	
	
	// Datamap fields:
	// int32_t InputSetClipPrimary; // 0x0
	// int32_t InputSetClipSecondary; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Trident : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1338	
	int32_t bonus_attack_speed; // 0x133c	
	int32_t movement_speed_percent_bonus; // 0x1340	
	int32_t bonus_strength; // 0x1344	
	int32_t hp_regen_amp; // 0x1348	
	int32_t status_resistance; // 0x134c	
	int32_t bonus_intellect; // 0x1350	
	int32_t spell_amp; // 0x1354	
	int32_t mana_regen_multiplier; // 0x1358	
	int32_t magic_damage_attack; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Iron_Talon : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_DragonLance : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Faerie_Fire : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Ward_Dispenser : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_SangeAndYasha : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1338	
	int32_t bonus_attack_speed; // 0x133c	
	int32_t movement_speed_percent_bonus; // 0x1340	
	int32_t bonus_strength; // 0x1344	
	int32_t hp_regen_amp; // 0x1348	
	int32_t status_resistance; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_UltimateScepter_2 : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_MagicStick : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hoodwink_Sharpshooter_Windup : public CDOTA_Buff
{
public:
	bool m_bReachedMax; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	float m_flLastOverheadTime; // 0x133c	
	float m_flFacingTarget; // 0x1340	
	Vector m_vAimTarget; // 0x1344	
	ParticleIndex_t m_nCrosshairFX; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1354[0x4]; // 0x1354
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecVisionThinkers; // 0x1358	
	int32_t arrow_vision; // 0x1370	
	float max_charge_time; // 0x1374	
	float turn_rate; // 0x1378	
	float base_power; // 0x137c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Grimstroke_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Chen_HolyPersuasion : public CDOTA_Buff
{
public:
	int32_t health_min; // 0x1338	
	int32_t new_max; // 0x133c	
	int32_t health_bonus; // 0x1340	
	int32_t damage_bonus; // 0x1344	
	int32_t movement_speed_bonus; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PhantomAssassin_Gravestone : public CDOTA_Buff
{
public:
	int32_t m_nFXIndex; // 0x1338	
	bool m_bContractGravestoneComplete; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FacelessVoid_TimeLock_Freeze : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FacelessVoid_Backtrack : public CDOTA_Buff
{
public:
	int32_t dodge_chance_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ursa_Overpower : public CDOTA_Buff
{
public:
	int32_t attack_speed_bonus_pct; // 0x1338	
	int32_t slow_resist; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_WitchDoctor_Maledict : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Puck_EtherealJaunt : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lina_FierySoul : public CDOTA_Buff
{
public:
	int32_t fiery_soul_attack_speed_bonus; // 0x1338	
	float fiery_soul_move_speed_bonus; // 0x133c	
	int32_t fiery_soul_max_stacks; // 0x1340	
	float fiery_soul_stack_duration; // 0x1344	
	ParticleIndex_t m_nFXIndex; // 0x1348	
	GameTime_t m_flFierySoulDieTime; // 0x134c	
	GameTime_t m_flLastFierySoulFullStackTime; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Razor_StaticLink : public CDOTABaseAbility
{
public:
	int32_t m_iLinkIndex; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad057c[0x4]; // 0x57c
public:
	CountdownTimer m_ViewerTimer; // 0x580	
	float vision_duration; // 0x598	
	bool m_bIsAltCastState; // 0x59c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DrowRanger_WaveOfSilence : public CDOTA_Buff
{
public:
	int32_t miss_chance; // 0x1338	
	int32_t gust_reveals_invis; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dazzle_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Shaman_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Templar_Assassin_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Timbersaw_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Wraith_King_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_60 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Gold_lvl25_r : public CDOTA_Ability_Special_Bonus_Gold_Ability_Draft
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7f8
// Has VTable
// Construct allowed
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkIncludeByUserGroup "Origin"
// MNetworkIncludeByName "m_nModelIndex"
// MNetworkIncludeByName "m_nRenderFX"
// MNetworkIncludeByName "m_nRenderMode"
// MNetworkIncludeByName "m_clrRender"
// MNetworkIncludeByName "CGameSceneNode::m_hParent"
// MNetworkOverride "m_clrRender"
// MNetworkVarNames "float32 m_flFrameRate"
// MNetworkVarNames "float32 m_flHDRColorScale"
// MNetworkVarNames "uint8 m_nNumBeamEnts"
// MNetworkVarNames "HMaterialStrong m_hBaseMaterial"
// MNetworkVarNames "HMaterialStrong m_nHaloIndex"
// MNetworkVarNames "BeamType_t m_nBeamType"
// MNetworkVarNames "uint32 m_nBeamFlags"
// MNetworkVarNames "CHandle< CBaseEntity > m_hAttachEntity"
// MNetworkVarNames "AttachmentHandle_t m_nAttachIndex"
// MNetworkVarNames "float32 m_fWidth"
// MNetworkVarNames "float32 m_fEndWidth"
// MNetworkVarNames "float32 m_fFadeLength"
// MNetworkVarNames "float32 m_fHaloScale"
// MNetworkVarNames "float32 m_fAmplitude"
// MNetworkVarNames "float32 m_fStartFrame"
// MNetworkVarNames "float32 m_fSpeed"
// MNetworkVarNames "float32 m_flFrame"
// MNetworkVarNames "BeamClipStyle_t m_nClipStyle"
// MNetworkVarNames "bool m_bTurnedOff"
// MNetworkVarNames "Vector m_vecEndPos"
class CBeam : public CBaseModelEntity
{
public:
	// MNetworkEnable
	// MNetworkBitCount "10"
	// MNetworkMinValue "-25,000000"
	// MNetworkMaxValue "25,000000"
	// MNetworkEncodeFlags "2"
	float m_flFrameRate; // 0x758	
	// MNetworkEnable
	float m_flHDRColorScale; // 0x75c	
	GameTime_t m_flFireTime; // 0x760	
	float m_flDamage; // 0x764	
	// MNetworkEnable
	uint8_t m_nNumBeamEnts; // 0x768	
private:
	[[maybe_unused]] uint8_t __pad0769[0x7]; // 0x769
public:
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeIMaterial2 > m_hBaseMaterial; // 0x770	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeIMaterial2 > m_nHaloIndex; // 0x778	
	// MNetworkEnable
	BeamType_t m_nBeamType; // 0x780	
	// MNetworkEnable
	uint32_t m_nBeamFlags; // 0x784	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hAttachEntity[10]; // 0x788	
	// MNetworkEnable
	AttachmentHandle_t m_nAttachIndex[10]; // 0x7b0	
private:
	[[maybe_unused]] uint8_t __pad07ba[0x2]; // 0x7ba
public:
	// MNetworkEnable
	// MNetworkBitCount "10"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "102,300003"
	// MNetworkEncodeFlags "2"
	float m_fWidth; // 0x7bc	
	// MNetworkEnable
	// MNetworkBitCount "10"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "102,300003"
	// MNetworkEncodeFlags "2"
	float m_fEndWidth; // 0x7c0	
	// MNetworkEnable
	float m_fFadeLength; // 0x7c4	
	// MNetworkEnable
	float m_fHaloScale; // 0x7c8	
	// MNetworkEnable
	// MNetworkBitCount "8"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "64,000000"
	// MNetworkEncodeFlags "1"
	float m_fAmplitude; // 0x7cc	
	// MNetworkEnable
	// MNetworkBitCount "8"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "256,000000"
	// MNetworkEncodeFlags "1"
	float m_fStartFrame; // 0x7d0	
	// MNetworkEnable
	// MNetworkBitCount "8"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "100,000000"
	float m_fSpeed; // 0x7d4	
	// MNetworkEnable
	// MNetworkBitCount "20"
	// MNetworkMinValue "0,000000"
	// MNetworkMaxValue "256,000000"
	// MNetworkEncodeFlags "1"
	// MNetworkPriority "32"
	float m_flFrame; // 0x7d8	
	// MNetworkEnable
	BeamClipStyle_t m_nClipStyle; // 0x7dc	
	// MNetworkEnable
	bool m_bTurnedOff; // 0x7e0	
private:
	[[maybe_unused]] uint8_t __pad07e1[0x3]; // 0x7e1
public:
	// MNetworkEnable
	// MNetworkEncoder "coord"
	Vector m_vecEndPos; // 0x7e4	
	CHandle< CBaseEntity > m_hEndEntity; // 0x7f0	
	int32_t m_nDissolveType; // 0x7f4	
	
	// Datamap fields:
	// float InputWidth; // 0x0
	// float InputNoise; // 0x0
	// float InputColorRedValue; // 0x0
	// float InputColorGreenValue; // 0x0
	// float InputColorBlueValue; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1870
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Filler : public CDOTA_BaseNPC_Building
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Bloodseeker : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ascension_AcidBlood : public CDOTA_Buff
{
public:
	int32_t armor_reduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Creature_IceSlam_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	ParticleIndex_t m_nPathEffectIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13e0
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seasonal_Penguin : public CDOTA_Buff
{
public:
	float m_fLifetimeGained; // 0x1338	
	Vector m_vTargetPos; // 0x133c	
	int32_t m_nCurrentSpeed; // 0x1348	
	GameTime_t m_fLastBumpTime; // 0x134c	
	Vector m_vLastPos; // 0x1350	
	CHandle< CBaseEntity > m_hLastHit; // 0x135c	
	Vector m_vDir; // 0x1360	
	Vector m_vRunEndPos; // 0x136c	
	bool m_bIsInInitialRun; // 0x1378	
private:
	[[maybe_unused]] uint8_t __pad1379[0x3]; // 0x1379
public:
	Vector m_vJumpEndPos; // 0x137c	
	bool m_bPlayedVroomSinceLastCrash; // 0x1388	
private:
	[[maybe_unused]] uint8_t __pad1389[0x3]; // 0x1389
public:
	ParticleIndex_t m_nVroomFX; // 0x138c	
	GameTime_t m_fLastSpeedStepTime; // 0x1390	
	GameTime_t m_fLastSpeechTime; // 0x1394	
	ParticleIndex_t m_nFXStackIndex; // 0x1398	
	int32_t m_nBumpsSinceLastCrash; // 0x139c	
	CHandle< CBaseEntity > m_hLastBumpingHero; // 0x13a0	
	int32_t initial_speed; // 0x13a4	
	int32_t max_speed; // 0x13a8	
	int32_t speed_step; // 0x13ac	
	float speed_step_interval; // 0x13b0	
	float bump_delay; // 0x13b4	
	float bump_delay_absolute; // 0x13b8	
	int32_t bump_collision_radius; // 0x13bc	
	int32_t run_distance; // 0x13c0	
	int32_t jump_distance; // 0x13c4	
	int32_t speed_after_crash; // 0x13c8	
	int32_t speed_gain_per_hero_bump; // 0x13cc	
	float max_gainable_lifetime; // 0x13d0	
	float lifetime_gain_per_hero_bump; // 0x13d4	
	float min_speech_repeat_time; // 0x13d8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Stacking_Exp_Rate_Boost : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Attack_Speed : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Elven_Tunic : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Pavise_Shield : public CDOTA_Buff
{
public:
	int32_t absorb_amount; // 0x1338	
	int32_t m_nAbsorbRemaining; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Tome_Of_Knowledge : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Voidwalker_Phased : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
	float max_damage_duration; // 0x133c	
	int32_t attack_range_bonus; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1348	
	bool bAttackRange; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1361[0x3]; // 0x1361
public:
	float m_flStartTime; // 0x1364	
	float m_flFadeTime; // 0x1368	
	float m_flDamageScale; // 0x136c	
	float duration; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Hermes_Sandals : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement_speed; // 0x1338	
	int32_t bonus_damage_melee; // 0x133c	
	int32_t bonus_damage_range; // 0x1340	
	int32_t bonus_armor; // 0x1344	
	int32_t bonus_agility; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Abaddon_BorrowedTime : public CDOTA_Buff
{
public:
	int32_t m_iTotalDamageAbsorbed; // 0x1338	
	int32_t redirect_range_scepter; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Skywrath_Mage_Arcana_Kill_Effect : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nCasterFXIndex; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_LoneDruid_SpiritBear_Return : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXOrigin; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Weaver_TimeLapse : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x10]; // 0x578
public:
	int32_t m_nNPCSpawnedID; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Enchantress_Little_Friends : public CDOTABaseAbility
{
public:
	float duration; // 0x578	
	int32_t radius; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Venomancer_Latent_Poison : public CDOTABaseAbility
{
public:
	Vector projectile_speed; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoCourierSpawnDire1 : public CPointEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Necrolyte_ReapersScythe_RespawnTime : public CDOTA_Buff
{
public:
	float hp_per_kill; // 0x1338	
	float mana_per_kill; // 0x133c	
	float hp_regen; // 0x1340	
	float mp_regen; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lich_FrostNova : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lina_LagunaBlade_Line : public CDOTA_Buff
{
public:
	Vector vStart; // 0x1338	
	Vector vEnd; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Bloodseeker_Rupture : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_CrystalMaiden_Let_It_Go_Bonus : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AntiMage_Blink : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Greevil_Miniboss_Black_BrainSap : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_BookAgility : public CDOTA_Item_Book
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Earthshaker_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Earthshaker_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dragon_Knight_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Sand_King_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Armor_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Agility_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x38
// Has VTable
// 
// MNetworkVarNames "float m_flKillability"
// MNetworkVarNames "int32 m_nEntIndex"
struct DOTAThreatLevelInfo_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	float m_flKillability; // 0x30	
	// MNetworkEnable
	int32_t m_nEntIndex; // 0x34	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Viper : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x940
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CUtlString m_strStartTouchEventName"
// MNetworkVarNames "CUtlString m_strEndTouchEventName"
// MNetworkVarNames "CUtlString m_strTriggerID"
class CTriggerGameEvent : public CBaseTrigger
{
public:
	// MNetworkEnable
	CUtlString m_strStartTouchEventName; // 0x928	
	// MNetworkEnable
	CUtlString m_strEndTouchEventName; // 0x930	
	// MNetworkEnable
	CUtlString m_strTriggerID; // 0x938	
	
	// Datamap fields:
	// CUtlSymbolLarge InputSetStartTouchEvent; // 0x0
	// CUtlSymbolLarge InputSetEndTouchEvent; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_Summon_Dragon_Thinker : public CDOTA_Buff
{
public:
	float grace_period; // 0x1338	
	int32_t search_distance; // 0x133c	
	float think_interval; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x770
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float m_flLastSpawnTime"
// MNetworkVarNames "float m_flNextSpawnTime"
class CDOTA_Item_RuneSpawner : public CBaseAnimatingActivity
{
public:
	// MNetworkEnable
	float m_flLastSpawnTime; // 0x768	
	// MNetworkEnable
	float m_flNextSpawnTime; // 0x76c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Ironwood_tree : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Seer_Stone : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Spirit_Vessel_Damage : public CDOTA_Buff
{
public:
	int32_t hp_regen_reduction_enemy; // 0x1338	
	int32_t soul_damage_amount; // 0x133c	
	float enemy_hp_drain; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_GreaterFamango : public CDOTA_Item_Famango
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Sange : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
	int32_t hp_regen_amp; // 0x133c	
	int32_t status_resistance; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Techies_Minefield_Sign_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Elder_Titan_NaturalOrder_Aura_Armor : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slark_DarkPact_Pulses : public CDOTA_Buff
{
public:
	int32_t m_iPulseCount; // 0x1338	
	int32_t radius; // 0x133c	
	int32_t total_damage; // 0x1340	
	int32_t total_pulses; // 0x1344	
	int32_t self_damage_pct; // 0x1348	
	float pulse_interval; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Visage_SummonFamiliars_DamageCharge : public CDOTA_Buff
{
public:
	int32_t familiar_speed; // 0x1338	
	int32_t m_nFXIndex; // 0x133c	
	int32_t m_nFXIndexB; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CountdownTimer m_ctTimer; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SpiritBreaker_SpecialAttack : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_BountyHunter_Track : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTrap; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slardar_Puddle : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Kunkka_GhostShip_Knockback : public CDOTA_Modifier_Knockback
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_StormSpirit_ElectricVortex_NoStack : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AntiMage_Scepter : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FountainAura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Editor : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Creep_Haste : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has VTable
// Has Trivial Destructor
// MClassHasEntityLimitedDataDesc
class SimpleConstraintSoundProfile
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	SimpleConstraintSoundProfile::SimpleConstraintsSoundProfileKeypoints_t eKeypoints; // 0x8	
	float m_keyPoints[2]; // 0xc	
	float m_reversalSoundThresholds[3]; // 0x14	
	
	// Datamap fields:
	// float m_keyPoints[0]; // 0xc
	// float m_keyPoints[1]; // 0x10
	// float m_reversalSoundThresholds[0]; // 0x14
	// float m_reversalSoundThresholds[1]; // 0x18
	// float m_reversalSoundThresholds[2]; // 0x1c
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1f5490
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDebugHistory : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x1f4040]; // 0x4a8
public:
	int32_t m_nNpcEvents; // 0x1f44e8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cooldown_Reduction_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Amplify_15 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CIngameEvent_Spring2021 : public CIngameEvent_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 16
// Size: 0x840
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoData : public CServerOnlyEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1770
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_NPC_Treant_EyesInTheForest : public CDOTA_BaseNPC_Additive
{
public:
	bool m_bIsBlind; // 0x1768	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1788
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Nian_Attachment : public CDOTA_BaseNPC_Additive
{
public:
	bool m_bAttachmentBroken; // 0x1768	
private:
	[[maybe_unused]] uint8_t __pad1769[0x3]; // 0x1769
public:
	ParticleIndex_t m_nfxIndex_tailgrow; // 0x176c	
	CUtlVector< NianDamageTaken_t > m_vecRecentDamage; // 0x1770	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mutation_Cooldown_Reduction : public CDOTA_Buff
{
public:
	int32_t m_iCooldownReduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x760
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLightSpotEntity : public CLightEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PudgeMiniboss_ArmorCorruptionDebuff : public CDOTA_Buff
{
public:
	float armor_reduction_per_stack; // 0x1338	
	float stack_duration; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Iron_Talon : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1338	
	float bonus_armor; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_OrchidMalevolence : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Grimstroke_Scepter_Buff : public CDOTA_Modifier_DebuffImmune
{
public:
	int32_t images_movespeed_bonus; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Oracle_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Phoenix_SunRayToggleMove : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Skywrath : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Slark_Pounce : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_ForgedSpirit_MeltingStrike : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BountyHunter_Lookout : public CDOTA_Modifier_Invisible
{
public:
	int32_t radius; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Pangolier_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Venomancer_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lifestealer : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Medusa_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Base_Damage_30 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Magic_Resistance_14 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Speed_30 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Twin_Gate_FX : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nPortalAmbientFX; // 0x1338	
	float m_fPortalRadius; // 0x133c	
	ParticleIndex_t m_nChannelFX; // 0x1340	
	int32_t m_nChannelCount; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_DaggerOfRistul : public CDOTA_Buff_Item
{
public:
	int32_t aspd; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Quicksilver_Amulet : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Stormcrafter : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Ex_Machina : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Illusionsts_Cape : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agi; // 0x1338	
	int32_t bonus_str; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hurricane_Pike_Active_Alternate : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1338	
	float m_flEndTime; // 0x1344	
	float m_flCurTime; // 0x1348	
	float enemy_length; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_RingOfAquila : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_DemonEdge : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_BootsOfTravel_2 : public CDOTA_Item_BootsOfTravel
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_Fire_Wreath_Ministun : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Shredder_Chakram : public CDOTABaseAbility
{
public:
	float radius; // 0x578	
	float speed; // 0x57c	
	float pass_slow_duration; // 0x580	
	int32_t pass_damage; // 0x584	
	Vector m_vEndLocation; // 0x588	
	float m_fZCoord; // 0x594	
	bool m_bIsReturning; // 0x598	
private:
	[[maybe_unused]] uint8_t __pad0599[0x3]; // 0x599
public:
	ParticleIndex_t m_nFXIndex; // 0x59c	
	ParticleIndex_t m_nFXIndexB; // 0x5a0	
	ParticleIndex_t m_nFXIndexC; // 0x5a4	
	int32_t m_nProjectileIndex; // 0x5a8	
	CHandle< CBaseEntity > m_hThinker; // 0x5ac	
	CUtlVector< CHandle< CBaseEntity > > m_hReturnHits; // 0x5b0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Centaur_Mount : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_LoneDruid_SpiritBear_Entangle : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Jakiro_IcePath : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Night_Stalker_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Enchantress_NaturesAttendants : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Furion_WrathOfNature_Spawn : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Unique_Beastmaster_6_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Warlock_Rain_Of_Chaos_Thinker : public CDOTA_Buff
{
public:
	float stun_duration; // 0x1338	
	bool bHasScepter; // 0x133c	
private:
	[[maybe_unused]] uint8_t __pad133d[0x3]; // 0x133d
public:
	int32_t aoe; // 0x1340	
	int32_t m_iCount; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lion_FingerOfDeath : public CDOTA_Buff
{
public:
	bool m_bIgnoreBonus; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Slardar_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Puck_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Morphling_Morph : public CDOTA_Buff
{
public:
	float tick_rate; // 0x1338	
	int32_t bonus_attributes; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x840
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkOverride "m_angRotation CGameSceneNode"
// MNetworkOverride "m_flSimulationTime CBaseEntity"
class CFuncRotating : public CBaseModelEntity
{
public:
	CEntityIOOutput m_OnStopped; // 0x758	
	CEntityIOOutput m_OnStarted; // 0x780	
	CEntityIOOutput m_OnReachedStart; // 0x7a8	
	RotationVector m_localRotationVector; // 0x7d0	
	float m_flFanFriction; // 0x7dc	
	float m_flAttenuation; // 0x7e0	
	float m_flVolume; // 0x7e4	
	float m_flTargetSpeed; // 0x7e8	
	float m_flMaxSpeed; // 0x7ec	
	float m_flBlockDamage; // 0x7f0	
private:
	[[maybe_unused]] uint8_t __pad07f4[0x4]; // 0x7f4
public:
	CUtlSymbolLarge m_NoiseRunning; // 0x7f8	
	bool m_bReversed; // 0x800	
	bool m_bAccelDecel; // 0x801	
private:
	[[maybe_unused]] uint8_t __pad0802[0xa]; // 0x802
public:
	QAngle m_prevLocalAngles; // 0x80c	
	QAngle m_angStart; // 0x818	
	bool m_bStopAtStartPos; // 0x824	
private:
	[[maybe_unused]] uint8_t __pad0825[0x3]; // 0x825
public:
	Vector m_vecClientOrigin; // 0x828	
	QAngle m_vecClientAngles; // 0x834	
	
	// Datamap fields:
	// void CFuncRotatingSpinUpMove; // 0x0
	// void CFuncRotatingSpinDownMove; // 0x0
	// void CFuncRotatingHurtTouch; // 0x0
	// void CFuncRotatingRotatingUse; // 0x0
	// void CFuncRotatingRotateMove; // 0x0
	// void CFuncRotatingReverseMove; // 0x0
	// float InputSetSpeed; // 0x0
	// void InputStart; // 0x0
	// void InputStop; // 0x0
	// void InputToggle; // 0x0
	// void InputReverse; // 0x0
	// void InputStartForward; // 0x0
	// void InputStartBackward; // 0x0
	// void InputStopAtStartPos; // 0x0
	// void InputSnapToStartPos; // 0x0
	// Vector InputSetStartPos; // 0x0
	// void InputEnableAccelDecel; // 0x0
	// void InputDisableAccelDecel; // 0x0
	// void m_nNoiseRunningGuid; // 0x804
	// int32_t fanfriction; // 0x7fffffff
	// int32_t Volume; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dazzle_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Warlock_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Centaur : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Life_Stealer : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DoNotCastRock : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Spawnlord_Master_Freeze : public CDOTA_Buff
{
public:
	bool m_bFreezeAttack; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	ParticleIndex_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Giants_Ring : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Disperser : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Yasha : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Tango_Single : public CDOTA_Item
{
public:
	GameTime_t m_flCreationTime; // 0x620	
	float duration_to_use; // 0x624	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Winter_Wyvern_Winters_Curse_Kill_Credit : public CDOTA_Buff
{
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Techies_ReactiveTazer : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x578	
	bool m_bDetonateTriggered; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Magnataur_Shockwave : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad057c[0xc]; // 0x57c
public:
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x588	
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitListReturning; // 0x5a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TrollWarlord_BerserkersRage_Ensnare : public CDOTA_Modifier_Rooted
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_14 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Shadow_Demon_Disseminate : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Batrider_Flamebreak : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Venomancer_NoxiousPlague : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Enigma_DemonicConversion_ModelScale : public CDOTA_Buff
{
public:
	float self_modelscale; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Kunkka_XMarksTheSpot_Thinker : public CDOTA_Buff
{
public:
	Vector m_vStartLoc; // 0x1338	
	bool m_bIsReflection; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1345[0x3]; // 0x1345
public:
	CHandle< CBaseEntity > m_hEntity; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Razor : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x758
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFuncTrainControls : public CBaseModelEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Antimage_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Terrorblade : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Magic_Resistance_30 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Movement_Speed_35 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1770
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Thinker : public CDOTA_BaseNPC
{
public:
	bool m_bSendToAllPlayers; // 0x1768	
	bool m_bSendToClients; // 0x1769	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Furion : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Illusionists_Cape_Aura : public CDOTA_Buff
{
public:
	int32_t attack_damage_aura; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x630
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Ward_Maker : public CDOTA_Item
{
public:
	float sentry_refresh; // 0x620	
	int32_t max_sentry_charges; // 0x624	
	GameTime_t m_flLastThinkTime; // 0x628	
	float m_flTimeAccumulator; // 0x62c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_EagleHorn : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Marci_Unleash_FlurryPulse_Debuff : public CDOTA_Buff
{
public:
	float pulse_move_slow_pct; // 0x1338	
	float pulse_attack_slow_pct; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Snapfire_LilShredder : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Mars_GodsRebuke : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pangolier_LuckyShot_Disarm : public CDOTA_Buff
{
public:
	int32_t armor; // 0x1338	
	int32_t attack_slow; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Terrorblade_Reflection_Slow : public CDOTA_Buff
{
public:
	int32_t move_slow; // 0x1338	
	int32_t attack_slow; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Obsidian_Destroyer_EssenceAura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_ChaosMeteor_Burn : public CDOTA_Buff
{
public:
	float spell_amp; // 0x1338	
	float spell_lifesteal; // 0x133c	
	float m_flDamagePerSecond; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Omniknight_Martyr : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Viper_PoisonAttack : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CHandle< CBaseEntity> m_hWard"
class CDOTA_Ability_WitchDoctor_DeathWard : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hWard; // 0x578	
	int32_t m_iDamage; // 0x57c	
	int32_t m_iBounceRadius; // 0x580	
	int32_t m_iProjectileSpeed; // 0x584	
	GameTime_t m_fWardExpireTime; // 0x588	
	ParticleIndex_t m_nFXIndex; // 0x58c	
	int32_t m_iAttackIndex; // 0x590	
private:
	[[maybe_unused]] uint8_t __pad0594[0x4]; // 0x594
public:
	CUtlVector< sBounceInfo > m_BounceInfo; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Enigma_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Zuus_Lightning_Hands : public CDOTA_Buff
{
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x1350	
	int32_t arc_lightning_damage_pct; // 0x1354	
	int32_t arc_lightning_damage_illusion_pct; // 0x1358	
	int32_t attack_range_bonus; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Morphling_Morph : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SkeletonKing_HellfireBlast_Skeleton_Buff : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1338	
	int32_t bonus_move_speed; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bonus_Mres : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Greevil_Miniboss_Green_Overgrowth : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_BigThunderLizard_Slam : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x788
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float32 m_flFadeInStart"
// MNetworkVarNames "float32 m_flFadeInLength"
// MNetworkVarNames "float32 m_flFadeOutModelStart"
// MNetworkVarNames "float32 m_flFadeOutModelLength"
// MNetworkVarNames "float32 m_flFadeOutStart"
// MNetworkVarNames "float32 m_flFadeOutLength"
// MNetworkVarNames "GameTime_t m_flStartTime"
// MNetworkVarNames "EntityDisolveType_t m_nDissolveType"
// MNetworkVarNames "Vector m_vDissolverOrigin"
// MNetworkVarNames "uint32 m_nMagnitude"
class CEntityDissolve : public CBaseModelEntity
{
public:
	// MNetworkEnable
	float m_flFadeInStart; // 0x758	
	// MNetworkEnable
	float m_flFadeInLength; // 0x75c	
	// MNetworkEnable
	float m_flFadeOutModelStart; // 0x760	
	// MNetworkEnable
	float m_flFadeOutModelLength; // 0x764	
	// MNetworkEnable
	float m_flFadeOutStart; // 0x768	
	// MNetworkEnable
	float m_flFadeOutLength; // 0x76c	
	// MNetworkEnable
	GameTime_t m_flStartTime; // 0x770	
	// MNetworkEnable
	EntityDisolveType_t m_nDissolveType; // 0x774	
	// MNetworkEnable
	Vector m_vDissolverOrigin; // 0x778	
	// MNetworkEnable
	uint32_t m_nMagnitude; // 0x784	
	
	// Datamap fields:
	// void CEntityDissolveDissolveThink; // 0x0
	// void CEntityDissolveElectrocuteThink; // 0x0
	// CUtlSymbolLarge InputDissolve; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CSoundEventOBBEntity : public CSoundEventEntity
{
public:
	Vector m_vMins; // 0x558	
	Vector m_vMaxs; // 0x564	
	
	// Datamap fields:
	// void CSoundEventOBBEntitySoundEventOBBThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Earth_Spirit_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Gyrocopter_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Arc_Warden_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Strength_13 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Movement_Speed_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Furbolg_Enrage_AttackSpeed_OnDeath : public CDOTA_Buff
{
public:
	float duration; // 0x1338	
	int32_t radius; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Diabled_Invulnerable : public CDOTA_Modifier_Invulnerable
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Strength : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_IcarusWings : public CDOTA_Buff_Item
{
public:
	float move_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Cloak_Of_Flames_Debuff : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
	int32_t damage_illusions; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Titan_Sliver : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Mango_Tree : public CDOTA_Buff_Item
{
public:
	CHandle< CBaseEntity > m_hTree; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CountdownTimer m_Timer; // 0x1340	
	float seconds; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Lotus_Orb : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_CraniumBasher : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Marci_Lunge_TrackingMotion : public CDOTA_Buff
{
public:
	int32_t m_nProjectileID; // 0x1338	
	int32_t m_nMaxJumpDistance; // 0x133c	
	int32_t landing_radius; // 0x1340	
	int32_t max_jump_distance; // 0x1344	
	int32_t min_jump_distance; // 0x1348	
	int32_t target_abort_distance; // 0x134c	
	int32_t impact_position_offset; // 0x1350	
	float m_flCastDistance; // 0x1354	
	ParticleIndex_t m_nAoEFXIndex; // 0x1358	
	Vector m_vDestination; // 0x135c	
	CHandle< CBaseEntity > m_hBounceEntity; // 0x1368	
	CHandle< CBaseEntity > m_hBounceEntityClient; // 0x136c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mars_Scepter_Damage_Slow : public CDOTA_Buff
{
public:
	int32_t scepter_movement_slow_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Magnataur_ReversePolarity : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Meepo_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rattletrap_RocketFlare_Overclock : public CDOTA_Buff
{
public:
	float rocket_flare_interval; // 0x1338	
	int32_t rocket_flare_offset_pct; // 0x133c	
	int32_t rocket_flare_rockets; // 0x1340	
	int32_t m_nRocketsFired; // 0x1344	
	int32_t radius; // 0x1348	
	Vector m_vOriginalTarget; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dazzle_Bad_Juju_Armor : public CDOTA_Buff
{
public:
	float armor_reduction; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Luna_Lunar_Grace : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_Knockdown : public CDOTA_Buff
{
public:
	float m_flStandUpDuration; // 0x1338	
	float m_flKnockDownDuration; // 0x133c	
	bool m_bDebuff; // 0x1340	
	bool m_bStandingUp; // 0x1341	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Razor_Arcana_EmpoweredState : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nEmpoweredBodyFX; // 0x1338	
	ParticleIndex_t m_nEmpoweredWeaponFX; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13c0
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_CrystalMaiden_FreezingField : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t damage; // 0x133c	
	int32_t bonus_armor; // 0x1340	
	float explosion_interval; // 0x1344	
	float shard_bonus_explosion; // 0x1348	
	int32_t explosion_radius; // 0x134c	
	float slow_duration; // 0x1350	
	int32_t explosion_min_dist; // 0x1354	
	int32_t explosion_max_dist; // 0x1358	
	float frostbite_delay; // 0x135c	
	GameTime_t m_fLastTick; // 0x1360	
	float m_fTimeAccumulator; // 0x1364	
	int32_t m_iExplosionCount; // 0x1368	
	int32_t m_iExplosionTotalCount; // 0x136c	
	int32_t m_iExplosionQuadrant; // 0x1370	
	int32_t m_iExplosionDistance; // 0x1374	
	int32_t shard_self_movement_speed_slow_pct; // 0x1378	
	ParticleIndex_t m_nFXIndex; // 0x137c	
private:
	[[maybe_unused]] uint8_t __pad1380[0x8]; // 0x1380
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1388	
	CUtlVector< CHandle< CBaseEntity > > m_hHitHeroes; // 0x13a0	
	bool m_bHitInvisibleHero; // 0x13b8	
private:
	[[maybe_unused]] uint8_t __pad13b9[0x3]; // 0x13b9
public:
	int32_t can_move; // 0x13bc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4f8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CMatchTrackedStatsEntity : public CBaseTrackedStatsEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Omniknight_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8
// Has VTable
// Has Trivial Destructor
// 
// MGapTypeQueriesForScopeSingleton
class CSharedGapTypeQueryRegistration
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// Static fields:
	static CSharedGapTypeQueryRegistration &Get_s_Instance(){return *reinterpret_cast<CSharedGapTypeQueryRegistration*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CSharedGapTypeQueryRegistration")->GetStaticFields()[0]->m_pInstance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xc
// Has Trivial Destructor
struct CEconEntity__AttachedParticleInfo_t
{
public:
	ParticleIndex_t m_nAttachedParticleIndex; // 0x0	
	CUtlStringToken m_customType; // 0x4	
	bool m_bShouldDestroyImmediately; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Slark : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_KoboldTunneler_ProspectingAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Trickster_Cloak : public CDOTA_Buff_Item
{
public:
	int32_t evasion; // 0x1338	
	int32_t magic_resistance; // 0x133c	
	float debuff_limit; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_GlimmerCape : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Veil_Of_Discord : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Radiance_Debuff : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1338[0x8]; // 0x1338
public:
	int32_t aura_damage; // 0x1340	
	int32_t aura_damage_upgrade_bonus; // 0x1344	
	int32_t aura_damage_illusions; // 0x1348	
	int32_t blind_pct; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Claymore : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Marci_Unleash_LungeRefresh : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pangolier_Swashbuckle : public CDOTA_Buff
{
public:
	int32_t m_nStrikesLeft; // 0x1338	
	float attack_interval; // 0x133c	
	Vector m_vSpawnPos; // 0x1340	
	Vector m_vStrikeDir; // 0x134c	
	Vector m_vDashDir; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Holdout_GladiatorsUnite : public CDOTA_Buff
{
public:
	int32_t bonus_armor_per_hero; // 0x1338	
	int32_t bonus_damage_per_hero; // 0x133c	
	int32_t lifesteal_per_hero; // 0x1340	
	int32_t scepter_damage_reduction_pct; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Skywrath_Mage_Ancient_Seal : public CDOTA_Buff
{
public:
	int32_t resist_debuff; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tusk_Tag_Team : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1338	
	float slow_duration; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_SpiritBreaker_PlanarPocket : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Chen_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Enchantress_Bunny_Hop : public CDOTA_Buff
{
public:
	float hop_duration; // 0x1338	
	int32_t hop_height; // 0x133c	
	int32_t hop_distance; // 0x1340	
	float m_flStartZ; // 0x1344	
	float m_flCurTime; // 0x1348	
	float m_flJumpDuration; // 0x134c	
	float m_flJumpHeight; // 0x1350	
	Vector m_vTargetHorizontalDirection; // 0x1354	
	CUtlVector< CHandle< CBaseEntity > > hUnitsToHit; // 0x1360	
	bool m_bLaunched; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Clinkz_Tar_Bomb_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	float slow_duration; // 0x133c	
	ParticleIndex_t m_nFXIndex; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Life_Stealer_Empty2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Vermillion_Robe_Flames : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	float damage_per_health_missing; // 0x133c	
	float delay; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lion_Arcana_Kill_Effect : public CDOTA_Buff
{
public:
	bool m_bFrozen; // 0x1338	
	bool m_bFlail; // 0x1339	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pudge_Meat_Hook_Reveal : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4f0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_bActive"
// MNetworkVarNames "Vector m_vBoxMins"
// MNetworkVarNames "Vector m_vBoxMaxs"
// MNetworkVarNames "bool m_bStartDisabled"
// MNetworkVarNames "float m_flStrength"
// MNetworkVarNames "int m_nFalloffShape"
// MNetworkVarNames "float m_flFalloffExponent"
// MNetworkVarNames "float m_flHeightFogDepth"
// MNetworkVarNames "float m_fHeightFogEdgeWidth"
// MNetworkVarNames "float m_fIndirectLightStrength"
// MNetworkVarNames "float m_fSunLightStrength"
// MNetworkVarNames "float m_fNoiseStrength"
// MNetworkVarNames "bool m_bOverrideIndirectLightStrength"
// MNetworkVarNames "bool m_bOverrideSunLightStrength"
// MNetworkVarNames "bool m_bOverrideNoiseStrength"
class CEnvVolumetricFogVolume : public CBaseEntity
{
public:
	// MNetworkEnable
	bool m_bActive; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	// MNetworkEnable
	Vector m_vBoxMins; // 0x4ac	
	// MNetworkEnable
	Vector m_vBoxMaxs; // 0x4b8	
	// MNetworkEnable
	bool m_bStartDisabled; // 0x4c4	
private:
	[[maybe_unused]] uint8_t __pad04c5[0x3]; // 0x4c5
public:
	// MNetworkEnable
	float m_flStrength; // 0x4c8	
	// MNetworkEnable
	int32_t m_nFalloffShape; // 0x4cc	
	// MNetworkEnable
	float m_flFalloffExponent; // 0x4d0	
	// MNetworkEnable
	float m_flHeightFogDepth; // 0x4d4	
	// MNetworkEnable
	float m_fHeightFogEdgeWidth; // 0x4d8	
	// MNetworkEnable
	float m_fIndirectLightStrength; // 0x4dc	
	// MNetworkEnable
	float m_fSunLightStrength; // 0x4e0	
	// MNetworkEnable
	float m_fNoiseStrength; // 0x4e4	
	// MNetworkEnable
	bool m_bOverrideIndirectLightStrength; // 0x4e8	
	// MNetworkEnable
	bool m_bOverrideSunLightStrength; // 0x4e9	
	// MNetworkEnable
	bool m_bOverrideNoiseStrength; // 0x4ea	
	
	// Datamap fields:
	// bool InputEnable; // 0x0
	// bool InputDisable; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bristleback_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Luna_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Status_Resistance_20 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Armor_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Pupils_gift : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Holy_Locket : public CDOTA_Buff_Item
{
public:
	int32_t aura_radius; // 0x1338	
	int32_t bonus_health; // 0x133c	
	int32_t bonus_mana; // 0x1340	
	int32_t heal_increase; // 0x1344	
	int32_t charge_radius; // 0x1348	
	int32_t max_charges; // 0x134c	
	int32_t bonus_all_stats; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Ancient_Janggo_Active : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed_pct; // 0x1338	
	int32_t bonus_movement_speed_pct; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Hood_Of_Defiance : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TrollWarlord_BerserkersRage_Maim : public CDOTA_Buff
{
public:
	int32_t maim_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Undying_FleshGolem_Slow : public CDOTA_Buff
{
public:
	int32_t damage_amp; // 0x1338	
	int32_t slow; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Broodmother_SpinWeb_Destroy : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Life_Stealer_Consume : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Leshrac_Lightning_Storm : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Pugna_NetherBlast : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Slardar_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Zuus_Heavenly_Jump_Boost : public CDOTA_Buff
{
public:
	int32_t postjump_movespeed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Razor_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Axe_CullingBlade_JungleWeaponGesture : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1428
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lua_Vertical_Motion : public CDOTA_Modifier_Lua
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_BlueDragonspawnSorcerer_Evasion : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CHandle<CDOTA_BaseNPC> m_hTarget"
class CDOTA_Ability_Capture : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CDOTA_BaseNPC > m_hTarget; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad057c[0x4]; // 0x57c
public:
	CDOTA_Buff* m_pMyBuff; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8a0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CEnvBeam : public CBeam
{
public:
	int32_t m_active; // 0x7f8	
private:
	[[maybe_unused]] uint8_t __pad07fc[0x4]; // 0x7fc
public:
	CStrongHandle< InfoForResourceTypeIMaterial2 > m_spriteTexture; // 0x800	
	CUtlSymbolLarge m_iszStartEntity; // 0x808	
	CUtlSymbolLarge m_iszEndEntity; // 0x810	
	float m_life; // 0x818	
	float m_boltWidth; // 0x81c	
	float m_noiseAmplitude; // 0x820	
	int32_t m_speed; // 0x824	
	float m_restrike; // 0x828	
private:
	[[maybe_unused]] uint8_t __pad082c[0x4]; // 0x82c
public:
	CUtlSymbolLarge m_iszSpriteName; // 0x830	
	int32_t m_frameStart; // 0x838	
	Vector m_vEndPointWorld; // 0x83c	
	Vector m_vEndPointRelative; // 0x848	
	float m_radius; // 0x854	
	Touch_t m_TouchType; // 0x858	
private:
	[[maybe_unused]] uint8_t __pad085c[0x4]; // 0x85c
public:
	CUtlSymbolLarge m_iFilterName; // 0x860	
	CHandle< CBaseEntity > m_hFilter; // 0x868	
private:
	[[maybe_unused]] uint8_t __pad086c[0x4]; // 0x86c
public:
	CUtlSymbolLarge m_iszDecal; // 0x870	
	CEntityIOOutput m_OnTouchedByEntity; // 0x878	
	
	// Datamap fields:
	// int32_t m_nClipStyle; // 0x7dc
	// void CEnvBeamStrikeThink; // 0x0
	// void CEnvBeamUpdateThink; // 0x0
	// void InputTurnOn; // 0x0
	// void InputTurnOff; // 0x0
	// void InputToggle; // 0x0
	// void InputStrikeOnce; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x758
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFuncIllusionary : public CBaseModelEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Phoenix_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Magic_Resistance_50 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cleave_100 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CFoWBlockerEntity : public CBaseEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "DOTACustomHeroPickRulesPhase_t m_Phase"
class CDOTATurboHeroPickRules : public CDOTABaseCustomHeroPickRules
{
public:
	// MNetworkEnable
	DOTACustomHeroPickRulesPhase_t m_Phase; // 0x4a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1878
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "DOTA_SHOP_TYPE m_ShopType"
class CDOTA_BaseNPC_Shop : public CDOTA_BaseNPC_Building
{
public:
	// MNetworkEnable
	DOTA_SHOP_TYPE m_ShopType; // 0x1870	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7f8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPhysMagnet : public CBaseAnimatingActivity
{
public:
	CEntityIOOutput m_OnMagnetAttach; // 0x768	
	CEntityIOOutput m_OnMagnetDetach; // 0x790	
	float m_massScale; // 0x7b8	
	float m_forceLimit; // 0x7bc	
	float m_torqueLimit; // 0x7c0	
private:
	[[maybe_unused]] uint8_t __pad07c4[0x4]; // 0x7c4
public:
	CUtlVector< magnetted_objects_t > m_MagnettedEntities; // 0x7c8	
	bool m_bActive; // 0x7e0	
	bool m_bHasHitSomething; // 0x7e1	
private:
	[[maybe_unused]] uint8_t __pad07e2[0x2]; // 0x7e2
public:
	float m_flTotalMass; // 0x7e4	
	float m_flRadius; // 0x7e8	
	GameTime_t m_flNextSuckTime; // 0x7ec	
	int32_t m_iMaxObjectsAttached; // 0x7f0	
	
	// Datamap fields:
	// void InputToggle; // 0x0
	// void InputTurnOn; // 0x0
	// void InputTurnOff; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa08
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CSceneEntityAlias_logic_choreographed_scene : public CSceneEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seasonal_FestiveFirework : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Terror_Mask_Fear : public CDOTA_Buff
{
public:
	Vector m_vOriginal; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Voodoo_Mask : public CDOTA_Buff_Item
{
public:
	float spell_lifesteal; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Trident : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Octarine_Core : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
	int32_t bonus_mana; // 0x133c	
	float bonus_cooldown; // 0x1340	
	float bonus_health_regen; // 0x1344	
	float bonus_mana_regen; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Circlet : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Snapfire_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Pangolier_Gyroshell : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFxIndex; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_QuadrupleTap_Bonuses : public CDOTA_Buff
{
public:
	int32_t charges; // 0x1338	
	int32_t bonus_damage; // 0x133c	
	int32_t lifesteal; // 0x1340	
	ParticleIndex_t m_nFXIndex; // 0x1344	
	int32_t m_nIgnoreStrikeIndex; // 0x1348	
	bool m_bIsAttackAnim; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Shredder_Flamethrower_Damage : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
	ParticleIndex_t m_nActiveFXIndex; // 0x133c	
	ParticleIndex_t m_nActiveStatusFXIndex; // 0x1340	
	float damage_per_second; // 0x1344	
	int32_t building_dmg_pct; // 0x1348	
	int32_t move_slow_pct; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Centaur_DoubleEdge_Buff : public CDOTA_Buff
{
public:
	int32_t shard_str_pct; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_KeeperOfTheLight_Will_O_Wisp : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_KeeperOfTheLight_ManaLeak : public CDOTA_Buff
{
public:
	float mana_leak_pct; // 0x1338	
	Vector vLastPos; // 0x133c	
	bool bResetPosition; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad1349[0x3]; // 0x1349
public:
	float m_fAccumulatedManaLeak; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Disruptor_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_LoneDruid_SpiritBear_Fetch : public CDOTA_Buff
{
public:
	float tick_rate; // 0x1338	
	int32_t drag_distance; // 0x133c	
	int32_t break_distance; // 0x1340	
	Vector vPreviousLocation; // 0x1344	
	CHandle< CDOTA_BaseNPC > m_hAnchor; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Shadow_Demon_Disruption_Bonus_Damage : public CDOTA_Buff_Item
{
public:
	int32_t illusion_flat_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ursa_Fury_Swipes : public CDOTA_Buff
{
public:
	int32_t damage_per_stack; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tidehunter_KrakenShell : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_CrystalMaiden_Let_It_Go : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Pudge_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Neutral_SpellImmunity_Visible : public CDOTA_Modifier_MagicImmune
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_MudGolem_RockDestroy : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x768
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFuncNavBlocker : public CBaseModelEntity
{
public:
	bool m_bDisabled; // 0x758	
private:
	[[maybe_unused]] uint8_t __pad0759[0x3]; // 0x759
public:
	int32_t m_nBlockedTeamNumber; // 0x75c	
	
	// Datamap fields:
	// void InputBlockNav; // 0x0
	// void InputUnblockNav; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CRagdollMagnet : public CPointEntity
{
public:
	bool m_bDisabled; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	float m_radius; // 0x4ac	
	float m_force; // 0x4b0	
	Vector m_axis; // 0x4b4	
	
	// Datamap fields:
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Antimage_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Viper_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Gold_Income_420 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_175 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Seasonal_TI11_Balloon : public CDOTA_BaseNPC_Additive
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13b0
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_AssaultCaptain_SunRay : public CDOTA_Buff
{
public:
	int32_t hp_cost_perc_per_second; // 0x1338	
	int32_t beam_range; // 0x133c	
	int32_t base_damage; // 0x1340	
	int32_t base_heal; // 0x1344	
	float tick_interval; // 0x1348	
	float forward_move_speed; // 0x134c	
	float turn_rate_initial; // 0x1350	
	float turn_rate; // 0x1354	
	int32_t radius; // 0x1358	
	int32_t self_turn_rate_percent; // 0x135c	
	float m_flCurrentTime; // 0x1360	
	GameTime_t m_flLastDamageTime; // 0x1364	
	float m_flAccumulatedSelfDamage; // 0x1368	
	bool m_bMovingForward; // 0x136c	
	bool m_bTurningFast; // 0x136d	
private:
	[[maybe_unused]] uint8_t __pad136e[0x2]; // 0x136e
public:
	float m_flFacingTarget; // 0x1370	
	float hp_perc_damage; // 0x1374	
	float hp_perc_heal; // 0x1378	
	ParticleIndex_t m_nBeamFXIndex; // 0x137c	
	CHandle< CBaseEntity > m_hVisionThinkers[8]; // 0x1380	
	CHandle< CBaseEntity > m_hBeamEnd; // 0x13a0	
	bool m_bCreatedVisionThinkers; // 0x13a4	
private:
	[[maybe_unused]] uint8_t __pad13a5[0x3]; // 0x13a5
public:
	CHandle< CBaseEntity > m_hBeamEndSound; // 0x13a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Unwavering_Condition : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Wind_Waker : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1338	
	float bonus_mana_regen; // 0x133c	
	int32_t bonus_movement_speed; // 0x1340	
	int32_t bonus_mana; // 0x1344	
	int32_t cast_range_bonus; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Fortitude_Ring : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Dagon_Upgraded : public CDOTA_Item_Dagon
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_GhostScepter : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DarkWillow_BrambleMaze_Thinker : public CDOTA_Buff
{
public:
	int32_t latch_range; // 0x1338	
	int32_t latch_vision; // 0x133c	
	float latch_creation_delay; // 0x1340	
	float latch_duration; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1348[0x8]; // 0x1348
public:
	bool m_bActive; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nyx_Assassin_SpikedCarapace : public CDOTA_Buff
{
public:
	float stun_duration; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hProcessedEnemies; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FacelessVoid_Arcana_Kill_Effect : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nCasterFXIndex; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Unique_Beastmaster_6 : public CDOTA_Buff
{
public:
	int32_t bonus_hp; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Courier_TakeStashAndTransferItems : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Sniper_Shrapnel_Slow : public CDOTA_Buff
{
public:
	int32_t slow_movement_speed; // 0x1338	
	int32_t shrapnel_damage; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Witch_Doctor_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_VengefulSpirit_WaveOfTerror : public CDOTABaseAbility
{
public:
	int32_t wave_width; // 0x578	
	float wave_speed; // 0x57c	
	int32_t m_iProjectile; // 0x580	
	float vision_aoe; // 0x584	
	float vision_duration; // 0x588	
	int32_t steal_pct; // 0x58c	
	int32_t damage; // 0x590	
	int32_t m_nNumHeroesHit; // 0x594	
	CountdownTimer m_ViewerTimer; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_nConsecutiveHits"
class CDOTA_Ability_Pudge_MeatHook : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x10]; // 0x578
public:
	Vector m_vProjectileLocation; // 0x588	
	float hook_speed; // 0x594	
	int32_t hook_width; // 0x598	
	int32_t hook_distance; // 0x59c	
	bool m_bRetracting; // 0x5a0	
	bool m_bDiedInHook; // 0x5a1	
private:
	[[maybe_unused]] uint8_t __pad05a2[0x2]; // 0x5a2
public:
	CHandle< CBaseEntity > m_hVictim; // 0x5a4	
	Vector m_vTargetPosition; // 0x5a8	
	Vector m_vCasterPosition; // 0x5b4	
	bool m_bChainDetached; // 0x5c0	
private:
	[[maybe_unused]] uint8_t __pad05c1[0x3]; // 0x5c1
public:
	ParticleIndex_t m_iChainParticle; // 0x5c4	
	ParticleIndex_t m_iSecondaryChainParticle; // 0x5c8	
	int32_t m_iHookParticle; // 0x5cc	
	int32_t m_nManaCost; // 0x5d0	
	CHandle< CBaseEntity > m_hSourceCaster; // 0x5d4	
	int32_t m_nNextConsecutiveHitCount; // 0x5d8	
	Vector m_vEndpoint; // 0x5dc	
	// MNetworkEnable
	int32_t m_nConsecutiveHits; // 0x5e8	
	bool m_bIsVectorTargeted; // 0x5ec	
private:
	[[maybe_unused]] uint8_t __pad05ed[0x3]; // 0x5ed
public:
	Vector m_vTurnLocation; // 0x5f0	
	Vector m_vDirectionAfterTurn; // 0x5fc	
	bool m_bHasTurned; // 0x608	
private:
	[[maybe_unused]] uint8_t __pad0609[0x3]; // 0x609
public:
	float m_flDistanceAfterTurn; // 0x60c	
	Vector m_vFinalPosition; // 0x610	
	float reveal_duration; // 0x61c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Neutral_Upgrade : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x778
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFuncBrush : public CBaseModelEntity
{
public:
	BrushSolidities_e m_iSolidity; // 0x758	
	int32_t m_iDisabled; // 0x75c	
	bool m_bSolidBsp; // 0x760	
private:
	[[maybe_unused]] uint8_t __pad0761[0x7]; // 0x761
public:
	CUtlSymbolLarge m_iszExcludedClass; // 0x768	
	bool m_bInvertExclusion; // 0x770	
	bool m_bScriptedMovement; // 0x771	
	
	// Datamap fields:
	// void InputTurnOn; // 0x0
	// void InputTurnOff; // 0x0
	// void InputToggle; // 0x0
	// CUtlSymbolLarge InputSetExcluded; // 0x0
	// bool InputSetInvert; // 0x0
	// void InputSetSolid; // 0x0
	// void InputSetNonsolid; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x158
// Has VTable
class CDOTABehaviorCommandMoveToPositionToDropItem
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	Vector m_vPosition; // 0x148	
	CHandle< CBaseEntity > m_hItem; // 0x154	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_Summon_Snowman : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Crystal_Maiden_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Viper_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Armor_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cleave_40 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CIngameEvent_FV2023 : public CIngameEvent_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x508
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFilterClass : public CBaseFilter
{
public:
	CUtlSymbolLarge m_iFilterClass; // 0x500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1878
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Effigy_AghsFort : public CDOTA_BaseNPC_Building
{
public:
	uint32_t m_unStatusEffectIndex; // 0x1870	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_HP : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x780
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CHandle<CDOTA_Item> m_hItem"
// MNetworkVarNames "bool m_bIsLowPriorityHoverItem"
class CDOTA_Item_Physical : public CBaseAnimatingActivity
{
public:
	int32_t m_nFlags; // 0x768	
	int32_t m_nRevealedInFoWForTeam; // 0x76c	
	GameTime_t m_fCreationTime; // 0x770	
	// MNetworkEnable
	CHandle< CDOTA_Item > m_hItem; // 0x774	
	// MNetworkEnable
	bool m_bIsLowPriorityHoverItem; // 0x778	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_SpecialistsArray_ProcDamage : public CDOTA_Buff_Item
{
public:
	int32_t proc_bonus_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Naginata : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1338	
	int32_t bonus_attack_speed; // 0x133c	
	int32_t bonus_damage; // 0x1340	
	int32_t bonus_health; // 0x1344	
	float bonus_mana_regen; // 0x1348	
	int32_t cooldown_reduction_percent; // 0x134c	
	int32_t bonus_chance; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Mage_Slayer_Debuff : public CDOTA_Buff
{
public:
	int32_t spell_amp_debuff; // 0x1338	
	int32_t dps; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Tree_Processor_Speed : public CDOTA_Buff_Item
{
public:
	int32_t health_per_tree; // 0x1338	
	int32_t hp_bonus; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Witch_Blade : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1338	
	int32_t bonus_attack_speed; // 0x133c	
	int32_t bonus_armor; // 0x1340	
	float slow_duration; // 0x1344	
	float bonus_mana_regen; // 0x1348	
	int32_t projectile_speed; // 0x134c	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_RingOfHealth : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Muerta_TrickShotCharges : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_DarkWillow_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EmberSpirit_SleightOfFist_Marker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Techies_ReactiveTazer_Disarm : public CDOTA_Modifier_Disarmed
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Skywrath_Mage_Concussive_Shot : public CDOTABaseAbility
{
public:
	int32_t speed; // 0x578	
	int32_t slow_radius; // 0x57c	
	int32_t damage; // 0x580	
	int32_t shot_vision; // 0x584	
	float slow_duration; // 0x588	
	float vision_duration; // 0x58c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_NagaSiren_MirrorImage : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_SpiritBreaker_NetherStrike : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TemplarAssassin_RefractionDamage : public CDOTA_Buff
{
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1338	
	int32_t bonus_damage; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lich_FrostArmor_Autocast : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Puck_Coil_Break_Stun : public CDOTA_Modifier_Stunned
{
public:
	Vector m_vCastLocation; // 0x1338	
	int32_t coil_rapid_fire_z_offset; // 0x1344	
	float coil_rapid_fire_rate; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Earthshaker_Fissure_Shard_Pathing : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5c8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_StormSpirit_BallLightning : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x10]; // 0x578
public:
	bool m_bHasAutoRemnantTalent; // 0x588	
private:
	[[maybe_unused]] uint8_t __pad0589[0x3]; // 0x589
public:
	float m_fAutoRemnantInterval; // 0x58c	
	int32_t ball_lightning_initial_mana_base; // 0x590	
	float ball_lightning_initial_mana_percentage; // 0x594	
	int32_t ball_lightning_travel_cost_base; // 0x598	
	float ball_lightning_travel_cost_percent; // 0x59c	
	int32_t m_iProjectileID; // 0x5a0	
	Vector m_vStartLocation; // 0x5a4	
	Vector m_vProjectileLocation; // 0x5b0	
	float m_fDistanceAccumulator; // 0x5bc	
	float m_fTalentDistanceAccumulator; // 0x5c0	
	int32_t scepter_remnant_interval; // 0x5c4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FixedNumberOfHitsToKill : public CDOTA_Buff
{
public:
	int32_t creep_attack_divisor; // 0x1338	
	int32_t attack_count; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Phoenix_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Terrorblade_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Gyrocopter_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x500
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFilterLOS : public CBaseFilter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has VTable
// Has Trivial Destructor
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float32 m_duration"
// MNetworkVarNames "float32 m_timestamp"
// MNetworkVarNames "float32 m_timescale"
class EngineCountdownTimer
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkEnable
	float m_duration; // 0x8	
	// MNetworkEnable
	float m_timestamp; // 0xc	
	// MNetworkEnable
	float m_timescale; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AlphaWolf_CriticalStrike : public CDOTA_Buff
{
public:
	int32_t crit_mult; // 0x1338	
	int32_t crit_chance; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Watch_Tower_Invulnerable : public CDOTA_Modifier_Invulnerable
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_WindLace : public CDOTA_Buff_Item
{
public:
	int32_t movement_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_MonkeyKingBar : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hoodwink_Hunters_Mark : public CDOTA_Buff
{
public:
	int32_t slow_pct; // 0x1338	
	int32_t spell_amp; // 0x133c	
	int32_t status_resistance; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Snapfire_Scatterblast_Slow : public CDOTA_Buff
{
public:
	bool m_bIsPointBlank; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	int32_t movement_slow_pct; // 0x133c	
	int32_t attack_slow_pct; // 0x1340	
	int32_t point_blank_dmg_bonus_pct; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Holdout_GladiatorsUnite : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tusk_FrozenSigil_Aura : public CDOTA_Buff
{
public:
	int32_t sigil_radius; // 0x1338	
	ParticleIndex_t m_iParticleIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Visage_Amor_Reduction : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_KeeperOfTheLight_Radiant_Bind : public CDOTA_Buff
{
public:
	float slow; // 0x1338	
	int32_t magic_resistance; // 0x133c	
	float stun_duration; // 0x1340	
	Vector vLastPos; // 0x1344	
	bool bResetPosition; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1351[0x3]; // 0x1351
public:
	float m_fAccumulatedDistance; // 0x1354	
	ParticleIndex_t m_nFXIndex; // 0x1358	
	ParticleIndex_t m_nStatusFXIndex; // 0x135c	
	bool m_bStunned; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Disruptor_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Meepo_MegaMeepo_Self : public CDOTA_Buff
{
public:
	int32_t base_strength; // 0x1338	
	int32_t base_int; // 0x133c	
	int32_t base_agi; // 0x1340	
	int32_t stats_pct; // 0x1344	
	CHandle< CBaseEntity > m_hMegameepoFrame; // 0x1348	
	bool m_bWasOutOfGame; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Chen_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Clinkz_SearingArrows : public CDOTA_Buff
{
public:
	int32_t damage_bonus; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1340	
	bool m_bBonusAttack; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Dazzle_Weave : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Viper_Nethertoxin_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoCourierSpawnDire2 : public CPointEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Kunkka_Tidal_Wave : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x578	
	Vector m_vStart; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Zuus_ThundergodsWrathThinker : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
	float damage_pct; // 0x133c	
	float sight_duration; // 0x1340	
	int32_t second_strike_damage_percent; // 0x1344	
	float second_strike_delay; // 0x1348	
	bool m_bZeusHasArcana; // 0x134c	
private:
	[[maybe_unused]] uint8_t __pad134d[0x3]; // 0x134d
public:
	CUtlVector< CHandle< CBaseEntity > > m_hTargetEntities; // 0x1350	
	bool m_bSecondaryStrike; // 0x1368	
private:
	[[maybe_unused]] uint8_t __pad1369[0x3]; // 0x1369
public:
	int32_t m_nKills; // 0x136c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x928
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPhysBox : public CBreakable
{
public:
	int32_t m_damageType; // 0x818	
	float m_massScale; // 0x81c	
	int32_t m_damageToEnableMotion; // 0x820	
	float m_flForceToEnableMotion; // 0x824	
	QAngle m_angPreferredCarryAngles; // 0x828	
	bool m_bNotSolidToWorld; // 0x834	
	bool m_bEnableUseOutput; // 0x835	
private:
	[[maybe_unused]] uint8_t __pad0836[0x2]; // 0x836
public:
	int32_t m_iExploitableByPlayer; // 0x838	
	float m_flTouchOutputPerEntityDelay; // 0x83c	
	CEntityIOOutput m_OnDamaged; // 0x840	
	CEntityIOOutput m_OnAwakened; // 0x868	
	CEntityIOOutput m_OnMotionEnabled; // 0x890	
	CEntityIOOutput m_OnPlayerUse; // 0x8b8	
	CEntityIOOutput m_OnStartTouch; // 0x8e0	
	CHandle< CBasePlayerPawn > m_hCarryingPlayer; // 0x908	
	
	// Datamap fields:
	// void InputWake; // 0x0
	// void InputSleep; // 0x0
	// void InputEnableMotion; // 0x0
	// void InputDisableMotion; // 0x0
	// void InputForceDrop; // 0x0
	// void InputDisableFloating; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_RestorativeFlower : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Warlock_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Vengeful_Spirit_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x528
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_NPCSpawnerGoodMid : public CDOTA_NPCSpawner
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Kobold_Disarm : public CDOTA_Buff
{
public:
	float duration; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seasonal_Summon_Common_Thinker : public CDOTA_Buff
{
public:
	float grace_period; // 0x1338	
	int32_t search_distance; // 0x133c	
	float think_interval; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Mana_Break : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
	int32_t burn_illusions_ranged; // 0x133c	
	int32_t burn_illusions_melee; // 0x1340	
	float damage_per_burn; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_AncientGuardian : public CDOTA_Buff_Item
{
public:
	int32_t actual_bonus_damage; // 0x1338	
	int32_t extra_bonus_damage; // 0x133c	
	int32_t bonus_damage; // 0x1340	
	float radius; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Tome_of_Omniscience : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Warhammer_Armor : public CDOTA_Buff
{
public:
	int32_t armor_reduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Gloves_Of_Travel : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Enchanted_Quiver : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Skadi_Slow : public CDOTA_Buff
{
public:
	int32_t cold_slow_melee; // 0x1338	
	int32_t cold_slow_ranged; // 0x133c	
	int32_t cold_attack_slow_melee; // 0x1340	
	int32_t cold_attack_slow_ranged; // 0x1344	
	int32_t heal_reduction; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_BladeOfAlacrity : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_DarkWillow_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Terrorblade_ConjureImage : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Obsidian_Destroyer_SanityEclipse : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Chen_Penitence_Self_Attack_Range : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
	int32_t self_attack_range_bonus; // 0x133c	
	bool m_bActive; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1418
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Weaver_TimeLapse : public CDOTA_Buff
{
public:
	Vector m_PositionIndex[11]; // 0x1338	
	float m_flLife[11]; // 0x13bc	
	float m_flMana[11]; // 0x13e8	
	bool m_bHasValidHistory; // 0x1414	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DragonKnight_DragonBlood : public CDOTA_Buff
{
public:
	int32_t bonus_health_regen; // 0x1338	
	int32_t bonus_armor; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Luna_LunarBlessing_Active : public CDOTA_Buff
{
public:
	int32_t attack_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FacelessVoid_TimeLock_ForceProc : public CDOTA_Buff
{
public:
	float duration; // 0x1338	
	float duration_creep; // 0x133c	
	int32_t bonus_damage; // 0x1340	
	float delay; // 0x1344	
	CHandle< CDOTA_BaseNPC > m_hTarget; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13a8
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_Tail_Swipe_Wall : public CDOTA_Buff
{
public:
	Vector m_vWallStartPosition; // 0x1338	
	Vector m_vWallDirection; // 0x1344	
	Vector m_vWallLeft; // 0x1350	
	int32_t m_DamageAmount; // 0x135c	
	int32_t m_DamageType; // 0x1360	
	float speed; // 0x1364	
	float starting_width; // 0x1368	
	float ending_width; // 0x136c	
	float stun_duration; // 0x1370	
	float fly_duration; // 0x1374	
	float fly_distance; // 0x1378	
	ParticleIndex_t m_nFXIndex; // 0x137c	
	GameTime_t m_flWallStartTime; // 0x1380	
	float m_flScalar; // 0x1384	
	CUtlVector< CHandle< CBaseEntity > > m_EntitiesToExclude; // 0x1388	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_WitchDoctor_Voodoo_Restoration_Heal : public CDOTA_Buff
{
public:
	int32_t heal; // 0x1338	
	float mana_per_second; // 0x133c	
	float heal_interval; // 0x1340	
	int32_t enemy_damage_pct; // 0x1344	
	float m_flTotalHealing; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VengefulSpirit_Command_Negative_Aura : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DrowRanger_Trueshot_Global : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Sven_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CHandle< CBaseEntity> m_hPrimary"
// MNetworkVarNames "CHandle< CBaseEntity> m_hSecondary"
// MNetworkVarNames "CHandle< CBaseEntity> m_hTertiary"
// MNetworkVarNames "CHandle< CBaseEntity> m_hFourth"
class CDOTA_Ability_Brewmaster_PrimalSplit : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hPrimary; // 0x578	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hSecondary; // 0x57c	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTertiary; // 0x580	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hFourth; // 0x584	
	GameTime_t m_fHurlBoulder_CooldownTime; // 0x588	
	GameTime_t m_fHDispelMagic_CooldownTime; // 0x58c	
	GameTime_t m_fCyclone_CooldownTime; // 0x590	
	GameTime_t m_fWindWalk_CooldownTime; // 0x594	
	GameTime_t m_fAstralPulse_CooldownTime; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x548
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTimerEntity : public CLogicalEntity
{
public:
	CEntityIOOutput m_OnTimer; // 0x4a8	
	CEntityIOOutput m_OnTimerHigh; // 0x4d0	
	CEntityIOOutput m_OnTimerLow; // 0x4f8	
	int32_t m_iDisabled; // 0x520	
	float m_flInitialDelay; // 0x524	
	float m_flRefireTime; // 0x528	
	bool m_bUpDownState; // 0x52c	
private:
	[[maybe_unused]] uint8_t __pad052d[0x3]; // 0x52d
public:
	int32_t m_iUseRandomTime; // 0x530	
	bool m_bPauseAfterFiring; // 0x534	
private:
	[[maybe_unused]] uint8_t __pad0535[0x3]; // 0x535
public:
	float m_flLowerRandomBound; // 0x538	
	float m_flUpperRandomBound; // 0x53c	
	float m_flRemainingTime; // 0x540	
	bool m_bPaused; // 0x544	
	
	// Datamap fields:
	// float InputRefireTime; // 0x0
	// void InputFireTimer; // 0x0
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
	// void InputToggle; // 0x0
	// float InputAddToTimer; // 0x0
	// void InputResetTimer; // 0x0
	// float InputSubtractFromTimer; // 0x0
	// void InputPauseTimer; // 0x0
	// void InputUnpauseTimer; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Amplify_18 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x718
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
class CDotaSubquestBuyItems : public CDotaSubquestBase
{
public:
	CUtlVector< char* > m_itemList; // 0x700	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x710
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
class CDotaSubquestPlayerStat : public CDotaSubquestBase
{
public:
	subquest_player_stat_types_t m_ePlayerStatType; // 0x700	
	int32_t m_nPlayerStatValue; // 0x704	
	int32_t m_nStartingStatOffset; // 0x708	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_bEnabled"
// MNetworkVarNames "bool m_bBlockFoW"
class CDOTA_SimpleObstruction : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x18]; // 0x4a8
public:
	// MNetworkEnable
	bool m_bEnabled; // 0x4c0	
	// MNetworkEnable
	bool m_bBlockFoW; // 0x4c1	
private:
	[[maybe_unused]] uint8_t __pad04c2[0x2]; // 0x4c2
public:
	uint32_t m_unOccluderID; // 0x4c4	
	bool m_bBlockingGridNav; // 0x4c8	
	
	// Datamap fields:
	// void InputToggle; // 0x0
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
	// bool StartDisabled; // 0x7fffffff
	// bool block_fow; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1878
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_CustomEffigy : public CDOTA_BaseNPC_Building
{
public:
	uint32_t m_unStatusEffectIndex; // 0x1870	
	CHandle< CBaseEntity > m_hPedestal; // 0x1874	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Mysterious_Hat : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Craggy_Coat_Tanky : public CDOTA_Buff_Item
{
public:
	int32_t active_armor; // 0x1338	
	int32_t move_speed; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Ancient_Janggo : public CDOTA_Buff_Item
{
public:
	int32_t radius; // 0x1338	
	int32_t bonus_str; // 0x133c	
	int32_t bonus_int; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Aegis : public CDOTA_Buff_Item
{
public:
	float reincarnate_time; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_BlinkDagger : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Eaglehorn : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifer_Item_GlovesOfHaste : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Snapfire_FiresnapCookie : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad057c[0x8]; // 0x57c
public:
	int32_t projectile_speed; // 0x584	
	float pre_hop_duration; // 0x588	
	float cast_on_ally_gesture_time; // 0x58c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pangolier_Swashbuckle_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Terrorblade_Metamorphosis_Transform_Aura_Applier : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Techies_Minefield_Sign : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x578	
	ParticleIndex_t m_nFXHammerIndex; // 0x57c	
	int32_t aura_radius; // 0x580	
	CHandle< CBaseEntity > m_hSign; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ogre_Magi_Bloodlust : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1338	
	int32_t bonus_movement_speed; // 0x133c	
	int32_t self_bonus; // 0x1340	
	float modelscale; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Outworld_Devourer : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DragonKnight_DragonBlood_Aura : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_QueenOfPain_ShadowStrike : public CDOTABaseAbility
{
public:
	Vector projectile_speed; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tinker_Rearm : public CDOTABaseAbility
{
public:
	Vector m_vProjectileLocation; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Earthshaker_Arcana : public CDOTA_Buff
{
public:
	int32_t m_nComboCount; // 0x1338	
	float m_flComboWindow; // 0x133c	
	float m_flComboDisplayInterval; // 0x1340	
	float m_flDamageDone; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Holdout_StaticRemnantThinker : public CDOTA_Buff
{
public:
	int32_t static_remnant_radius; // 0x1338	
	int32_t static_remnant_damage_radius; // 0x133c	
	int32_t static_remnant_damage; // 0x1340	
	float static_remnant_delay; // 0x1344	
	float overload_duration; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ScoutVisible : public CDOTA_Buff
{
public:
	int32_t reveal_radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1b0
// Has VTable
class CDOTABehaviorTutorialRazorMoveToNPCToAttack : public CDOTABehaviorMoveToNPCToAttack
{
public:
	CountdownTimer m_PlasmaFieldDelay; // 0x198	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Weaver_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Spectre_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Movement_Speed_Percentage_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Dazzle : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x500
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoPlayerStartGoodGuys : public CInfoPlayerStartDota
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Venomancer_PoisonSting : public CDOTA_Buff
{
public:
	int32_t m_iDamage; // 0x1338	
	int32_t movement_speed; // 0x133c	
	int32_t m_nTicksRemaining; // 0x1340	
	float m_flAttackDamage; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_Elemental_Wisp_Tether_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Orb_Of_Corrosion : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Ballista : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_WraithPact : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Dagon_Upgraded5 : public CDOTA_Item_Dagon_Upgraded
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_StoutShield : public CDOTA_Buff_Item
{
public:
	int32_t damage_block_melee; // 0x1338	
	int32_t damage_block_ranged; // 0x133c	
	int32_t block_chance; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_VoidStone : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Marci_Lunge_Debuff : public CDOTA_Buff
{
public:
	int32_t movement_slow_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AbyssalUnderlord_PitOfMalice : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bristleback_QuillSprayStack : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Magnus_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TrollWarlord_WhirlingAxes_Slow : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Treant_NaturesGuise_Tree_Walking : public CDOTA_Buff
{
public:
	int32_t movement_bonus; // 0x1338	
	int32_t regen_amp; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_EMP : public CDOTA_Ability_Invoker_InvokedBase
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DoomBringer_ScorchedEarth : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Spectre_Haunt : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Spectre_Dispersion : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DeathProphet_Scepter : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t spirit_speed; // 0x133c	
	int32_t max_distance; // 0x1340	
	int32_t give_up_distance; // 0x1344	
	int32_t min_damage; // 0x1348	
	int32_t max_damage; // 0x134c	
	int32_t heal_percent; // 0x1350	
	int32_t spirit_duration; // 0x1354	
	GameTime_t m_fStartTime; // 0x1358	
	GameTime_t m_fLastThinkTime; // 0x135c	
	bool m_bExpired; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1361[0x7]; // 0x1361
public:
	sSpiritInfo* m_SpiritInfo; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Beastmaster_Hawk_Dive : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lich_DarkSorcery : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Zuus_LightningBoltThinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Axe_Culling_Blade_NoMinHealth : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Pudge_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AncientApparition_ColdFeet : public CDOTA_Buff
{
public:
	Vector m_vecStartPosition; // 0x1338	
	int32_t m_nCurrentTick; // 0x1344	
	float damage; // 0x1348	
	int32_t break_distance; // 0x134c	
	float stun_duration; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_GiantWolf_Intimidate : public CDOTABaseAbility
{
public:
	int32_t radius; // 0x578	
	float duration; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Aghsfort_Reward_MagicResistAura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Sand_King_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Luna_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Brewmaster_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Agility_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Speed_140 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x228
// Has VTable
// Has Trivial Destructor
// MNetworkNoBase
// 
// MNetworkVarNames "float m_flValues"
// MNetworkVarNames "int m_nValueCounts"
// MNetworkVarNames "int m_nBucketCount"
// MNetworkVarNames "float m_flInterval"
// MNetworkVarNames "float m_flFinalValue"
// MNetworkVarNames "TimelineCompression_t m_nCompressionType"
// MNetworkVarNames "bool m_bStopped"
class CTimeline : public IntervalTimer
{
public:
	// MNetworkEnable
	float m_flValues[64]; // 0x10	
	// MNetworkEnable
	int32_t m_nValueCounts[64]; // 0x110	
	// MNetworkEnable
	int32_t m_nBucketCount; // 0x210	
	// MNetworkEnable
	float m_flInterval; // 0x214	
	// MNetworkEnable
	float m_flFinalValue; // 0x218	
	// MNetworkEnable
	TimelineCompression_t m_nCompressionType; // 0x21c	
	// MNetworkEnable
	bool m_bStopped; // 0x220	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Greevil_Miniboss_Orange_LightStrikeArray_Thinker : public CDOTA_Buff
{
public:
	int32_t m_iDamage; // 0x1338	
	float m_flStunDuration; // 0x133c	
	int32_t light_strike_array_aoe; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_TorrentEffectPotion_Thinker : public CDOTA_Buff_Item
{
public:
	float m_fProcChance; // 0x1338	
	int32_t m_nRadius; // 0x133c	
	int32_t m_nMovespeedBonus; // 0x1340	
	float m_fStunDuration; // 0x1344	
	float m_fSlowDuration; // 0x1348	
	float m_fDelay; // 0x134c	
	int32_t m_nTorrentDamage; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Royal_Jelly : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
	int32_t bonus_mana; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dawnbreaker_Fire_Wreath_Smash_Stun : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
	float m_flStartZ; // 0x133c	
	float m_flCurTime; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_FurArmy_BonusDamage : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Clinkz_WindWalk : public CDOTA_Modifier_Invisible
{
public:
	int32_t move_speed_bonus_pct; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rattletrap_Cog_Thinker_Talent : public CDOTA_Buff
{
public:
	int32_t cogs_radius; // 0x1338	
	int32_t extra_pull_buffer; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Beastmaster_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Sniper_TakeAim_Bonus : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
	int32_t active_attack_range_bonus; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Windrunner_Arcana_Kill_Effect : public CDOTA_Buff
{
public:
	bool m_bFrozen; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mirana_MoonlightShadow : public CDOTA_Modifier_PersistentInvisibility
{
public:
	float duration; // 0x1348	
	int32_t bonus_movement_speed; // 0x134c	
	int32_t evasion; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BackdoorProtectionActive : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Spawnlord_Master_Freeze : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x548
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CRagdollConstraint : public CPhysConstraint
{
public:
	float m_xmin; // 0x520	
	float m_xmax; // 0x524	
	float m_ymin; // 0x528	
	float m_ymax; // 0x52c	
	float m_zmin; // 0x530	
	float m_zmax; // 0x534	
	float m_xfriction; // 0x538	
	float m_yfriction; // 0x53c	
	float m_zfriction; // 0x540	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x160
// Has VTable
class CDOTABehaviorCommandMoveToPositionToCast
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	Vector m_vPosition; // 0x148	
	CHandle< CBaseEntity > m_hAbility; // 0x154	
	bool m_bTurningToTarget; // 0x158	
private:
	[[maybe_unused]] uint8_t __pad0159[0x3]; // 0x159
public:
	float m_flTargetAngle; // 0x15c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Death_Prophet_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Magic_Resistance_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Seasonal_TI11_Balloon_Dire : public CDOTA_BaseNPC_Seasonal_TI11_Balloon
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_UpgradedBarricade : public CDOTA_Buff
{
public:
	int32_t armor_bonus_per_upgrade; // 0x1338	
	int32_t hp_bonus_per_upgrade; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Roshans_Banner : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_AeonDisk : public CDOTA_Item
{
public:
	int32_t m_nUses; // 0x620	
	int32_t max_level; // 0x624	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Necronomicon_Archer_Aura : public CDOTA_Buff
{
public:
	int32_t ms_bonus; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Black_King_Bar : public CDOTA_Item
{
public:
	bool m_bActive; // 0x620	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_DivineRapier : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage_base; // 0x1338	
	int32_t bonus_damage; // 0x133c	
	int32_t bonus_spell_amp; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Mars_Spear : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad0590[0x8]; // 0x590
public:
	int32_t damage; // 0x598	
private:
	[[maybe_unused]] uint8_t __pad059c[0x4]; // 0x59c
public:
	CUtlVector< CHandle< CBaseEntity > > hImpaledTargetList; // 0x5a0	
	int32_t m_nTargetsImpaled; // 0x5b8	
	int32_t m_nMaxImpaleTargets; // 0x5bc	
	bool m_bHadBulwarkEnabled; // 0x5c0	
private:
	[[maybe_unused]] uint8_t __pad05c1[0x3]; // 0x5c1
public:
	Vector m_vLastTrailThinkerLocation; // 0x5c4	
	bool bHasStartedBurning; // 0x5d0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AbyssalUnderlord_DarkRift : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nfxTargetTp; // 0x1338	
	int32_t radius; // 0x133c	
	int32_t duration; // 0x1340	
	ParticleIndex_t m_nfxAmbientFx; // 0x1344	
	bool bPointTarget; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad1349[0x3]; // 0x1349
public:
	Vector vDestination; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EarthSpirit_Petrify : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
	bool m_bHasBeenMagnetized; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tusk_WalrusKick_Slow : public CDOTA_Buff
{
public:
	int32_t move_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slark_ShadowDance_Aura : public CDOTA_Buff
{
public:
	int32_t scepter_aoe; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Night_Stalker_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Roshan_RevengeRoar : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slardar_Amplify_Damage : public CDOTA_Buff
{
public:
	int32_t armor_reduction; // 0x1338	
	float scepter_delay; // 0x133c	
	int32_t undispellable; // 0x1340	
	int32_t puddle_radius; // 0x1344	
	float puddle_duration; // 0x1348	
	Vector m_vecLastPuddle; // 0x134c	
	CHandle< CBaseEntity > m_hPuddle; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Sniper_Assassinate : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x8]; // 0x578
public:
	CHandle< CBaseEntity > m_hTarget; // 0x580	
	ParticleIndex_t m_iIndex; // 0x584	
	float cooldown_reduction_on_kill; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Enigma_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Axe_CounterHelix_DamageReduction : public CDOTA_Buff
{
public:
	int32_t shard_damage_reduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DrowRanger_FrostArrows : public CDOTABaseAbility
{
public:
	int32_t shard_burst_damage_per_stack; // 0x578	
	float shard_burst_slow_duration; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BookOfAgility : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_ForestTrollHighPriest_Heal : public CDOTABaseAbility
{
public:
	GameTime_t m_flTargetTime; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4f8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPhysExplosion : public CPointEntity
{
public:
	bool m_bExplodeOnSpawn; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	float m_flMagnitude; // 0x4ac	
	float m_flDamage; // 0x4b0	
	float m_radius; // 0x4b4	
	CUtlSymbolLarge m_targetEntityName; // 0x4b8	
	float m_flInnerRadius; // 0x4c0	
	float m_flPushScale; // 0x4c4	
	bool m_bConvertToDebrisWhenPossible; // 0x4c8	
private:
	[[maybe_unused]] uint8_t __pad04c9[0x7]; // 0x4c9
public:
	CEntityIOOutput m_OnPushedPlayer; // 0x4d0	
	
	// Datamap fields:
	// void InputExplode; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPointPush : public CPointEntity
{
public:
	bool m_bEnabled; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	float m_flMagnitude; // 0x4ac	
	float m_flRadius; // 0x4b0	
	float m_flInnerRadius; // 0x4b4	
	float m_flConeOfInfluence; // 0x4b8	
private:
	[[maybe_unused]] uint8_t __pad04bc[0x4]; // 0x4bc
public:
	CUtlSymbolLarge m_iszFilterName; // 0x4c0	
	CHandle< CBaseFilter > m_hFilter; // 0x4c8	
	
	// Datamap fields:
	// void CPointPushPushThink; // 0x0
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CCredits : public CPointEntity
{
public:
	CEntityIOOutput m_OnCreditsDone; // 0x4a8	
	bool m_bRolledOutroCredits; // 0x4d0	
private:
	[[maybe_unused]] uint8_t __pad04d1[0x3]; // 0x4d1
public:
	float m_flLogoLength; // 0x4d4	
	
	// Datamap fields:
	// void InputRollCredits; // 0x0
	// void InputRollOutroCredits; // 0x0
	// void InputShowLogo; // 0x0
	// float InputSetLogoLength; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8
// Has Trivial Destructor
class CDOTA_BaseNPC_Hero::sHeroDamageInfo
{
public:
	PlayerID_t nDamagingPlayerID; // 0x0	
	GameTime_t fTime; // 0x4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Morphling_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bloodseeker_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Silencer_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Respawn_Reduction_20 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cooldown_Reduction_14 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_90 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cleave_150 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x60
// Has VTable
// 
// MNetworkVarNames "int nType"
// MNetworkVarNames "int nTier"
// MNetworkVarNames "int nSlotID"
// MNetworkVarNames "int nProgress"
// MNetworkVarNames "int nCompletionThreshold"
// MNetworkVarNames "PlayerID_t nPlayerID"
// MNetworkVarNames "int nQueryIndex"
// MNetworkVarNames "int nEventID"
// MNetworkVarNames "int nSequenceID"
// MNetworkVarNames "int nRequiredHero"
// MNetworkVarNames "int nCompleted"
class CDOTASubChallengeInfo
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	int32_t nType; // 0x30	
	// MNetworkEnable
	int32_t nTier; // 0x34	
	// MNetworkEnable
	int32_t nSlotID; // 0x38	
	// MNetworkEnable
	int32_t nProgress; // 0x3c	
	// MNetworkEnable
	int32_t nCompletionThreshold; // 0x40	
	// MNetworkEnable
	PlayerID_t nPlayerID; // 0x44	
	// MNetworkEnable
	int32_t nQueryIndex; // 0x48	
	// MNetworkEnable
	int32_t nEventID; // 0x4c	
	// MNetworkEnable
	int32_t nSequenceID; // 0x50	
	// MNetworkEnable
	int32_t nRequiredHero; // 0x54	
	// MNetworkEnable
	int32_t nCompleted; // 0x58	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa8
// Has VTable
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CHandle< CBasePlayerWeapon > m_hMyWeapons"
// MNetworkVarNames "CHandle< CBasePlayerWeapon> m_hActiveWeapon"
// MNetworkVarNames "CHandle< CBasePlayerWeapon> m_hLastWeapon"
// MNetworkVarNames "uint16 m_iAmmo"
class CPlayer_WeaponServices : public CPlayerPawnComponent
{
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< CHandle< CBasePlayerWeapon > > m_hMyWeapons; // 0x40	
	// MNetworkEnable
	CHandle< CBasePlayerWeapon > m_hActiveWeapon; // 0x58	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	CHandle< CBasePlayerWeapon > m_hLastWeapon; // 0x5c	
	// MNetworkEnable
	uint16_t m_iAmmo[32]; // 0x60	
	bool m_bPreventWeaponPickup; // 0xa0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Void_Spirit : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Huskar : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seasonal_TI11_BubbleGun : public CDOTA_Buff
{
public:
	float think_interval; // 0x1338	
	int32_t max_charges; // 0x133c	
	int32_t m_nChargesUsed; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_PoisonNova_Creature_Thinker : public CDOTA_Buff
{
public:
	float m_fCurRadius; // 0x1338	
	GameTime_t m_fLastThink; // 0x133c	
	CUtlVector< CHandle< CBaseEntity > > m_entitiesHit; // 0x1340	
	int32_t speed; // 0x1358	
	int32_t radius; // 0x135c	
	int32_t start_radius; // 0x1360	
	float duration; // 0x1364	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Creature_SpikedCarapace : public CDOTA_Buff
{
public:
	float stun_duration; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecAlreadyAppliedDebuff; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Lunar_Crest : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
	int32_t movement_speed; // 0x133c	
	int32_t bonus_spell_resist; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Mysterious_Hat : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Force_Boots : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Hurricane_Pike : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
	int32_t bonus_intellect; // 0x133c	
	int32_t bonus_agility; // 0x1340	
	int32_t bonus_strength; // 0x1344	
	int32_t base_attack_range; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Battlefury : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
	float bonus_health_regen; // 0x133c	
	float bonus_mana_regen; // 0x1340	
	int32_t cleave_damage_percent; // 0x1344	
	int32_t cleave_damage_percent_creep; // 0x1348	
	int32_t cleave_starting_width; // 0x134c	
	int32_t cleave_ending_width; // 0x1350	
	int32_t cleave_distance; // 0x1354	
	int32_t upgraded_cleave_bonus; // 0x1358	
	int32_t upgraded_damage_bonus; // 0x135c	
	int32_t quelling_bonus; // 0x1360	
	int32_t quelling_bonus_ranged; // 0x1364	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Snapfire_GobbleUp_Creep : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_DarkWillow_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tusk_Tag_Team_Slow : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Magnus : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Visage_GravekeepersCloak_Secondary : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_LoneDruid_TrueForm : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1338	
	int32_t bonus_hp; // 0x133c	
	float base_attack_time; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Furion_Sprout_Tether_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Slardar_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lich_Ice_Spire : public CDOTABaseAbility
{
public:
	int32_t aura_radius; // 0x578	
	float duration; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SkeletonKing_Reincarnation_SpawnSkeletons : public CDOTA_Buff
{
public:
	int32_t shard_skeleton_count; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Mirana_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Earth_Spirit_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ember_Spirit_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Invoker_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CIngameEvent_FV2019 : public CIngameEvent_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has Trivial Destructor
struct CAttributeManager__cached_attribute_float_t
{
public:
	float flIn; // 0x0	
	CUtlSymbolLarge iAttribHook; // 0x8	
	float flOut; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Weaver : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x528
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_NPCSpawnerGoodTop : public CDOTA_NPCSpawner
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_DuelistGloves : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_AsceticCap : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
	float hp_regen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x638
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Trusty_Shovel : public CDOTA_Item
{
public:
	Vector m_vChannelPos; // 0x620	
	bool m_bIsUnderwater; // 0x62c	
private:
	[[maybe_unused]] uint8_t __pad062d[0x3]; // 0x62d
public:
	ParticleIndex_t m_nPhaseStartFXIndex; // 0x630	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Flicker_Damaged : public CDOTA_Buff_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1518
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Mirror_Shield : public CDOTA_Buff_Item
{
public:
	CModifierParams m_LastParams; // 0x1338	
	int32_t all_stats; // 0x1508	
	int32_t reflect_chance; // 0x150c	
	bool m_bProcSuccessful; // 0x1510	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Hurricane_Pike : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Desolator : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_MarsSpearStunDuration : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Terrorblade_Metamorphosis_Transform : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Batrider_StickyNapalm_Application : public CDOTA_Buff
{
public:
	bool m_bShouldApply; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Furion_Sprout_Marker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Dazzle_Rain_Of_Vermin : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Luna_LucentBeam_Damage_Buff : public CDOTA_Buff
{
public:
	int32_t damage_buff_per_beam; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Roshan_SpellBlock : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Courier_ReturnStashItems : public CDOTA_Buff
{
public:
	Vector m_vLocation; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Witch_Doctor_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Riki_Poison_Dart_Debuff : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lina_Fiery_Cloak : public CDOTA_Buff
{
public:
	int32_t magic_resistance; // 0x1338	
	int32_t spell_amp; // 0x133c	
	float visualzdelta; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DrowRanger_FrostArrows_Hypothermia : public CDOTA_Buff
{
public:
	int32_t shard_regen_reduction_pct_per_stack; // 0x1338	
	int32_t shard_burst_radius; // 0x133c	
	ParticleIndex_t m_nFXStackIndex; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nevermore_Requiem_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x180
// Has VTable
class CDOTABehaviorCommandVampireThrall
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	CHandle< CBaseEntity > m_hTarget; // 0x148	
private:
	[[maybe_unused]] uint8_t __pad014c[0x4]; // 0x14c
public:
	float m_flTargetRange; // 0x150	
	bool m_bDeny; // 0x154	
	bool m_bInvisBreak; // 0x155	
	bool m_bNightmareAttack; // 0x156	
	bool m_bTurningToTarget; // 0x157	
	bool m_bHasPositionOrder; // 0x158	
	bool m_bIsAggressive; // 0x159	
private:
	[[maybe_unused]] uint8_t __pad015a[0x2]; // 0x15a
public:
	float m_flTargetAngle; // 0x15c	
	Vector m_vFollowOffset; // 0x160	
	Vector m_vMoveToPosition; // 0x16c	
	CHandle< CBaseEntity > m_hMaster; // 0x178	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Brewmaster_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Strength_18 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_Regen_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x768
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFuncNavObstruction : public CBaseModelEntity
{
private:
	[[maybe_unused]] uint8_t __pad0758[0x8]; // 0x758
public:
	bool m_bDisabled; // 0x760	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_NPC_Techies_Minefield_Sign : public CDOTA_BaseNPC_Additive
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CIngameEvent_MuertaReleaseSpring2023_DummyModifierHolder : public CDOTA_BaseNPC_Additive
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x988
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTriggerImpact : public CTriggerMultiple
{
public:
	float m_flMagnitude; // 0x950	
	float m_flNoise; // 0x954	
	float m_flViewkick; // 0x958	
private:
	[[maybe_unused]] uint8_t __pad095c[0x4]; // 0x95c
public:
	CEntityOutputTemplate< Vector > m_pOutputForce; // 0x960	
	
	// Datamap fields:
	// void InputImpact; // 0x0
	// float InputSetMagnitude; // 0x0
	// void CTriggerImpactDisable; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Magus_Minimus_Inhibit : public CDOTA_Buff
{
public:
	int32_t purge_rate; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_Fire_wreath_Charges : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dawnbreaker_Converge_Thinker : public CDOTA_Buff
{
public:
	int32_t flare_radius; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AbyssalUnderlord_PitOfMalice_Buff_Placer : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Brewmaster_Primal_Companion : public CDOTA_Buff
{
public:
	float cooldown_on_death; // 0x1338	
	float cooldown_on_take_damage; // 0x133c	
	int32_t disable_distance; // 0x1340	
	int32_t movement_slow_when_out_of_range; // 0x1344	
	bool m_bCanAttack; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad1349[0x3]; // 0x1349
public:
	ParticleIndex_t m_nFxIndex; // 0x134c	
	int32_t cooldown_penalty_pct; // 0x1350	
	int32_t bonus_brewling_hp; // 0x1354	
	int32_t bonus_damage; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DoomBringer_InfernalBlade : public CDOTA_Buff
{
public:
	bool m_bInfernalBladeAttack; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	ParticleIndex_t m_nFXIndex; // 0x133c	
	float burn_duration; // 0x1340	
	float ministun_duration; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DarkSeer_WallOfReplica_Slow : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DarkSeer_Normal_Punch : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rattletrap_Cog_Thinker : public CDOTA_Buff
{
public:
	int32_t cogs_radius; // 0x1338	
	int32_t extra_pull_buffer; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Viper_Nethertoxin : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Assassin_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_PhantomAssassin_PhantomStrike : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Slardar_Bash : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tinker_Rearmor : public CDOTA_Buff
{
public:
	int32_t magic_resistance; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tidehunter_Ravage : public CDOTA_Buff
{
public:
	float m_flStartZ; // 0x1338	
	float m_flCurTime; // 0x133c	
	bool m_bDamageApplied; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	float damage; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tiny_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tiny_TossTree_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Axe_BattleHunger : public CDOTA_Buff
{
public:
	int32_t damage_per_second; // 0x1338	
	int32_t slow; // 0x133c	
	int32_t scepter_armor_change; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Crystal_Maiden_Crystal_Clone_Statue : public CDOTA_Buff
{
public:
	int32_t frostbite_radius; // 0x1338	
	float anim_delay; // 0x133c	
	bool m_bActivated; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	int32_t clone_health; // 0x1344	
	float m_flDamageTaken; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Viper_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_Regen_16 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_800 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Techies : public CDOTA_BaseNPC_Hero
{
public:
	bool m_bLastDeathFromSuicide; // 0x1d98	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SatyrHellcaller_UnholyAura_Bonus : public CDOTA_Buff
{
public:
	float health_regen; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mutation_Vampire_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x958
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTriggerDetectBulletFire : public CBaseTrigger
{
public:
	bool m_bPlayerFireOnly; // 0x928	
private:
	[[maybe_unused]] uint8_t __pad0929[0x7]; // 0x929
public:
	CEntityIOOutput m_OnDetectedBulletFire; // 0x930	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x758
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CWorld : public CBaseModelEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_SkeletonKing_VampiricAura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_Reward_ArmorAura_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Star_Mace : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TrollWarlord_BattleTrance_Vision : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Life_Stealer_Infest_Creep : public CDOTA_Buff
{
public:
	bool m_bChangedTeams; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Venomancer_PoisonSting : public CDOTABaseAbility
{
public:
	int32_t radius; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Morphling_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tinker_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Medusa_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Riki_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Broodmother : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x880
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkIncludeByName "m_fFlags"
// MNetworkIncludeByName "m_vecVelocity"
// MNetworkOverride "m_fFlags CBaseEntity"
class CFuncMoveLinear : public CBaseToggle
{
public:
	MoveLinearAuthoredPos_t m_authoredPosition; // 0x7d8	
	QAngle m_angMoveEntitySpace; // 0x7dc	
	Vector m_vecMoveDirParentSpace; // 0x7e8	
private:
	[[maybe_unused]] uint8_t __pad07f4[0x4]; // 0x7f4
public:
	CUtlSymbolLarge m_soundStart; // 0x7f8	
	CUtlSymbolLarge m_soundStop; // 0x800	
	CUtlSymbolLarge m_currentSound; // 0x808	
	float m_flBlockDamage; // 0x810	
	float m_flStartPosition; // 0x814	
private:
	[[maybe_unused]] uint8_t __pad0818[0x8]; // 0x818
public:
	CEntityIOOutput m_OnFullyOpen; // 0x820	
	CEntityIOOutput m_OnFullyClosed; // 0x848	
	bool m_bCreateMovableNavMesh; // 0x870	
	bool m_bCreateNavObstacle; // 0x871	
	
	// Datamap fields:
	// float m_flMoveDistance; // 0x75c
	// void CFuncMoveLinearNavObstacleThink; // 0x0
	// void CFuncMoveLinearNavMovableThink; // 0x0
	// void InputOpen; // 0x0
	// void InputClose; // 0x0
	// float InputSetPosition; // 0x0
	// float InputSetSpeed; // 0x0
	// CUtlSymbolLarge InputTeleportToTarget; // 0x0
	// float InputResetPosition; // 0x0
	// float InputSetMoveDistanceFromStart; // 0x0
	// float InputSetMoveDistanceFromEnd; // 0x0
	// void CFuncMoveLinearStopMoveSound; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifer_Item_DandelionAmulet : public CDOTA_Buff_Item
{
public:
	int32_t move_speed; // 0x1338	
	int32_t mana; // 0x133c	
	int32_t magic_block; // 0x1340	
	int32_t min_damage; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Arcane_Boots : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Buckler : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Radiance : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Muerta_PartingShot_Knockback : public CDOTA_Modifier_Knockback
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Snapfire_GobbleUp_BellyHasUnit : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hGobbledUnit; // 0x1338	
	PlayerID_t m_nOriginalControllingUnit; // 0x133c	
	bool m_bUnitWasLaunched; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	float max_time_in_belly; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_ColdSnap_Freeze : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Jakiro_LiquidIce_Debuff : public CDOTA_Buff
{
public:
	int32_t base_damage; // 0x1338	
	float pct_health_damage; // 0x133c	
	int32_t movement_slow; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Luna_MoonGlaive : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecMarkedUnits; // 0x578	
	int32_t m_iAttackIndex; // 0x590	
private:
	[[maybe_unused]] uint8_t __pad0594[0x4]; // 0x594
public:
	CUtlVector< sGlaiveInfo > m_GlaiveInfo; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FacelessVoid_ArcanaDamageRouter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Enigma_MidnightPulse_Damage : public CDOTA_Buff
{
public:
	float damage_percent; // 0x1338	
	float tick_rate; // 0x133c	
	int32_t base_damage; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AncientApparition_IceBlast_Release : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SecondaryUnit_Taunt : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float m_flParticleSpacing"
// MNetworkVarNames "float m_flSlack"
// MNetworkVarNames "float m_flRadius"
// MNetworkVarNames "Color m_ColorTint"
// MNetworkVarNames "int m_nEffectState"
// MNetworkVarNames "HParticleSystemDefinitionStrong m_iEffectIndex"
// MNetworkVarNames "Vector m_PathNodes_Position"
// MNetworkVarNames "Vector m_PathNodes_TangentIn"
// MNetworkVarNames "Vector m_PathNodes_TangentOut"
// MNetworkVarNames "Vector m_PathNodes_Color"
// MNetworkVarNames "bool m_PathNodes_PinEnabled"
// MNetworkVarNames "float m_PathNodes_RadiusScale"
class CPathParticleRope : public CBaseEntity
{
public:
	bool m_bStartActive; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	float m_flMaxSimulationTime; // 0x4ac	
	CUtlSymbolLarge m_iszEffectName; // 0x4b0	
	CUtlVector< CUtlSymbolLarge > m_PathNodes_Name; // 0x4b8	
	// MNetworkEnable
	float m_flParticleSpacing; // 0x4d0	
	// MNetworkEnable
	// MNetworkChangeCallback "parametersChanged"
	float m_flSlack; // 0x4d4	
	// MNetworkEnable
	// MNetworkChangeCallback "parametersChanged"
	float m_flRadius; // 0x4d8	
	// MNetworkEnable
	// MNetworkChangeCallback "parametersChanged"
	Color m_ColorTint; // 0x4dc	
	// MNetworkEnable
	// MNetworkChangeCallback "effectStateChanged"
	int32_t m_nEffectState; // 0x4e0	
private:
	[[maybe_unused]] uint8_t __pad04e4[0x4]; // 0x4e4
public:
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeIParticleSystemDefinition > m_iEffectIndex; // 0x4e8	
	// MNetworkEnable
	CNetworkUtlVectorBase< Vector > m_PathNodes_Position; // 0x4f0	
	// MNetworkEnable
	CNetworkUtlVectorBase< Vector > m_PathNodes_TangentIn; // 0x508	
	// MNetworkEnable
	CNetworkUtlVectorBase< Vector > m_PathNodes_TangentOut; // 0x520	
	// MNetworkEnable
	CNetworkUtlVectorBase< Vector > m_PathNodes_Color; // 0x538	
	// MNetworkEnable
	// MNetworkChangeCallback "pinStateChanged"
	CNetworkUtlVectorBase< bool > m_PathNodes_PinEnabled; // 0x550	
	// MNetworkEnable
	CNetworkUtlVectorBase< float32 > m_PathNodes_RadiusScale; // 0x568	
	
	// Datamap fields:
	// CUtlSymbolLarge pathNodes; // 0x7fffffff
	// void InputStart; // 0x0
	// void InputStop; // 0x0
	// void InputStopEndCap; // 0x0
	// void InputDestroy; // 0x0
	// CUtlSymbolLarge InputDisablePin; // 0x0
	// float InputSetRadius; // 0x0
	// float InputSetSlack; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float m_flVisibilityStrength"
// MNetworkVarNames "float m_flFogDistanceMultiplier"
// MNetworkVarNames "float m_flFogMaxDensityMultiplier"
// MNetworkVarNames "float m_flFadeTime"
// MNetworkVarNames "bool m_bStartDisabled"
// MNetworkVarNames "bool m_bIsEnabled"
class CPlayerVisibility : public CBaseEntity
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "PlayerVisibilityStateChanged"
	float m_flVisibilityStrength; // 0x4a8	
	// MNetworkEnable
	// MNetworkChangeCallback "PlayerVisibilityStateChanged"
	float m_flFogDistanceMultiplier; // 0x4ac	
	// MNetworkEnable
	// MNetworkChangeCallback "PlayerVisibilityStateChanged"
	float m_flFogMaxDensityMultiplier; // 0x4b0	
	// MNetworkEnable
	// MNetworkChangeCallback "PlayerVisibilityStateChanged"
	float m_flFadeTime; // 0x4b4	
	// MNetworkEnable
	bool m_bStartDisabled; // 0x4b8	
	// MNetworkEnable
	bool m_bIsEnabled; // 0x4b9	
	
	// Datamap fields:
	// bool InputEnable; // 0x0
	// bool InputDisable; // 0x0
	// float InputSetPlayerVisibilityStrength; // 0x0
	// float InputSetPlayerFogDistanceMultiplier; // 0x0
	// float InputSetPlayerFogMaxDensityMultiplier; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Corspselord_Revive : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Juggernaut : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Wisp_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Lifesteal_35 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Intelligence_35 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Mana_Reduction_11 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CServerOnlyPointEntity : public CServerOnlyEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Creep_Piercing : public CDOTA_Buff
{
public:
	int32_t creep_damage_bonus; // 0x1338	
	int32_t hero_damage_penalty; // 0x133c	
	int32_t heavy_damage_penalty; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_Reward_ArmorAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Lunar_Crest : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Barricade : public CDOTA_Item
{
public:
	CHandle< CBaseEntity > m_hScout; // 0x620	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Falcon_Blade : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Orb_Of_Destruction : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_Item_RiverPainter3 : public CDOTA_Item_RiverPainter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_Item_RiverPainter6 : public CDOTA_Item_RiverPainter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_StaffOfWizardry : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1408
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Wisp_Spirits : public CDOTA_Buff
{
public:
	bool m_bSpiritsExplode; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	int32_t creep_damage; // 0x133c	
	int32_t hero_damage; // 0x1340	
	int32_t hit_radius; // 0x1344	
	int32_t hero_hit_radius; // 0x1348	
	int32_t explode_radius; // 0x134c	
	int32_t min_range; // 0x1350	
	int32_t max_range; // 0x1354	
	int32_t default_radius; // 0x1358	
	int32_t spirit_amount; // 0x135c	
	float m_flRotation; // 0x1360	
	float m_flSpiritRadius; // 0x1364	
	int32_t spirit_movement_rate; // 0x1368	
	GameTime_t m_flNextSpawn; // 0x136c	
	CUtlString m_strSpiritsOutSwapAbility; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Undying_Tombstone_Zombie_Deathstrike_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
	float m_flDecrementTime; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_LoneDruid_SpiritBear_Defender : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Silencer_GlaivesOfWisdom_BuffCounter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_GhostWalk_AD : public CDOTA_Ability_Invoker_GhostWalk
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Jakiro_DualBreath_Burn : public CDOTA_Buff
{
public:
	bool m_bFirst; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	int32_t burn_damage; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Leshrac_Split_Earth : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FacelessVoid_TimeWalk_Slow : public CDOTA_Buff
{
public:
	int32_t movement_speed_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_Tail_Swipe_AirTime : public CDOTA_Buff
{
public:
	float m_flStartZ; // 0x1338	
	float m_flCurTime; // 0x133c	
	float m_flOldPitch; // 0x1340	
	QAngle m_qRotation; // 0x1344	
	int32_t m_nRotations; // 0x1350	
	float m_flDistance; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_SatyrHellcaller_Shockwave : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DarkTrollWarlord_RaiseDead : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x938
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTriggerTeleport : public CBaseTrigger
{
public:
	CUtlSymbolLarge m_iLandmark; // 0x928	
	bool m_bUseLandmarkAngles; // 0x930	
	bool m_bMirrorPlayer; // 0x931	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x150
// Has VTable
class CDOTABehaviorCommandMoveToItemToTake
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	CHandle< CBaseEntity > m_hItem; // 0x148	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Sand_King_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Invoker_13 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cast_Range_225 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Magic_Resistance_100 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1880
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "string_t m_szOutpostName"
// MNetworkVarNames "string_t m_szInteractAbilityName"
class CDOTA_BaseNPC_Watch_Tower : public CDOTA_BaseNPC_Building
{
public:
	// MNetworkEnable
	CUtlSymbolLarge m_szOutpostName; // 0x1870	
	// MNetworkEnable
	CUtlSymbolLarge m_szInteractAbilityName; // 0x1878	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SatyrHellcaller_UnholyAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Doubloon : public CDOTA_Buff_Item
{
public:
	float conversion_pct; // 0x1338	
	int32_t bonus_health_regen; // 0x133c	
	float bonus_mana_regen; // 0x1340	
	int32_t regen_bonus_pct; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_DandelionAmulet : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Bloodthorn : public CDOTA_Buff_Item
{
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1338	
	int32_t bonus_intellect; // 0x1350	
	float bonus_mana_regen; // 0x1354	
	int32_t bonus_damage; // 0x1358	
	int32_t bonus_attack_speed; // 0x135c	
	int32_t spell_amp; // 0x1360	
	int32_t mana_regen_multiplier; // 0x1364	
	int32_t bonus_magic_resist; // 0x1368	
	float duration; // 0x136c	
	int32_t passive_proc_damage; // 0x1370	
	int32_t proc_chance; // 0x1374	
	float bonus_health_regen; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_UltimateOrb : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Hermes_Sandals_Active : public CDOTA_Buff
{
public:
	int32_t phase_movement_speed; // 0x1338	
	int32_t phase_movement_speed_range; // 0x133c	
	ParticleIndex_t m_nFXIndex; // 0x1340	
	bool m_bWasRooted; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Snapfire_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Techies_RemoteMine : public CDOTA_Modifier_Invisible
{
public:
	int32_t radius; // 0x1348	
	int32_t damage; // 0x134c	
	int32_t radius_scepter; // 0x1350	
	int32_t damage_scepter; // 0x1354	
	int32_t vision_radius; // 0x1358	
	float vision_duration; // 0x135c	
	int32_t model_scale; // 0x1360	
	bool bExploding; // 0x1364	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DoomBringer_Devour : public CDOTA_Buff
{
public:
	int32_t armor; // 0x1338	
	int32_t magic_resist; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_PhantomAssassin_CoupdeGrace : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Death_Seeker_OutOfWorld : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Riki_BlinkStrike : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Windrunner_FocusFire : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Juggernaut_Omnislash_Invulnerability : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x3990
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DataDriven : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1338[0x18]; // 0x1338
public:
	AbilityID_t m_nAbilityID; // 0x1350	
	int32_t m_nIndexInAbility; // 0x1354	
	bool m_bIsHidden; // 0x1358	
	bool m_bIsDebuff; // 0x1359	
	bool m_bIsPurgable; // 0x135a	
	bool m_bIsStunDebuff; // 0x135b	
	bool m_bAllowIllusionDuplicate; // 0x135c	
	bool m_bRemoveOnDeath; // 0x135d	
private:
	[[maybe_unused]] uint8_t __pad135e[0x2]; // 0x135e
public:
	char* m_pszAuraModifier; // 0x1360	
	int32_t m_nAuraModifierIndex; // 0x1368	
	int32_t m_nAuraRadius; // 0x136c	
	int32_t m_nAuraSearchTeam; // 0x1370	
	int32_t m_nAuraSearchType; // 0x1374	
	int32_t m_nAuraSearchFlags; // 0x1378	
	bool m_bAuraApplyToCaster; // 0x137c	
	bool m_bAuraApplyToParent; // 0x137d	
private:
	[[maybe_unused]] uint8_t __pad137e[0x2]; // 0x137e
public:
	int32_t m_nAttributes; // 0x1380	
private:
	[[maybe_unused]] uint8_t __pad1384[0x4]; // 0x1384
public:
	char* m_pszEffectName; // 0x1388	
	int32_t m_nEffectAttachType; // 0x1390	
	int32_t m_nModifierPriority; // 0x1394	
	char* m_pszStatusEffectName; // 0x1398	
	int32_t m_nStatusEffectPriority; // 0x13a0	
	int32_t m_nOverrideAnimation; // 0x13a4	
	int32_t m_nOrbPriority; // 0x13a8	
	int32_t m_nOrbLabel; // 0x13ac	
	bool m_bOrbIsCastAttack; // 0x13b0	
	bool m_bNeedsReParseIfRefreshed; // 0x13b1	
private:
	[[maybe_unused]] uint8_t __pad13b2[0x6]; // 0x13b2
public:
	char* m_pszModelName; // 0x13b8	
	char* m_pszOrbProjectileName; // 0x13c0	
private:
	[[maybe_unused]] uint8_t __pad13c8[0x24c0]; // 0x13c8
public:
	uint64_t m_nModifierStatesEnabled; // 0x3888	
	uint64_t m_nModifierStatesDisabled; // 0x3890	
	KeyValues* m_pOnCreated; // 0x3898	
	KeyValues* m_pOnIntervalThink; // 0x38a0	
	KeyValues* m_pOnDestroy; // 0x38a8	
	KeyValues* m_pOnAttackStart; // 0x38b0	
	KeyValues* m_pOnAttack; // 0x38b8	
	KeyValues* m_pOnAttackLanded; // 0x38c0	
	KeyValues* m_pOnAttackFailed; // 0x38c8	
	KeyValues* m_pOnAttackAllied; // 0x38d0	
	KeyValues* m_pOnProjectileDodge; // 0x38d8	
	KeyValues* m_pOnOrder; // 0x38e0	
	KeyValues* m_pOnUnitMoved; // 0x38e8	
	KeyValues* m_pOnAbilityStart; // 0x38f0	
	KeyValues* m_pOnAbilityExecuted; // 0x38f8	
	KeyValues* m_pOnBreakInvisibility; // 0x3900	
	KeyValues* m_pOnAbilityEndChannel; // 0x3908	
	KeyValues* m_pOnTakeDamage; // 0x3910	
	KeyValues* m_pOnDealDamage; // 0x3918	
	KeyValues* m_pOnStateChanged; // 0x3920	
	KeyValues* m_pOnAttacked; // 0x3928	
	KeyValues* m_pOnDeath; // 0x3930	
	KeyValues* m_pOnKill; // 0x3938	
	KeyValues* m_pOnRespawn; // 0x3940	
	KeyValues* m_pOnSpentMana; // 0x3948	
	KeyValues* m_pOnTeleporting; // 0x3950	
	KeyValues* m_pOnTeleported; // 0x3958	
	KeyValues* m_pOnHealthGained; // 0x3960	
	KeyValues* m_pOnManaGained; // 0x3968	
	KeyValues* m_pOnHeroKilled; // 0x3970	
	KeyValues* m_pOnHealReceived; // 0x3978	
	KeyValues* m_pOnAttackFinished; // 0x3980	
	KeyValues* m_pOnAttackCancelled; // 0x3988	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7c0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFuncMover : public CBaseModelEntity
{
public:
	CUtlSymbolLarge m_iszPathName; // 0x758	
	CHandle< CPathMover > m_hPathMover; // 0x760	
private:
	[[maybe_unused]] uint8_t __pad0764[0x4]; // 0x764
public:
	CUtlSymbolLarge m_iszPathNodeStart; // 0x768	
	CFuncMover::Move_t m_eMoveType; // 0x770	
	bool m_bIsReversing; // 0x774	
private:
	[[maybe_unused]] uint8_t __pad0775[0x3]; // 0x775
public:
	Vector m_vTarget; // 0x778	
	float m_flStartSpeed; // 0x784	
	float m_flPathLocation; // 0x788	
	float m_flT; // 0x78c	
	int32_t m_nCurrentNodeIndex; // 0x790	
	int32_t m_nPreviousNodeIndex; // 0x794	
	bool m_bFixedOrientation; // 0x798	
	bool m_bFixedPitch; // 0x799	
	SolidType_t m_eSolidType; // 0x79a	
	bool m_bIsMoving; // 0x79b	
	float m_flTimeToReachMaxSpeed; // 0x79c	
	float m_flTimeToReachZeroSpeed; // 0x7a0	
	GameTime_t m_flTimeMovementStart; // 0x7a4	
	GameTime_t m_flTimeMovementStop; // 0x7a8	
	CHandle< CMoverPathNode > m_hStopAtNode; // 0x7ac	
	float m_flPathLocationToBeginStop; // 0x7b0	
	Vector m_vPrevPosition; // 0x7b4	
	
	// Datamap fields:
	// void InputStartForward; // 0x0
	// void InputStartReverse; // 0x0
	// void InputStop; // 0x0
	// void InputToggle; // 0x0
	// CUtlSymbolLarge InputTeleportToPathNode; // 0x0
	// CUtlSymbolLarge InputMoveToPathNode; // 0x0
	// CUtlSymbolLarge InputTransitionToPathNode; // 0x0
	// float InputSetSpeed; // 0x0
	// void CFuncMoverMove; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Zombie_Berserk : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Visage_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Nevermore_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Respawn_Reduction_60 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_All_Stats_14 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_Regen_25 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Corruption_25 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x158
// Has VTable
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "fogplayerparams_t m_PlayerFog"
// MNetworkVarNames "CHandle< CColorCorrection> m_hColorCorrectionCtrl"
// MNetworkVarNames "CHandle< CBaseEntity> m_hViewEntity"
// MNetworkVarNames "CHandle< CTonemapController2> m_hTonemapController"
// MNetworkVarNames "audioparams_t m_audio"
// MNetworkVarNames "CHandle<CPostProcessingVolume> m_PostProcessingVolumes"
class CPlayer_CameraServices : public CPlayerPawnComponent
{
public:
	// MNetworkEnable
	fogplayerparams_t m_PlayerFog; // 0x40	
	// MNetworkEnable
	CHandle< CColorCorrection > m_hColorCorrectionCtrl; // 0x80	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hViewEntity; // 0x84	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerAndObserversExclusive"
	CHandle< CTonemapController2 > m_hTonemapController; // 0x88	
private:
	[[maybe_unused]] uint8_t __pad008c[0x4]; // 0x8c
public:
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerAndObserversExclusive"
	// -> localSound[8] - 0x98
	// -> soundscapeIndex - 0xf8
	// -> localBits - 0xfc
	// -> soundscapeEntityListIndex - 0x100
	// -> soundEventHash - 0x104
	audioparams_t m_audio; // 0x90	
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerAndObserversExclusive"
	CNetworkUtlVectorBase< CHandle< CPostProcessingVolume > > m_PostProcessingVolumes; // 0x108	
	float m_flOldPlayerZ; // 0x120	
	float m_flOldPlayerViewOffsetZ; // 0x124	
private:
	[[maybe_unused]] uint8_t __pad0128[0x18]; // 0x128
public:
	CUtlVector< CHandle< CEnvSoundscapeTriggerable > > m_hTriggerSoundscapeList; // 0x140	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CHandle< CDOTA_BaseNPC> m_hIllusionOwner"
// MNetworkVarNames "bool m_bIllusionHasTree"
class CDOTA_Unit_Hero_Tiny : public CDOTA_BaseNPC_Hero
{
public:
	CHandle< CBaseEntity > m_hTreeWearable; // 0x1d98	
	ParticleIndex_t m_nFXIndexScepterAmbient; // 0x1d9c	
	// MNetworkEnable
	CHandle< CDOTA_BaseNPC > m_hIllusionOwner; // 0x1da0	
	// MNetworkEnable
	bool m_bIllusionHasTree; // 0x1da4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_HorizonsEquilibrium : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Imp_Claw : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Holy_Locket : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_WraithPact_DeathAura : public CDOTA_Buff
{
public:
	int32_t armor_penalty_aura; // 0x1338	
	int32_t damage_penalty_aura; // 0x133c	
	float aura_dps; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_UltimateScepter : public CDOTA_Buff_Item
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
	int32_t bonus_all_stats; // 0x133c	
	int32_t bonus_health; // 0x1340	
	int32_t bonus_mana; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Buff_Wards : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Oracle_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Techies_StickyBomb_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Abaddon_DeathCoil : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Centaur_DoubleEdge_Slow : public CDOTA_Buff
{
public:
	int32_t shard_movement_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Obsidian_Destroyer_Sanity_Eclipse_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Chen_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Enchantress_Little_Friends : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hZombieTarget; // 0x1338	
	CHandle< CBaseEntity > m_hDesiredTarget; // 0x133c	
	int32_t damage_reduction; // 0x1340	
	int32_t bonus_attack_speed; // 0x1344	
	int32_t bonus_move_speed; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Dazzle_Shallow_Grave : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Beastmaster_Hawk_Dive : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
	float m_flPredictedTotalTime; // 0x133c	
	Vector m_vStartPosition; // 0x1340	
	float m_flCurrentTimeHoriz; // 0x134c	
	float m_flCurrentTimeVert; // 0x1350	
	bool m_bHorizontalMotionInterrupted; // 0x1354	
	bool m_bDamageApplied; // 0x1355	
private:
	[[maybe_unused]] uint8_t __pad1356[0x2]; // 0x1356
public:
	Vector m_vHorizontalVelocity; // 0x1358	
	Vector m_vLastKnownTargetPosition; // 0x1364	
	float m_flInitialVelocityZ; // 0x1370	
	bool m_bDone; // 0x1374	
private:
	[[maybe_unused]] uint8_t __pad1375[0x3]; // 0x1375
public:
	int32_t dive_damage; // 0x1378	
	float dive_root_duration; // 0x137c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Vermillion_Robe : public CDOTA_Buff_Item
{
public:
	int32_t mana_regen_pct; // 0x1338	
	int32_t move_speed_bonus; // 0x133c	
	int32_t bonus_stats; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Courier_TakeStashItems : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hStashOwner; // 0x1338	
	Vector m_vLocation; // 0x133c	
	bool m_bTransferAfterTake; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad1349[0x3]; // 0x1349
public:
	int32_t stash_pickup_distance; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Enigma_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nevermore_Presence_Aura : public CDOTA_Buff
{
public:
	int32_t presence_radius; // 0x1338	
	float kill_buff_duration; // 0x133c	
	GameTime_t m_fLastStackChange; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Techies_LandMine : public CDOTA_Modifier_Invisible
{
public:
	int32_t radius; // 0x1348	
	float proximity_threshold; // 0x134c	
	float damage; // 0x1350	
	float activation_delay; // 0x1354	
	float outer_damage; // 0x1358	
	int32_t min_distance; // 0x135c	
	bool bActivated; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1361[0x7]; // 0x1361
public:
	CountdownTimer m_Timer; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Filler_Heal_Aura : public CDOTA_Buff_Item
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Furbolg_Enrage_AttackSpeed : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x930
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTriggerCallback : public CBaseTrigger
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x178
// Has VTable
class CDOTABehaviorCreatureCompanion : public CDOTABehaviorCompanion
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1db0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "uint32 m_nArcanaColor"
class CDOTA_Unit_Hero_Terrorblade : public CDOTA_BaseNPC_Hero
{
public:
	ParticleIndex_t m_nFXDeath; // 0x1d98	
private:
	[[maybe_unused]] uint8_t __pad1d9c[0x4]; // 0x1d9c
public:
	CUtlString m_szResponseCriteria; // 0x1da0	
	// MNetworkEnable
	uint32_t m_nArcanaColor; // 0x1da8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x500
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_GameMechanic_AutoRecovery : public CServerOnlyEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x10]; // 0x4a8
public:
	float m_flRecoveryDelay; // 0x4b8	
	float m_flHealthRegenPerSecond; // 0x4bc	
	float m_flManaRegenPerSecond; // 0x4c0	
	float m_flTickInterval; // 0x4c4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_TI9_Instruments : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bounty_Hunter_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Phoenix_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tinker_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ember_Spirit_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Windranger : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cast_Range_75 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_40 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CIngameEvent_NB2020 : public CIngameEvent_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CHandle< CBaseEntity> m_hTarget"
// MNetworkVarNames "Vector m_vProjectilePosition"
class CDOTA_Unit_Tidehunter_Anchor : public CDOTA_BaseNPC_Additive
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTarget; // 0x1768	
	// MNetworkEnable
	Vector m_vProjectilePosition; // 0x176c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa50
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPhysicsPropOverride : public CPhysicsProp
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ItemWiggle_Thinker : public CDOTA_Buff
{
public:
	Vector m_vOriginalPosition; // 0x1338	
	float m_flOriginalScale; // 0x1344	
	GameTime_t m_flLastChangeTime; // 0x1348	
	Vector m_vLastChangePosition; // 0x134c	
	float m_flLastChangeScale; // 0x1358	
	Vector m_vTargetPosition; // 0x135c	
	float m_flTargetScale; // 0x1368	
	bool m_bFirstThink; // 0x136c	
private:
	[[maybe_unused]] uint8_t __pad136d[0x3]; // 0x136d
public:
	float m_flStartAmplitude; // 0x1370	
	float m_flEndAmplitude; // 0x1374	
	float m_flScaleAmplitude; // 0x1378	
	float m_flStartFrequency; // 0x137c	
	float m_flEndFrequency; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Sorcerers_Staff : public CDOTA_Buff_Item
{
public:
	int32_t mana_regen_amp; // 0x1338	
	int32_t spell_amp_creeps; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Necronomicon_Warrior_ManaBurn : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Boots_Of_Bearing : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Bloodstone_Active : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_PoorMansShield : public CDOTA_Buff_Item
{
public:
	int32_t damage_block_melee; // 0x1338	
	int32_t damage_block_ranged; // 0x133c	
	int32_t block_chance; // 0x1340	
	int32_t bonus_agility; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_TalismanOfEvasion : public CDOTA_Buff_Item
{
public:
	int32_t bonus_evasion; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Marci_Lunge_LandingAnim : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dawnbreaker_Solar_Guardian_Thinker : public CDOTA_Buff
{
public:
	float pulse_interval; // 0x1338	
	int32_t iEffectRadius; // 0x133c	
	int32_t base_damage; // 0x1340	
	int32_t base_heal; // 0x1344	
	ParticleIndex_t m_nThinkerFXIndex; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Medusa_Mystic_Snake_Slow : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1338	
	int32_t turn_slow; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slark_EssenceShift_DebuffCounter : public CDOTA_Modifier_Stacking_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nyx_Assassin_Burrow : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nSpellStartFXIndex; // 0x578	
	ParticleIndex_t m_nPhaseStartFXIndex; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_LoneDruid_TrueForm_BattleCry : public CDOTABaseAbility
{
public:
	float cry_duration; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_Alacrity : public CDOTA_Ability_Invoker_InvokedBase
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Huskar_Inner_Fire : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CAI_ChangeHintGroup : public CBaseEntity
{
public:
	int32_t m_iSearchType; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04ac[0x4]; // 0x4ac
public:
	CUtlSymbolLarge m_strSearchName; // 0x4b0	
	CUtlSymbolLarge m_strNewHintGroup; // 0x4b8	
	float m_flRadius; // 0x4c0	
	
	// Datamap fields:
	// void InputActivate; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Phoenix_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tidehunter : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Amplify_20 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Block_18 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_500 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d8
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTAPlayer_MovementServices : public CPlayer_MovementServices
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CIngameEvent_10thAnniversary : public CIngameEvent_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Greevil_Miniboss_Green_Overgrowth : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xb50
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_bEnabled"
// MNetworkVarNames "float32 m_MaxWeight"
// MNetworkVarNames "float32 m_FadeDuration"
// MNetworkVarNames "float32 m_Weight"
// MNetworkVarNames "char m_lookupFilename"
class CColorCorrectionVolume : public CBaseTrigger
{
public:
	// MNetworkEnable
	bool m_bEnabled; // 0x928	
private:
	[[maybe_unused]] uint8_t __pad0929[0x3]; // 0x929
public:
	// MNetworkEnable
	float m_MaxWeight; // 0x92c	
	// MNetworkEnable
	float m_FadeDuration; // 0x930	
	bool m_bStartDisabled; // 0x934	
private:
	[[maybe_unused]] uint8_t __pad0935[0x3]; // 0x935
public:
	// MNetworkEnable
	float m_Weight; // 0x938	
	// MNetworkEnable
	char m_lookupFilename[512]; // 0x93c	
	float m_LastEnterWeight; // 0xb3c	
	GameTime_t m_LastEnterTime; // 0xb40	
	float m_LastExitWeight; // 0xb44	
	GameTime_t m_LastExitTime; // 0xb48	
	
	// Datamap fields:
	// void CColorCorrectionVolumeThinkFunc; // 0x0
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_EyeOfTheVizier : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_AeonDisk : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
	int32_t bonus_mana; // 0x133c	
	int32_t health_threshold_pct; // 0x1340	
	float buff_duration; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Pipe : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Armlet : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t bonus_attack_speed; // 0x133c	
	int32_t bonus_armor; // 0x1340	
	int32_t bonus_health_regen; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Hoodwink_HuntersQuiver : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hoodwink_Decoy_Invisibility : public CDOTA_Modifier_Invisible
{
public:
	int32_t movement_speed; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad134c[0x4]; // 0x134c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hEntitiesAffected; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Oracle_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rubick_Telekinesis_Stun : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ChaosKnight_Reality_Rift_Debuff : public CDOTA_Buff
{
public:
	int32_t armor_reduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Omniknight_HammerOfPurity : public CDOTA_Buff
{
public:
	GameTime_t m_flNextAttackTime; // 0x1338	
	float attack_cooldown; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Clinkz_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Viper_Nose_Dive : public CDOTA_Buff
{
public:
	Vector m_vTargetPos; // 0x1338	
	Vector m_vStart; // 0x1344	
	float m_flZDelta; // 0x1350	
	int32_t radius; // 0x1354	
	int32_t corrosive_radius; // 0x1358	
	float effect_duration; // 0x135c	
	int32_t dive_speed; // 0x1360	
	float start_height; // 0x1364	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Zuus_LightningBolt : public CDOTABaseAbility
{
public:
	bool m_bZeusHasArcana; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_FrostbittenGolem_TimeWarpAura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x520
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFilterEnemy : public CBaseFilter
{
public:
	CUtlSymbolLarge m_iszEnemyName; // 0x500	
	float m_flRadius; // 0x508	
	float m_flOuterRadius; // 0x50c	
	int32_t m_nMaxSquadmatesPerEnemy; // 0x510	
private:
	[[maybe_unused]] uint8_t __pad0514[0x4]; // 0x514
public:
	CUtlSymbolLarge m_iszPlayerName; // 0x518	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Warlock_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Demon_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Troll_Warlord_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Storm_Spirit_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x40
// Has VTable
// 
// MNetworkVarNames "PeriodicResourceID_t m_unPeriodicResourceID"
// MNetworkVarNames "uint32 m_unPeriodicResourceMax"
// MNetworkVarNames "uint32 m_unPeriodicResourceRemaining"
struct PlayerResourcePlayerPeriodicResourceData_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	PeriodicResourceID_t m_unPeriodicResourceID; // 0x30	
	// MNetworkEnable
	uint32_t m_unPeriodicResourceMax; // 0x34	
	// MNetworkEnable
	uint32_t m_unPeriodicResourceRemaining; // 0x38	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Ascension_Silence_Charge : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Royale_With_Cheese : public CDOTA_Buff
{
public:
	float shield; // 0x1338	
	float regen; // 0x133c	
	float idle; // 0x1340	
	int32_t m_nDamageAbsorbed; // 0x1344	
	GameTime_t m_timeLastTick; // 0x1348	
	GameTime_t m_timeLastDamage; // 0x134c	
	ParticleIndex_t nFXIndex; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Assault_Cuirass_Positive : public CDOTA_Buff
{
public:
	int32_t aura_attack_speed; // 0x1338	
	int32_t aura_positive_armor; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_UltimateScepter_Consumed : public CDOTA_Buff_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Muerta_PierceTheVeil_MagicImmunityDamageCancel : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hoodwink_AcornShot_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_VoidSpirit_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Phoenix_SunRayVision : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EmberSpirit_FireRemnant_Timer : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Skywrath_Mage_Shield_Of_The_Scion : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Treant_NaturesGrasp_Damage_Bonus : public CDOTA_Modifier_Treant_NaturesGrasp_Damage
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Leshrac_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Enigma_DemonicConversion : public CDOTA_Modifier_Kill
{
public:
	int32_t m_iAttackCount; // 0x1340	
	int32_t split_attack_count; // 0x1344	
	float life_extension; // 0x1348	
	int32_t eidolon_attack_range; // 0x134c	
	int32_t eidolon_bonus_damage; // 0x1350	
	int32_t eidolon_bonus_attack_speed; // 0x1354	
	bool m_bAllowSplit; // 0x1358	
private:
	[[maybe_unused]] uint8_t __pad1359[0x3]; // 0x1359
public:
	int32_t m_nSpawnNum; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Razor_UnstableCurrent_Slow : public CDOTA_Buff
{
public:
	int32_t strike_move_slow_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_CrystalMaiden_Frostbite : public CDOTA_Buff
{
public:
	int32_t max_ticks; // 0x1338	
	int32_t damage_per_second; // 0x133c	
	int32_t creep_damage_per_second; // 0x1340	
	float tick_interval; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Shadow_Demon_DemonicPurge_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Invoker_11 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Intelligence_15 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Ancient_Perseverance : public CDOTA_Buff_Item
{
public:
	int32_t damage; // 0x1338	
	int32_t hp_regen; // 0x133c	
	int32_t mana_regen_amp; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Demonicon_Bonus : public CDOTA_Buff
{
public:
	int32_t hp_bonus; // 0x1338	
	int32_t damage_bonus; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Veil_Of_Discord : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1338	
	int32_t bonus_hp_regen; // 0x133c	
	int32_t bonus_all_stats; // 0x1340	
	int32_t bonus_aoe; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_HelmOfTheDominator : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VoidSpirit_Dissimilate_Invis : public CDOTA_Modifier_Invisible
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13d8
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pangolier_Gyroshell : public CDOTA_Modifier_DebuffImmune
{
public:
	int32_t mp_cost_per_second; // 0x1338	
	float tick_interval; // 0x133c	
	float forward_move_speed; // 0x1340	
	float turn_rate_boosted; // 0x1344	
	float turn_rate; // 0x1348	
	int32_t hit_radius; // 0x134c	
	int32_t knockback_radius; // 0x1350	
	bool m_bHitFirstUpdate; // 0x1354	
private:
	[[maybe_unused]] uint8_t __pad1355[0x3]; // 0x1355
public:
	GameTime_t m_flHitEndTime; // 0x1358	
	float hit_recover_time; // 0x135c	
	GameTime_t m_flJumpEndTime; // 0x1360	
	float jump_recover_time; // 0x1364	
	float m_flTurnBoostProgress; // 0x1368	
	float m_flFacingTarget; // 0x136c	
	bool m_bIsJumping; // 0x1370	
private:
	[[maybe_unused]] uint8_t __pad1371[0x3]; // 0x1371
public:
	ParticleIndex_t m_nFXIndex; // 0x1374	
	CUtlVector< float32 > m_flTurnHistory; // 0x1378	
	CUtlVector< CHandle< CBaseEntity > > m_vecHeroesHitLastRicochet; // 0x1390	
	CUtlVector< CHandle< CBaseEntity > > m_vecHeroesCredited; // 0x13a8	
	CUtlVector< CHandle< CBaseEntity > > m_vecHeroesHitCurrentRicochet; // 0x13c0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_QuadrupleTap_Counter : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXStackIndex; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slark_Depth_Shroud_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	CHandle< CBaseEntity > m_hVisibleEntity; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_KeeperOfTheLight_ChakraMagic : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Undying_SoulRip : public CDOTABaseAbility
{
public:
	int32_t damage_per_unit; // 0x578	
	int32_t radius; // 0x57c	
	int32_t max_units; // 0x580	
	int32_t tombstone_heal; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Undying_Decay_Buff : public CDOTA_Buff
{
public:
	int32_t str_steal; // 0x1338	
	int32_t str_scale_up; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Life_Stealer_Ghoul_Frenzy_Slow : public CDOTA_Buff
{
public:
	int32_t miss_pct; // 0x1338	
	int32_t movement_slow; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_TemplarAssassin_Refraction_Holdout : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Courier_GoToSecretShop : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lion_ManaDrain_Debuff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1428
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lua_Motion_Both : public CDOTA_Modifier_Lua
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rune_Haste : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x758
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CShower : public CModelPointEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4f8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float m_flEndDistance"
// MNetworkVarNames "float m_flStartDistance"
// MNetworkVarNames "float m_flFogFalloffExponent"
// MNetworkVarNames "bool m_bHeightFogEnabled"
// MNetworkVarNames "float m_flFogHeightWidth"
// MNetworkVarNames "float m_flFogHeightEnd"
// MNetworkVarNames "float m_flFogHeightStart"
// MNetworkVarNames "float m_flFogHeightExponent"
// MNetworkVarNames "float m_flLODBias"
// MNetworkVarNames "bool m_bActive"
// MNetworkVarNames "bool m_bStartDisabled"
// MNetworkVarNames "float m_flFogMaxOpacity"
// MNetworkVarNames "int m_nCubemapSourceType"
// MNetworkVarNames "HMaterialStrong m_hSkyMaterial"
// MNetworkVarNames "string_t m_iszSkyEntity"
// MNetworkVarNames "HRenderTextureStrong m_hFogCubemapTexture"
// MNetworkVarNames "bool m_bHasHeightFogEnd"
class CEnvCubemapFog : public CBaseEntity
{
public:
	// MNetworkEnable
	float m_flEndDistance; // 0x4a8	
	// MNetworkEnable
	float m_flStartDistance; // 0x4ac	
	// MNetworkEnable
	float m_flFogFalloffExponent; // 0x4b0	
	// MNetworkEnable
	bool m_bHeightFogEnabled; // 0x4b4	
private:
	[[maybe_unused]] uint8_t __pad04b5[0x3]; // 0x4b5
public:
	// MNetworkEnable
	float m_flFogHeightWidth; // 0x4b8	
	// MNetworkEnable
	float m_flFogHeightEnd; // 0x4bc	
	// MNetworkEnable
	float m_flFogHeightStart; // 0x4c0	
	// MNetworkEnable
	float m_flFogHeightExponent; // 0x4c4	
	// MNetworkEnable
	float m_flLODBias; // 0x4c8	
	// MNetworkEnable
	bool m_bActive; // 0x4cc	
	// MNetworkEnable
	bool m_bStartDisabled; // 0x4cd	
private:
	[[maybe_unused]] uint8_t __pad04ce[0x2]; // 0x4ce
public:
	// MNetworkEnable
	float m_flFogMaxOpacity; // 0x4d0	
	// MNetworkEnable
	int32_t m_nCubemapSourceType; // 0x4d4	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeIMaterial2 > m_hSkyMaterial; // 0x4d8	
	// MNetworkEnable
	CUtlSymbolLarge m_iszSkyEntity; // 0x4e0	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_hFogCubemapTexture; // 0x4e8	
	// MNetworkEnable
	bool m_bHasHeightFogEnd; // 0x4f0	
	bool m_bFirstTime; // 0x4f1	
	
	// Datamap fields:
	// bool InputEnable; // 0x0
	// bool InputDisable; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Aghsfort_Aziyog_Underlord_Portal_Warp : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_Ascension_MagneticField : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lycan_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tusk : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cooldown_Reduction_12 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Magic_Resistance_80 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_All_Stats_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Speed_25 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Juggernaut : public CDOTA_BaseNPC_Hero
{
public:
	uint32_t m_unOmniKills; // 0x1d98	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Orb_Of_Destruction : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Vampire_Fangs : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Holy_Locket_Aura : public CDOTA_Buff
{
public:
	float aura_health_regen; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Assault_Cuirass : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_HandOfMidas : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_GlovesOfHaste : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Marci_Unleash_Pull : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1338	
	float m_flEndTime; // 0x1344	
	float m_flCurTime; // 0x1348	
	int32_t shard_push_length; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hoodwink_Sharpshooter_Recoil_EndAnim : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Techies_Minefield_Sign_Scepter : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1338	
	float minefield_duration; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_iBrawlActive"
class CDOTA_Ability_Brewmaster_DrunkenBrawler : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnBrawlActiveChanged"
	int32_t m_iBrawlActive; // 0x578	
	bool m_bUpdateIcons; // 0x57c	
private:
	[[maybe_unused]] uint8_t __pad057d[0x3]; // 0x57d
public:
	ParticleIndex_t m_nDrunkenBrawlerFX; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DoomBringer_Doom : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
	float duration; // 0x133c	
	int32_t deniable_pct; // 0x1340	
	float flElapsedTime; // 0x1344	
	int32_t damage_amp; // 0x1348	
	bool m_bDoesBreak; // 0x134c	
	bool m_bDoesMute; // 0x134d	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DarkSeer_Normal_Punch_Illusion_Thinker : public CDOTA_Buff
{
public:
	Vector m_vecIllusionSpawnPosition; // 0x1338	
	int32_t speed; // 0x1344	
	CHandle< CBaseEntity > m_hTarget; // 0x1348	
	ParticleIndex_t m_nFXIndex; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PhantomLancer_Juxtapose_Cache : public CDOTA_Buff
{
public:
	PlayerID_t m_nControllingPlayer; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rune_ExtraDamage : public CDOTA_Modifier_Rune_DoubleDamage
{
public:
	int32_t m_iAdditionalDamagePct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_CameraFollow : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x570
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CSoundEventAABBEntity : public CSoundEventEntity
{
public:
	Vector m_vMins; // 0x558	
	Vector m_vMaxs; // 0x564	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7b0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CEnvExplosion : public CModelPointEntity
{
public:
	int32_t m_iMagnitude; // 0x758	
	float m_flPlayerDamage; // 0x75c	
	int32_t m_iRadiusOverride; // 0x760	
	float m_flInnerRadius; // 0x764	
	int32_t m_spriteScale; // 0x768	
	float m_flDamageForce; // 0x76c	
	CHandle< CBaseEntity > m_hInflictor; // 0x770	
	int32_t m_iCustomDamageType; // 0x774	
private:
	[[maybe_unused]] uint8_t __pad0778[0x8]; // 0x778
public:
	CUtlSymbolLarge m_iszExplosionType; // 0x780	
	CUtlSymbolLarge m_iszCustomEffectName; // 0x788	
	CUtlSymbolLarge m_iszCustomSoundName; // 0x790	
	Class_T m_iClassIgnore; // 0x798	
	Class_T m_iClassIgnore2; // 0x79c	
	CUtlSymbolLarge m_iszEntityIgnoreName; // 0x7a0	
	CHandle< CBaseEntity > m_hEntityIgnore; // 0x7a8	
	
	// Datamap fields:
	// uint32_t m_nExplosionType; // 0x778
	// void CEnvExplosionSmoke; // 0x0
	// void InputExplode; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Naga_Siren_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Pugna_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Lifesteal_100 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cleave_60 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Speed_50 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Phoenix : public CDOTA_BaseNPC_Hero
{
public:
	ParticleIndex_t m_nFXAmbientSpirits; // 0x1d98	
	bool m_bDetermineAmbientEffect; // 0x1d9c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9e8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_bTestOcclusion"
class CTriggerLook : public CTriggerOnce
{
public:
	CHandle< CBaseEntity > m_hLookTarget; // 0x950	
	float m_flFieldOfView; // 0x954	
	float m_flLookTime; // 0x958	
	float m_flLookTimeTotal; // 0x95c	
	GameTime_t m_flLookTimeLast; // 0x960	
	float m_flTimeoutDuration; // 0x964	
	bool m_bTimeoutFired; // 0x968	
	bool m_bIsLooking; // 0x969	
	bool m_b2DFOV; // 0x96a	
	bool m_bUseVelocity; // 0x96b	
	// MNetworkEnable
	bool m_bTestOcclusion; // 0x96c	
private:
	[[maybe_unused]] uint8_t __pad096d[0x3]; // 0x96d
public:
	CEntityIOOutput m_OnTimeout; // 0x970	
	CEntityIOOutput m_OnStartLook; // 0x998	
	CEntityIOOutput m_OnEndLook; // 0x9c0	
	
	// Datamap fields:
	// void CTriggerLookTimeoutThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Magus_Minimus_Aura_Slow : public CDOTA_Buff
{
public:
	int32_t max_slow_pct; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Book_Of_Shadows : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Yasha_And_Kaya_Maim : public CDOTA_Buff
{
public:
	int32_t maim_slow_movement; // 0x1338	
	int32_t maim_slow_attack; // 0x133c	
	int32_t maim_slow_movement_range; // 0x1340	
	int32_t maim_slow_attack_range; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_WraithPact_Thinker : public CDOTA_Buff
{
public:
	int32_t pact_aura_radius; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
	float aura_dps; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_VoidwalkerScythe : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_WraithBand : public CDOTA_Item
{
public:
	int32_t counter; // 0x620	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Dawnbreaker_Converge : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EmberSpirit_FlameGuard_Debuff : public CDOTA_Buff
{
public:
	int32_t damage_per_second; // 0x1338	
	float tick_interval; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_LoneDruid_SpiritBear_Fetch : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_Empty1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Chen_HolyPersuasion : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hDominatedUnits; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Life_Stealer_Infest_Enemy_Hero : public CDOTA_Buff
{
public:
	float attack_rate_enemy; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13a0
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Track_Order_Issuer : public CDOTA_Buff
{
public:
	PlayerID_t m_nIssuerPlayerIndex; // 0x1338	
	bool m_bTeamFirstCourier; // 0x133c	
private:
	[[maybe_unused]] uint8_t __pad133d[0x3]; // 0x133d
public:
	GameTime_t m_nPlayerCommandTime[24]; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Earthshaker_Fissure : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AntiMage_ManaBreak : public CDOTA_Buff
{
public:
	int32_t percent_damage_per_burn; // 0x1338	
	int32_t mana_per_hit; // 0x133c	
	float mana_per_hit_pct; // 0x1340	
	float slow_duration; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Phased : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pet : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Greevil_Miniboss_Orange_LightStrikeArray : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Greevil_Miniboss_White_Degen_Aura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x640
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Tombstone : public CDOTA_Item
{
public:
	float m_flTimer; // 0x620	
	CHandle< CDOTA_Item_Tombstone > m_hParent; // 0x624	
	CHandle< CDOTA_Item_Tombstone > m_hNextChild; // 0x628	
	Vector m_vContainerPosition; // 0x62c	
	ParticleIndex_t m_nFXIndex; // 0x638	
	ParticleIndex_t m_nFXIndex2; // 0x63c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x128
// Has VTable
// Construct allowed
// 
// MGetKV3ClassDefaults
class CPrecipitationVData : public CEntitySubclassVDataBase
{
public:
	CResourceNameTyped< CWeakHandle< InfoForResourceTypeIParticleSystemDefinition > > m_szParticlePrecipitationEffect; // 0x28	
	float m_flInnerDistance; // 0x108	
	ParticleAttachment_t m_nAttachType; // 0x10c	
	bool m_bBatchSameVolumeType; // 0x110	
private:
	[[maybe_unused]] uint8_t __pad0111[0x3]; // 0x111
public:
	int32_t m_nRTEnvCP; // 0x114	
	int32_t m_nRTEnvCPComponent; // 0x118	
private:
	[[maybe_unused]] uint8_t __pad011c[0x4]; // 0x11c
public:
	CUtlString m_szModifier; // 0x120	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLogicProximity : public CPointEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8718
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Bot
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x10]; // 0x0
public:
	int32_t m_iLifesteal; // 0x10	
	int32_t m_iBlock; // 0x14	
	bool m_bForceIdle; // 0x18	
	bool m_bForceCreepAttack; // 0x19	
private:
	[[maybe_unused]] uint8_t __pad001a[0x2]; // 0x1a
public:
	float m_fExecutionTime[30]; // 0x1c	
	int32_t m_iCurExecutionTime; // 0x94	
	PlayerID_t m_iPlayerID; // 0x98	
	CHandle< CBaseEntity > m_hUnit; // 0x9c	
	CDOTA_TeamCommander* m_pTeamCommander; // 0xa0	
	int32_t m_iUnitType; // 0xa8	
	float m_fAggressionFactor; // 0xac	
	bool m_bBotControlled; // 0xb0	
	bool m_bLiquidate; // 0xb1	
	bool m_bDoNotPurchase; // 0xb2	
private:
	[[maybe_unused]] uint8_t __pad00b3[0x1]; // 0xb3
public:
	int32_t m_iDifficulty; // 0xb4	
	bool m_bIsFullScriptTakeover; // 0xb8	
private:
	[[maybe_unused]] uint8_t __pad00b9[0x3]; // 0xb9
public:
	DOTA_LANE m_CurrentLane; // 0xbc	
	DOTA_LANE m_MostRecentLane; // 0xc0	
	DOTA_LANE m_AssignedLane; // 0xc4	
	DOTA_LANE m_TargetLane; // 0xc8	
	DOTA_LANE m_ForcedLane; // 0xcc	
	float m_fCurrentLaneAmount; // 0xd0	
	bool m_bIsNPXCarry; // 0xd4	
private:
	[[maybe_unused]] uint8_t __pad00d5[0x3]; // 0xd5
public:
	float m_fEstimatedUnitDamage; // 0xd8	
	float m_fEstimatedMaxUnitDamage; // 0xdc	
	float m_fEstimatedBuildingDamage; // 0xe0	
	bool m_bWantsToCast; // 0xe4	
private:
	[[maybe_unused]] uint8_t __pad00e5[0x3]; // 0xe5
public:
	int32_t m_iWantsToCastFrame; // 0xe8	
	bool m_bWantsToAttack; // 0xec	
private:
	[[maybe_unused]] uint8_t __pad00ed[0x3]; // 0xed
public:
	int32_t m_iWantsToAttackFrame; // 0xf0	
private:
	[[maybe_unused]] uint8_t __pad00f4[0x4]; // 0xf4
public:
	CountdownTimer m_UpdateCurrentLaneTimer; // 0xf8	
	CountdownTimer m_UpdateModeTimer; // 0x110	
	CountdownTimer m_ModeThinkTimer; // 0x128	
	CountdownTimer m_InteralRatingsTimer; // 0x140	
	CountdownTimer m_BuybackDelayTimer; // 0x158	
	CountdownTimer m_CourierUsageTimer; // 0x170	
	CountdownTimer m_AbilityMutedTimer; // 0x188	
	CountdownTimer m_AbilityMutedCheckTimer; // 0x1a0	
	GameTime_t m_HitByTowerTime; // 0x1b8	
	GameTime_t m_HitByHeroTime[24]; // 0x1bc	
	GameTime_t m_HitByCreepTime; // 0x21c	
	GameTick_t m_nEstimatedDamageUpdatedTick; // 0x220	
	GameTick_t m_nNearbyUnitsUpdatedTick; // 0x224	
private:
	[[maybe_unused]] uint8_t __pad0228[0xc0]; // 0x228
public:
	CUtlVector< int32 > m_NearbyTrees; // 0x2e8	
	int32_t m_nNearbyEnemyCreeps; // 0x300	
	int32_t m_nAttackingCreeps; // 0x304	
	int32_t m_nAttackingTowers; // 0x308	
	int32_t m_nAttackingHeroes; // 0x30c	
	GameTime_t m_fLastSeen; // 0x310	
	int32_t m_nFailedPaths; // 0x314	
	CHandle< CBaseEntity > m_hTarget; // 0x318	
	Vector m_vTargetLoc; // 0x31c	
	GameTime_t m_fTargetLastSeen; // 0x328	
	CHandle< CBaseEntity > m_hTargetLastHitCreep; // 0x32c	
	bool m_bWasInvisible; // 0x330	
	bool m_bKnownInvisible; // 0x331	
private:
	[[maybe_unused]] uint8_t __pad0332[0x2]; // 0x332
public:
	Vector m_vLastSeenLoc; // 0x334	
	Vector m_vRequestedBlinkLoc; // 0x340	
	GameTime_t m_fRequestedBlinkStart; // 0x34c	
	GameTime_t m_fRequestedBlinkExpire; // 0x350	
private:
	[[maybe_unused]] uint8_t __pad0354[0x4]; // 0x354
public:
	CUtlVector< CHandle< CBaseEntity > > m_hMinions; // 0x358	
	CUtlVector< CDOTABaseAbility* > m_Build; // 0x370	
private:
	[[maybe_unused]] uint8_t __pad0388[0x82e0]; // 0x388
public:
	float m_fModeDesires[27]; // 0x8668	
	int32_t m_iPreviousBotModeType; // 0x86d4	
private:
	[[maybe_unused]] uint8_t __pad86d8[0x30]; // 0x86d8
public:
	GameTime_t m_fPendingActionExecuteTime; // 0x8708	
	bool m_bPendingActionBypass; // 0x870c	
private:
	[[maybe_unused]] uint8_t __pad870d[0x3]; // 0x870d
public:
	int32_t m_nForceAbility; // 0x8710	
	GameTime_t m_flLastDebugTime; // 0x8714	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Necrophos_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Omniknight_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Armor_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_All_Stats_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1870
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_MangoTree : public CDOTA_BaseNPC_Building
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa18
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_nPlayerID"
class CDOTAPropPlusPlayerGuildBanner : public CDOTA_GuildBannerDynamic
{
public:
	// MNetworkEnable
	int32_t m_nPlayerID; // 0xa10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BerserkerTroll_Break : public CDOTA_Buff
{
public:
	float duration; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x860
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "string_t m_iszCommentaryFile"
// MNetworkVarNames "CHandle< CBaseEntity> m_hViewPosition"
// MNetworkVarNames "bool m_bActive"
// MNetworkVarNames "GameTime_t m_flStartTime"
// MNetworkVarNames "float32 m_flStartTimeInCommentary"
// MNetworkVarNames "string_t m_iszTitle"
// MNetworkVarNames "string_t m_iszSpeakers"
// MNetworkVarNames "int m_iNodeNumber"
// MNetworkVarNames "int m_iNodeNumberMax"
// MNetworkVarNames "bool m_bListenedTo"
class CPointCommentaryNode : public CBaseAnimatingActivity
{
public:
	CUtlSymbolLarge m_iszPreCommands; // 0x768	
	CUtlSymbolLarge m_iszPostCommands; // 0x770	
	// MNetworkEnable
	CUtlSymbolLarge m_iszCommentaryFile; // 0x778	
	CUtlSymbolLarge m_iszViewTarget; // 0x780	
	CHandle< CBaseEntity > m_hViewTarget; // 0x788	
	CHandle< CBaseEntity > m_hViewTargetAngles; // 0x78c	
	CUtlSymbolLarge m_iszViewPosition; // 0x790	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hViewPosition; // 0x798	
	CHandle< CBaseEntity > m_hViewPositionMover; // 0x79c	
	bool m_bPreventMovement; // 0x7a0	
	bool m_bUnderCrosshair; // 0x7a1	
	bool m_bUnstoppable; // 0x7a2	
private:
	[[maybe_unused]] uint8_t __pad07a3[0x1]; // 0x7a3
public:
	GameTime_t m_flFinishedTime; // 0x7a4	
	Vector m_vecFinishOrigin; // 0x7a8	
	QAngle m_vecOriginalAngles; // 0x7b4	
	QAngle m_vecFinishAngles; // 0x7c0	
	bool m_bPreventChangesWhileMoving; // 0x7cc	
	bool m_bDisabled; // 0x7cd	
private:
	[[maybe_unused]] uint8_t __pad07ce[0x2]; // 0x7ce
public:
	Vector m_vecTeleportOrigin; // 0x7d0	
	GameTime_t m_flAbortedPlaybackAt; // 0x7dc	
	CEntityIOOutput m_pOnCommentaryStarted; // 0x7e0	
	CEntityIOOutput m_pOnCommentaryStopped; // 0x808	
	// MNetworkEnable
	bool m_bActive; // 0x830	
private:
	[[maybe_unused]] uint8_t __pad0831[0x3]; // 0x831
public:
	// MNetworkEnable
	GameTime_t m_flStartTime; // 0x834	
	// MNetworkEnable
	float m_flStartTimeInCommentary; // 0x838	
private:
	[[maybe_unused]] uint8_t __pad083c[0x4]; // 0x83c
public:
	// MNetworkEnable
	CUtlSymbolLarge m_iszTitle; // 0x840	
	// MNetworkEnable
	CUtlSymbolLarge m_iszSpeakers; // 0x848	
	// MNetworkEnable
	int32_t m_iNodeNumber; // 0x850	
	// MNetworkEnable
	int32_t m_iNodeNumberMax; // 0x854	
	// MNetworkEnable
	bool m_bListenedTo; // 0x858	
	
	// Datamap fields:
	// void InputStartCommentary; // 0x0
	// void InputStartUnstoppableCommentary; // 0x0
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
	// void CPointCommentaryNodeSpinThink; // 0x0
	// void CPointCommentaryNodeUpdateViewThink; // 0x0
	// void CPointCommentaryNodeUpdateViewPostThink; // 0x0
	// void CPointCommentaryNodeAcculumatePlayTimeThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Underlord_Portal_Warp_Channel : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nfxTargetTp; // 0x1338	
	ParticleIndex_t m_nfxTargetTp2; // 0x133c	
	ParticleIndex_t m_nfxAmbientFx; // 0x1340	
	ParticleIndex_t m_nfxPortal1; // 0x1344	
	ParticleIndex_t m_nfxPortal2; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad134c[0x8]; // 0x134c
public:
	CHandle< CBaseEntity > m_hPortal; // 0x1354	
	CHandle< CBaseEntity > m_hOtherPortal; // 0x1358	
	Vector m_vStartPosition; // 0x135c	
	float m_flTotalTime; // 0x1368	
	float m_flElapsedTimePortion; // 0x136c	
	float animation_rate; // 0x1370	
	int32_t stop_distance; // 0x1374	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_EarthSpirit_Magnetize : public CDOTABaseAbility
{
public:
	int32_t cast_radius; // 0x578	
	int32_t rock_explosion_radius; // 0x57c	
	float damage_duration; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Rubick : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "EHANDLE m_hBear"
class CDOTA_Ability_LoneDruid_SpiritBear : public CDOTABaseAbility
{
public:
	bool m_bLevelChanged; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad0579[0x3]; // 0x579
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hBear; // 0x57c	
	CHandle< CBaseEntity > m_hPreBear; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Obsidian_Destroyer_Equilibrium_Debuff : public CDOTA_Buff
{
public:
	int32_t mana_steal; // 0x1338	
	float m_flCurrentMana; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DoomBringer_Devour : public CDOTABaseAbility
{
public:
	int32_t m_nDevourFirstSlot; // 0x578	
	bool m_bIsAltCastState; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Chen_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Broodmother_IncapacitatingBiteOrb : public CDOTA_Buff
{
public:
	int32_t miss_chance; // 0x1338	
	int32_t bonus_movespeed; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rattletrap_Overclocking : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nOverclockFX; // 0x1338	
	int32_t bonus_movement_speed; // 0x133c	
	int32_t bonus_attack_speed; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Viper_PoisonAttack_Slow : public CDOTA_Buff
{
public:
	float damage; // 0x1338	
	int32_t shard_armor_reduction; // 0x133c	
	int32_t shard_building_dmg_pct; // 0x1340	
	float movement_speed; // 0x1344	
	int32_t magic_resistance; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_EruptionThinker : public CDOTA_Buff
{
public:
	int32_t explosion_radius; // 0x1338	
	float damage_interval; // 0x133c	
	int32_t damage; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Ursa_Fury_Swipes : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Riki_Permanent_Invisibility : public CDOTA_Modifier_PersistentInvisibility
{
public:
	int32_t movement_speed; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mirana_MoonlightShadow_KillTracker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rune_SuperArcane : public CDOTA_Modifier_Rune_Arcane
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Furbolg_Enrage_Damage : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_TrapRoom_Hookshot : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x578	
	Vector m_vProjectileVelocity; // 0x57c	
	bool m_bRetract; // 0x588	
private:
	[[maybe_unused]] uint8_t __pad0589[0xb]; // 0x589
public:
	CHandle< CBaseEntity > m_hSourceCaster; // 0x594	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Visage_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "Vector m_vecBoundsMin"
// MNetworkVarNames "Vector m_vecBoundsMax"
class CDOTACameraBounds : public CBaseEntity
{
public:
	// MNetworkEnable
	Vector m_vecBoundsMin; // 0x4a8	
	// MNetworkEnable
	Vector m_vecBoundsMax; // 0x4b4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Luna : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Mirana : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Greevil_Miniboss_Red_Earthshock : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Legion_Commander_Duel : public CDOTA_Buff
{
public:
	int32_t reward_damage; // 0x1338	
	int32_t scepter_damage_reduction_pct; // 0x133c	
	bool m_bAttacked; // 0x1340	
	bool m_bHadAVictor; // 0x1341	
private:
	[[maybe_unused]] uint8_t __pad1342[0x2]; // 0x1342
public:
	GameTime_t m_flTimeDuelStart; // 0x1344	
	CHandle< CBaseEntity > m_hPartner; // 0x1348	
	float m_flNextTime; // 0x134c	
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_Type"
class CDOTA_NeutralSpawner : public CPointEntity
{
public:
	bool m_bGameStarted; // 0x4a8	
	bool m_bFirstSpawn; // 0x4a9	
private:
	[[maybe_unused]] uint8_t __pad04aa[0x6]; // 0x4aa
public:
	CountdownTimer m_SpawnTimer; // 0x4b0	
	int32_t m_iNextSpawnType; // 0x4c8	
	int32_t m_iPreviousSpawnType; // 0x4cc	
	int32_t m_iTotalToSpawn; // 0x4d0	
	int32_t m_iForcedSpawnType; // 0x4d4	
	int32_t m_iNumBatchesToSpawn; // 0x4d8	
	bool m_bLimitedBatches; // 0x4dc	
private:
	[[maybe_unused]] uint8_t __pad04dd[0x3]; // 0x4dd
public:
	PlayerID_t m_iStackingCreditPlayerID; // 0x4e0	
	float m_fInternalSpawnTimerTime; // 0x4e4	
	CountdownTimer m_InternalSpawnTimer; // 0x4e8	
	CountdownTimer m_FXTimer; // 0x500	
	CUtlVector< CHandle< CDOTA_BaseNPC > > m_PendingUnits; // 0x518	
	CUtlVector< CHandle< CDOTA_BaseNPC > > m_Units; // 0x530	
	bool m_bSeenClearedByTeam[2]; // 0x548	
private:
	[[maybe_unused]] uint8_t __pad054a[0x6]; // 0x54a
public:
	CUtlSymbolLarge m_szVolumeName; // 0x550	
	CUtlVector< CHandle< CBaseEntity > > m_hVolumes; // 0x558	
	CEntityIOOutput m_OnSpawnerExhausted; // 0x570	
	// MNetworkEnable
	int32_t m_Type; // 0x598	
	int32_t m_PullType; // 0x59c	
	int32_t m_AggroType; // 0x5a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_BossWinterWyvern_Cold_Embrace_Debuff : public CDOTA_Buff
{
public:
	int32_t linger_movement_slow; // 0x1338	
	int32_t linger_damage; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_OgreSealTotem : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Illusionsts_Cape : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Enchanted_Quiver : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_Item_RiverPainter7 : public CDOTA_Item_RiverPainter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Infused_Raindrop : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Necronomicon_Archer_AoE : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Hood_Of_Defiance : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Shivas_Guard : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Samurai_Tabi : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_PhaseBoots : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_BootsOfSpeed : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Undying_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Brewmaster_SpellImmunity : public CDOTA_Modifier_DebuffImmune
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DoomBringer_ScorchedEarthEffectAura : public CDOTA_Buff
{
public:
	int32_t damage_per_second; // 0x1338	
	int32_t bonus_movement_speed_pct; // 0x133c	
	int32_t radius; // 0x1340	
	int32_t heal_pct; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PhantomAssassin_Blur : public CDOTA_Buff
{
public:
	int32_t bonus_evasion; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Necrophos_Death_Seeker_Ethereal : public CDOTA_Buff
{
public:
	int32_t magic_resistance_reduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_PhantomLancer_Doppelwalk : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Earthshaker_EchoSlam_Delay : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Sand_King_Shard : public CDOTA_Buff
{
public:
	float shard_move_distance; // 0x1338	
	float shard_interval; // 0x133c	
	Vector vLastPos; // 0x1340	
	float m_fAccumulatedDistance; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Juggernaut_Healing_Ward_Heal : public CDOTA_Buff
{
public:
	int32_t healing_ward_heal_amount; // 0x1338	
	int32_t m_nStartingHealthThisInterval; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EarthSpirit_Geogmagnetic_Grip_Debuff : public CDOTA_Modifier_Silence
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tower_Truesight_Aura : public CDOTA_Modifier_Truesight_Aura
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x960
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_bIgnoreInput"
// MNetworkVarNames "bool m_bLit"
// MNetworkVarNames "bool m_bFollowPlayerAcrossTeleport"
// MNetworkVarNames "float m_flWidth"
// MNetworkVarNames "float m_flHeight"
// MNetworkVarNames "float m_flDPI"
// MNetworkVarNames "float m_flInteractDistance"
// MNetworkVarNames "float m_flDepthOffset"
// MNetworkVarNames "uint32 m_unOwnerContext"
// MNetworkVarNames "uint32 m_unHorizontalAlign"
// MNetworkVarNames "uint32 m_unVerticalAlign"
// MNetworkVarNames "uint32 m_unOrientation"
// MNetworkVarNames "bool m_bAllowInteractionFromAllSceneWorlds"
// MNetworkVarNames "string_t m_vecCSSClasses"
// MNetworkVarNames "bool m_bOpaque"
// MNetworkVarNames "bool m_bNoDepth"
// MNetworkVarNames "bool m_bRenderBackface"
// MNetworkVarNames "bool m_bUseOffScreenIndicator"
// MNetworkVarNames "bool m_bExcludeFromSaveGames"
// MNetworkVarNames "bool m_bGrabbable"
// MNetworkVarNames "bool m_bOnlyRenderToTexture"
// MNetworkVarNames "bool m_bDisableMipGen"
// MNetworkVarNames "int32 m_nExplicitImageLayout"
class CPointClientUIWorldPanel : public CBaseClientUIEntity
{
public:
	// MNetworkEnable
	bool m_bIgnoreInput; // 0x908	
	// MNetworkEnable
	bool m_bLit; // 0x909	
	// MNetworkEnable
	bool m_bFollowPlayerAcrossTeleport; // 0x90a	
private:
	[[maybe_unused]] uint8_t __pad090b[0x1]; // 0x90b
public:
	// MNetworkEnable
	float m_flWidth; // 0x90c	
	// MNetworkEnable
	float m_flHeight; // 0x910	
	// MNetworkEnable
	float m_flDPI; // 0x914	
	// MNetworkEnable
	float m_flInteractDistance; // 0x918	
	// MNetworkEnable
	float m_flDepthOffset; // 0x91c	
	// MNetworkEnable
	uint32_t m_unOwnerContext; // 0x920	
	// MNetworkEnable
	uint32_t m_unHorizontalAlign; // 0x924	
	// MNetworkEnable
	uint32_t m_unVerticalAlign; // 0x928	
	// MNetworkEnable
	uint32_t m_unOrientation; // 0x92c	
	// MNetworkEnable
	bool m_bAllowInteractionFromAllSceneWorlds; // 0x930	
private:
	[[maybe_unused]] uint8_t __pad0931[0x7]; // 0x931
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< CUtlSymbolLarge > m_vecCSSClasses; // 0x938	
	// MNetworkEnable
	bool m_bOpaque; // 0x950	
	// MNetworkEnable
	bool m_bNoDepth; // 0x951	
	// MNetworkEnable
	bool m_bRenderBackface; // 0x952	
	// MNetworkEnable
	bool m_bUseOffScreenIndicator; // 0x953	
	// MNetworkEnable
	bool m_bExcludeFromSaveGames; // 0x954	
	// MNetworkEnable
	bool m_bGrabbable; // 0x955	
	// MNetworkEnable
	bool m_bOnlyRenderToTexture; // 0x956	
	// MNetworkEnable
	bool m_bDisableMipGen; // 0x957	
	// MNetworkEnable
	int32_t m_nExplicitImageLayout; // 0x958	
	
	// Datamap fields:
	// void InputIgnoreUserInput; // 0x0
	// void InputAcceptUserInput; // 0x0
	// CUtlSymbolLarge InputAddCSSClass; // 0x0
	// CUtlSymbolLarge InputRemoveCSSClass; // 0x0
	// CUtlSymbolLarge InputLocalPlayerAddCSSClass; // 0x0
	// CUtlSymbolLarge InputLocalPlayerRemoveCSSClass; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x508
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFilterContext : public CBaseFilter
{
public:
	CUtlSymbolLarge m_iFilterContext; // 0x500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPathParticleRopeAlias_path_particle_rope_clientside : public CPathParticleRope
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_AghsFort_Ability_Creature_Venomancer_PoisonSting : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Drow_Ranger_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ursa_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Sniper_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ancient_Apparition_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lone_Druid_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cast_Range_325 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CIngameEvent_DotaPlus : public CIngameEvent_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has VTable
// Has Trivial Destructor
class CBuoyancyHelper
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x18]; // 0x0
public:
	float m_flFluidDensity; // 0x18	
	
	// Datamap fields:
	// void m_pController; // 0x8
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BlueDragonspawnOverseer_DevotionAura_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Cast_Range : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Eternal_Shroud : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Chipped_Vest : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Quickening_Charm : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_EchoSabre : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bristleback_Warpath_Stack : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Magnataur_Skewer_Movement : public CDOTA_Buff
{
public:
	int32_t m_nProjectileID; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Wisp_Spirits_Slow : public CDOTA_Buff
{
public:
	int32_t scepter_slow_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_ChaosKnight_Reality_Rift : public CDOTABaseAbility
{
public:
	float m_flPercentage; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad057c[0x4]; // 0x57c
public:
	CUtlVector< ParticleIndex_t > m_FXIndex; // 0x580	
	CHandle< CBaseEntity > m_hRiftIllusion; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Broodmother_Silken_Bola : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Clinkz_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Furion_WrathOfNature : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x668
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Lua : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x508
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFilterAttributeInt : public CBaseFilter
{
public:
	CUtlStringToken m_sAttributeName; // 0x500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_24_Crit_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Evasion_40 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Armor_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Movement_Speed_75 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_650 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x38
// Has VTable
// MNetworkNoBase
// 
// MNetworkVarNames "PlayerID_t m_iPlayerIDLiker"
// MNetworkVarNames "PlayerID_t m_iPlayerIDLiked"
class CHeroStatueLiked
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	PlayerID_t m_iPlayerIDLiker; // 0x30	
	// MNetworkEnable
	PlayerID_t m_iPlayerIDLiked; // 0x34	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_CustomGameAnnouncerAghanim : public CDOTA_BaseNPC
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Legion_Commander : public CDOTA_BaseNPC_Hero
{
public:
	uint32_t m_unDuelsWon; // 0x1d98	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Nyx_Assassin : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1878
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Fort : public CDOTA_BaseNPC_Building
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lamp_Ready : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Creature_Impale : public CDOTA_Buff
{
public:
	float m_flStartZ; // 0x1338	
	float m_flCurTime; // 0x133c	
	float m_flBuffDuration; // 0x1340	
	bool m_bDamageApplied; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Wind_Waker : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Mantle : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13d0
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hoodwink_ArcingBoomerang : public CDOTA_Buff
{
public:
	Vector m_vLeftControl; // 0x1338	
	Vector m_vRightControl; // 0x1344	
	Vector m_vTargetLoc; // 0x1350	
	Vector m_vOriginalTargetLoc; // 0x135c	
	Vector m_vSourceLoc; // 0x1368	
	bool m_bGroundTargeted; // 0x1374	
private:
	[[maybe_unused]] uint8_t __pad1375[0x3]; // 0x1375
public:
	float m_flTravelDuration; // 0x1378	
	GameTime_t m_flBoomerangDieTime; // 0x137c	
	bool m_bReturning; // 0x1380	
	bool m_bCatchingBoomerang; // 0x1381	
	bool m_bDisjointed; // 0x1382	
private:
	[[maybe_unused]] uint8_t __pad1383[0x1]; // 0x1383
public:
	int32_t m_nFramesToWait; // 0x1384	
	CHandle< CBaseEntity > m_hBoomerang; // 0x1388	
	CHandle< CBaseEntity > m_hTarget; // 0x138c	
	ParticleIndex_t m_nBoomerangFXIndex; // 0x1390	
	ParticleIndex_t m_nOldBoomerangFXindex; // 0x1394	
	CUtlVector< CHandle< CBaseEntity > > m_vecUniqueHitList; // 0x1398	
	int32_t radius; // 0x13b0	
	int32_t spread; // 0x13b4	
	int32_t damage; // 0x13b8	
	float mark_duration; // 0x13bc	
	float min_throw_duration; // 0x13c0	
	float max_throw_duration; // 0x13c4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nyx_Assassin_ManaBurn : public CDOTABaseAbility
{
public:
	int32_t aoe; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Disruptor : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Treant_NaturesGuise_Root : public CDOTA_Buff
{
public:
	float m_flEntangleDamage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_LoneDruid_Rabid : public CDOTABaseAbility
{
public:
	float rabid_duration; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Jakiro_Macropyre : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Life_Stealer_Rage : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Life_Stealer_Feast : public CDOTA_Buff
{
public:
	float hp_leech_percent; // 0x1338	
	float hp_damage_percent; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Windrunner_ShackleShot : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Juggernaut_BladeDance : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CAISound : public CPointEntity
{
public:
	SoundTypes_t m_iSoundType; // 0x4a8	
	SoundFlags_t m_iSoundFlags; // 0x4aa	
	int32_t m_iVolume; // 0x4ac	
	int32_t m_iSoundIndex; // 0x4b0	
	float m_flDuration; // 0x4b4	
	CUtlSymbolLarge m_iszProxyEntityName; // 0x4b8	
	
	// Datamap fields:
	// int32_t InputInsertSound; // 0x0
	// void InputEmitAISound; // 0x0
	// void InputStopAISound; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4f8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPointEntityFinder : public CBaseEntity
{
public:
	CHandle< CBaseEntity > m_hEntity; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04ac[0x4]; // 0x4ac
public:
	CUtlSymbolLarge m_iFilterName; // 0x4b0	
	CHandle< CBaseFilter > m_hFilter; // 0x4b8	
private:
	[[maybe_unused]] uint8_t __pad04bc[0x4]; // 0x4bc
public:
	CUtlSymbolLarge m_iRefName; // 0x4c0	
	CHandle< CBaseEntity > m_hReference; // 0x4c8	
	EntFinderMethod_t m_FindMethod; // 0x4cc	
	CEntityIOOutput m_OnFoundEntity; // 0x4d0	
	
	// Datamap fields:
	// void InputFindEntity; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Warlock_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Alchemist_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Windranger_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Invoker_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Lifesteal_30 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Range_175 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Magic_Resistance_25 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Snapfire_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x48
// Has VTable
// MNetworkNoBase
// 
// MNetworkVarNames "int m_vecHeroIDs"
class CHeroesPerPlayer
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< int32 > m_vecHeroIDs; // 0x30	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x788
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Tombstone_Drop : public CDOTA_Item_Physical
{
public:
	int32_t m_iTempViewer; // 0x780	
	int32_t m_iTeam; // 0x784	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9f0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDynamicPropAlias_cable_dynamic : public CDynamicProp
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seasonal_TI11_RockPaperScissors : public CDOTA_Buff
{
public:
	float challenge_duration; // 0x1338	
	float reveal_duration; // 0x133c	
	float reveal_delay; // 0x1340	
	float completed_cooldown; // 0x1344	
	float think_interval; // 0x1348	
	float acknowledge_range; // 0x134c	
private:
	[[maybe_unused]] uint8_t __pad1350[0x4]; // 0x1350
public:
	GameTime_t m_flRevealTime; // 0x1354	
	bool m_bFirstThink; // 0x1358	
private:
	[[maybe_unused]] uint8_t __pad1359[0x3]; // 0x1359
public:
	PlayerID_t m_nRevealOpponentPlayerID; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_TorrentEffectPotion_Torrent_Slow : public CDOTA_Buff
{
public:
	int32_t m_nMovespeedBonus; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x860
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkUserGroupProxy "CDOTAPlayerController"
// MNetworkExcludeByName "m_angRotation"
// MNetworkExcludeByName "m_flAnimTime"
// MNetworkExcludeByUserGroup "m_flCycle"
// MNetworkExcludeByName "m_flPlaybackRate"
// MNetworkExcludeByName "m_flPoseParameter"
// MNetworkExcludeByName "m_flSimulationTime"
// MNetworkExcludeByName "m_baseLayer.m_hSequence"
// MNetworkExcludeByName "m_vecVelocity"
// MNetworkExcludeByName "m_flexWeight"
// MNetworkExcludeByUserGroup "overlay_vars"
// MNetworkExcludeByName "m_nTickBase"
// MNetworkUserGroupProxy "CDOTAPlayerController"
// MNetworkUserGroupProxy "CDOTAPlayerController"
// MNetworkVarNames "int m_iCursor"
// MNetworkVarNames "int m_iSpectatorClickBehavior"
// MNetworkVarNames "float m_flAspectRatio"
// MNetworkVarNames "CHandle< CBaseEntity> m_hSpectatorQueryUnit"
// MNetworkVarNames "int m_iStatsPanel"
// MNetworkVarNames "int m_iShopPanel"
// MNetworkVarNames "ShopItemViewMode_t m_iShopViewMode"
// MNetworkVarNames "int m_iStatsDropdownCategory"
// MNetworkVarNames "int m_iStatsDropdownSort"
// MNetworkVarNames "char m_szShopString"
// MNetworkVarNames "bool m_bInShowCaseMode"
// MNetworkVarNames "float m_flCameraZoomAmount"
// MNetworkVarNames "int m_iHighPriorityScore"
// MNetworkVarNames "AbilityID_t m_quickBuyItems"
// MNetworkVarNames "bool m_quickBuyIsPurchasable"
// MNetworkVarNames "float m_flFrameTime"
// MNetworkVarNames "float m_flFrameTimeStdDev"
// MNetworkVarNames "float m_flUnfilteredFrameTime"
// MNetworkVarNames "bool m_bUsingAssistedCameraOperator"
// MNetworkVarNames "bool m_bUsingCameraMan"
// MNetworkVarNames "int m_nPlayerAssistFlags"
// MNetworkVarNames "int m_iMusicStatus"
// MNetworkVarNames "float m_flMusicOperatorVals"
// MNetworkVarNames "int m_iMusicOperatorVals"
// MNetworkVarNames "CHandle< CBaseEntity> m_hKillCamUnit"
// MNetworkVarNames "PlayerID_t m_nPlayerID"
// MNetworkVarNames "CHandle< CBaseEntity> m_hAssignedHero"
// MNetworkVarNames "int m_nServerOrderSequenceNumber"
// MNetworkVarNames "int m_nCachedCoachedTeam"
// MNetworkUserGroupProxy "CDOTAPlayerController"
class CDOTAPlayerController : public CBasePlayerController
{
private:
	[[maybe_unused]] uint8_t __pad0698[0x8]; // 0x698
public:
	int32_t m_iMinimapMove; // 0x6a0	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	// MNetworkPriority "32"
	int32_t m_iCursor[2]; // 0x6a4	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	int32_t m_iSpectatorClickBehavior; // 0x6ac	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	float m_flAspectRatio; // 0x6b0	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	CHandle< CBaseEntity > m_hSpectatorQueryUnit; // 0x6b4	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	int32_t m_iStatsPanel; // 0x6b8	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	int32_t m_iShopPanel; // 0x6bc	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	ShopItemViewMode_t m_iShopViewMode; // 0x6c0	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	int32_t m_iStatsDropdownCategory; // 0x6c4	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	int32_t m_iStatsDropdownSort; // 0x6c8	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	char m_szShopString[64]; // 0x6cc	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	bool m_bInShowCaseMode; // 0x70c	
private:
	[[maybe_unused]] uint8_t __pad070d[0x3]; // 0x70d
public:
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	float m_flCameraZoomAmount; // 0x710	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	int32_t m_iHighPriorityScore; // 0x714	
	// MNetworkEnable
	// MNetworkUserGroup "DOTATeamMatesAndCommentatorTable"
	AbilityID_t m_quickBuyItems[9]; // 0x718	
	// MNetworkEnable
	// MNetworkUserGroup "DOTATeamMatesAndCommentatorTable"
	bool m_quickBuyIsPurchasable[9]; // 0x73c	
private:
	[[maybe_unused]] uint8_t __pad0745[0x3]; // 0x745
public:
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	float m_flFrameTime; // 0x748	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	float m_flFrameTimeStdDev; // 0x74c	
	// MNetworkEnable
	// MNetworkUserGroup "DOTACommentatorTable"
	float m_flUnfilteredFrameTime; // 0x750	
	// MNetworkEnable
	bool m_bUsingAssistedCameraOperator; // 0x754	
	// MNetworkEnable
	bool m_bUsingCameraMan; // 0x755	
private:
	[[maybe_unused]] uint8_t __pad0756[0x2]; // 0x756
public:
	// MNetworkEnable
	int32_t m_nPlayerAssistFlags; // 0x758	
	float m_flHighPriorityScoreTimeStamp; // 0x75c	
	float m_flExecuteOrdersLagCompensation; // 0x760	
	// MNetworkEnable
	int32_t m_iMusicStatus; // 0x764	
	// MNetworkEnable
	float m_flMusicOperatorVals[3]; // 0x768	
	// MNetworkEnable
	int32_t m_iMusicOperatorVals[4]; // 0x774	
private:
	[[maybe_unused]] uint8_t __pad0784[0x4]; // 0x784
public:
	CountdownTimer m_MusicRestTime; // 0x788	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hKillCamUnit; // 0x7a0	
	Vector m_vecCrosshairTracePos; // 0x7a4	
	CEntityIndex m_iCrosshairEntity; // 0x7b0	
	// MNetworkEnable
	PlayerID_t m_nPlayerID; // 0x7b4	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hAssignedHero; // 0x7b8	
private:
	[[maybe_unused]] uint8_t __pad07bc[0xc]; // 0x7bc
public:
	bool m_bTeleportRequiresHalt; // 0x7c8	
	bool m_bChannelRequiresHalt; // 0x7c9	
private:
	[[maybe_unused]] uint8_t __pad07ca[0x2]; // 0x7ca
public:
	// MNetworkEnable
	// MNetworkUserGroup "LocalPlayerExclusive"
	int32_t m_nServerOrderSequenceNumber; // 0x7cc	
	float m_flLastOrderTime; // 0x7d0	
	float m_flLastKnownActiveTime; // 0x7d4	
	GameTime_t m_flLastReconnectTime; // 0x7d8	
	GameTime_t m_fLastSuggestionTime; // 0x7dc	
private:
	[[maybe_unused]] uint8_t __pad07e0[0x20]; // 0x7e0
public:
	bool m_bWantsRandomHero; // 0x800	
	bool m_bFullyJoinedServer; // 0x801	
private:
	[[maybe_unused]] uint8_t __pad0802[0x2]; // 0x802
public:
	int32_t m_nCheatDetectOrderReferenceCommandNumber; // 0x804	
	PlayerID_t m_iSwapPreferencePlayerID; // 0x808	
	uint32_t m_nCoachListenMask; // 0x80c	
	// MNetworkEnable
	int32_t m_nCachedCoachedTeam; // 0x810	
	float m_flLastChatWheelTime[2]; // 0x814	
	float m_flLastChatWheelAudioTime[2]; // 0x81c	
	float m_flLastChatWheelAllChatAudioTime[2]; // 0x824	
	float m_flLastChatWheelSprayTime; // 0x82c	
	float m_flLastChatWheelLongCooldownTime; // 0x830	
	float m_flLastPingTime; // 0x834	
	float m_flPingAllowance; // 0x838	
	float m_flLastMapLineTime; // 0x83c	
	float m_flMapLineAllowance; // 0x840	
	float m_flLastVersusBehaviorTime; // 0x844	
	float m_flVersusBehaviorAllowance; // 0x848	
	uint8_t m_pOrderRetirementHistory[10]; // 0x84c	
	uint16_t m_nOrderRetirementSum; // 0x856	
	int32_t m_nOrderRetirementLastTick; // 0x858	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Slime_Vial : public CDOTA_Buff_Item
{
public:
	int32_t health_regen; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Mage_Slayer : public CDOTA_Buff_Item
{
public:
	int32_t bonus_magical_armor; // 0x1338	
	int32_t bonus_attack_speed; // 0x133c	
	int32_t bonus_damage; // 0x1340	
	float duration; // 0x1344	
	float bonus_mana_regen; // 0x1348	
	int32_t bonus_intellect; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Mysterious_Hat : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
	int32_t spell_amp; // 0x133c	
	int32_t manacost_reduction; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_AeonDisk_Buff : public CDOTA_Buff
{
public:
	int32_t status_resistance; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_AeonDisk : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Mars_Spear_Burning_Trail_Burn : public CDOTA_Buff
{
public:
	int32_t shard_dps; // 0x1338	
	int32_t shard_move_slow_pct; // 0x133c	
	float shard_interval; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13e0
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pangolier_Rollup : public CDOTA_Modifier_DebuffImmune
{
public:
	int32_t mp_cost_per_second; // 0x1338	
	float tick_interval; // 0x133c	
	float forward_move_speed; // 0x1340	
	float turn_rate_boosted; // 0x1344	
	float turn_rate; // 0x1348	
	int32_t hit_radius; // 0x134c	
	int32_t knockback_radius; // 0x1350	
	bool m_bHitFirstUpdate; // 0x1354	
private:
	[[maybe_unused]] uint8_t __pad1355[0x3]; // 0x1355
public:
	GameTime_t m_flHitEndTime; // 0x1358	
	float hit_recover_time; // 0x135c	
	GameTime_t m_flJumpEndTime; // 0x1360	
	float jump_recover_time; // 0x1364	
	float m_flTurnBoostProgress; // 0x1368	
	float m_flFacingTarget; // 0x136c	
	GameTime_t m_flLastHeroAttackTime; // 0x1370	
	bool m_bIsJumping; // 0x1374	
private:
	[[maybe_unused]] uint8_t __pad1375[0x3]; // 0x1375
public:
	ParticleIndex_t m_nFXIndex; // 0x1378	
	float m_flGyroshellDurationRemaining; // 0x137c	
	CUtlVector< float32 > m_flTurnHistory; // 0x1380	
	CUtlVector< CHandle< CBaseEntity > > m_vecHeroesHitLastRicochet; // 0x1398	
	CUtlVector< CHandle< CBaseEntity > > m_vecHeroesCredited; // 0x13b0	
	CUtlVector< CHandle< CBaseEntity > > m_vecHeroesHitCurrentRicochet; // 0x13c8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Centaur_Return_Bonus_Damage : public CDOTA_Buff
{
public:
	float damage_gain_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slark_Pounce_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_QuasInstance : public CDOTA_Modifier_Invoker_Instance
{
public:
	float spell_lifesteal; // 0x1338	
	int32_t health_regen_per_instance; // 0x133c	
	char* m_pSlotName; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Chen_Penitence : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed; // 0x1338	
	int32_t bonus_damage_taken; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Night_Stalker_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Furion_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rattletrap_Cog_Marker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Assassin_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5e8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_NianCharge : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x10]; // 0x578
public:
	bool m_bChargeFinished; // 0x588	
	bool m_bPlayedChargeAnimation; // 0x589	
	bool m_bPinning; // 0x58a	
private:
	[[maybe_unused]] uint8_t __pad058b[0x1]; // 0x58b
public:
	GameTime_t m_flPinStartTime; // 0x58c	
	Vector m_vProjectileLocation; // 0x590	
	Vector m_vTargetLocation; // 0x59c	
	CHandle< CBaseEntity > m_hTarget; // 0x5a8	
private:
	[[maybe_unused]] uint8_t __pad05ac[0x4]; // 0x5ac
public:
	CUtlVector< CHandle< CBaseEntity > > m_hTrackingProjectileHits; // 0x5b0	
	CUtlVector< CDOTA_Tree* > m_hTrackingProjectileTrees; // 0x5c8	
	int32_t nFXIndex; // 0x5e0	
	int32_t m_iCurProjectileIndex; // 0x5e4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lion_FingerOfDeath : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tidehunter_AnchorSmash : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_CrystalMaiden_CrystalNova : public CDOTABaseAbility
{
public:
	int32_t nova_damage; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BookOfIntelligence : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Greevil_Miniboss_Purple_PlagueWard : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x78
// Has VTable
class CDOTABehaviorIdle
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x60]; // 0x0
public:
	CountdownTimer m_IdleRareAnimationTime; // 0x60	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Invoker_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Exp_Boost_50 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Exp_Boost_20 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_15 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Amplify_12 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Base_Attack_Rate_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7b8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "HMaterialStrong m_hSkyMaterial"
// MNetworkVarNames "HMaterialStrong m_hSkyMaterialLightingOnly"
// MNetworkVarNames "bool m_bStartDisabled"
// MNetworkVarNames "Color m_vTintColor"
// MNetworkVarNames "Color m_vTintColorLightingOnly"
// MNetworkVarNames "float m_flBrightnessScale"
// MNetworkVarNames "int m_nFogType"
// MNetworkVarNames "float m_flFogMinStart"
// MNetworkVarNames "float m_flFogMinEnd"
// MNetworkVarNames "float m_flFogMaxStart"
// MNetworkVarNames "float m_flFogMaxEnd"
// MNetworkVarNames "bool m_bEnabled"
class CEnvSky : public CBaseModelEntity
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "SkyStateChanged"
	CStrongHandle< InfoForResourceTypeIMaterial2 > m_hSkyMaterial; // 0x758	
	// MNetworkEnable
	// MNetworkChangeCallback "SkyStateChanged"
	CStrongHandle< InfoForResourceTypeIMaterial2 > m_hSkyMaterialLightingOnly; // 0x760	
	// MNetworkEnable
	// MNetworkChangeCallback "SkyStateChanged"
	bool m_bStartDisabled; // 0x768	
	// MNetworkEnable
	// MNetworkChangeCallback "SkyStateChanged"
	Color m_vTintColor; // 0x769	
	// MNetworkEnable
	// MNetworkChangeCallback "SkyStateChanged"
	Color m_vTintColorLightingOnly; // 0x76d	
private:
	[[maybe_unused]] uint8_t __pad0771[0x3]; // 0x771
public:
	// MNetworkEnable
	// MNetworkChangeCallback "SkyStateChanged"
	float m_flBrightnessScale; // 0x774	
	// MNetworkEnable
	// MNetworkChangeCallback "SkyStateChanged"
	int32_t m_nFogType; // 0x778	
	// MNetworkEnable
	// MNetworkChangeCallback "SkyStateChanged"
	float m_flFogMinStart; // 0x77c	
	// MNetworkEnable
	// MNetworkChangeCallback "SkyStateChanged"
	float m_flFogMinEnd; // 0x780	
	// MNetworkEnable
	// MNetworkChangeCallback "SkyStateChanged"
	float m_flFogMaxStart; // 0x784	
	// MNetworkEnable
	// MNetworkChangeCallback "SkyStateChanged"
	float m_flFogMaxEnd; // 0x788	
	// MNetworkEnable
	// MNetworkChangeCallback "SkyStateChanged"
	bool m_bEnabled; // 0x78c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x638
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Pirate_Hat : public CDOTA_Item
{
public:
	Vector m_vChannelPos; // 0x620	
	bool m_bIsUnderwater; // 0x62c	
private:
	[[maybe_unused]] uint8_t __pad062d[0x3]; // 0x62d
public:
	ParticleIndex_t m_nPhaseStartFXIndex; // 0x630	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Philosophers_Stone : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5f8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_EarthSpirit_RollingBoulder : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x10]; // 0x578
public:
	int32_t radius; // 0x588	
	int32_t speed; // 0x58c	
	int32_t rock_speed; // 0x590	
	int32_t damage; // 0x594	
	int32_t damage_str; // 0x598	
	float distance; // 0x59c	
	float rock_distance; // 0x5a0	
	float rock_distance_multiplier; // 0x5a4	
	float slow_duration; // 0x5a8	
	ParticleIndex_t m_nFXIndex; // 0x5ac	
	bool m_boulderSetposBool; // 0x5b0	
private:
	[[maybe_unused]] uint8_t __pad05b1[0x3]; // 0x5b1
public:
	int32_t m_nProjectileID; // 0x5b4	
	Vector m_vStartingLocation; // 0x5b8	
	Vector m_vProjectileLocation; // 0x5c4	
	Vector m_vDir; // 0x5d0	
	Vector m_vVel; // 0x5dc	
	bool m_bUsedStone; // 0x5e8	
private:
	[[maybe_unused]] uint8_t __pad05e9[0x3]; // 0x5e9
public:
	Vector m_vRollDirection; // 0x5ec	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Magnataur_Skewer : public CDOTABaseAbility
{
public:
	int32_t skewer_radius; // 0x578	
	int32_t skewer_speed; // 0x57c	
	int32_t range; // 0x580	
	int32_t tree_radius; // 0x584	
	int32_t m_nProjectileID; // 0x588	
	int32_t m_nVisibleTargetCount; // 0x58c	
	int32_t m_nTargetsHit; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Meepo_Petrify : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Meepo_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DoomBringer_Doom : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Life_Stealer_Assimilate : public CDOTA_Buff
{
public:
	float order_lock_duration; // 0x1338	
	GameTime_t m_fOrderLockDone; // 0x133c	
	int32_t m_nFXIndex; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lina_DragonSlave : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x8]; // 0x578
public:
	int32_t dragon_slave_distance; // 0x580	
	float dragon_slave_burn_duration; // 0x584	
	float m_flDamage; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Razor_UnstableCurrent : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bane_FiendsGrip_Illusion_Can_Only_Channel : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4f0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPointVelocitySensor : public CPointEntity
{
public:
	CHandle< CBaseEntity > m_hTargetEntity; // 0x4a8	
	Vector m_vecAxis; // 0x4ac	
	bool m_bEnabled; // 0x4b8	
private:
	[[maybe_unused]] uint8_t __pad04b9[0x3]; // 0x4b9
public:
	float m_fPrevVelocity; // 0x4bc	
	float m_flAvgInterval; // 0x4c0	
private:
	[[maybe_unused]] uint8_t __pad04c4[0x4]; // 0x4c4
public:
	CEntityOutputTemplate< float32 > m_Velocity; // 0x4c8	
	
	// Datamap fields:
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x508
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFilterMassGreater : public CBaseFilter
{
public:
	float m_fFilterMass; // 0x500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x508
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class FilterTeam : public CBaseFilter
{
public:
	int32_t m_iFilterTeam; // 0x500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Vengeful_Spirit_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bloodseeker : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Lifesteal_40 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Night_Vision_600 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CIngameEvent_TI2023 : public CIngameEvent_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18b0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_HoldoutTower_LightFast : public CDOTA_BaseNPC_HoldoutTower
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Rattlecage_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Eternal_Shroud : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Mekansm_Noheal : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_LesserCritical : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Grimstroke_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Oracle_FortunesEnd : public CDOTABaseAbility
{
public:
	int32_t damage; // 0x578	
	int32_t radius; // 0x57c	
	int32_t bolt_speed; // 0x580	
	float maximum_purge_duration; // 0x584	
	float minimum_purge_duration; // 0x588	
	GameTime_t m_flStartTime; // 0x58c	
	float m_flDuration; // 0x590	
	float m_flDamage; // 0x594	
	bool m_bAbsorbed; // 0x598	
private:
	[[maybe_unused]] uint8_t __pad0599[0x3]; // 0x599
public:
	CHandle< CBaseEntity > m_hTarget; // 0x59c	
	ParticleIndex_t m_nFXIndex; // 0x5a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AbyssalUnderlord_PitOfMalice_Slow : public CDOTA_Buff
{
public:
	int32_t speed_bonus; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Shredder_ReturnChakramAlias_shredder_return_chakram_2 : public CDOTA_Ability_Shredder_ReturnChakram
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Shredder_TimberChain : public CDOTA_Buff
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hDamaged; // 0x1338	
	CHandle< CBaseEntity > m_hTarget; // 0x1350	
	Vector m_vStartPosition; // 0x1354	
	int32_t speed; // 0x1360	
	int32_t radius; // 0x1364	
	int32_t damage; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Undying_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Chen_Divine_Favor_Teleport : public CDOTA_Buff
{
public:
	bool bToChen; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Enchantress_Bunny_Hop : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rattletrap_Cog_Barrier : public CDOTA_Buff
{
public:
	int32_t magic_barrier; // 0x1338	
	int32_t m_nAbsorbRemaining; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DragonKnight_Fireball_Burn : public CDOTA_Buff
{
public:
	float burn_interval; // 0x1338	
	int32_t damage; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Pugna_NetherWard : public CDOTABaseAbility
{
public:
	CUtlVector< sAbilityHistory > vecAbilitiesUsed; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Windrunner_Windrun_Passive : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Skeleton_King_Arcana : public CDOTA_Buff
{
public:
	bool m_bHasCrit; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AntiMage_Blink_Fake : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CNullEntity : public CBaseEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_TI11_Scissors : public CDOTA_Ability_Seasonal_TI11_RockPaperScissors_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Terrorblade_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_252 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Intelligence_25 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Movement_Speed_25 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Brewmaster_PrimalVoid : public CDOTA_BaseNPC_Creep
{
public:
	ParticleIndex_t m_nFXAmbient; // 0x1798	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x798
// Has VTable
// Construct disallowed
// MConstructibleClassBase
// MNetworkAssumeNotNetworkable
class CMarkupVolumeTagged : public CMarkupVolume
{
private:
	[[maybe_unused]] uint8_t __pad0760[0x30]; // 0x760
public:
	bool m_bIsGroup; // 0x790	
	bool m_bGroupByPrefab; // 0x791	
	bool m_bGroupByVolume; // 0x792	
	bool m_bGroupOtherGroups; // 0x793	
	bool m_bIsInGroup; // 0x794	
	
	// Datamap fields:
	// void m_GroupNames; // 0x760
	// void m_Tags; // 0x778
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Boss_DarkWillow_Bedlam : public CDOTA_Buff
{
public:
	float m_flRotation; // 0x1338	
	CHandle< CBaseEntity > m_hWisp; // 0x133c	
	GameTime_t m_flLastAttack; // 0x1340	
	bool reversed; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1345[0x3]; // 0x1345
public:
	int32_t roaming_radius; // 0x1348	
	int32_t attack_radius; // 0x134c	
	float roaming_seconds_per_rotation; // 0x1350	
	float attack_interval; // 0x1354	
	bool m_bSetupWarning; // 0x1358	
private:
	[[maybe_unused]] uint8_t __pad1359[0x3]; // 0x1359
public:
	ParticleIndex_t m_nPreviewFX; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_BlightedSpirit : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Orb_Of_Corrosion : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Fallen_Sky : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_HandOfMidas : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1338	
	float charge_gain_timer; // 0x133c	
	int32_t max_charges; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_WraithBand : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
	int32_t bonus_agility; // 0x133c	
	int32_t bonus_intellect; // 0x1340	
	int32_t bonus_attack_speed; // 0x1344	
	int32_t clock_time; // 0x1348	
	float bonus_armor; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Marci_Unleash_Flurry : public CDOTA_Buff
{
public:
	int32_t flurry_bonus_attack_speed; // 0x1338	
	float time_between_flurries; // 0x133c	
	float debuff_duration; // 0x1340	
	float max_time_window_per_hit; // 0x1344	
	bool m_bBonusSpeed; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad1349[0x3]; // 0x1349
public:
	ParticleIndex_t m_nFXStackIndex; // 0x134c	
	bool m_bIsDoingFlurryAttack; // 0x1350	
	bool m_bIsDoingFlurryPulseAttack; // 0x1351	
private:
	[[maybe_unused]] uint8_t __pad1352[0x2]; // 0x1352
public:
	GameTime_t m_fLastAttackTime; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13b8
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Marci_Lunge_Arc : public CDOTA_Buff
{
public:
	float m_flPredictedTotalTime; // 0x1338	
	Vector m_vStartPosition; // 0x133c	
	float m_flCurrentTimeHoriz; // 0x1348	
	float m_flCurrentTimeVert; // 0x134c	
	bool m_bDamageApplied; // 0x1350	
	bool m_bTargetTeleported; // 0x1351	
private:
	[[maybe_unused]] uint8_t __pad1352[0x2]; // 0x1352
public:
	Vector m_vHorizontalVelocity; // 0x1354	
	Vector m_vLastKnownTargetPosition; // 0x1360	
	float m_flInitialVelocityZ; // 0x136c	
	float m_fClampedProjectileSpeed; // 0x1370	
	ParticleIndex_t m_nFXIndex; // 0x1374	
	float m_fAcceleration; // 0x1378	
	bool m_bTriggeredLandingAnim; // 0x137c	
private:
	[[maybe_unused]] uint8_t __pad137d[0x3]; // 0x137d
public:
	int32_t m_nMaxJumpDistance; // 0x1380	
	int32_t min_jump_distance; // 0x1384	
	int32_t max_jump_distance; // 0x1388	
	float min_lob_travel_time; // 0x138c	
	float max_lob_travel_time; // 0x1390	
	int32_t landing_radius; // 0x1394	
	float debuff_duration; // 0x1398	
	float min_height_above_lowest; // 0x139c	
	float min_height_above_highest; // 0x13a0	
	float min_acceleration; // 0x13a4	
	float max_acceleration; // 0x13a8	
	float impact_damage; // 0x13ac	
	int32_t impact_position_offset; // 0x13b0	
	float ally_buff_duration; // 0x13b4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_Luminosity_Attack_Count : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Hoodwink_Sharpshooter : public CDOTABaseAbility
{
public:
	float max_charge_time; // 0x578	
	Vector m_vStartPos; // 0x57c	
	ParticleIndex_t m_nFXIndex; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Winter_Wyvern_Cold_Embrace : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1338[0x8]; // 0x1338
public:
	int32_t heal_additive; // 0x1340	
	float heal_percentage; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_EmberSpirit_FireRemnant : public CDOTABaseAbility
{
public:
	CUtlVector< RemnantData_t > m_vRemnantData; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Skywrath_Mage_Arcana : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Skywrath_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ogre_Magi_Item_Multicast : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Outworld_Devourer_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Spectre_Desolate : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t radius; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Luna_LunarBlessing : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lina_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x538
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPointTemplate : public CLogicalEntity
{
public:
	CUtlSymbolLarge m_iszWorldName; // 0x4a8	
	CUtlSymbolLarge m_iszSource2EntityLumpName; // 0x4b0	
	CUtlSymbolLarge m_iszEntityFilterName; // 0x4b8	
	float m_flTimeoutInterval; // 0x4c0	
	bool m_bAsynchronouslySpawnEntities; // 0x4c4	
private:
	[[maybe_unused]] uint8_t __pad04c5[0x3]; // 0x4c5
public:
	CEntityIOOutput m_pOutputOnSpawned; // 0x4c8	
	PointTemplateClientOnlyEntityBehavior_t m_clientOnlyEntityBehavior; // 0x4f0	
	PointTemplateOwnerSpawnGroupType_t m_ownerSpawnGroupType; // 0x4f4	
	CUtlVector< uint32 > m_createdSpawnGroupHandles; // 0x4f8	
	CUtlVector< CEntityHandle > m_SpawnedEntityHandles; // 0x510	
	HSCRIPT m_ScriptSpawnCallback; // 0x528	
	HSCRIPT m_ScriptCallbackScope; // 0x530	
	
	// Datamap fields:
	// void InputForceSpawn; // 0x0
	// void InputDeleteCreatedSpawnGroups; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x158
// Has VTable
class CDOTABehaviorCommandMoveToNPC
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	CHandle< CBaseEntity > m_hTarget; // 0x148	
	int32_t m_nMovementState; // 0x14c	
	bool m_bInRange; // 0x150	
	bool m_bWasAttacking; // 0x151	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Kunkka_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Invoker_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Techies_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Base_Damage_40 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Movement_Speed_Percentage_12 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CIngameEvent_Crownfall : public CIngameEvent_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5e0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_nConsecutiveHits"
class CDOTA_Ability_Aghsfort_Bonus_Pudge_MeatHook : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x10]; // 0x578
public:
	Vector m_vProjectileLocation; // 0x588	
	float hook_speed; // 0x594	
	int32_t hook_width; // 0x598	
	int32_t hook_distance; // 0x59c	
	bool m_bRetracting; // 0x5a0	
	bool m_bDiedInHook; // 0x5a1	
private:
	[[maybe_unused]] uint8_t __pad05a2[0x2]; // 0x5a2
public:
	CHandle< CBaseEntity > m_hVictim; // 0x5a4	
	Vector m_vTargetPosition; // 0x5a8	
	Vector m_vCasterPosition; // 0x5b4	
	bool m_bChainDetached; // 0x5c0	
private:
	[[maybe_unused]] uint8_t __pad05c1[0x3]; // 0x5c1
public:
	ParticleIndex_t m_iChainParticle; // 0x5c4	
	int32_t m_iHookParticle; // 0x5c8	
	int32_t m_nManaCost; // 0x5cc	
	CHandle< CBaseEntity > m_hSourceCaster; // 0x5d0	
	int32_t m_nNextConsecutiveHitCount; // 0x5d4	
	// MNetworkEnable
	int32_t m_nConsecutiveHits; // 0x5d8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13a0
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Ascension_PlasmaField_Thinker : public CDOTA_Buff
{
public:
	float m_fLastRadius; // 0x1338	
	float m_fCurRadius; // 0x133c	
	GameTime_t m_fLastThink; // 0x1340	
	bool m_bWindingUp; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1345[0x3]; // 0x1345
public:
	CountdownTimer m_ViewerTimer; // 0x1348	
	ParticleIndex_t m_nFXIndex; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1364[0x4]; // 0x1364
public:
	CUtlVector< CHandle< CBaseEntity > > m_EntitiesHit; // 0x1368	
	int32_t speed; // 0x1380	
	int32_t radius; // 0x1384	
	int32_t damage_min; // 0x1388	
	int32_t damage_max; // 0x138c	
	int32_t slow_min; // 0x1390	
	int32_t slow_max; // 0x1394	
	float slow_duration; // 0x1398	
	float windup_time; // 0x139c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Ocean_Heart : public CDOTA_Buff_Item
{
public:
	float water_hp_regen; // 0x1338	
	float water_mp_regen; // 0x133c	
	int32_t all_stats; // 0x1340	
	bool m_bInRiver; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Fusion_rune : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Tenderizer : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_MagicWand : public CDOTA_Buff_Item
{
public:
	int32_t charge_radius; // 0x1338	
	int32_t max_charges; // 0x133c	
	int32_t bonus_all_stats; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Marci_Lunge_Range : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_Celestial_Hammer_Damage : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Centaur_Mount_Toss : public CDOTA_Buff
{
public:
	float air_duration; // 0x1338	
	int32_t air_height; // 0x133c	
	int32_t travel_distance; // 0x1340	
	CHandle< CBaseEntity > m_hTarget; // 0x1344	
	float m_flPredictedTotalTime; // 0x1348	
	Vector m_vStartPosition; // 0x134c	
	float m_flCurrentTimeHoriz; // 0x1358	
	float m_flCurrentTimeVert; // 0x135c	
	bool m_bHorizontalMotionInterrupted; // 0x1360	
	bool m_bDamageApplied; // 0x1361	
	bool m_bTargetTeleported; // 0x1362	
private:
	[[maybe_unused]] uint8_t __pad1363[0x1]; // 0x1363
public:
	Vector m_vHorizontalVelocity; // 0x1364	
	Vector m_vLastKnownTargetPosition; // 0x1370	
	float m_flInitialVelocityZ; // 0x137c	
	bool m_bDone; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Treant_LeechSeed_Slow : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Meepo_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_nWhichDividedWeStand"
// MNetworkVarNames "int m_nNumDividedWeStand"
// MNetworkVarNames "CHandle< CDOTA_Ability_Meepo_DividedWeStand> m_entPrimeDividedWeStand"
// MNetworkVarNames "CHandle< CDOTA_Ability_Meepo_DividedWeStand> m_entNextDividedWeStand"
class CDOTA_Ability_Meepo_DividedWeStand : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	int32_t m_nWhichDividedWeStand; // 0x578	
	// MNetworkEnable
	int32_t m_nNumDividedWeStand; // 0x57c	
	// MNetworkEnable
	CHandle< CDOTA_Ability_Meepo_DividedWeStand > m_entPrimeDividedWeStand; // 0x580	
	// MNetworkEnable
	CHandle< CDOTA_Ability_Meepo_DividedWeStand > m_entNextDividedWeStand; // 0x584	
	int32_t m_iPendingUpgrades; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Night_Stalker_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Luna_LucentBeam : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PhantomAssassin_Gravestone_Thinker : public CDOTA_Buff
{
public:
	int32_t m_nEpitaph; // 0x1338	
	PlayerID_t m_nVictimPlayerID; // 0x133c	
	int32_t m_nVictimHeroID; // 0x1340	
	int32_t m_nCritDmg; // 0x1344	
	int32_t m_nContractComplete; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_CallOfTheWild_Boar_BonusDamage : public CDOTA_Buff
{
public:
	float boar_bonus_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Riki_Backstab : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Juggernaut_BladeFury : public CDOTA_Buff
{
public:
	int32_t blade_fury_radius; // 0x1338	
	int32_t blade_fury_damage_per_tick; // 0x133c	
	float blade_fury_aspd_multiplier; // 0x1340	
	float m_flTotalAppliedDamage; // 0x1344	
	int32_t bonus_movespeed; // 0x1348	
	GameTime_t m_flNextAttack; // 0x134c	
	bool m_bIgnoreAttackRestriction; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bane_Enfeeble_Effect : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1338	
	int32_t heal_reduction; // 0x133c	
	int32_t cast_reduction; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tower_Aura : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1338	
	bool m_bOverrideArmor; // 0x133c	
private:
	[[maybe_unused]] uint8_t __pad133d[0x3]; // 0x133d
public:
	float hp_regen; // 0x1340	
	bool m_bOverrideRegen; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1345[0x3]; // 0x1345
public:
	int32_t m_nRadius; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x508
// Has VTable
// Is Abstract
// MNetworkAssumeNotNetworkable
class CPhysForce : public CPointEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x8]; // 0x4a8
public:
	CUtlSymbolLarge m_nameAttach; // 0x4b0	
	float m_force; // 0x4b8	
	float m_forceTime; // 0x4bc	
	CHandle< CBaseEntity > m_attachedObject; // 0x4c0	
	bool m_wasRestored; // 0x4c4	
private:
	[[maybe_unused]] uint8_t __pad04c5[0x3]; // 0x4c5
public:
	// -> m_linear - 0x4d4
	// -> m_angular - 0x4e0
	// -> m_linearSave - 0x4ec
	// -> m_angularSave - 0x4f8
	CConstantForceController m_integrator; // 0x4c8	
	
	// Datamap fields:
	// void m_pController; // 0x4a8
	// void InputActivate; // 0x0
	// void InputDeactivate; // 0x0
	// float InputForceScale; // 0x0
	// void CPhysForceForceOff; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLogicDistanceAutosave : public CLogicalEntity
{
public:
	CUtlSymbolLarge m_iszTargetEntity; // 0x4a8	
	float m_flDistanceToPlayer; // 0x4b0	
	bool m_bForceNewLevelUnit; // 0x4b4	
	bool m_bCheckCough; // 0x4b5	
	bool m_bThinkDangerous; // 0x4b6	
private:
	[[maybe_unused]] uint8_t __pad04b7[0x1]; // 0x4b7
public:
	float m_flDangerousTime; // 0x4b8	
	
	// Datamap fields:
	// void InputSave; // 0x0
	// float InputSaveDangerous; // 0x0
	// void CLogicDistanceAutosaveSaveThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x170
// Has VTable
class CDOTABehaviorCommandMoveToTargetToAttack
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	CHandle< CBaseEntity > m_hTarget; // 0x148	
	int32_t m_nMovementState; // 0x14c	
	bool m_bFailedCast; // 0x150	
private:
	[[maybe_unused]] uint8_t __pad0151[0x3]; // 0x151
public:
	float m_flTargetRange; // 0x154	
	bool m_bDeny; // 0x158	
	bool m_bInvisBreak; // 0x159	
	bool m_bNightmareAttack; // 0x15a	
	bool m_bTurningToTarget; // 0x15b	
	float m_flTargetAngle; // 0x15c	
	Vector m_vMoveToOrderPosition; // 0x160	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_GreaterClarity : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Omniknight_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Crystal_Maiden_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Terrorblade_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Viper_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Broodmother_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Lifesteal_15 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Broodmother_Web : public CDOTA_BaseNPC_Additive
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1768	
	Vector m_vecOrigin; // 0x176c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BigThunderLizard_Frenzy : public CDOTA_Buff
{
public:
	int32_t attackspeed_bonus; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FrostbittenGolem_TimeWarpAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoDynamicShadowHint : public CPointEntity
{
public:
	bool m_bDisabled; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	float m_flRange; // 0x4ac	
	int32_t m_nImportance; // 0x4b0	
	int32_t m_nLightChoice; // 0x4b4	
	CHandle< CBaseEntity > m_hLight; // 0x4b8	
	
	// Static fields:
	static CUtlVector< CInfoDynamicShadowHint* > &Get_m_AllHints(){return *reinterpret_cast<CUtlVector< CInfoDynamicShadowHint* >*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CInfoDynamicShadowHint")->GetStaticFields()[0]->m_pInstance);};
	
	// Datamap fields:
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Tower_BlastWave_Thinker : public CDOTA_Buff
{
public:
	float damage_pct; // 0x1338	
	float m_fCurRadius; // 0x133c	
	GameTime_t m_fLastThink; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CountdownTimer m_ViewerTimer; // 0x1348	
	ParticleIndex_t m_nFXIndex; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1364[0x4]; // 0x1364
public:
	CUtlVector< CHandle< CBaseEntity > > m_EntitiesHit; // 0x1368	
	int32_t speed; // 0x1380	
	int32_t radius; // 0x1384	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Nemesis_Curse : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Harpoon_Slow : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_SuperArcane_Blink : public CDOTA_Item_Arcane_Blink
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Gem_Active_TrueSight : public CDOTA_Buff
{
public:
	int32_t active_radius; // 0x1338	
	float duration; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mars_Scepter_Damage : public CDOTA_Buff
{
public:
	int32_t scepter_bonus_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Medusa_StoneGaze_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Medusa_SplitShot : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DoomBringer_Devour_Hero_Debuff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Huskar_Berserkers_Blood : public CDOTA_Buff
{
public:
	int32_t maximum_health_regen; // 0x1338	
	int32_t maximum_attack_speed; // 0x133c	
	int32_t maximum_magic_resist; // 0x1340	
	int32_t hp_threshold_max; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_PhantomAssassin_Stifling_Dagger : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1488
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FacelessVoid_TimeDilation_Slow : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
	int32_t m_nAffectedAbilities; // 0x133c	
	GameTime_t m_flLastDamageTime; // 0x1340	
	int32_t slow; // 0x1344	
	int32_t cooldown_percentage; // 0x1348	
	int32_t damage_per_stack; // 0x134c	
	int32_t base_damage; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slardar_Sprint_Passive : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lina_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Sven : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nevermore_Shadowraze3 : public CDOTA_Ability_Nevermore_Shadowraze
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Glyph_Reset : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Spawnlord_Master_Bash : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lamp_Use : public CDOTABaseAbility
{
public:
	GameTime_t m_flLastCaptureTime; // 0x578	
	CHandle< CDOTA_BaseNPC > m_hTarget; // 0x57c	
	ParticleIndex_t m_nChannelFXIndex; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bane_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Agility_And_Intelligence_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Speed_60 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x520
// Has VTable
// 
// MNetworkVarNames "CAnimationLayer m_AnimOverlay"
class CBaseAnimatingOverlayController : public CBaseAnimatingController
{
public:
	// MNetworkEnable
	// MNetworkUserGroup "overlay_vars"
	// MNetworkChangeCallback "OnOverlaysChanged2"
	CUtlVectorEmbeddedNetworkVar< CAnimationLayer > m_AnimOverlay; // 0x4c8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x6b8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CSoundOpvarSetOBBEntity : public CSoundOpvarSetAABBEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8
// Has Trivial Constructor
// Has Trivial Destructor
struct CEnvWindShared__WindVariationEvent_t
{
public:
	float m_flWindAngleVariation; // 0x0	
	float m_flWindSpeedVariation; // 0x4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1
// Has Trivial Constructor
// Has Trivial Destructor
// 
// MPulseProvideFeatureTag "PulseEntities"
// MPulseLibraryBindings
class CTakeDamageInfoAPI
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x1]; // 0x0
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Mars : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x638
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Tier1Token : public CDOTA_Item_TierToken
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x960
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CScriptTriggerOnce : public CTriggerOnce
{
public:
	Vector m_vExtent; // 0x950	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Falcon_Blade : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Royal_Jelly_Regen : public CDOTA_Buff
{
public:
	float health_regen; // 0x1338	
	float mana_regen; // 0x133c	
	int32_t charges; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_EarthSpirit_StoneCaller : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Magnataur_Horn_Toss : public CDOTA_Buff
{
public:
	float air_duration; // 0x1338	
	int32_t air_height; // 0x133c	
	int32_t travel_distance; // 0x1340	
	Vector m_vDestination; // 0x1344	
	float m_flStartZ; // 0x1350	
	float m_flCurTime; // 0x1354	
	float m_flJumpDuration; // 0x1358	
	float m_flJumpHeight; // 0x135c	
	Vector m_vTargetHorizontalDirection; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Magnataur_Horn_Toss : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Centaur_Stampede : public CDOTABaseAbility
{
public:
	float duration; // 0x578	
	int32_t base_damage; // 0x57c	
	float strength_damage; // 0x580	
	float slow_duration; // 0x584	
	float scepter_bonus_duration; // 0x588	
private:
	[[maybe_unused]] uint8_t __pad058c[0x4]; // 0x58c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x590	
	int32_t m_nHeroesHit; // 0x5a8	
	bool m_bHitInvisibleHero; // 0x5ac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nyx_Assassin_Jolt_Damage_Tracker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Meepo_FairShare : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x6a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lycan_SummonWolves : public CDOTABaseAbility
{
public:
	char szUnitName[260]; // 0x578	
	int32_t wolf_index; // 0x67c	
	float wolf_duration; // 0x680	
private:
	[[maybe_unused]] uint8_t __pad0684[0x4]; // 0x684
public:
	CUtlVector< CHandle< CBaseEntity > > m_hExistingUnits; // 0x688	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SpiritBreaker_NetherStrike_Vision : public CDOTA_Buff
{
public:
	int32_t invis_threshold_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Omniknight_Degen_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Viper_Nethertoxin : public CDOTA_Buff
{
public:
	int32_t min_damage; // 0x1338	
	int32_t max_damage; // 0x133c	
	float max_duration; // 0x1340	
	int32_t attack_slow; // 0x1344	
	float m_flDamageInterval; // 0x1348	
	float m_flTimeIncrement; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TemplarAssassin_Refraction_Holdout : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t damage_absorb; // 0x133c	
	float m_flDamageAbsorbed; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Assassin_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pugna_LifeDrain : public CDOTA_Buff
{
public:
	int32_t health_drain; // 0x1338	
	int32_t ally_healing; // 0x133c	
	float tick_rate; // 0x1340	
	bool m_bDoRangeCheck; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1345[0x3]; // 0x1345
public:
	ParticleIndex_t m_nFXIndex; // 0x1348	
	GameTime_t m_flElapsedTime; // 0x134c	
	bool m_bPrimary; // 0x1350	
	bool m_bShard; // 0x1351	
	bool m_bFromWard; // 0x1352	
private:
	[[maybe_unused]] uint8_t __pad1353[0x1]; // 0x1353
public:
	CHandle< CBaseEntity > m_hWard; // 0x1354	
	float spell_amp_drain_duration; // 0x1358	
	int32_t max_spell_amp_drain_pct; // 0x135c	
	int32_t spell_amp_drain_rate; // 0x1360	
	int32_t spell_amp_drain_rate_ward; // 0x1364	
	int32_t spell_amp_drain_max; // 0x1368	
	int32_t health_to_mana_rate; // 0x136c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Ursa_Overpower : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lich_FrostAura_Aura : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_StormSpirit_StaticRemnant : public CDOTABaseAbility
{
public:
	Vector m_vecCastPos; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CNavWalkable : public CPointEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_PudgeMiniboss_ArmorCorruption : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Faceless_Void_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Windranger_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Movement_Speed_Percentage_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_Regen_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_Regen_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7b0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "string_t m_EffectName"
class CFuncElectrifiedVolume : public CFuncBrush
{
public:
	// MNetworkEnable
	CUtlSymbolLarge m_EffectName; // 0x778	
	CUtlSymbolLarge m_EffectInterpenetrateName; // 0x780	
	CUtlSymbolLarge m_EffectZapName; // 0x788	
	CUtlSymbolLarge m_iszEffectSource; // 0x790	
	
	// Datamap fields:
	// void InputDisable; // 0x0
	// void InputEnable; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SkeletonKing_Reincarnation_Scepter_Active : public CDOTA_Buff
{
public:
	int32_t scepter_move_speed_pct; // 0x1338	
	int32_t scepter_attack_speed; // 0x133c	
	CHandle< CBaseEntity > m_hTarget; // 0x1340	
	bool m_bPassive; // 0x1344	
	bool m_bKillAtEnd; // 0x1345	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Barricade_Thinker : public CDOTA_Buff
{
public:
	int32_t length; // 0x1338	
	int32_t width; // 0x133c	
	int32_t max_hits; // 0x1340	
	int32_t m_iCurrentHits; // 0x1344	
	int32_t m_hObstruction; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Revenants_Brooch : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Cyclone : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1338	
	float bonus_mana_regen; // 0x133c	
	int32_t bonus_movement_speed; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Manta_Phase : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TangoHeal : public CDOTA_Buff
{
public:
	float health_regen; // 0x1338	
	bool superheal; // 0x133c	
private:
	[[maybe_unused]] uint8_t __pad133d[0x3]; // 0x133d
public:
	float m_fHealingDone; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlString m_sAbilityClassname; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_LoneDruid_SpiritLink : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Furion_Sprout_Damage : public CDOTA_Buff
{
public:
	int32_t sprout_damage_per_second; // 0x1338	
	float sprout_damage_inteval; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_CallOfTheWild_Hawk_Reveal : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Sven_Warcry : public CDOTA_Buff
{
public:
	int32_t movespeed; // 0x1338	
	int32_t bonus_armor; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SandKing_CausticFinale : public CDOTA_Buff
{
public:
	float caustic_finale_duration; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Juggernaut_BladeFury_PullAura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Pudge_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Greevil_Miniboss_Blue_ColdFeet_Freeze : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slark_EssenceShift_Debuff : public CDOTA_Modifier_Stacking_Multiple_Buff_Base
{
public:
	int32_t stat_loss; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x640
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Tombstone_Mutation : public CDOTA_Item_Tombstone
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xb60
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "char m_messageText"
class CPointClientUIWorldTextPanel : public CPointClientUIWorldPanel
{
public:
	// MNetworkEnable
	char m_messageText[512]; // 0x960	
	
	// Datamap fields:
	// void InputToggle; // 0x0
	// CUtlSymbolLarge InputSetMessage; // 0x0
	// int32_t InputSetIntMessage; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoInstructorHintTarget : public CPointEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ember_Spirit_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Monkey_King_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_Regen_30 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13f8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_DataDire : public CDOTA_DataNonSpectator
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CIngameEvent_FV2018 : public CIngameEvent_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Seasonal_Penguin : public CDOTA_BaseNPC_Additive
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x528
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_NPCSpawnerGoodBot : public CDOTA_NPCSpawner
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BlackDragon_SplashAttack : public CDOTA_Buff
{
public:
	int32_t range; // 0x1338	
	float damage_percent; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_AggroOverride : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Psychic_Headband : public CDOTA_Buff_Item
{
public:
	int32_t intelligence_pct; // 0x1338	
	int32_t cast_range; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Penta_Edged_Sword : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_AssassinsDagger : public CDOTA_Buff_Item
{
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1338	
	int32_t debuff_duration; // 0x1350	
	int32_t bonus_attack_speed; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Woodland_Striders : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Dragon_Scale : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Vampire_Fangs : public CDOTA_Buff_Item
{
public:
	int32_t attack_lifesteal; // 0x1338	
	int32_t spell_lifesteal; // 0x133c	
	int32_t night_vision; // 0x1340	
	int32_t creep_lifesteal_reduction_pct; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Necronomicon_2 : public CDOTA_Buff_Item
{
public:
	float bonus_mana_regen; // 0x1338	
	int32_t bonus_strength; // 0x133c	
	int32_t aura_radius; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_MaskOfDeath : public CDOTA_Buff_Item
{
public:
	int32_t lifesteal_percent; // 0x1338	
	int32_t creep_lifesteal_reduction_pct; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13a8
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Muerta_Revenant_Thinker : public CDOTA_Buff
{
public:
	bool m_bSpiritsExplode; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	int32_t damage; // 0x133c	
	int32_t hit_radius; // 0x1340	
	int32_t dead_zone_distance; // 0x1344	
	float speed_initial; // 0x1348	
	float speed_max; // 0x134c	
	float acceleration; // 0x1350	
	int32_t num_revenants; // 0x1354	
	int32_t rotation_direction; // 0x1358	
	int32_t radius; // 0x135c	
	float rotation_initial; // 0x1360	
	int32_t show_warning; // 0x1364	
	ParticleIndex_t m_nWarningFX; // 0x1368	
private:
	[[maybe_unused]] uint8_t __pad136c[0x4]; // 0x136c
public:
	CUtlVector< sRevenantDef > m_SpiritDefs; // 0x1370	
private:
	[[maybe_unused]] uint8_t __pad1388[0x18]; // 0x1388
public:
	int32_t m_nRevenantImpacts; // 0x13a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Hoodwink_Scurry : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ogre_Magi_Smash_Buff : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
	int32_t attacks; // 0x133c	
	int32_t damage; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Alchemist_Scepter_Bonus_Damage : public CDOTA_Buff
{
public:
	int32_t scepter_bonus_damage; // 0x1338	
	int32_t scepter_spell_amp; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Chen_Penitence_Attack_Speed_Buff : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Weaver_GeminateAttack : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DarkSeer_WallOfReplica : public CDOTABaseAbility
{
public:
	int32_t width; // 0x578	
	Vector m_vEndpoint; // 0x57c	
	Vector m_vSlashDir; // 0x588	
	int32_t m_nDashProjectileID; // 0x594	
	Vector m_vDashProjectileLocation; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Holdout_ScourgeWard : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Beastmaster_PrimalRoar_Speed : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Puck_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PhantomLancer_JuxtaposeIllusion : public CDOTA_Buff
{
public:
	bool m_bstrongIllusion; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_CrystalMaiden_Let_It_Go_Slow : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VengefulSpirit_Hybrid_Special : public CDOTA_Buff
{
public:
	bool m_bLeftoverHybrid; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	int32_t scepter_illusion_ms_bonus_pct; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_IceSlide : public CDOTA_Buff
{
public:
	GameTime_t m_fLastUpdateTime; // 0x1338	
	Vector m_vVelocity; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Aghsfort_Aziyog_Underlord_Dark_Portal : public CDOTABaseAbility
{
public:
	float duration; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Venomancer_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Wraith_King_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Gold_Income_210 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attributes : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Mana_Break_40 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_225 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_475 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x518
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLogicBranch : public CLogicalEntity
{
public:
	bool m_bInValue; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x7]; // 0x4a9
public:
	CUtlVector< CHandle< CBaseEntity > > m_Listeners; // 0x4b0	
	CEntityIOOutput m_OnTrue; // 0x4c8	
	CEntityIOOutput m_OnFalse; // 0x4f0	
	
	// Datamap fields:
	// bool InputSetValue; // 0x0
	// bool InputSetValueTest; // 0x0
	// void InputToggle; // 0x0
	// void InputToggleTest; // 0x0
	// void InputTest; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Gyrocopter : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7c8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CSpriteAlias_env_glow : public CSprite
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ascension_AcidBlood_Thinker : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
	int32_t radius; // 0x133c	
	ParticleIndex_t m_nFXIndex; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x560
// Has VTable
// Construct allowed
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkIncludeByName "m_iTeamNum"
// MNetworkVarNames "CHandle< CBasePlayerController > m_aPlayerControllers"
// MNetworkVarNames "CHandle< CBasePlayerPawn > m_aPlayers"
// MNetworkVarNames "int32 m_iScore"
// MNetworkVarNames "char m_szTeamname"
class CTeam : public CBaseEntity
{
public:
	// MNetworkEnable
	// MNetworkAlias "m_aPlayers"
	CNetworkUtlVectorBase< CHandle< CBasePlayerController > > m_aPlayerControllers; // 0x4a8	
	// MNetworkEnable
	// MNetworkAlias "m_aPawns"
	CNetworkUtlVectorBase< CHandle< CBasePlayerPawn > > m_aPlayers; // 0x4c0	
	// MNetworkEnable
	int32_t m_iScore; // 0x4d8	
	// MNetworkEnable
	char m_szTeamname[129]; // 0x4dc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Repair_kit : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_RodOfAtos : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
	int32_t bonus_agility; // 0x133c	
	int32_t bonus_intellect; // 0x1340	
	int32_t bonus_hp; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Battlefury : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_OblivionStaff : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Quarterstaff : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t bonus_speed; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Muerta_PartingShot_SoulClone : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Snapfire_LilShredder_Buff : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1338[0x8]; // 0x1338
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1340	
	int32_t m_nIsActive; // 0x1358	
	bool m_bHasAttackTalent; // 0x135c	
	bool m_bBonusAttack; // 0x135d	
private:
	[[maybe_unused]] uint8_t __pad135e[0x2]; // 0x135e
public:
	int32_t attack_range_bonus; // 0x1360	
	int32_t buffed_attacks; // 0x1364	
	float base_attack_time; // 0x1368	
	int32_t attack_speed_bonus; // 0x136c	
	float armor_duration; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Mars_Spear_Burning_Trail_Thinker : public CDOTA_Buff
{
public:
	Vector m_vPathDir; // 0x1338	
	int32_t shard_trail_radius; // 0x1344	
	float shard_debuff_linger_duration; // 0x1348	
	float shard_interval; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Phoenix_SunRayStop : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Abaddon_AphoticShield : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_LoneDruid_Entangling_Claws : public CDOTA_Buff
{
public:
	int32_t attack_amp; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Brewmaster_PermanentImmolation : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_Wex_Cooldown_Reduction : public CDOTA_Buff
{
public:
	int32_t cooldown_reduction; // 0x1338	
	int32_t m_nTotalCDR; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Jakiro_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Jakiro_Macropyre_Burn : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
	float burn_interval; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Broodmother_PoisonStingDebuff : public CDOTA_Buff
{
public:
	int32_t damage_per_second; // 0x1338	
	int32_t movement_speed; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Enchantress_Enchant : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hUnits; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DeathProphet_Silence : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Beastmaster_InnerBeast_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Miniboss_Reflect : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Razor_Arcana_Kill_Effect : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nCasterFXIndex; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Bloodseeker_Bloodbath : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_SandKing_SandStorm : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bane_FiendsGrip_Self : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AttackImmune : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x558
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPhysLength : public CPhysConstraint
{
public:
	Vector m_offset[2]; // 0x520	
	Vector m_vecAttach; // 0x538	
	float m_addLength; // 0x544	
	float m_minLength; // 0x548	
	float m_totalLength; // 0x54c	
	bool m_bEnableCollision; // 0x550	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x178
// Has VTable
class CDOTABehaviorChase
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	CHandle< CBaseEntity > m_hChaseEntity; // 0x148	
	bool m_bTargetMoves; // 0x14c	
private:
	[[maybe_unused]] uint8_t __pad014d[0x3]; // 0x14d
public:
	float m_flFollowDistance[2]; // 0x150	
	float m_flForwardDistance; // 0x158	
	float m_flRightDistance; // 0x15c	
	CountdownTimer m_PositionFuzziness; // 0x160	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9e0
// Has VTable
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_rgRadiantTotalEarnedGold"
// MNetworkVarNames "int m_rgDireTotalEarnedGold"
// MNetworkVarNames "int m_rgRadiantTotalEarnedXP"
// MNetworkVarNames "int m_rgDireTotalEarnedXP"
// MNetworkVarNames "int m_rgRadiantNetWorth"
// MNetworkVarNames "int m_rgDireNetWorth"
// MNetworkVarNames "GameTime_t m_flTotalEarnedGoldStartTime"
// MNetworkVarNames "GameTime_t m_flTotalEarnedGoldEndTime"
// MNetworkVarNames "int m_nGoldGraphVersion"
// MNetworkVarNames "int m_rgRadiantWinChance"
class CDOTASpectatorGraphManager
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x28]; // 0x0
public:
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	CNetworkVarChainer __m_pChainEntity; // 0x28	
	bool m_bTrackingTeamStats; // 0x50	
private:
	[[maybe_unused]] uint8_t __pad0051[0x3]; // 0x51
public:
	GameTime_t m_flStartTime; // 0x54	
	// MNetworkEnable
	int32_t m_rgRadiantTotalEarnedGold[64]; // 0x58	
	// MNetworkEnable
	int32_t m_rgDireTotalEarnedGold[64]; // 0x158	
	// MNetworkEnable
	int32_t m_rgRadiantTotalEarnedXP[64]; // 0x258	
	// MNetworkEnable
	int32_t m_rgDireTotalEarnedXP[64]; // 0x358	
	// MNetworkEnable
	int32_t m_rgRadiantNetWorth[64]; // 0x458	
	// MNetworkEnable
	int32_t m_rgDireNetWorth[64]; // 0x558	
	// MNetworkEnable
	GameTime_t m_flTotalEarnedGoldStartTime; // 0x658	
	// MNetworkEnable
	GameTime_t m_flTotalEarnedGoldEndTime; // 0x65c	
	// MNetworkEnable
	int32_t m_nGoldGraphVersion; // 0x660	
	// MNetworkEnable
	int32_t m_rgRadiantWinChance[64]; // 0x664	
private:
	[[maybe_unused]] uint8_t __pad0764[0x4]; // 0x764
public:
	CountdownTimer m_TeamStatsUpdateTimer; // 0x768	
	CountdownTimer m_HeroInventorySnapshotTimer; // 0x780	
	CUtlVector< sPlayerSnapshot > m_vecPlayerSnapshots[24]; // 0x798	
	int32_t m_event_dota_player_killed; // 0x9d8	
	int32_t m_event_server_pre_shutdown; // 0x9dc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Drow_Ranger_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Vengeful_Spirit_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Crystal_Maiden_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Huskar_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tidehunter_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tidehunter_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Respawn_Reduction_40 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cast_Range_60 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_TrueStrike : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x638
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Tier5Token : public CDOTA_Item_TierToken
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Clumsy_Net : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Octarine_Core : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EmberSpirit_SleightOfFist_Caster_Invulnerability : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_LoneDruid_SavageRoar_Bear : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Spectre_Haunt_Single : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nian_Frenzy : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tinker_Laser : public CDOTABaseAbility
{
public:
	Vector m_vProjectileLocation; // 0x578	
	bool bBlocked; // 0x584	
private:
	[[maybe_unused]] uint8_t __pad0585[0x3]; // 0x585
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tidehunter_KrakenShell : public CDOTA_Buff
{
public:
	int32_t m_iDamageTaken; // 0x1338	
	int32_t damage_reduction; // 0x133c	
	int32_t damage_cleanse; // 0x1340	
	int32_t bonus_reduction_per_stack; // 0x1344	
	float damage_reset_interval; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Puck_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SkeletonKing_HellfireBlast : public CDOTA_Buff
{
public:
	int32_t blast_dot_damage; // 0x1338	
	int32_t blast_slow; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_BerserkerTroll_Break : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_BookStrength : public CDOTA_Item_Book
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x818
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLogicNPCCounterOBB : public CLogicNPCCounterAABB
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Faceless_Void_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AttributeBonus : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_TemplarAssassin : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mutation_CreateTombstone_Team_Aura : public CDOTA_Modifier_Mutation_CreateTombstone_Aura
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Crit : public CDOTA_Buff
{
public:
	float crit_chance; // 0x1338	
	float crit_multiplier; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Kaya : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1338	
	int32_t spell_amp; // 0x133c	
	int32_t mana_regen_multiplier; // 0x1340	
	int32_t spell_lifesteal_amp; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Medallion_Of_Courage : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_NullTalisman : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Grimstroke_SoulChain : public CDOTABaseAbility
{
public:
	float chain_duration; // 0x578	
	int32_t chain_latch_radius; // 0x57c	
	float creep_duration_pct; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_Strike_Stun : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AbyssalUnderlord_AtrophyAura_DmgBuffCounter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AbyssalUnderlord_AtrophyAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AbyssalUnderlord_Firestorm_Burn : public CDOTA_Buff
{
public:
	float burn_damage; // 0x1338	
	float burn_interval; // 0x133c	
	float building_damage; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Shredder_Reactive_Armor : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Magnataur_Empower : public CDOTA_Buff
{
public:
	int32_t bonus_damage_pct; // 0x1338	
	float cleave_damage_pct; // 0x133c	
	int32_t cleave_starting_width; // 0x1340	
	int32_t cleave_ending_width; // 0x1344	
	int32_t cleave_distance; // 0x1348	
	float self_multiplier; // 0x134c	
	int32_t secondary_cleave_distance; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Rubick_Empty2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lycan_Howl : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_ForgeSpirit_AD : public CDOTA_Ability_Invoker_ForgeSpirit
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SpiritBreaker_GreaterBash_Speed : public CDOTA_Buff
{
public:
	int32_t bonus_movespeed_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Huskar_Inner_Fire_Disarm : public CDOTA_Buff
{
public:
	int32_t movement_slow_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Omniknight_Hammer_Of_Purity : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tinker_MarchOfTheMachines : public CDOTABaseAbility
{
public:
	int32_t splash_radius; // 0x578	
	int32_t damage; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Puck_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tiny_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1398
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SandKing_Epicenter : public CDOTA_Buff
{
public:
	int32_t epicenter_radius_base; // 0x1338	
	int32_t epicenter_radius_increment; // 0x133c	
	int32_t epicenter_pulses; // 0x1340	
	int32_t epicenter_radius[16]; // 0x1344	
	int32_t m_iMaxPulses; // 0x1384	
	int32_t m_iPulseCount; // 0x1388	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x30
// 
// MNetworkVarNames "TrackedStatID_t unStatID"
// MNetworkVarNames "TrackedStatValue_t unStatValue"
struct TrackedStatNetworkData_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x28]; // 0x0
public:
	// MNetworkEnable
	TrackedStatID_t unStatID; // 0x28	
	// MNetworkEnable
	TrackedStatValue_t unStatValue; // 0x2c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_TreantMiniboss_NaturesGuise : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Earth_Spirit_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Sniper_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Amplify_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_700 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_300 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Watch_Tower_Invulnerable_Temporary : public CDOTA_Modifier_Invulnerable
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Oakheart : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_UnstableWand : public CDOTA_Buff_Item
{
public:
	int32_t all_stats; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Minotaur_Horn : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Havoc_Hammer : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Craggy_Coat : public CDOTA_Buff_Item
{
public:
	int32_t armor_bonus; // 0x1338	
	int32_t move_speed; // 0x133c	
	int32_t bonus_health; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_RodOfAtos : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PrimalBeast_Uproar_Slow : public CDOTA_Buff
{
public:
	int32_t move_slow_per_stack; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PrimalBeast_Pulverize : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
	float m_flOffset; // 0x133c	
	QAngle m_vStartAngles; // 0x1340	
	Vector m_vStartLocation; // 0x134c	
	float animation_rate; // 0x1358	
	bool m_bInterrupted; // 0x135c	
	bool m_bHasBeenDestroyed; // 0x135d	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Dawnbreaker_Luminosity : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Snapfire_FiresnapCookie_LandingGesture : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5e0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Pangolier_Swashbuckle : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x10]; // 0x578
public:
	int32_t dash_speed; // 0x588	
	int32_t start_radius; // 0x58c	
	int32_t end_radius; // 0x590	
	int32_t range; // 0x594	
	int32_t damage; // 0x598	
	Vector m_vDashPosition; // 0x59c	
	Vector m_vFacePosition; // 0x5a8	
	Vector m_vEndpoint; // 0x5b4	
	Vector m_vSlashDir; // 0x5c0	
	int32_t m_nDashProjectileID; // 0x5cc	
	Vector m_vDashProjectileLocation; // 0x5d0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pangolier_ShieldCrash_Jump : public CDOTA_Buff
{
public:
	float jump_duration; // 0x1338	
	float jump_duration_gyroshell; // 0x133c	
	int32_t jump_height; // 0x1340	
	int32_t jump_height_gyroshell; // 0x1344	
	float m_flStartZ; // 0x1348	
	float m_flCurTime; // 0x134c	
	float m_flJumpDuration; // 0x1350	
	float m_flJumpHeight; // 0x1354	
	int32_t jump_horizontal_distance; // 0x1358	
	Vector m_vTargetHorizontalDirection; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EarthSpirit_Magnetize : public CDOTA_Buff
{
public:
	int32_t rock_search_radius; // 0x1338	
	int32_t damage_per_second; // 0x133c	
	float damage_interval; // 0x1340	
	float rock_explosion_delay; // 0x1344	
	float damage_duration; // 0x1348	
	int32_t cast_radius; // 0x134c	
	int32_t rock_explosion_radius; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1354[0x4]; // 0x1354
public:
	CUtlVector< CHandle< CBaseEntity > > m_hExplodedRocks; // 0x1358	
	float duration; // 0x1370	
	bool m_bShowOverhead; // 0x1374	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Elder_Titan_NaturalOrder_Aura_MagicResistance : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Centaur_Return_Aura : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DoomBringer_Devour_Intrinsic : public CDOTA_Buff
{
public:
	int32_t cast_range_bonus; // 0x1338	
	int32_t spell_amp_bonus; // 0x133c	
	int32_t cooldown_bonus; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DoomBringer_Devour_Hero_Ability : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Huskar_Life_Break_Charge : public CDOTA_Modifier_DebuffImmune
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tidehunter_AnchorSmash : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Puck_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_CrystalMaiden_BrillianceAura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_No_Invisibility : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_NightStalker : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float m_flDamageTaken"
// MNetworkVarNames "float m_flLastHit"
// MNetworkVarNames "GameTime_t m_flStartDamageTime"
// MNetworkVarNames "GameTime_t m_flLastTargetDummyDamageTime"
class CDOTA_Unit_TargetDummy : public CDOTA_BaseNPC_Hero
{
public:
	// MNetworkEnable
	float m_flDamageTaken; // 0x1d98	
	// MNetworkEnable
	float m_flLastHit; // 0x1d9c	
	// MNetworkEnable
	GameTime_t m_flStartDamageTime; // 0x1da0	
	// MNetworkEnable
	GameTime_t m_flLastTargetDummyDamageTime; // 0x1da4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1798
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Beastmaster_Hawk : public CDOTA_Unit_Hero_Beastmaster_Beasts
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_RespawningTower : public CDOTA_BaseNPC_Tower
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nemesis_Curse : public CDOTA_Buff_Item
{
public:
	int32_t debuff_self; // 0x1338	
	float debuff_enemy; // 0x133c	
	int32_t debuff_enemy_duration; // 0x1340	
	int32_t bonus_damage; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Mind_Breaker : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Guardian_Greaves : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Diffusal_Blade : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1338	
	int32_t bonus_intellect; // 0x133c	
	float damage_per_burn; // 0x1340	
	int32_t feedback_mana_burn; // 0x1344	
	int32_t feedback_mana_burn_illusion_melee; // 0x1348	
	int32_t feedback_mana_burn_illusion_ranged; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Radiance : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t evasion; // 0x133c	
	int32_t upgrade_day_vision; // 0x1340	
	int32_t aura_radius; // 0x1344	
	bool m_bLastToggleState; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13a0
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PrimalBeast_Uproar : public CDOTA_Modifier_Stacking_Base
{
public:
	int32_t stack_limit; // 0x1358	
	int32_t damage_limit; // 0x135c	
	float stack_duration; // 0x1360	
	float damage_min; // 0x1364	
	float damage_max; // 0x1368	
	int32_t bonus_damage_per_stack; // 0x136c	
	ParticleIndex_t m_nFxIndexA; // 0x1370	
	int32_t iCur_stack; // 0x1374	
	int32_t bonus_damage; // 0x1378	
	float slow_duration; // 0x137c	
private:
	[[maybe_unused]] uint8_t __pad1380[0x18]; // 0x1380
public:
	float m_fTotalDamage; // 0x1398	
	GameTime_t m_flLastStackTime; // 0x139c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Grimstroke_SoulChain : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hPartner; // 0x1338	
	bool m_bIsPrimary; // 0x133c	
	bool m_bEscaped; // 0x133d	
	bool m_bTethered; // 0x133e	
private:
	[[maybe_unused]] uint8_t __pad133f[0x1]; // 0x133f
public:
	ParticleIndex_t m_nFXIndex; // 0x1340	
	ParticleIndex_t m_nFXIndexA; // 0x1344	
	ParticleIndex_t m_nFXIndexB; // 0x1348	
	bool m_bStartedLeashSound; // 0x134c	
private:
	[[maybe_unused]] uint8_t __pad134d[0x3]; // 0x134d
public:
	float m_fLeashDistance; // 0x1350	
	GameTime_t m_fOriginalStartTime; // 0x1354	
	ParticleIndex_t m_nOverheadFXIndex; // 0x1358	
	int32_t chain_latch_radius; // 0x135c	
	int32_t chain_break_distance; // 0x1360	
	float leash_limit_multiplier; // 0x1364	
	float chain_duration; // 0x1368	
	float creep_duration_pct; // 0x136c	
	int32_t bonus_reflected_spell_damage; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slark_Pounce_Leash : public CDOTA_Buff
{
public:
	int32_t leash_radius; // 0x1338	
	Vector vLeashLocation; // 0x133c	
	bool m_bEscaped; // 0x1348	
	bool m_bFishBait; // 0x1349	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Brewmaster_Cyclone : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DragonKnight_CorrosiveBreath : public CDOTA_Buff
{
public:
	float corrosive_breath_duration; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TemplarAssassin_PsiBlades_Slow : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Warlock_RainOfChaos : public CDOTABaseAbility
{
public:
	int32_t aoe; // 0x578	
	bool m_bHasScepter; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_Hurricane_Whirlpool : public CDOTA_Buff
{
public:
	float pull_switch_interval; // 0x1338	
	int32_t pull_speed; // 0x133c	
	bool m_bForward; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	ParticleIndex_t m_nfxIndex; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_NianChargePinned : public CDOTA_Buff
{
public:
	float pinned_damage_amount; // 0x1338	
	float pinned_damage_interval; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VengefulSpirit_Command_Aura_Effect : public CDOTA_Buff
{
public:
	int32_t bonus_base_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_SkeletonKing_VampiricAura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Silencer_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Exp_Boost_35 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cleave_20 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1
// Has Trivial Constructor
// Has Trivial Destructor
// 
// MPulseProvideFeatureTag "PulseParticles"
// MPulseLibraryBindings
class CDOTABaseAbilityParticleAPI
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x1]; // 0x0
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Seasonal_TI9_Monkey : public CDOTA_BaseNPC_Additive
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "PlayerID_t m_nSoleControllingPlayer"
// MNetworkVarNames "bool m_bFlyingCourier"
// MNetworkVarNames "GameTime_t m_flRespawnTime"
// MNetworkVarNames "CourierState_t m_nCourierState"
// MNetworkVarNames "CHandle< CBaseEntity> m_hCourierStateEntity"
class CDOTA_Unit_Courier : public CDOTA_BaseNPC_Additive
{
public:
	bool m_bUnitRespawned; // 0x1768	
	bool m_bPreUpdateFlyingCourier; // 0x1769	
private:
	[[maybe_unused]] uint8_t __pad176a[0x2]; // 0x176a
public:
	// MNetworkEnable
	PlayerID_t m_nSoleControllingPlayer; // 0x176c	
	// MNetworkEnable
	bool m_bFlyingCourier; // 0x1770	
private:
	[[maybe_unused]] uint8_t __pad1771[0x3]; // 0x1771
public:
	// MNetworkEnable
	GameTime_t m_flRespawnTime; // 0x1774	
	// MNetworkEnable
	CourierState_t m_nCourierState; // 0x1778	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hCourierStateEntity; // 0x177c	
	CUtlString m_strCourierModel; // 0x1780	
	CUtlString m_strFlyingCourierModel; // 0x1788	
	Vector m_vSpawnLocation; // 0x1790	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BlackDrake_MagicAmplification : public CDOTA_Buff
{
public:
	int32_t spell_amp; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Watch_Tower_Capturing : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Corruption : public CDOTA_Buff
{
public:
	float value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Minotaur_Horn_Immune : public CDOTA_Modifier_MagicImmune
{
public:
	int32_t model_scale; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Techies_StickyBomb : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Legion_Commander_Duel_DamageBoost : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Shredder_ChakramAlias_shredder_chakram_2 : public CDOTA_Ability_Shredder_Chakram
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Slark_DarkPact : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Wisp_Relocate : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndexEndTeam; // 0x578	
	ParticleIndex_t m_nFXIndexChannel; // 0x57c	
	float cast_delay; // 0x580	
	float return_time; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Silencer_GlaivesOfWisdom_DebuffCounter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_NightStalker_Void : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer_13 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Roshan_Devotion : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Roshan_Slam : public CDOTA_Buff
{
public:
	int32_t slow_amount; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Roshan_Bash : public CDOTA_Buff
{
public:
	int32_t bash_chance; // 0x1338	
	int32_t bonus_damage; // 0x133c	
	float stun_duration; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Zuus_Lightning_Hands : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Razor_Arcana : public CDOTA_Buff
{
public:
	bool m_bIsMeleeAttack; // 0x1338	
	bool m_bTauntQueued; // 0x1339	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nevermore_Shadowraze1 : public CDOTA_Ability_Nevermore_Shadowraze
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4e0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "Color m_fadeColor"
class CEnvFade : public CLogicalEntity
{
public:
	// MNetworkEnable
	Color m_fadeColor; // 0x4a8	
	float m_Duration; // 0x4ac	
	float m_HoldDuration; // 0x4b0	
private:
	[[maybe_unused]] uint8_t __pad04b4[0x4]; // 0x4b4
public:
	CEntityIOOutput m_OnBeginFade; // 0x4b8	
	
	// Datamap fields:
	// void InputFade; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Vengeful_Spirit_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Doom_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Strength_14 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Speed_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CDOTAGameManager * m_pGameManager"
class CDOTAGameManagerProxy : public CBaseEntity
{
public:
	// MNetworkEnable
	// MNetworkTypeAlias "CDOTAGameManager*"
	CDOTAGameManager* m_pGameManager; // 0x4a8	
	
	// Static fields:
	static CDOTAGameManagerProxy* &Get_s_pGameManagerProxy(){return *reinterpret_cast<CDOTAGameManagerProxy**>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTAGameManagerProxy")->GetStaticFields()[0]->m_pInstance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Marci : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Grimstroke : public CDOTA_BaseNPC_Hero
{
public:
	ParticleIndex_t m_nFXDeath; // 0x1d98	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_NPC_DataDriven : public CDOTA_BaseNPC_Additive
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_KoboldTaskmaster_SpeedAura_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9f8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_bUseAvatar"
class CDOTAPropConsumableBanner : public CDynamicProp
{
public:
	// MNetworkEnable
	bool m_bUseAvatar; // 0x9f0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4e0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_iLastKillerTeam"
// MNetworkVarNames "int m_iKillCount"
// MNetworkVarNames "Vector m_vRoshanAltLocation"
class CDOTA_RoshanSpawner : public CPointEntity
{
public:
	bool m_bIsRoshanAlive; // 0x4a8	
	bool m_bSpawnRequested; // 0x4a9	
private:
	[[maybe_unused]] uint8_t __pad04aa[0x2]; // 0x4aa
public:
	CHandle< CBaseEntity > m_hRoshan; // 0x4ac	
	GameTime_t m_fRoshanKillTime; // 0x4b0	
	int32_t m_nSentRoshReclaim; // 0x4b4	
	int32_t m_nSentRoshRespawn; // 0x4b8	
	float m_fRoshanRespawnDuration; // 0x4bc	
	// MNetworkEnable
	int32_t m_iLastKillerTeam; // 0x4c0	
	// MNetworkEnable
	int32_t m_iKillCount; // 0x4c4	
	// MNetworkEnable
	Vector m_vRoshanAltLocation; // 0x4c8	
	ParticleIndex_t m_nFXIndex; // 0x4d4	
	ParticleIndex_t m_nFXIndex2; // 0x4d8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PineCone_AcornShot_BonusDamage : public CDOTA_Buff
{
public:
	int32_t acorn_shot_damage; // 0x1338	
	int32_t base_damage_pct; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Intelligence : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Gungir : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Assault_Cuirass : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_RefresherOrb : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_TranquilBoots2 : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dawnbreaker_Solar_Guardian_AirTime : public CDOTA_Buff
{
public:
	float m_flStartZ; // 0x1338	
	float m_flCurTime; // 0x133c	
	Vector m_vDirection; // 0x1340	
	float m_flEndTime; // 0x134c	
	CHandle< CBaseEntity > m_hThinker; // 0x1350	
	Vector m_vCurrentTargetPosition; // 0x1354	
	Vector m_vDesiredTargetPosition; // 0x1360	
	Vector m_vStartPosition; // 0x136c	
	int32_t airtime_scepter_movement_speed; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ArcWarden_TempestDouble_DistancePenalty : public CDOTA_Buff
{
public:
	int32_t attack_damage_penalty; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Phoenix_Supernova : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_LoneDruid_Rabid : public CDOTA_Buff
{
public:
	int32_t shard_movement_speed_pct; // 0x1338	
	int32_t shard_attack_speed; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lycan_SummonWolves_Health : public CDOTA_Buff
{
public:
	int32_t bonus_health; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lycan_Wolf_Bite : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Broodmother_SpinWeb_NoTreeWalking : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Enchantress_Impetus : public CDOTA_Buff
{
public:
	float distance_damage_pct; // 0x1338	
	int32_t distance_cap; // 0x133c	
	float creep_multiplier; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Viper_Nose_Dive : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FacelessVoid_TimeWalk_Tracker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Slardar_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Slardar_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pudge_Meat_Hook_PathingFix : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Greevil_Miniboss_Blue_ColdFeet : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5c0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Creature_Fire_Breath : public CDOTABaseAbility
{
public:
	int32_t speed; // 0x578	
	int32_t projectile_count; // 0x57c	
	float rotation_angle; // 0x580	
	float damage; // 0x584	
	float radius; // 0x588	
private:
	[[maybe_unused]] uint8_t __pad058c[0x4]; // 0x58c
public:
	CountdownTimer ctTimer; // 0x590	
	Vector m_vecStartRot; // 0x5a8	
	Vector m_vecEndRot; // 0x5b4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Weaver_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Amplify_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x930
// Has VTable
// Construct disallowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CBaseAnimatingController m_animationController"
class CBodyComponentBaseAnimating : public CBodyComponentSkeletonInstance
{
public:
	// MNetworkEnable
	CBaseAnimatingController m_animationController; // 0x460	
	
	// Static fields:
	static EntComponentInfo_t &Get_s_EntComponentInfo(){return *reinterpret_cast<EntComponentInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponentBaseAnimating")->GetStaticFields()[0]->m_pInstance);};
	static int32_t &Get_entity_component_error_class_decl_says_contained_but_impl_is_referenced(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponentBaseAnimating")->GetStaticFields()[1]->m_pInstance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Brewmaster : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_NPC_Lich_Ice_Spire : public CDOTA_BaseNPC_Additive
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Creep_Bonus_XP : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t hero_damage_penalty; // 0x133c	
	int32_t bonus_gold; // 0x1340	
	int32_t m_iGoldBounty; // 0x1344	
	ParticleIndex_t iBannerEffect; // 0x1348	
	ParticleIndex_t iRingEffect; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Greevil_Miniboss_Blue_ColdFeet : public CDOTA_Buff
{
public:
	Vector m_vecStartPosition; // 0x1338	
	int32_t m_nCurrentTick; // 0x1344	
	float damage; // 0x1348	
	int32_t break_distance; // 0x134c	
	float stun_duration; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PudgeMiniboss_ArmorCorruption : public CDOTA_Buff
{
public:
	float armor_reduction_per_stack; // 0x1338	
	float stack_duration; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seasonal_TI9_Shovel_Ghost_Haunt : public CDOTA_Buff
{
public:
	int32_t nDamageInstances; // 0x1338	
	GameTime_t m_flLastAttackTime; // 0x133c	
	GameTime_t m_flLastMoveTime; // 0x1340	
	CHandle< CBaseEntity > m_hGhost; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seasonal_TI9_Shovel_Stasis_Trap : public CDOTA_Modifier_Seasonal_Summon_Common_Thinker
{
public:
	CHandle< CBaseEntity > m_hHero; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Caster_Rapier : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Trickster_Cloak : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Techies_StasisTrap_Stunned : public CDOTA_Modifier_Rooted
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Centaur_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Brewmaster_PrimalSplitDelay : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Obsidian_Destroyer_Equilibrium_Debuff_Counter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Alchemist_ChemicalRageTransform : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Furion_Sprout_Blind : public CDOTA_Buff
{
public:
	int32_t blind_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Beastmaster_Hawk_Perch_Perching : public CDOTA_Buff
{
public:
	int32_t perching_tree_height; // 0x1338	
	CHandle< CBaseEntity > m_hTree; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_Attachment : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_ShadowShamanVoodoo : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Razor_PlasmaField : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Crystal_Maiden_Crystal_Clone : public CDOTA_Buff
{
public:
	float hop_duration; // 0x1338	
	int32_t hop_distance; // 0x133c	
	float m_flCurTime; // 0x1340	
	float m_flEndTime; // 0x1344	
	Vector m_vTargetHorizontalDirection; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4e8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CEnvGlobal : public CLogicalEntity
{
public:
	CEntityOutputTemplate< int32 > m_outCounter; // 0x4a8	
	CUtlSymbolLarge m_globalstate; // 0x4d0	
	int32_t m_triggermode; // 0x4d8	
	int32_t m_initialstate; // 0x4dc	
	int32_t m_counter; // 0x4e0	
	
	// Datamap fields:
	// void InputTurnOn; // 0x0
	// void InputTurnOff; // 0x0
	// void InputRemove; // 0x0
	// void InputToggle; // 0x0
	// int32_t InputSetCounter; // 0x0
	// int32_t InputAddToCounter; // 0x0
	// void InputGetCounter; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x150
// Has VTable
class CDOTABehaviorCommandMoveToRuneToTake
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	CHandle< CBaseEntity > m_hRune; // 0x148	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_Ascension_Invis : public CDOTABaseAbility
{
public:
	float warning_duration; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ursa_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Techies_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_Regen_50 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x508
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFilterName : public CBaseFilter
{
public:
	CUtlSymbolLarge m_iFilterName; // 0x500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Seasonal_Snowman : public CDOTA_BaseNPC_Additive
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Clinkz_Skeleton_Army : public CDOTA_BaseNPC
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mutation_Spellcast : public CDOTA_Buff
{
public:
	CUtlVector< CDOTABaseAbility* > m_vecAbilities; // 0x1338	
	float m_fNextCastTime; // 0x1350	
	float m_fCastInterval; // 0x1354	
	float m_fWarningTime; // 0x1358	
	int32_t m_iNextAbility; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Outpost_Summoning : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_Aziyog_Underlord_Portal_Warp_Channel_Soundstop : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seer_Stone : public CDOTA_Buff_Item
{
public:
	int32_t cast_range_bonus; // 0x1338	
	int32_t vision_bonus; // 0x133c	
	int32_t mana_regen; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_MeteorHammer : public CDOTA_Item
{
public:
	ParticleIndex_t m_nFXIndex; // 0x620	
	ParticleIndex_t m_nFXIndexB; // 0x624	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Dagon5 : public CDOTA_Item_Recipe_Dagon
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Reaver : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Rubick_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Undying : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_LoneDruid_SpiritLink_BearFear : public CDOTA_Modifier_Fear
{
public:
	int32_t bonus_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Shadow_Demon_Soul_Catcher_SpellAmp : public CDOTA_Buff
{
public:
	int32_t num_heroes; // 0x1338	
	int32_t bonus_spell_amp; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Brewmaster_PrimalSplit_Scepter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Leshrac_Decrepify_Aura : public CDOTA_Buff
{
public:
	int32_t magic_amp; // 0x1338	
	int32_t slow; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_Invulnerable : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Necrolyte_Death_Seeker : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Necrolyte_Heartstopper_Aura_Effect : public CDOTA_Buff
{
public:
	float aura_damage; // 0x1338	
	int32_t heal_reduction_pct; // 0x133c	
	float heal_regen_to_damage; // 0x1340	
	ParticleIndex_t m_nFXIndex; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Windrunner_Windrun_Invis_Thinker : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Puck_WaningRift : public CDOTABaseAbility
{
public:
	int32_t max_distance; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Kunkka_Torrent : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13c8
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Morphling_Replicate : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTinyTreeWearable; // 0x1338	
	float m_flBaseAttackRange; // 0x133c	
	float m_flBaseMovementSpeed; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlSymbolLarge m_iszModelName; // 0x1348	
	CUtlSymbolLarge m_iszProjectileName; // 0x1350	
	CUtlSymbolLarge m_iszOriginalModel; // 0x1358	
	int32_t m_nCopiedHeroID; // 0x1360	
	float m_fOriginalModelScale; // 0x1364	
	CUtlVector< CEconItemView* > m_vecOriginalItems; // 0x1368	
private:
	[[maybe_unused]] uint8_t __pad1380[0x30]; // 0x1380
public:
	float m_flOriginalStr; // 0x13b0	
	float m_flOriginalAgi; // 0x13b4	
	float m_flOriginalInt; // 0x13b8	
	int32_t m_iOriginalAttackCapability; // 0x13bc	
	float m_flOriginalHealthPercentage; // 0x13c0	
	float m_flOriginalManaPercentage; // 0x13c4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Sand_King_BurrowStrike : public CDOTA_Buff
{
public:
	Vector m_vPopupLocation; // 0x1338	
	bool m_bTeleported; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rune_FlyingHaste : public CDOTA_Modifier_Rune_Haste
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5e8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_iHeroKills"
// MNetworkVarNames "int m_iTowerKills"
// MNetworkVarNames "int m_iBarracksKills"
// MNetworkVarNames "uint32 m_unTournamentTeamID"
// MNetworkVarNames "uint64 m_ulTeamLogo"
// MNetworkVarNames "uint64 m_ulTeamBaseLogo"
// MNetworkVarNames "uint64 m_ulTeamBannerLogo"
// MNetworkVarNames "bool m_bTeamComplete"
// MNetworkVarNames "bool m_bTeamIsHomeTeam"
// MNetworkVarNames "Color m_CustomHealthbarColor"
// MNetworkVarNames "char m_szTag"
class CDOTATeam : public CTeam
{
private:
	[[maybe_unused]] uint8_t __pad0560[0x10]; // 0x560
public:
	// MNetworkEnable
	int32_t m_iHeroKills; // 0x570	
	// MNetworkEnable
	int32_t m_iTowerKills; // 0x574	
	// MNetworkEnable
	int32_t m_iBarracksKills; // 0x578	
	// MNetworkEnable
	uint32_t m_unTournamentTeamID; // 0x57c	
	// MNetworkEnable
	// MNetworkEncoder "fixed64"
	uint64_t m_ulTeamLogo; // 0x580	
	// MNetworkEnable
	// MNetworkEncoder "fixed64"
	uint64_t m_ulTeamBaseLogo; // 0x588	
	// MNetworkEnable
	// MNetworkEncoder "fixed64"
	uint64_t m_ulTeamBannerLogo; // 0x590	
	// MNetworkEnable
	bool m_bTeamComplete; // 0x598	
	// MNetworkEnable
	bool m_bTeamIsHomeTeam; // 0x599	
	// MNetworkEnable
	Color m_CustomHealthbarColor; // 0x59a	
	// MNetworkEnable
	char m_szTag[33]; // 0x59e	
private:
	[[maybe_unused]] uint8_t __pad05bf[0x1]; // 0x5bf
public:
	int32_t m_event_lobby_updated; // 0x5c0	
	int32_t m_nKillStreak; // 0x5c4	
	int32_t m_iRecentKillCount; // 0x5c8	
	int32_t m_iRandomNumber; // 0x5cc	
	CountdownTimer m_RecentHeroKillTimer; // 0x5d0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Creature_Flamestrike : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nPreviewFX; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Treant_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Warlock_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Vengeful_Spirit_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Templar_Assassin_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_20_Crit_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_Regen_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_225 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x238
// Has VTable
// 
// MNetworkVarNames "int m_nBinaryObjectID"
// MNetworkVarNames "char m_szModel"
struct TreeModelReplacement_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	int32_t m_nBinaryObjectID; // 0x30	
	// MNetworkEnable
	char m_szModel[512]; // 0x34	
	// MNetworkDisable
	int32_t m_nChangeToken; // 0x234	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x158
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTAPlayer_CameraServices : public CPlayer_CameraServices
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mutation_KillstreakPower : public CDOTA_Buff
{
public:
	int32_t m_iDamageDonePct; // 0x1338	
	int32_t m_iDamageTakenPct; // 0x133c	
	int32_t m_iModelScale; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_OgreSealTotem_Active : public CDOTA_Buff
{
public:
	float m_flTotalTime; // 0x1338	
	float m_flInitialVelocity; // 0x133c	
	Vector m_vStartPosition; // 0x1340	
	Vector m_vTargetHorizontalDirection; // 0x134c	
	float m_flCurrentTimeHoriz; // 0x1358	
	float m_flCurrentTimeVert; // 0x135c	
	bool m_bInterrupted; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1361[0x3]; // 0x1361
public:
	int32_t m_nCurrentBounce; // 0x1364	
	int32_t leap_distance; // 0x1368	
	float leap_speed; // 0x136c	
	float leap_acceleration; // 0x1370	
	int32_t leap_radius; // 0x1374	
	float leap_bonus_duration; // 0x1378	
	bool m_bLaunched; // 0x137c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Paintball : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_CraniumBasher : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_HelmOfIronWill : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x630
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_iStoredRuneType"
class CDOTA_Item_EmptyBottle : public CDOTA_Item
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnStoredRuneChanged"
	int32_t m_iStoredRuneType; // 0x620	
	GameTime_t m_fStoredRuneTime; // 0x624	
	float rune_expire_time; // 0x628	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VoidSpirit_AetherRemnantThinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	Vector m_vFacingDir; // 0x133c	
	CHandle< CBaseEntity > m_hRemnant; // 0x1348	
	bool m_bTriggered; // 0x134c	
private:
	[[maybe_unused]] uint8_t __pad134d[0x3]; // 0x134d
public:
	float m_flCurThink; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EmberSpirit_FireRemnant_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Techies_DeployRemoteMine : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Elder_Titan_EchoStomp : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndexTitan; // 0x578	
	ParticleIndex_t m_nFXIndexSpirit; // 0x57c	
	ParticleIndex_t m_nFXIndexTitanB; // 0x580	
	ParticleIndex_t m_nFXIndexSpiritB; // 0x584	
	int32_t radius; // 0x588	
	int32_t stomp_damage; // 0x58c	
	float sleep_duration; // 0x590	
	float cast_time; // 0x594	
	CUtlVector< CHandle< CBaseEntity > > m_vecStompedHeroes; // 0x598	
	CUtlVector< CHandle< CBaseEntity > > m_vecStompedHeroes_BuffCounted; // 0x5b0	
	bool m_bStompedInvisibleHero; // 0x5c8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Medusa_StoneGaze_Tracker : public CDOTA_Buff
{
public:
	int32_t m_nNumStoned; // 0x1338	
	bool m_bAnyInvisible; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Shadow_Demon_Demonic_Purge : public CDOTABaseAbility
{
public:
	bool m_bGrantedScepterCharges; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Obsidian_Destroyer_Mana_Allergy : public CDOTA_Buff
{
public:
	int32_t percentage_damage; // 0x1338	
	int32_t percentage_heal; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoke_Bonuses : public CDOTA_Buff
{
public:
	float spell_amp; // 0x1338	
	float spell_lifesteal; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Chen_11 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Clinkz_Tar_Bomb : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TemplarAssassin_PsionicTrap_Counter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Ursa_Earthshock : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lich_DarkSorcery_Buff : public CDOTA_Buff
{
public:
	int32_t mana_drain; // 0x1338	
	int32_t attack_count; // 0x133c	
	int32_t attack_speed; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Bane_Enfeeble : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Huskar_Life_Break : public CDOTA_Modifier_MoveSpeed_Percentage
{
public:
	int32_t attack_speed; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7c8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CSpriteOriented : public CSprite
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa0
// Has VTable
class CDOTABehaviorAbilityPhase
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x60]; // 0x0
public:
	CountdownTimer m_abilityTimer; // 0x60	
	CountdownTimer m_backSwingTimer; // 0x78	
	bool m_bBackswinging; // 0x90	
private:
	[[maybe_unused]] uint8_t __pad0091[0x3]; // 0x91
public:
	CHandle< CBaseEntity > m_hAbility; // 0x94	
	bool m_bActionLocked; // 0x98	
	bool m_bTargetTeleported; // 0x99	
	bool m_bOriginalTargetTeleported; // 0x9a	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_TI11_RockPaperScissors : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_Creature_Phoenix_Supernova : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nPreviewFX; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lycan_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_Regen_14 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkIncludeByName "m_bIsIllusion"
// MNetworkVarNames "int m_nWhichMeepo"
class CDOTA_Unit_Hero_Meepo : public CDOTA_BaseNPC_Hero
{
public:
	// MNetworkEnable
	int32_t m_nWhichMeepo; // 0x1d98	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x928
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTriggerGravity : public CBaseTrigger
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_DragonKnight_BreatheFire_Debuff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_ShadowWaveEffectPotion : public CDOTA_Buff_Item
{
public:
	int32_t m_iCurJumpCount; // 0x1338	
	Vector m_vCurTargetLoc; // 0x133c	
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1348	
	float m_fProcChance; // 0x1360	
	int32_t m_nCastRange; // 0x1364	
	int32_t m_nBounceRadius; // 0x1368	
	int32_t m_nDamageRadius; // 0x136c	
	int32_t m_nDamage; // 0x1370	
	int32_t m_nMaxTargets; // 0x1374	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Ballista : public CDOTA_Buff_Item
{
public:
	int32_t attack_range_bonus; // 0x1338	
	float knockback_distance; // 0x133c	
	float knockback_duration; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Greater_Mango : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Ethereal_Blade_Slow : public CDOTA_Buff
{
public:
	int32_t blast_movement_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_InvisibilityEdge : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Javelin : public CDOTA_Buff_Item
{
public:
	int32_t bonus_chance; // 0x1338	
	int32_t bonus_chance_damage; // 0x133c	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ObliterateSoldier : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Underlord_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Undying_Tombstone_HP : public CDOTA_Buff
{
public:
	int32_t tombstone_health; // 0x1338	
	int32_t zombie_damage_interval; // 0x133c	
	int32_t m_nDamageCounter; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_NightStalker_Void_Zone : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DragonKnight_BlackDragon_Tooltip : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Animation_TailSpin : public CDOTABaseAbility
{
public:
	float m_flPlaybackRate; // 0x578	
	float animation_time; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tidehunter_Gush : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1338	
	float negative_armor; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_SkeletonKing_HellfireBlast : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rune_Super_Invisibility : public CDOTA_Modifier_PersistentInvisibility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8
// Has Trivial Destructor
struct CDOTA_ScriptedSpawner__scripted_moveto_t
{
public:
	CHandle< CBaseEntity > hMoveToTarget; // 0x0	
	CHandle< CBaseEntity > hGivenToNPC; // 0x4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Templar_Assassin_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Troll_Warlord_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Broodmother_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Lifesteal_60 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_450 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SatyrTrickster_Purge : public CDOTA_Buff
{
public:
	int32_t purge_rate; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x928
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CServerRagdollTrigger : public CBaseTrigger
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoDynamicShadowHintBox : public CInfoDynamicShadowHint
{
public:
	Vector m_vBoxMins; // 0x4c0	
	Vector m_vBoxMaxs; // 0x4cc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Necronomicon_Mana_Aura_3 : public CDOTA_Buff
{
public:
	float aura_mana_regen; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mars_ArenaOfBlood_Animation : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_Empty2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_SunStrike : public CDOTA_Buff
{
public:
	int32_t area_of_effect; // 0x1338	
	float damage; // 0x133c	
	int32_t vision_distance; // 0x1340	
	float vision_duration; // 0x1344	
	float spell_amp; // 0x1348	
	float spell_lifesteal; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Batrider_FlamingLasso_Self : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Kunkka_Ghost_Ship_Fleet : public CDOTA_Buff
{
public:
	Vector vCasterOrigin; // 0x1338	
	Vector vEnd; // 0x1344	
	int32_t hitcount; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Juggernaut_Healing_Ward_Tracker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BlindingLight_Knockback : public CDOTA_Modifier_Knockback
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FillerThinker : public CDOTA_Buff
{
public:
	CUtlVector< CHandle< CBaseEntity > > hCasterList; // 0x1338	
	bool bStarted; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1351[0x3]; // 0x1351
public:
	int32_t nCount; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Ghost_FrostAttack : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x2e8
// Has VTable
class CDOTABehaviorPet : public CDOTABehaviorCompanion
{
private:
	[[maybe_unused]] uint8_t __pad0178[0x10]; // 0x178
public:
	float m_flThreatLevel; // 0x188	
private:
	[[maybe_unused]] uint8_t __pad018c[0x4]; // 0x18c
public:
	CountdownTimer m_ThreatTimer; // 0x190	
	CountdownTimer m_StuckTimer; // 0x1a8	
	bool m_bHasVanished; // 0x1c0	
private:
	[[maybe_unused]] uint8_t __pad01c1[0x7]; // 0x1c1
public:
	CountdownTimer m_VanishOnThreatTimer; // 0x1c8	
	Vector m_vecFleeCurrentTarget; // 0x1e0	
	Vector m_vecFleeDirection; // 0x1ec	
	Vector m_vecOldFleeDirection; // 0x1f8	
private:
	[[maybe_unused]] uint8_t __pad0204[0x4]; // 0x204
public:
	CountdownTimer m_FleePersistTimer; // 0x208	
	CountdownTimer m_CombatRepositionTimer; // 0x220	
	CHandle< CDOTA_BaseNPC > m_hNearestEnemyHero; // 0x238	
	GameTime_t m_flLastInWater; // 0x23c	
	Vector m_vecHomeBasePosition; // 0x240	
	bool m_bReturnToBase; // 0x24c	
private:
	[[maybe_unused]] uint8_t __pad024d[0x3]; // 0x24d
public:
	CountdownTimer m_ReturnToBaseTimer; // 0x250	
	PetCoopStates_t m_nCoopTeleportState; // 0x268	
private:
	[[maybe_unused]] uint8_t __pad026c[0x4]; // 0x26c
public:
	CountdownTimer m_CarryItemTimer; // 0x270	
	CountdownTimer m_PickupDelayTimer; // 0x288	
	CountdownTimer m_LevelupCheckTimer; // 0x2a0	
	bool m_bIsEmoting; // 0x2b8	
private:
	[[maybe_unused]] uint8_t __pad02b9[0x3]; // 0x2b9
public:
	CHandle< CDOTA_BaseNPC > m_hEmoteTarget; // 0x2bc	
	CountdownTimer m_EmoteTimer; // 0x2c0	
	int32_t m_nEmoteActivity; // 0x2d8	
	CHandle< CBaseEntity > m_tempGoalEntity; // 0x2dc	
	bool m_bFollowingTempGoal; // 0x2e0	
private:
	[[maybe_unused]] uint8_t __pad02e1[0x3]; // 0x2e1
public:
	int32_t m_event_dota_illusions_created; // 0x2e4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Aghsfort_AbilityCrystalMaiden_FreezingField : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nWarningFX; // 0x578	
	ParticleIndex_t m_nRadiusFX; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Shaman_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x518
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPathMover : public CBaseEntity
{
public:
	CUtlVector< CHandle< CMoverPathNode > > m_vecPathNodes; // 0x4a8	
	float m_flPathLength; // 0x4c0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Elder_Titan_AncestralSpirit : public CDOTA_BaseNPC_Additive
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9f0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CAdditionalWearable : public CDynamicProp
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Filler_Tooltip : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Ascension_Silence : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AttributeBonus : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Witches_Switch : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Assassins_Dagger_Debuff : public CDOTA_Buff
{
public:
	int32_t armor_debuff; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Pipe_Aura : public CDOTA_Buff
{
public:
	float aura_health_regen; // 0x1338	
	int32_t magic_resistance_aura; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Snapfire_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_EmberSpirit_SearingChains : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1390
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bristleback_QuillSpray_Thinker : public CDOTA_Buff
{
public:
	float m_fCurRadius; // 0x1338	
	GameTime_t m_fLastThink; // 0x133c	
	CUtlVector< CHandle< CBaseEntity > > m_entitiesHit; // 0x1340	
	CountdownTimer m_ViewerTimer; // 0x1358	
	int32_t projectile_speed; // 0x1370	
	float radius; // 0x1374	
	bool m_bTriggeredByBristleback; // 0x1378	
	bool m_bDelayed; // 0x1379	
private:
	[[maybe_unused]] uint8_t __pad137a[0x2]; // 0x137a
public:
	int32_t m_nAngleRestriction; // 0x137c	
	Vector m_vFacing; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Chaos_Knight : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lycan_SummonWolves_PermanentInvisibility : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MeltingStrike_Debuff : public CDOTA_Buff
{
public:
	float armor_removed; // 0x1338	
	int32_t m_nMaxStacks; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Clockwerk_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Luna_LunarBlessingAura : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t bonus_damage_self; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Zuus_ThunderTrail_Debuff : public CDOTA_Buff
{
public:
	int32_t debuff_spell_amp; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Lancer_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bloodseeker_Bloodbath_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Earthshaker_Echoslam_Debuff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DarkWillow_Debuff_Fear : public CDOTA_Modifier_Fear
{
public:
	bool m_bDidGiveOrder; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Aghsfort_Ability_Creature_Magnus_Push_Skewer : public CDOTABaseAbility
{
public:
	int32_t skewer_radius; // 0x578	
	int32_t skewer_speed; // 0x57c	
	int32_t range; // 0x580	
	int32_t tree_radius; // 0x584	
	int32_t m_nProjectileID; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Huskar_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Nyx_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Evasion_16 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Respawn_Reduction_45 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Night_Vision_1000 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1798
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_bGoldenRoshan"
class CDOTA_Unit_Roshan : public CDOTA_BaseNPC_Additive
{
public:
	int32_t m_iKillerTeam; // 0x1768	
	int32_t m_iLastHealthPercent; // 0x176c	
	ParticleIndex_t m_nFXIndex; // 0x1770	
private:
	[[maybe_unused]] uint8_t __pad1774[0x4]; // 0x1774
public:
	CUtlVector< CHandle< CBaseEntity > > m_hAttackingHeroes; // 0x1778	
	// MNetworkEnable
	bool m_bGoldenRoshan; // 0x1790	
	bool m_bIsNightTimeMode; // 0x1791	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_DrowRanger : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17b0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Creep_Neutral : public CDOTA_BaseNPC_Creep
{
public:
	CountdownTimer m_ThinkTimer; // 0x1798	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Greevil_Miniboss_Blue_IceVortexThinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t movement_speed_pct; // 0x133c	
	int32_t spell_resist_pct; // 0x1340	
	ParticleIndex_t m_nFXIndex; // 0x1344	
	CUtlVector< CHandle< CBaseEntity > > m_hChilledEntities; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mutation_Vampire : public CDOTA_Buff
{
public:
	int32_t m_iLifeStealPct; // 0x1338	
	int32_t m_iHealthDrain; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Base_Attack_Rate : public CDOTA_Buff
{
public:
	float value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Dimensional_Doorway : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Quickening_Charm : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aether_Lens : public CDOTA_Buff_Item
{
public:
	int32_t bonus_mana; // 0x1338	
	float bonus_mana_regen; // 0x133c	
	int32_t cast_range_bonus; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Aether_Lens : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Maelstrom : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Marci_Guardian_MagicImmunity : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pangolier_Swashbuckle_Stunned : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Underlord_Portal_FX : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nPortalAmbientFX; // 0x1338	
	float m_fPortalRadius; // 0x133c	
	ParticleIndex_t m_nChannelFX; // 0x1340	
	int32_t m_nChannelCount; // 0x1344	
	ParticleIndex_t m_nCountdownFX; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rubick_NullField : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Meepo_Poof_Casting : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dazzle_Good_Juju : public CDOTA_Buff
{
public:
	float cooldown_reduction; // 0x1338	
	float item_cooldown_reduction; // 0x133c	
	float duration; // 0x1340	
	int32_t radius; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Roshan_RevengeRoar_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lich_FrostAura_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Razor_EyeOfTheStorm_Passive : public CDOTA_Buff
{
public:
	int32_t passive_area_damage; // 0x1338	
	float passive_area_interval; // 0x133c	
	int32_t radius; // 0x1340	
	bool m_bHitNext; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AncientApparition_IceBlast : public CDOTA_Buff
{
public:
	float dot_damage; // 0x1338	
	float kill_pct; // 0x133c	
	CHandle< CBaseEntity > m_hFracturingEntity; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rune_Invisibility : public CDOTA_Modifier_Invisible
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Ascension_AcidBlood : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Brewmaster_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_All_Stats_20 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CIngameEvent_TI2022 : public CIngameEvent_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PineCone_ShieldBash_Slow : public CDOTA_Buff
{
public:
	int32_t knockback_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Spell_Block : public CDOTA_Buff
{
public:
	float block_cooldown; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CountdownTimer m_CooldownTimer; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Magic_Resistance : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Book_Of_Shadows_Buff : public CDOTA_Buff
{
public:
	bool m_bUntargetableAllies; // 0x1338	
	bool m_bUntargetableEnemies; // 0x1339	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Force_Field : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Phoenix_Ash : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Pavise : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Phylactery_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Soul_Booster : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_MonkeyKingBar : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_FurArmy_SoldierInactive : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Visage_SummonFamiliars_Talents : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Gyrocopter_Call_Down : public CDOTA_Buff
{
public:
	int32_t slow_duration; // 0x1338	
	int32_t damage; // 0x133c	
	int32_t radius; // 0x1340	
	int32_t slow; // 0x1344	
	bool m_bDelayed; // 0x1348	
	bool m_bAttachToRocket1; // 0x1349	
private:
	[[maybe_unused]] uint8_t __pad134a[0x6]; // 0x134a
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecHitHeroes; // 0x1350	
	bool m_bHitInvisibleHeroes; // 0x1368	
private:
	[[maybe_unused]] uint8_t __pad1369[0x3]; // 0x1369
public:
	ParticleIndex_t m_nMarkerIndex; // 0x136c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Gyrocopter_Flak_Cannon_Scepter : public CDOTA_Buff
{
public:
	float fire_rate; // 0x1338	
	int32_t scepter_radius; // 0x133c	
	int32_t m_iAttackRecord; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BountyHunter_WindWalk : public CDOTA_Modifier_Invisible
{
public:
	int32_t damage_reduction_pct; // 0x1348	
	float shard_stun_duration; // 0x134c	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Clockwerk : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Leshrac_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Viper_BecomeUniversal : public CDOTA_Buff
{
public:
	int32_t bonus_magic_resistance; // 0x1338	
	int32_t is_universal; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DeathProphet_Slow : public CDOTA_Buff
{
public:
	int32_t speed_bonus; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoCourierSpawnRadiant4 : public CPointEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ShadowShaman_SerpentWard : public CDOTA_Buff
{
public:
	int32_t scepter_range; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tiny_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Disable_Healing : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x968
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CChangeLevel : public CBaseTrigger
{
public:
	CUtlString m_sMapName; // 0x928	
	CUtlString m_sLandmarkName; // 0x930	
	CEntityIOOutput m_OnChangeLevel; // 0x938	
	bool m_bTouched; // 0x960	
	bool m_bNoTouch; // 0x961	
	bool m_bNewChapter; // 0x962	
	bool m_bOnChangeLevelFired; // 0x963	
	
	// Datamap fields:
	// void InputChangeLevel; // 0x0
	// CUtlString map; // 0x7fffffff
	// CUtlString landmark; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9d0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTriggerLerpObject : public CBaseTrigger
{
public:
	CUtlSymbolLarge m_iszLerpTarget; // 0x928	
	CHandle< CBaseEntity > m_hLerpTarget; // 0x930	
private:
	[[maybe_unused]] uint8_t __pad0934[0x4]; // 0x934
public:
	CUtlSymbolLarge m_iszLerpTargetAttachment; // 0x938	
	AttachmentHandle_t m_hLerpTargetAttachment; // 0x940	
private:
	[[maybe_unused]] uint8_t __pad0941[0x3]; // 0x941
public:
	float m_flLerpDuration; // 0x944	
	bool m_bLerpRestoreMoveType; // 0x948	
	bool m_bSingleLerpObject; // 0x949	
private:
	[[maybe_unused]] uint8_t __pad094a[0x6]; // 0x94a
public:
	CUtlVector< lerpdata_t > m_vecLerpingObjects; // 0x950	
	CUtlSymbolLarge m_iszLerpEffect; // 0x968	
	CUtlSymbolLarge m_iszLerpSound; // 0x970	
	bool m_bAttachTouchingObject; // 0x978	
private:
	[[maybe_unused]] uint8_t __pad0979[0x3]; // 0x979
public:
	CHandle< CBaseEntity > m_hEntityToWaitForDisconnect; // 0x97c	
	CEntityIOOutput m_OnLerpStarted; // 0x980	
	CEntityIOOutput m_OnLerpFinished; // 0x9a8	
	
	// Datamap fields:
	// void CTriggerLerpObjectLerpThink; // 0x0
	// void CTriggerLerpObjectUnsetWaitForEntity; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x950
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTriggerSoundscape : public CBaseTrigger
{
public:
	CHandle< CEnvSoundscapeTriggerable > m_hSoundscape; // 0x928	
private:
	[[maybe_unused]] uint8_t __pad092c[0x4]; // 0x92c
public:
	CUtlSymbolLarge m_SoundscapeName; // 0x930	
	CUtlVector< CHandle< CBasePlayerPawn > > m_spectators; // 0x938	
	
	// Datamap fields:
	// void CTriggerSoundscapePlayerUpdateThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLogicScript : public CPointEntity
{
public:
	// Datamap fields:
	// CUtlString Group00; // 0x7fffffff
	// CUtlString Group01; // 0x7fffffff
	// CUtlString Group02; // 0x7fffffff
	// CUtlString Group03; // 0x7fffffff
	// CUtlString Group04; // 0x7fffffff
	// CUtlString Group05; // 0x7fffffff
	// CUtlString Group06; // 0x7fffffff
	// CUtlString Group07; // 0x7fffffff
	// CUtlString Group08; // 0x7fffffff
	// CUtlString Group09; // 0x7fffffff
	// CUtlString Group10; // 0x7fffffff
	// CUtlString Group11; // 0x7fffffff
	// CUtlString Group12; // 0x7fffffff
	// CUtlString Group13; // 0x7fffffff
	// CUtlString Group14; // 0x7fffffff
	// CUtlString Group15; // 0x7fffffff
	// CUtlString Group16; // 0x7fffffff
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x500
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "PlayerID_t m_nPlayerID"
class CPlayerTrackedStatsEntity : public CBaseTrackedStatsEntity
{
public:
	// MNetworkEnable
	PlayerID_t m_nPlayerID; // 0x4f8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_TI11_Duel : public CDOTABaseAbility
{
public:
	float model_scale; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bane_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Naga_Siren_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Huskar_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Spectre_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x710
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
class CDotaSubquestAbilityCastCount : public CDotaSubquestBase
{
public:
	int32_t m_sAbilityNameSymbol; // 0x700	
	int32_t m_nTargetCastCount; // 0x704	
	int32_t m_nCurrentCastCount; // 0x708	
	bool m_bRequiresChannelSuccess; // 0x70c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a28
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CIngameEvent_TI8 : public CIngameEvent_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1788
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_NPC_Observer_Ward_TrueSight : public CDOTA_NPC_Observer_Ward
{
public:
	int32_t m_iTrueSight; // 0x1778	
	CEntityHandle m_hCasterEntity; // 0x177c	
	CEntityHandle m_hAbilityEntity; // 0x1780	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_nAttackState"
class CDOTA_Unit_Hero_Dawnbreaker : public CDOTA_BaseNPC_Hero
{
public:
	// MNetworkEnable
	int32_t m_nAttackState; // 0x1d98	
	GameTime_t m_flLastAttackAnimAdvanceTime; // 0x1d9c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_HallofFame : public CDOTA_BaseNPC_Building
{
private:
	[[maybe_unused]] uint8_t __pad1870[0x10]; // 0x1870
public:
	int32_t m_event_dota_player_team_changed; // 0x1880	
private:
	[[maybe_unused]] uint8_t __pad1884[0x4]; // 0x1884
public:
	CountdownTimer m_glowThinkTimer; // 0x1888	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Spawnlord_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_WarpineRaider_SeedShot : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x938
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CAttributeContainer m_AttributeManager"
class CEconEntity : public CBaseFlex
{
private:
	[[maybe_unused]] uint8_t __pad07f8[0x10]; // 0x7f8
public:
	// MNetworkEnable
	CAttributeContainer m_AttributeManager; // 0x808	
	CHandle< CBaseEntity > m_hOldProvidee; // 0x930	
	int32_t m_iOldOwnerClass; // 0x934	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_DaggerOfRistul : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Penta_Edged_Sword : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Arcane_Blink_Buff : public CDOTA_Buff
{
public:
	int32_t cast_pct_improvement; // 0x1338	
	int32_t manacost_reduction; // 0x133c	
	int32_t debuff_amp; // 0x1340	
	int32_t cast_range_bonus; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Essence_Ring : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aegis_Regen : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_VoidSpirit_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Snapfire_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Elder_Titan_EarthSplitterScepter : public CDOTA_Modifier_Elder_Titan_EarthSplitter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Huskar_Life_Break : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x10]; // 0x578
public:
	Vector m_vProjectileLocation; // 0x588	
	CHandle< CBaseEntity > m_hTarget; // 0x594	
	bool m_bInterrupted; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DragonKnight_FrostBreath_Slow : public CDOTA_Buff
{
public:
	int32_t frost_bonus_movement_speed; // 0x1338	
	int32_t frost_bonus_attack_speed; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DeathProphet_Silence : public CDOTABaseAbility
{
public:
	Vector m_vPos; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lina_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Razor_Link_Vision : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VengefulSpirit_WaveOfTerror : public CDOTA_Buff
{
public:
	int32_t armor_reduction; // 0x1338	
	int32_t attack_reduction; // 0x133c	
	int32_t damage_reduction_pct; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AncientApparition_IceAge : public CDOTA_Buff
{
public:
	float damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_ShadowWaveEffectPotion : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Crystal_Maiden_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Agility_80 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Movement_Speed_Percentage_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_Regen_20 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Block_15 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7d8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTriggerBrush : public CBaseModelEntity
{
public:
	CEntityIOOutput m_OnStartTouch; // 0x758	
	CEntityIOOutput m_OnEndTouch; // 0x780	
	CEntityIOOutput m_OnUse; // 0x7a8	
	int32_t m_iInputFilter; // 0x7d0	
	int32_t m_iDontMessageParent; // 0x7d4	
	
	// Datamap fields:
	// void InputDisable; // 0x0
	// void InputEnable; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPhysicsEntitySolver : public CLogicalEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x8]; // 0x4a8
public:
	CHandle< CBaseEntity > m_hMovingEntity; // 0x4b0	
	CHandle< CBaseEntity > m_hPhysicsBlocker; // 0x4b4	
	float m_separationDuration; // 0x4b8	
	GameTime_t m_cancelTime; // 0x4bc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x48
// Has VTable
// Has Trivial Destructor
struct TransitioningLayer_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	CNetworkedSequenceOperation m_op; // 0x8	
	GameTime_t m_flStartAnimTime; // 0x30	
	float m_flStartWeight; // 0x34	
	GameTime_t m_flAnimTime; // 0x38	
	int32_t m_nOrder; // 0x3c	
	float m_flPlaybackRate; // 0x40	
	float m_flFadeOutDuration; // 0x44	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_TrollWarlord : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1870
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Barracks : public CDOTA_BaseNPC_Building
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Furbolg_Enrage_Damage_OnDeath : public CDOTA_Buff
{
public:
	float duration; // 0x1338	
	int32_t radius; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Vengeances_Shadow : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
	int32_t damage_return; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Repair_Kit : public CDOTA_Buff_Item
{
public:
	int32_t hp_regen; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Force_Boots : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement_speed; // 0x1338	
	int32_t hp_regen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Tenderizer : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Eul_Cyclone_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Slippers : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "DotaTreeId_t m_nAcornTree"
class CDOTA_Ability_Hoodwink_AcornShot : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x28]; // 0x578
public:
	// MNetworkEnable
	uint32_t m_nAcornTree; // 0x5a0	
	float projectile_speed; // 0x5a4	
	float bounce_delay; // 0x5a8	
	int32_t bounce_range; // 0x5ac	
	int32_t bounce_count; // 0x5b0	
	bool m_bIsAltCastState; // 0x5b4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AbyssalUnderlord_AtrophyAura_Permanent_HeroDmgBuff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_EmberSpirit_FlameGuard : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13a0
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Elder_Titan_EarthSplitter_Caster : public CDOTA_Buff
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitUnits; // 0x1338	
	int32_t vision_width; // 0x1350	
	float vision_interval; // 0x1354	
	float vision_duration; // 0x1358	
	int32_t vision_step; // 0x135c	
	int32_t total_steps; // 0x1360	
	int32_t m_nCompletedSteps; // 0x1364	
	Vector m_vStart; // 0x1368	
	Vector m_vEnd; // 0x1374	
	Vector m_vNextVisionLocation; // 0x1380	
	Vector m_vCastDirection; // 0x138c	
	int32_t m_nHumHeroesHit; // 0x1398	
	bool m_bHitInvisibleHero; // 0x139c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Bristleback_Warpath : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Centaur_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Clinkz_Strafe : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PhantomAssassin_Fan_Of_Knives_Thinker : public CDOTA_Buff
{
public:
	float m_fCurRadius; // 0x1338	
	GameTime_t m_fLastThink; // 0x133c	
	CUtlVector< CHandle< CBaseEntity > > m_entitiesHit; // 0x1340	
	CountdownTimer m_ViewerTimer; // 0x1358	
	int32_t projectile_speed; // 0x1370	
	int32_t radius; // 0x1374	
	float duration; // 0x1378	
	float pct_health_damage_initial; // 0x137c	
	float max_damage_initial; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DeathProphet_SpiritSiphon : public CDOTABaseAbility
{
public:
	Vector m_vStartPos; // 0x578	
	int32_t m_iArrowProjectile; // 0x584	
	int32_t m_nFXIndex; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DeathProphet_Witchcraft : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Warlock_Golem_Flaming_Fists : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Enigma_MidnightPulseThinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	ParticleIndex_t n_FXIndex; // 0x133c	
	bool m_bHasGrantedKillEater; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bane_FiendsGrip_Cast_Illusion : public CDOTA_Buff
{
public:
	int32_t fiend_grip_mana_drain; // 0x1338	
	float fiend_grip_tick_interval; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BaseBlocker_Effect : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Enchantress_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_20_Crit_15 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Gold_Income_150 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_15 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Movement_Speed_90 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17b8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkExcludeByName "m_CollisionGroup"
// MNetworkExcludeByName "m_Inventory"
// MNetworkExcludeByName "m_MoveCollide"
// MNetworkExcludeByName "m_MoveType"
// MNetworkExcludeByName "m_anglediff"
// MNetworkExcludeByName "m_bIsAncient"
// MNetworkExcludeByName "m_bIsNeutralUnitType"
// MNetworkExcludeByName "m_bIsPhantom"
// MNetworkExcludeByName "m_bIsSummoned"
// MNetworkExcludeByName "m_blinktoggle"
// MNetworkExcludeByName "m_fadeMaxDist"
// MNetworkExcludeByName "m_fadeMinDist"
// MNetworkExcludeByName "m_flElasticity"
// MNetworkExcludeByName "m_flEncodedController"
// MNetworkExcludeByName "m_flFadeScale"
// MNetworkExcludeByName "m_flHealthThinkRegen"
// MNetworkExcludeByName "m_flManaThinkRegen"
// MNetworkExcludeByName "m_flPoseParameter"
// MNetworkExcludeByName "m_flexWeight"
// MNetworkExcludeByName "m_hActiveWeapon"
// MNetworkExcludeByName "m_hLightingOrigin"
// MNetworkExcludeByName "m_iCurShop"
// MNetworkExcludeByName "m_iDamageBonus"
// MNetworkExcludeByName "m_nForceBone"
// MNetworkExcludeByName "m_nRenderFX"
// MNetworkExcludeByName "m_nRenderMode"
// MNetworkExcludeByName "m_vecForce"
// MNetworkExcludeByName "m_vLookTargetPosition"
class CDOTA_BaseNPC_Creep_Lane : public CDOTA_BaseNPC_Creep
{
public:
	CountdownTimer m_ThinkTimer; // 0x1798	
	bool m_bInEnemyBase; // 0x17b0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_IcarusWingsDebuff : public CDOTA_Buff_Item
{
public:
	int32_t slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Minotaur_Horn : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Dragon_Scale : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_InvisibilityEdge : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DarkWillow_CursedCrown : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ArcWarden_Flux : public CDOTA_Buff
{
public:
	int32_t m_nCasterTeam; // 0x1338	
	int32_t damage_per_second; // 0x133c	
	int32_t tempest_damage_per_second; // 0x1340	
	int32_t search_radius; // 0x1344	
	int32_t move_speed_slow_pct; // 0x1348	
	int32_t tempest_move_speed_slow_pct; // 0x134c	
	int32_t status_resist; // 0x1350	
	float think_interval; // 0x1354	
	int32_t m_nCurrentMovementSlow; // 0x1358	
	int32_t m_nCurrentStatusResistance; // 0x135c	
	bool m_bAlone; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1361[0x3]; // 0x1361
public:
	ParticleIndex_t m_nFXIndex; // 0x1364	
	bool m_bIsTempestVersion; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Elder_Titan_AncestralSpirit : public CDOTABaseAbility
{
public:
	int32_t speed; // 0x578	
	int32_t radius; // 0x57c	
	float buff_duration; // 0x580	
	float spirit_duration; // 0x584	
	int32_t m_nCreepsHit; // 0x588	
	int32_t m_nHeroesHit; // 0x58c	
	bool m_bIsReturning; // 0x590	
private:
	[[maybe_unused]] uint8_t __pad0591[0x3]; // 0x591
public:
	CHandle< CBaseEntity > m_hAncestralSpirit; // 0x594	
	ParticleIndex_t m_nReturnFXIndex; // 0x598	
private:
	[[maybe_unused]] uint8_t __pad059c[0x4]; // 0x59c
public:
	CUtlString m_strMoveSpiritSwapAbility; // 0x5a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_Tornado : public CDOTA_Ability_Invoker_InvokedBase
{
public:
	int32_t vision_distance; // 0x588	
	float end_vision_duration; // 0x58c	
	float lift_duration; // 0x590	
	float base_damage; // 0x594	
	float quas_damage; // 0x598	
	float wex_damage; // 0x59c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoCourierSpawnDire : public CPointEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Razor_EyeOfTheStorm : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t armor_reduction; // 0x133c	
	int32_t damage; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VengefulSpirit_Command_Negative_Aura_Effect : public CDOTA_Buff
{
public:
	int32_t bonus_damage_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nevermore_Presence : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9b8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "char m_messageText"
// MNetworkVarNames "char m_FontName"
// MNetworkVarNames "bool m_bEnabled"
// MNetworkVarNames "bool m_bFullbright"
// MNetworkVarNames "float m_flWorldUnitsPerPx"
// MNetworkVarNames "float m_flFontSize"
// MNetworkVarNames "float m_flDepthOffset"
// MNetworkVarNames "Color m_Color"
// MNetworkVarNames "PointWorldTextJustifyHorizontal_t m_nJustifyHorizontal"
// MNetworkVarNames "PointWorldTextJustifyVertical_t m_nJustifyVertical"
// MNetworkVarNames "PointWorldTextReorientMode_t m_nReorientMode"
class CPointWorldText : public CModelPointEntity
{
public:
	// MNetworkEnable
	char m_messageText[512]; // 0x758	
	// MNetworkEnable
	char m_FontName[64]; // 0x958	
	// MNetworkEnable
	bool m_bEnabled; // 0x998	
	// MNetworkEnable
	bool m_bFullbright; // 0x999	
private:
	[[maybe_unused]] uint8_t __pad099a[0x2]; // 0x99a
public:
	// MNetworkEnable
	float m_flWorldUnitsPerPx; // 0x99c	
	// MNetworkEnable
	float m_flFontSize; // 0x9a0	
	// MNetworkEnable
	float m_flDepthOffset; // 0x9a4	
	// MNetworkEnable
	Color m_Color; // 0x9a8	
	// MNetworkEnable
	PointWorldTextJustifyHorizontal_t m_nJustifyHorizontal; // 0x9ac	
	// MNetworkEnable
	PointWorldTextJustifyVertical_t m_nJustifyVertical; // 0x9b0	
	// MNetworkEnable
	PointWorldTextReorientMode_t m_nReorientMode; // 0x9b4	
	
	// Datamap fields:
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
	// void InputToggle; // 0x0
	// CUtlSymbolLarge InputSetMessage; // 0x0
	// int32_t InputSetIntMessage; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4e0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "Vector m_vMin"
// MNetworkVarNames "Vector m_vMax"
class CSoundAreaEntityOrientedBox : public CSoundAreaEntityBase
{
public:
	// MNetworkEnable
	Vector m_vMin; // 0x4c8	
	// MNetworkEnable
	Vector m_vMax; // 0x4d4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa0
// Has VTable
class CDOTABehaviorNeutralAggro
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x60]; // 0x0
public:
	Vector m_vHomePosition; // 0x60	
	bool m_bNoLeashTime; // 0x6c	
	bool m_bShortLeashTime; // 0x6d	
private:
	[[maybe_unused]] uint8_t __pad006e[0x2]; // 0x6e
public:
	CountdownTimer m_LeashTimer; // 0x70	
	CountdownTimer m_FleeAgainTimer; // 0x88	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Slark_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Evasion_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Gold_Income_120 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1788
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_nTimesSpawned"
class CDOTA_Unit_Miniboss : public CDOTA_BaseNPC_Additive
{
public:
	// MNetworkEnable
	int32_t m_nTimesSpawned; // 0x1768	
	int32_t m_nTempViewer; // 0x176c	
	CUtlVector< CHandle< CBaseEntity > > m_hAttackingHeroes; // 0x1770	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x988
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float m_gravityScale"
// MNetworkVarNames "float m_linearLimit"
// MNetworkVarNames "float m_linearDamping"
// MNetworkVarNames "float m_angularLimit"
// MNetworkVarNames "float m_angularDamping"
// MNetworkVarNames "float m_linearForce"
// MNetworkVarNames "float m_flFrequency"
// MNetworkVarNames "float m_flDampingRatio"
// MNetworkVarNames "Vector m_vecLinearForcePointAt"
// MNetworkVarNames "bool m_bCollapseToForcePoint"
// MNetworkVarNames "Vector m_vecLinearForcePointAtWorld"
// MNetworkVarNames "Vector m_vecLinearForceDirection"
// MNetworkVarNames "bool m_bConvertToDebrisWhenPossible"
class CTriggerPhysics : public CBaseTrigger
{
private:
	[[maybe_unused]] uint8_t __pad0928[0x10]; // 0x928
public:
	// MNetworkEnable
	float m_gravityScale; // 0x938	
	// MNetworkEnable
	float m_linearLimit; // 0x93c	
	// MNetworkEnable
	float m_linearDamping; // 0x940	
	// MNetworkEnable
	float m_angularLimit; // 0x944	
	// MNetworkEnable
	float m_angularDamping; // 0x948	
	// MNetworkEnable
	float m_linearForce; // 0x94c	
	// MNetworkEnable
	float m_flFrequency; // 0x950	
	// MNetworkEnable
	float m_flDampingRatio; // 0x954	
	// MNetworkEnable
	Vector m_vecLinearForcePointAt; // 0x958	
	// MNetworkEnable
	bool m_bCollapseToForcePoint; // 0x964	
private:
	[[maybe_unused]] uint8_t __pad0965[0x3]; // 0x965
public:
	// MNetworkEnable
	Vector m_vecLinearForcePointAtWorld; // 0x968	
	// MNetworkEnable
	Vector m_vecLinearForceDirection; // 0x974	
	// MNetworkEnable
	bool m_bConvertToDebrisWhenPossible; // 0x980	
	
	// Datamap fields:
	// void m_pController; // 0x930
	// CUtlSymbolLarge InputSetLinearForcePointAt; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Aghanims_Shard_Roshan : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Venom_Gland : public CDOTA_Buff_Item
{
public:
	int32_t primary_attribute; // 0x1338	
	int32_t debuff_amp; // 0x133c	
	float duration; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Witch_Blade : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Muerta_DeadShot_Slow : public CDOTA_Buff
{
public:
	int32_t impact_slow_percent; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_KeeperOfTheLight_IlluminateEnd : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SpiritBreaker_NetherStrike : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
	bool m_bStrikeLanded; // 0x133c	
private:
	[[maybe_unused]] uint8_t __pad133d[0x3]; // 0x133d
public:
	Vector m_vCastLocation; // 0x1340	
	CHandle< CBaseEntity > m_hTarget; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DoomBringer_Empty1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DoomBringer_Doom_Break : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Jakiro_IcePath_Stun : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Furion_Sprout : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x578	
	int32_t m_iShardCount; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slardar_Slithereen_Crush : public CDOTA_Buff
{
public:
	int32_t crush_extra_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Kunkka_XMarksTheSpot : public CDOTA_Buff
{
public:
	int32_t ally_ms; // 0x1338	
	int32_t ally_armor; // 0x133c	
	CHandle< CBaseEntity > hThinker; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_StormSpirit_StaticRemnantThinker : public CDOTA_Buff
{
public:
	int32_t static_remnant_radius; // 0x1338	
	int32_t static_remnant_damage_radius; // 0x133c	
	int32_t static_remnant_damage; // 0x1340	
	float static_remnant_delay; // 0x1344	
	int32_t m_iSearchRadius; // 0x1348	
	int32_t m_iDamageRadius; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x6d0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_DataDriven : public CDOTA_Item
{
private:
	[[maybe_unused]] uint8_t __pad0620[0x18]; // 0x620
public:
	bool m_bProcsMagicStick; // 0x638	
	bool m_bIsSharedWithTeammates; // 0x639	
	bool m_bCastFilterRejectCaster; // 0x63a	
private:
	[[maybe_unused]] uint8_t __pad063b[0x1]; // 0x63b
public:
	float m_fAnimationPlaybackRate; // 0x63c	
	float m_fAOERadius; // 0x640	
private:
	[[maybe_unused]] uint8_t __pad0644[0x4]; // 0x644
public:
	CUtlVector< KeyValues* > m_ModifierKVDescriptions; // 0x648	
	KeyValues* m_pOnChannelFinishKV; // 0x660	
	KeyValues* m_pOnChannelSucceededKV; // 0x668	
	KeyValues* m_pOnChannelInterruptedKV; // 0x670	
	KeyValues* m_pOnOwnerSpawnedKV; // 0x678	
	KeyValues* m_pOnOwnerDiedKV; // 0x680	
	KeyValues* m_pOnProjectileHitUnitKV; // 0x688	
	KeyValues* m_pOnProjectileFinishKV; // 0x690	
	KeyValues* m_pOnSpellStartKV; // 0x698	
	KeyValues* m_pOnAbilityPhaseStartKV; // 0x6a0	
	KeyValues* m_pOnToggleOnKV; // 0x6a8	
	KeyValues* m_pOnToggleOffKV; // 0x6b0	
	KeyValues* m_pOnEquipKV; // 0x6b8	
	KeyValues* m_pOnUnequipKV; // 0x6c0	
	KeyValues* m_pOnCreatedKV; // 0x6c8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Enchantress_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Legion_Commander_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cast_Range_150 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Agility_40 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Intelligence_12 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Speed_55 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x510
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "FowBlocker_t m_vecFowBlockers"
// MNetworkVarNames "float m_flMinX"
// MNetworkVarNames "float m_flMaxX"
// MNetworkVarNames "float m_flMinY"
// MNetworkVarNames "float m_flMaxY"
// MNetworkVarNames "float m_flGridSize"
class CFoWBlockerRegion : public CBaseEntity
{
public:
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< FowBlocker_t > m_vecFowBlockers; // 0x4a8	
	// MNetworkEnable
	float m_flMinX; // 0x4f8	
	// MNetworkEnable
	float m_flMaxX; // 0x4fc	
	// MNetworkEnable
	float m_flMinY; // 0x500	
	// MNetworkEnable
	float m_flMaxY; // 0x504	
	// MNetworkEnable
	float m_flGridSize; // 0x508	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xe8
// Has VTable
// 
// MNetworkVarNames "bool m_bIsValid"
// MNetworkVarNames "string_t m_iszPlayerName"
// MNetworkVarNames "int m_iPlayerTeam"
// MNetworkVarNames "bool m_bFullyJoinedServer"
// MNetworkVarNames "bool m_bFakeClient"
// MNetworkVarNames "bool m_bIsBroadcaster"
// MNetworkVarNames "uint32 m_iBroadcasterChannel"
// MNetworkVarNames "uint32 m_iBroadcasterChannelSlot"
// MNetworkVarNames "bool m_bIsBroadcasterChannelCameraman"
// MNetworkVarNames "int m_iConnectionState"
// MNetworkVarNames "uint64 m_iPlayerSteamID"
// MNetworkVarNames "DOTATeam_t m_eCoachTeam"
// MNetworkVarNames "PlayerID_t m_vecPrivateCoachPlayerIDs"
// MNetworkVarNames "CoachRating_t m_unCoachRating"
// MNetworkVarNames "DOTATeam_t m_eLiveSpectatorTeam"
// MNetworkVarNames "int m_nLiveSpectatorSpectatedHeroIndex"
// MNetworkVarNames "bool m_bIsPlusSubscriber"
// MNetworkVarNames "bool m_bWasMVPLastGame"
// MNetworkVarNames "CavernCrawlMapVariant_t m_nCavernCrawlMapVariant"
// MNetworkVarNames "int m_eAccoladeType"
// MNetworkVarNames "uint64 m_unAccoladeData"
// MNetworkVarNames "int m_iRankTier"
// MNetworkVarNames "int m_iTitle"
// MNetworkVarNames "uint64 m_unFavTeamPacked"
// MNetworkVarNames "CPlayerSlot m_nPlayerSlot"
// MNetworkVarNames "bool m_bIsBot"
// MNetworkVarNames "bool m_bHasNeutralTier"
// MNetworkVarNames "bool m_bHasRedeemedNeutralTier"
// MNetworkVarNames "int m_nCommLevel"
// MNetworkVarNames "int m_nBehaviorLevel"
// MNetworkVarNames "float m_flLastCommsTime"
struct PlayerResourcePlayerData_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	bool m_bIsValid; // 0x30	
private:
	[[maybe_unused]] uint8_t __pad0031[0x7]; // 0x31
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnPlayerNamesChanged"
	CUtlSymbolLarge m_iszPlayerName; // 0x38	
	// MNetworkEnable
	// MNetworkChangeCallback "OnTeamChanged"
	int32_t m_iPlayerTeam; // 0x40	
	// MNetworkEnable
	bool m_bFullyJoinedServer; // 0x44	
	// MNetworkEnable
	// MNetworkChangeCallback "OnFakeClientChanged"
	bool m_bFakeClient; // 0x45	
	// MNetworkEnable
	bool m_bIsBroadcaster; // 0x46	
private:
	[[maybe_unused]] uint8_t __pad0047[0x1]; // 0x47
public:
	// MNetworkEnable
	uint32_t m_iBroadcasterChannel; // 0x48	
	// MNetworkEnable
	uint32_t m_iBroadcasterChannelSlot; // 0x4c	
	// MNetworkEnable
	bool m_bIsBroadcasterChannelCameraman; // 0x50	
private:
	[[maybe_unused]] uint8_t __pad0051[0x3]; // 0x51
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnPlayerConnectionStateChanged"
	int32_t m_iConnectionState; // 0x54	
	// MNetworkEnable
	// MNetworkEncoder "fixed64"
	// MNetworkChangeCallback "OnPlayerSteamIDsChanged"
	uint64_t m_iPlayerSteamID; // 0x58	
	// MNetworkEnable
	DOTATeam_t m_eCoachTeam; // 0x60	
private:
	[[maybe_unused]] uint8_t __pad0064[0x4]; // 0x64
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnPlayerCoachedPlayerIDsChanged"
	CNetworkUtlVectorBase< PlayerID_t > m_vecPrivateCoachPlayerIDs; // 0x68	
	// MNetworkEnable
	uint32_t m_unCoachRating; // 0x80	
	// MNetworkEnable
	DOTATeam_t m_eLiveSpectatorTeam; // 0x84	
	// MNetworkEnable
	int32_t m_nLiveSpectatorSpectatedHeroIndex; // 0x88	
	// MNetworkEnable
	bool m_bIsPlusSubscriber; // 0x8c	
	// MNetworkEnable
	bool m_bWasMVPLastGame; // 0x8d	
	// MNetworkEnable
	CavernCrawlMapVariant_t m_nCavernCrawlMapVariant; // 0x8e	
private:
	[[maybe_unused]] uint8_t __pad008f[0x1]; // 0x8f
public:
	// MNetworkEnable
	int32_t m_eAccoladeType[3]; // 0x90	
private:
	[[maybe_unused]] uint8_t __pad009c[0x4]; // 0x9c
public:
	// MNetworkEnable
	uint64_t m_unAccoladeData[3]; // 0xa0	
	// MNetworkEnable
	int32_t m_iRankTier; // 0xb8	
	// MNetworkEnable
	int32_t m_iTitle; // 0xbc	
	// MNetworkEnable
	uint64_t m_unFavTeamPacked; // 0xc0	
	// MNetworkEnable
	CPlayerSlot m_nPlayerSlot; // 0xc8	
	// MNetworkEnable
	bool m_bIsBot; // 0xcc	
	// MNetworkEnable
	bool m_bHasNeutralTier[5]; // 0xcd	
	// MNetworkEnable
	bool m_bHasRedeemedNeutralTier[5]; // 0xd2	
private:
	[[maybe_unused]] uint8_t __pad00d7[0x1]; // 0xd7
public:
	// MNetworkEnable
	int32_t m_nCommLevel; // 0xd8	
	// MNetworkEnable
	int32_t m_nBehaviorLevel; // 0xdc	
	// MNetworkEnable
	float m_flLastCommsTime; // 0xe0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x48
// Has VTable
// 
// MNetworkVarNames "CUtlStringToken m_ID"
// MNetworkVarNames "Vector4D m_Values"
struct EntityRenderAttribute_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	CUtlStringToken m_ID; // 0x30	
	// MNetworkEnable
	Vector4D m_Values; // 0x34	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_BountyHunter : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_ShadowShaman_SerpentWard : public CDOTA_BaseNPC_Additive
{
public:
	QAngle m_angle; // 0x1768	
	int32_t m_iPoseParameterAim; // 0x1774	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_MartyrsPlate : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_RingOfHealth : public CDOTA_Buff_Item
{
public:
	float bonus_health_regen; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_EarthSpirit_BoulderSmash : public CDOTABaseAbility
{
public:
	int32_t speed; // 0x578	
	int32_t rock_damage; // 0x57c	
	float creep_multiplier; // 0x580	
	int32_t radius; // 0x584	
	int32_t rock_search_aoe; // 0x588	
	float unit_distance; // 0x58c	
	float rock_distance; // 0x590	
	int32_t m_nProjectileID; // 0x594	
	CHandle< CBaseEntity > m_hCursorTarget; // 0x598	
	bool m_bUsedStone; // 0x59c	
private:
	[[maybe_unused]] uint8_t __pad059d[0x3]; // 0x59d
public:
	CHandle< CBaseEntity > m_hTarget; // 0x5a0	
	bool m_bTargetStone; // 0x5a4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Techies_StickyBombThrow : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
	float m_flPredictedTotalTime; // 0x133c	
	Vector m_vStartPosition; // 0x1340	
	float m_flCurrentTimeHoriz; // 0x134c	
	float m_flCurrentTimeVert; // 0x1350	
	bool m_bHorizontalMotionInterrupted; // 0x1354	
	bool m_bDamageApplied; // 0x1355	
	bool m_bTargetTeleported; // 0x1356	
private:
	[[maybe_unused]] uint8_t __pad1357[0x1]; // 0x1357
public:
	Vector m_vHorizontalVelocity; // 0x1358	
	Vector m_vLastKnownTargetPosition; // 0x1364	
	float m_flInitialVelocityZ; // 0x1370	
	bool m_bDone; // 0x1374	
private:
	[[maybe_unused]] uint8_t __pad1375[0x3]; // 0x1375
public:
	int32_t radius; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Meepo_MegaMeepo : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > hPreviousMeepo; // 0x578	
	CHandle< CBaseEntity > hMegameepoFrame; // 0x57c	
	CUtlVector< CHandle< CBaseEntity > > hListOfMeepos; // 0x580	
	bool m_bHasSwappedAbilities; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ForgedSpirit_Stats : public CDOTA_Buff
{
public:
	int32_t level; // 0x1338	
	int32_t armor; // 0x133c	
	int32_t mana; // 0x1340	
	float attack_range; // 0x1344	
	float armor_per_attack; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_NightStalker_CripplingFear : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1338[0x8]; // 0x1338
public:
	int32_t dps; // 0x1340	
	float tick_rate; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Plague_Wards_Bonus_Range : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_Big_Flinch : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Witch_Doctor_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lich_FrostShield : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Zuus_Cloud : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tutorial_LastHittable : public CDOTA_Buff
{
public:
	bool m_bIsFriend; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Greevil_Miniboss_Green_LivingArmor : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_Festive_Firework : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Gold_Income_180 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_500 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x14d0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CHandle< CBaseEntity> m_hPowerupRune_1"
// MNetworkVarNames "CHandle< CBaseEntity> m_hPowerupRune_2"
// MNetworkVarNames "CHandle< CBaseEntity> m_hBountyRune_1"
// MNetworkVarNames "CHandle< CBaseEntity> m_hBountyRune_2"
// MNetworkVarNames "CHandle< CBaseEntity> m_hBountyRune_3"
// MNetworkVarNames "CHandle< CBaseEntity> m_hBountyRune_4"
// MNetworkVarNames "CHandle< CBaseEntity> m_hXPRune_1"
// MNetworkVarNames "CHandle< CBaseEntity> m_hXPRune_2"
// MNetworkVarNames "int m_iNetWorth"
// MNetworkVarNames "float m_fRadiantWinProbability"
// MNetworkVarNames "DOTAThreatLevelInfo_t m_ThreatLevelInfos"
class CDOTA_DataSpectator : public CDOTA_DataNonSpectator
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hPowerupRune_1; // 0x13f8	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hPowerupRune_2; // 0x13fc	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hBountyRune_1; // 0x1400	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hBountyRune_2; // 0x1404	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hBountyRune_3; // 0x1408	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hBountyRune_4; // 0x140c	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hXPRune_1; // 0x1410	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hXPRune_2; // 0x1414	
	// MNetworkEnable
	int32_t m_iNetWorth[24]; // 0x1418	
	// MNetworkEnable
	float m_fRadiantWinProbability; // 0x1478	
private:
	[[maybe_unused]] uint8_t __pad147c[0x4]; // 0x147c
public:
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< DOTAThreatLevelInfo_t > m_ThreatLevelInfos; // 0x1480	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_EarthSpirit : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PineCone_AcornShot_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Rattlecage : public CDOTA_Buff
{
public:
	int32_t m_iDamageTaken; // 0x1338	
	int32_t damage_threshold; // 0x133c	
	int32_t radius; // 0x1340	
	float damage_reset_interval; // 0x1344	
	int32_t bonus_armor; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Star_Mace : public CDOTA_Buff_Item
{
public:
	int32_t movement_speed_pct; // 0x1338	
	float bonus_mana_regen; // 0x133c	
	int32_t cleave_damage_percent; // 0x1340	
	int32_t cleave_starting_width; // 0x1344	
	int32_t cleave_ending_width; // 0x1348	
	int32_t cleave_distance; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_SuperOverwhelming_Blink : public CDOTA_Item_Overwhelming_Blink
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Jacket_Blind : public CDOTA_Buff
{
public:
	float blind_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Venom_Gland_Debuff : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
	int32_t degen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tome_of_Aghanim : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_IronwoodBranch : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Marci_Unleash : public CDOTABaseAbility
{
public:
	float duration; // 0x578	
	int32_t pulse_radius; // 0x57c	
	float pulse_debuff_duration; // 0x580	
	int32_t pulse_damage; // 0x584	
	float pulse_silence_duration; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VoidSpirit_AetherRemnant_WatchThinker : public CDOTA_Buff
{
public:
	int32_t remnant_watch_radius; // 0x1338	
	GameTime_t m_flLastDamageTick; // 0x133c	
	float damage_tick_rate; // 0x1340	
	float flDamage; // 0x1344	
	bool m_bPiercesCreeps; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Shredder_TimberChain : public CDOTABaseAbility
{
public:
	int32_t chain_radius; // 0x578	
	ParticleIndex_t m_nFXIndex; // 0x57c	
	Vector m_vProjectileVelocity; // 0x580	
	bool m_bRetract; // 0x58c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Magnus_Strength_Of_Joelrak : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Undying_Decay : public CDOTABaseAbility
{
public:
	int32_t decay_damage; // 0x578	
	int32_t radius; // 0x57c	
	float decay_duration; // 0x580	
	int32_t str_steal; // 0x584	
	float creep_damage_multiplier; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5e0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_Invoke : public CDOTABaseAbility
{
public:
	int32_t max_invoked_spells; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad057c[0x4]; // 0x57c
public:
	CDOTA_Modifier_Invoker_Instance* m_instances[3]; // 0x580	
	int32_t m_nCurInstanceSlot; // 0x598	
	bool m_bInvokedAbilitiesInitialized; // 0x59c	
private:
	[[maybe_unused]] uint8_t __pad059d[0x3]; // 0x59d
public:
	CHandle< CBaseEntity > m_invokedAbilities[10]; // 0x5a0	
	Vector m_vecCurrentColor; // 0x5c8	
	int32_t m_nQuasInstances; // 0x5d4	
	int32_t m_nExortInstances; // 0x5d8	
	int32_t m_nWexInstances; // 0x5dc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_IonShell_Slow : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ursa_Enrage : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1338	
	int32_t status_resistance; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Riki_TricksOfTheTrade_Phase : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFxIndex; // 0x1338	
	CHandle< CBaseEntity > m_hTarget; // 0x133c	
	CountdownTimer m_Timer; // 0x1340	
	CHandle< CBaseEntity > m_hPreviousTarget; // 0x1358	
	int32_t m_nSucceessiveHits; // 0x135c	
	bool m_bGrantedGem; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1361[0x3]; // 0x1361
public:
	float attack_rate; // 0x1364	
	int32_t damage_pct; // 0x1368	
	int32_t agility_pct; // 0x136c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Riki_BlinkStrike : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Axe_BatleHunger_Self : public CDOTA_Buff
{
public:
	int32_t scepter_armor_change; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rune_SuperRegen : public CDOTA_Modifier_Rune_Regen
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tutorial_ForceAnimation : public CDOTA_Buff
{
public:
	int32_t m_nActivity; // 0x1338	
	bool m_bLoop; // 0x133c	
	bool m_bFacePlayer; // 0x133d	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_EnragedWildkin_ToughnessAura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lone_Druid_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lone_Druid_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Broodmother_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_400 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Oracle : public CDOTA_BaseNPC_Hero
{
public:
	ParticleIndex_t m_nFXDeath; // 0x1d98	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1798
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CODTA_Unit_Warlock_Imp : public CDOTA_BaseNPC_Creep
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkIncludeByName "CGameSceneNode::m_angRotation"
class CDOTA_BaseNPC_SDKTower : public CDOTA_BaseNPC_Tower
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x940
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CEconWearable : public CEconEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Watch_Tower_Marker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Warhammer : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Ancient_Perseverance : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Desolator_2 : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
	float corruption_duration; // 0x133c	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Techies_FocusedDetonate : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Visage_GraveChill : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class NagaSiren_SongOfTheSiren_Healing : public CDOTA_Buff
{
public:
	int32_t heal_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Chaos_Knight_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Silencer_LastWord_Disarm : public CDOTA_Modifier_Silence
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Enchantress_Enchant_Slow : public CDOTA_Buff
{
public:
	int32_t slow_movement_speed; // 0x1338	
	int32_t damage; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_TemplarAssassin_PsionicTrap : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_Waterball : public CDOTA_Buff
{
public:
	int32_t trail_damage_per_second; // 0x1338	
	int32_t trail_damage_radius; // 0x133c	
	CUtlVector< int32 > m_vFXIndices; // 0x1340	
	CUtlVector< Vector > m_vLocations; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoCourierSpawnDire4 : public CPointEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x910
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "EHANDLE m_hActivator"
class CPointClientUIDialog : public CBaseClientUIEntity
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnDialogActivatorChanged"
	CHandle< CBaseEntity > m_hActivator; // 0x908	
	bool m_bStartEnabled; // 0x90c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Vengeful_Spirit_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Terrorblade_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Magic_Resistance_35 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x40
// Has VTable
// 
// MNetworkVarNames "GameTime_t m_flTime"
// MNetworkVarNames "Vector2D m_vPosition"
// MNetworkVarNames "bool m_bIsOutpost"
struct DOTATeleportInfo_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	GameTime_t m_flTime; // 0x30	
	// MNetworkEnable
	Vector2D m_vPosition; // 0x34	
	// MNetworkEnable
	bool m_bIsOutpost; // 0x3c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x548
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "sky3dparams_t m_skyboxData"
// MNetworkVarNames "CUtlStringToken m_skyboxSlotToken"
class CSkyCamera : public CBaseEntity
{
public:
	// MNetworkEnable
	// -> scale - 0x4b0
	// -> origin - 0x4b4
	// -> bClip3DSkyBoxNearToWorldFar - 0x4c0
	// -> flClip3DSkyBoxNearToWorldFarOffset - 0x4c4
	// -> fog - 0x4c8
	// -> m_nWorldGroupID - 0x530
	sky3dparams_t m_skyboxData; // 0x4a8	
	// MNetworkEnable
	CUtlStringToken m_skyboxSlotToken; // 0x538	
	bool m_bUseAngles; // 0x53c	
private:
	[[maybe_unused]] uint8_t __pad053d[0x3]; // 0x53d
public:
	CSkyCamera* m_pNext; // 0x540	
	
	// Datamap fields:
	// int16_t m_skyboxData.scale; // 0x4b0
	// Vector m_skyboxData.origin; // 0x4b4
	// bool m_skyboxData.bClip3DSkyBoxNearToWorldFar; // 0x4c0
	// float m_skyboxData.flClip3DSkyBoxNearToWorldFarOffset; // 0x4c4
	// bool m_skyboxData.fog.enable; // 0x52c
	// bool m_skyboxData.fog.blend; // 0x52d
	// Vector m_skyboxData.fog.dirPrimary; // 0x4d0
	// Color m_skyboxData.fog.colorPrimary; // 0x4dc
	// Color m_skyboxData.fog.colorSecondary; // 0x4e0
	// float m_skyboxData.fog.start; // 0x4ec
	// float m_skyboxData.fog.end; // 0x4f0
	// float m_skyboxData.fog.maxdensity; // 0x4f8
	// void InputActivateSkybox; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_DuelistGloves : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1338	
	int32_t bonus_damage; // 0x133c	
	float radius; // 0x1340	
	int32_t actual_attack_speed; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Oakheart_Healing : public CDOTA_Buff
{
public:
	int32_t heal; // 0x1338	
	float duration; // 0x133c	
	float regen; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Demonicon : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Satanic : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_BlinkDagger : public CDOTA_Buff_Item
{
public:
	float blink_damage_cooldown; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Marci_Lunge_Buff : public CDOTA_Buff
{
public:
	int32_t scepter_armor; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Elder_Titan_AncestralSpirit_CastTime : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Medusa_StoneGaze_Stone : public CDOTA_Buff
{
public:
	int32_t bonus_physical_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_KeeperOfTheLight_SpiritFormIlluminate : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hThinker; // 0x578	
	float max_channel_time; // 0x57c	
	int32_t total_damage; // 0x580	
	float m_fPower; // 0x584	
	GameTime_t m_fStartTime; // 0x588	
	ParticleIndex_t m_nFXIndex; // 0x58c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_LoneDruid_SpiritLink : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1338	
	int32_t lifesteal_percent; // 0x133c	
	int32_t armor; // 0x1340	
	int32_t armor_sharing; // 0x1344	
	int32_t active_bonus; // 0x1348	
	CHandle< CBaseEntity > m_hTarget; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_Exort : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_ChaosMeteor_Land : public CDOTA_Buff
{
public:
	Vector m_vDir; // 0x1338	
	int32_t travel_speed; // 0x1344	
	int32_t travel_distance; // 0x1348	
	int32_t vision_distance; // 0x134c	
	float spell_amp; // 0x1350	
	float spell_lifesteal; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Clinkz_12 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rattletrap_Cog : public CDOTA_Buff
{
public:
	bool m_bEnabled; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	int32_t trigger_distance; // 0x133c	
	int32_t push_length; // 0x1340	
	float push_duration; // 0x1344	
	int32_t cogs_radius; // 0x1348	
	int32_t attacks_to_destroy; // 0x134c	
	int32_t m_iCogIndex; // 0x1350	
	ParticleIndex_t m_nFXIndex; // 0x1354	
	Vector vCenter; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_FacelessVoid_TimeDilation : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nian_Tail_Swipe : public CDOTA_Ability_Animation_Attack
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lich_FrostShield : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	float interval; // 0x133c	
	int32_t damage_reduction; // 0x1340	
	int32_t health_regen; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Puck_PhaseShift : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tiny_Avalanche : public CDOTA_Buff
{
public:
	CUtlVector< CDOTA_BaseNPC* > m_pHeroesHit; // 0x1338	
	int32_t radius; // 0x1350	
	float total_duration; // 0x1354	
	float stun_duration; // 0x1358	
	int32_t tick_count; // 0x135c	
	float toss_multiplier; // 0x1360	
	int32_t m_damage; // 0x1364	
	int32_t m_nTicks; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Razor_StaticLink_Buff : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
	int32_t drain_rate; // 0x133c	
	float drain_length; // 0x1340	
	int32_t attack_speed_factor; // 0x1344	
	int32_t drain_armor; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_SkeletonKing_Reincarnation : public CDOTABaseAbility
{
public:
	bool m_bShouldUseResources; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Pudge_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pudge_Dismember_Pull : public CDOTA_Buff
{
public:
	Vector m_vDestination; // 0x1338	
	int32_t pull_units_per_second; // 0x1344	
	float pull_distance_limit; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad134c[0x8]; // 0x134c
public:
	float animation_rate; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hidden_NoDamage : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Naga_Siren_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Luna_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Wisp_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x770
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkExcludeByName "m_flAnimTime"
// MNetworkExcludeByName "m_flCycle"
// MNetworkExcludeByName "m_flPoseParameter"
// MNetworkExcludeByName "m_flSimulationTime"
class CDOTA_Pet_CarriedItem : public CBaseAnimatingActivity
{
public:
	CHandle< CDOTA_BaseNPC_Hero > m_hHeroHandle; // 0x768	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Bullwhip_Buff : public CDOTA_Buff
{
public:
	int32_t speed; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Wizard_Glass : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Faded_Broach : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Witless_shako : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Timeless_Relic : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Nullifier_Slow : public CDOTA_Buff
{
public:
	int32_t slow_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Silver_Edge_Debuff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Mjollnir : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_HelmOfTheDominator_2 : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mars_ArenaOfBlood_Thinker : public CDOTA_Buff
{
public:
	float radius; // 0x1338	
	float formation_time; // 0x133c	
	float m_flInitialZ; // 0x1340	
	float m_flFinalZ; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1348[0x10]; // 0x1348
public:
	bool m_bCaughtOne; // 0x1358	
	bool m_bKilledOne; // 0x1359	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Grimstroke_Dark_Portrait : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TrollWarlord_WhirlingAxes_Blind : public CDOTA_Buff
{
public:
	int32_t blind_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slark_Pounce : public CDOTA_Buff
{
public:
	float m_flTotalTime; // 0x1338	
	float m_flInitialVelocity; // 0x133c	
	Vector m_vStartPosition; // 0x1340	
	Vector m_vTargetHorizontalDirection; // 0x134c	
	float m_flCurrentTimeHoriz; // 0x1358	
	float m_flCurrentTimeVert; // 0x135c	
	bool m_bInterrupted; // 0x1360	
	bool m_bFoundUnit; // 0x1361	
private:
	[[maybe_unused]] uint8_t __pad1362[0x2]; // 0x1362
public:
	int32_t pounce_distance; // 0x1364	
	int32_t pounce_distance_scepter; // 0x1368	
	float pounce_speed; // 0x136c	
	float pounce_acceleration; // 0x1370	
	int32_t pounce_radius; // 0x1374	
	int32_t pounce_damage; // 0x1378	
	float leash_duration; // 0x137c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Chaos_Knight_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_LoneDruid_SpiritBear_TowerKillTracker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Obsidian_Destroyer_Equilibrium_Buff_Counter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_IceWall_SlowAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t slow; // 0x133c	
	float slow_duration; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Beastmaster_DrumsOfSlom_Stop : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_WhirlpoolThinker : public CDOTA_Buff
{
public:
	int32_t pull_radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Animation_TailSpin : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
	int32_t damage_radius; // 0x133c	
	float m_flPlaybackRate; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< CHandle< CBaseEntity > > m_vHitEntities; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Necrolyte_Sadist_Stop : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tiny_Avalanche_Stun : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_StormSpirit_Electric_Rave : public CDOTA_Buff
{
public:
	int32_t overload_aoe; // 0x1338	
	int32_t overload_damage; // 0x133c	
	int32_t shard_attack_speed_bonus; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x518
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPointCameraVFOV : public CPointCamera
{
public:
	float m_flVerticalFOV; // 0x510	
	
	// Datamap fields:
	// float m_flDofFarCrisp; // 0x4f0
	// float m_flDofFarBlurry; // 0x4f4
	// float m_flDofTiltToGround; // 0x4f8
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x50
// Has VTable
// 
// MNetworkVarNames "int m_nGridX"
// MNetworkVarNames "int m_nGridY"
// MNetworkVarNames "int m_nRadius"
// MNetworkVarNames "int8 m_nViewerType"
// MNetworkVarNames "bool m_bObstructedVision"
// MNetworkVarNames "bool m_bValid"
struct TempViewerInfo_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnFieldChanged"
	int32_t m_nGridX; // 0x30	
	// MNetworkEnable
	// MNetworkChangeCallback "OnFieldChanged"
	int32_t m_nGridY; // 0x34	
	// MNetworkEnable
	// MNetworkChangeCallback "OnFieldChanged"
	int32_t m_nRadius; // 0x38	
	// MNetworkEnable
	// MNetworkChangeCallback "OnFieldChanged"
	int8_t m_nViewerType; // 0x3c	
	// MNetworkEnable
	// MNetworkChangeCallback "OnFieldChanged"
	bool m_bObstructedVision; // 0x3d	
	// MNetworkEnable
	// MNetworkChangeCallback "OnFieldChanged"
	bool m_bValid; // 0x3e	
	// MNetworkDisable
	bool m_bDirty; // 0x3f	
	// MNetworkDisable
	GameTime_t flEndTime; // 0x40	
	// MNetworkDisable
	int32_t nFoWID; // 0x44	
	// MNetworkDisable
	CHandle< CBaseEntity > hOwner; // 0x48	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Silencer_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Monkey_King_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Monkey_King_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Armor_20 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x980
// Has VTable
// Construct disallowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CBaseAnimatingOverlayController m_animationController"
class CBodyComponentBaseAnimatingOverlay : public CBodyComponentSkeletonInstance
{
public:
	// MNetworkEnable
	CBaseAnimatingOverlayController m_animationController; // 0x460	
	
	// Static fields:
	static EntComponentInfo_t &Get_s_EntComponentInfo(){return *reinterpret_cast<EntComponentInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponentBaseAnimatingOverlay")->GetStaticFields()[0]->m_pInstance);};
	static int32_t &Get_entity_component_error_class_decl_says_contained_but_impl_is_referenced(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponentBaseAnimatingOverlay")->GetStaticFields()[1]->m_pInstance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x500
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoPlayerStartBadGuys : public CInfoPlayerStartDota
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_JungleVarmint_Creator : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hVarmint; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Guardian_Shell : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Samurai_Tabi : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement_speed; // 0x1338	
	int32_t bonus_attack_speed; // 0x133c	
	int32_t bonus_all_stats; // 0x1340	
	int32_t bonus_damage; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Wisp_Spirit_Invulnerable : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Meepo_Poof_Damage_Sharing : public CDOTA_Buff
{
public:
	int32_t damage_share_percentage; // 0x1338	
	int32_t damage_share_radius; // 0x133c	
	CUtlVector< CHandle< CBaseEntity > > m_BondedEntities; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Shadow_Demon_Disseminate : public CDOTA_Buff
{
public:
	int32_t damage_reflection_pct; // 0x1338	
	int32_t radius; // 0x133c	
	GameTime_t m_flLastDispersionPulseEffectTime; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Jakiro_Macropyre_Thinker : public CDOTA_Buff
{
public:
	Vector m_vPathDir; // 0x1338	
	float burn_interval; // 0x1344	
	int32_t path_radius; // 0x1348	
	int32_t cast_range; // 0x134c	
	float linger_duration; // 0x1350	
	bool m_bTestedGem; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Miniboss_Unyielding_Shield : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_CrystalMaiden_BrillianceAuraEffect : public CDOTA_Buff
{
public:
	float base_mana_regen; // 0x1338	
	float self_factor; // 0x133c	
	float proximity_bonus_factor; // 0x1340	
	int32_t proximity_bonus_radius; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7b0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CMarkupVolumeWithRef : public CMarkupVolumeTagged
{
public:
	bool m_bUseRef; // 0x798	
private:
	[[maybe_unused]] uint8_t __pad0799[0x3]; // 0x799
public:
	Vector m_vRefPos; // 0x79c	
	float m_flRefDot; // 0x7a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4f0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CMessage : public CPointEntity
{
public:
	CUtlSymbolLarge m_iszMessage; // 0x4a8	
	float m_MessageVolume; // 0x4b0	
	int32_t m_MessageAttenuation; // 0x4b4	
	float m_Radius; // 0x4b8	
private:
	[[maybe_unused]] uint8_t __pad04bc[0x4]; // 0x4bc
public:
	CUtlSymbolLarge m_sNoise; // 0x4c0	
	CEntityIOOutput m_OnShowMessage; // 0x4c8	
	
	// Datamap fields:
	// void InputShowMessage; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4f8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_bEnabled"
class CLogicGameEventListener : public CLogicalEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x10]; // 0x4a8
public:
	CEntityIOOutput m_OnEventFired; // 0x4b8	
	CUtlSymbolLarge m_iszGameEventName; // 0x4e0	
	CUtlSymbolLarge m_iszGameEventItem; // 0x4e8	
	// MNetworkEnable
	bool m_bEnabled; // 0x4f0	
	bool m_bStartDisabled; // 0x4f1	
	
	// Datamap fields:
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
	// void InputToggle; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Plus_GuildBanner : public CDOTABaseAbility
{
public:
	CUtlVectorFixedGrowable< CHandle< CBaseEntity > > m_vecBanners; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Drow_Ranger_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Doom_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1dc8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int32 m_vecInitialHeroKillBitmask"
// MNetworkVarNames "int32 m_vecInGameHeroKillBitmask"
class CDOTA_Unit_Hero_SkeletonKing : public CDOTA_BaseNPC_Hero
{
public:
	int32_t m_nSkeletonWarriors; // 0x1d98	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSKArcanaProgressChanged"
	int32_t m_vecInitialHeroKillBitmask[5]; // 0x1d9c	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSKArcanaProgressChanged"
	int32_t m_vecInGameHeroKillBitmask[5]; // 0x1db0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x638
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Tier3Token : public CDOTA_Item_TierToken
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seasonal_PartyHat : public CDOTA_Buff
{
public:
	int32_t controlled_unit_search_radius; // 0x1338	
	bool child_modifier; // 0x133c	
private:
	[[maybe_unused]] uint8_t __pad133d[0x3]; // 0x133d
public:
	CUtlString m_strEffectName; // 0x1340	
	ParticleIndex_t m_nHatFXIndex; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Roshans_Banner_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t hp_bonus; // 0x133c	
	int32_t damage_bonus; // 0x1340	
	int32_t model_scale; // 0x1344	
	float buff_linger_duration; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_PogoStick : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
	int32_t bonus_mana; // 0x133c	
	int32_t bonus_intellect; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Bloodstone : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
	int32_t bonus_mana; // 0x133c	
	int32_t bonus_aoe; // 0x1340	
	int32_t bonus_mp_regen; // 0x1344	
	float spell_lifesteal; // 0x1348	
	float lifesteal_multiplier; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_StaffOfWizardry : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_EmberSpirit_Activate_FireRemnant : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x10]; // 0x578
public:
	int32_t m_nProjectileID; // 0x588	
	Vector m_vStartLocation; // 0x58c	
	Vector m_vProjectileLocation; // 0x598	
	QAngle m_ProjectileAngles; // 0x5a4	
	CHandle< CBaseEntity > m_hRemnantToKill; // 0x5b0	
	bool m_bProjectileStarted; // 0x5b4	
private:
	[[maybe_unused]] uint8_t __pad05b5[0x3]; // 0x5b5
public:
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x5b8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EmberSpirit_SleightOfFist_InProgress : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Shredder_Flamethrower : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Wisp_Spirits_In : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Disruptor_Thunder_Strike_Slow : public CDOTA_Buff
{
public:
	int32_t slow_amount; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Shadow_Demon_Soul_Catcher : public CDOTA_Buff
{
public:
	int32_t actual_health_lost; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Obsidian_Destroyer_EssenceAura_Effect : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t restore_chance; // 0x133c	
	float restore_amount; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SpiritBreaker_GreaterBash_Break : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Huskar_Burning_Spear : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Omniknight_Angelic_Flight : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Clinkz_BurningBarrage : public CDOTA_Buff
{
public:
	int32_t m_iArrowCount; // 0x1338	
	Vector m_vOriginalTarget; // 0x133c	
	int32_t arrow_width; // 0x1348	
	float arrow_speed; // 0x134c	
	float arrow_range_multiplier; // 0x1350	
	int32_t wave_count; // 0x1354	
	int32_t arrow_count_per_wave; // 0x1358	
	int32_t arrow_angle; // 0x135c	
	int32_t m_iLoopCount; // 0x1360	
	float m_flInterval; // 0x1364	
	float m_flCycleDelay; // 0x1368	
	float m_flTimeWaste; // 0x136c	
	GameTime_t m_flExpectedTime; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DragonKnight_SplashAttack : public CDOTA_Buff
{
public:
	int32_t splash_radius; // 0x1338	
	int32_t splash_damage_percent; // 0x133c	
	float corrosive_breath_duration; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_DeathProphet_Exorcism_Spirit : public CBaseAnimatingActivity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FacelessVoid_Chronosphere_Speed : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lich_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Windrunner_Arcana : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Morphling_ScepterStatsDrain_All_Buff : public CDOTA_Buff
{
public:
	int32_t scepter_stat_steal; // 0x1338	
	int32_t nStrengthSteal; // 0x133c	
	int32_t nAgiSteal; // 0x1340	
	int32_t nIntSteal; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x818
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPushable : public CBreakable
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bloodseeker_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Wraith_King_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Movement_Speed_Percentage_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cleave_30 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_250 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Pugna : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1908
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Nian : public CDOTA_BaseNPC_Creature
{
public:
	CUtlVector< NianDamageTaken_t > m_vecRecentDamage; // 0x18e8	
	CHandle< CBaseEntity > m_hTail; // 0x1900	
	CHandle< CBaseEntity > m_hHorn; // 0x1904	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Ascension_Invis_Warning : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Overflowing_Elixir : public CDOTA_Item
{
public:
	int32_t m_iStoredRuneType; // 0x620	
	GameTime_t m_fStoredRuneTime; // 0x624	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Woodland_Striders : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement_speed; // 0x1338	
	int32_t bonus_hp_regen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Crown : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Dagon : public CDOTA_Buff_Item
{
public:
	int32_t bonus_int; // 0x1338	
	int32_t bonus_str; // 0x133c	
	int32_t bonus_agi; // 0x1340	
	float passive_spell_lifesteal; // 0x1344	
	float dagon_spell_lifesteal; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_SpearBonusDamage : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_MonkeyKing_Spring : public CDOTABaseAbility
{
public:
	Vector m_vPos; // 0x578	
	GameTime_t m_fStartChannelTime; // 0x584	
	CHandle< CBaseEntity > m_hThinker; // 0x588	
	ParticleIndex_t m_nFxIndex; // 0x58c	
	int32_t m_nRefCount; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Banana_Knockback : public CDOTA_Buff
{
public:
	Vector m_vCenter; // 0x1338	
	int32_t knockback_distance; // 0x1344	
	int32_t knockback_height; // 0x1348	
	float knockback_duration; // 0x134c	
	Vector m_vHorizOffset; // 0x1350	
	Vector m_vStartPosition; // 0x135c	
	Vector m_vDir; // 0x1368	
	float m_fCurrentTimeHoriz; // 0x1374	
	float m_fCurrentTimeVert; // 0x1378	
	bool m_bShouldStun; // 0x137c	
private:
	[[maybe_unused]] uint8_t __pad137d[0x3]; // 0x137d
public:
	float flTimeSinceChange; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Elder_Titan_EchoStomp : public CDOTA_Buff
{
public:
	int32_t wake_damage_limit; // 0x1338	
	float animation_rate; // 0x133c	
	float initial_stun_duration; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CountdownTimer ctStunTimer; // 0x1348	
	float m_flDamageTaken; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Treant_Overgrowth : public CDOTA_Buff
{
public:
	float damage; // 0x1338	
	int32_t mute; // 0x133c	
	bool bPurgable; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Shadow_Demon_Shadow_Poison : public CDOTA_Buff
{
public:
	float stack_damage; // 0x1338	
	float bonus_stack_damage; // 0x133c	
	int32_t max_multiply_stacks; // 0x1340	
	ParticleIndex_t m_nFXStackIndex; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Silencer_CurseOfTheSilent : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Alchemist_Self_Corrosive_Weaponry : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Furion_CurseOfTheForest : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t damage_per_tree; // 0x133c	
	int32_t slow_per_tree; // 0x1340	
	int32_t m_nSlow; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Animation_LeftClawSwipe : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
	int32_t damage_radius; // 0x133c	
	float m_flScalar; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< CHandle< CBaseEntity > > m_vHitEntities; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Kunkka_Torrent : public CDOTA_Buff
{
public:
	int32_t torrent_damage; // 0x1338	
	float damage_tick_interval; // 0x133c	
	float percent_instant; // 0x1340	
	float flDamagePerTick; // 0x1344	
	float m_flStartZ; // 0x1348	
	float m_flCurTime; // 0x134c	
	bool m_bTorrentStorm; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FountainInvulnerabilityBuff : public CDOTA_Buff
{
public:
	Vector m_vecPosition; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_GraniteGolem_HPAura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x950
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTriggerRemove : public CBaseTrigger
{
public:
	CEntityIOOutput m_OnRemove; // 0x928	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoTarget : public CPointEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_Summon_Penguin : public CDOTABaseAbility
{
public:
	int32_t spawn_offset; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Huskar_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bloodseeker_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Silencer : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Wisp_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x718
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
class CDotaSubquestEntityDeath : public CDotaSubquestBase
{
public:
	CUtlVector< CUtlSymbolLarge > m_entityNameList; // 0x700	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_BinaryObject : public CBaseEntity
{
public:
	bool m_bActive; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	int32_t m_nBinaryID; // 0x4ac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CIngameEvent_TI6 : public CIngameEvent_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Greevil_Miniboss_Casting : public CDOTA_Buff
{
public:
	int32_t cast_animation; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Aghsfort_Modifier_Magnus_Push_Skewer_Movement : public CDOTA_Buff
{
public:
	int32_t m_nProjectileID; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Solar_Crest : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1390
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Mjollnir : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t bonus_attack_speed; // 0x133c	
	int32_t chain_chance; // 0x1340	
	int32_t chain_strikes; // 0x1344	
	int32_t chain_damage; // 0x1348	
	int32_t chain_radius; // 0x134c	
	int32_t chain_damage_per_charge; // 0x1350	
	int32_t max_charges; // 0x1354	
	float chain_cooldown; // 0x1358	
private:
	[[maybe_unused]] uint8_t __pad135c[0x4]; // 0x135c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1360	
	CountdownTimer m_ChainTimer; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Shivas_Guard_Blast : public CDOTA_Buff
{
public:
	int32_t blast_movement_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Dagon_Upgraded2 : public CDOTA_Item_Dagon_Upgraded
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_VoidSpirit_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Magnus_Strength_Of_Joelrak : public CDOTA_Buff
{
public:
	int32_t strength_per_stack; // 0x1338	
	int32_t max_stacks; // 0x133c	
	float stack_duration; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Meepo_Poof : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad057c[0x8]; // 0x57c
public:
	int32_t radius; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Silencer_CurseOfTheSilent : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
	ParticleIndex_t nFxIndex; // 0x133c	
	int32_t penalty_duration; // 0x1340	
	float penalty_multiplier; // 0x1344	
	int32_t movespeed; // 0x1348	
	int32_t undispellable; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_ColdSnap_AD : public CDOTA_Ability_Invoker_ColdSnap
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Gyrocopter_Call_Down_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Spectre_Dispersion_Boost : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Life_Stealer_Empty1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Rattletrap_Overclocking : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dazzle_Bad_Juju_Armor_Counter : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
	float armor_reduction; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Pudge_FleshHeap : public CDOTABaseAbility
{
public:
	int32_t m_iKills; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Beastmaster_Axe : public CBaseAnimatingActivity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Treant_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Demon_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Faceless_Void_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Riki_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cast_Range_300 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_1000 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_FacelessVoid : public CDOTA_BaseNPC_Hero
{
public:
	Vector m_vecStanceDestinationPoint; // 0x1d98	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mutation_NoHealthBars_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Sorcerers_Staff : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Arcane_Ring : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Desolator_2 : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Dagon_Upgraded4 : public CDOTA_Item_Dagon_Upgraded
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x640
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_TranquilBoots : public CDOTA_Item
{
public:
	int32_t break_count; // 0x620	
private:
	[[maybe_unused]] uint8_t __pad0624[0x4]; // 0x624
public:
	CUtlVector< GameTime_t > m_DamageList; // 0x628	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_ArcWarden_SparkWraith : public CDOTABaseAbility
{
public:
	float duration; // 0x578	
	float activation_delay; // 0x57c	
	float wraith_vision_duration; // 0x580	
	int32_t wraith_vision_radius; // 0x584	
	float spark_damage; // 0x588	
	int32_t creep_damage_bonus_pct; // 0x58c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Terrorblade_Metamorphosis_Transform_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bristleback_Active_ConicalQuillSpray : public CDOTA_Buff
{
public:
	int32_t activation_num_quill_sprays; // 0x1338	
	float activation_spray_interval; // 0x133c	
	int32_t activation_angle; // 0x1340	
	int32_t cast_range_bonus; // 0x1344	
	int32_t activation_movement_speed_pct; // 0x1348	
	int32_t activation_turn_rate_pct; // 0x134c	
	int32_t activation_disable_turning; // 0x1350	
	int32_t activation_ignore_cast_angle; // 0x1354	
	int32_t activation_turn_rate; // 0x1358	
	float activation_delay; // 0x135c	
	GameTime_t m_fStartTime; // 0x1360	
	bool bDelayFinished; // 0x1364	
private:
	[[maybe_unused]] uint8_t __pad1365[0x3]; // 0x1365
public:
	float m_flFacingTarget; // 0x1368	
	Vector m_vFacing; // 0x136c	
	int32_t m_nNumSprays; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Visage_SummonFamiliars_StoneForm_Thinker : public CDOTA_Buff
{
public:
	int32_t stun_radius; // 0x1338	
	int32_t stun_damage; // 0x133c	
	float stun_delay; // 0x1340	
	float stun_duration; // 0x1344	
	float stone_duration; // 0x1348	
	int32_t m_iIntervalCount; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Brewmaster_Fire_Phase : public CDOTA_Buff
{
public:
	int32_t status_resistance; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Broodmother_SpinWeb_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Warlock_Rain_Of_Chaos_Golem : public CDOTA_Buff
{
public:
	int32_t bonus_magic_resistance; // 0x1338	
	int32_t bonus_armor; // 0x133c	
	int32_t bonus_slow_resistance; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tidehunter_Anchor_Unit : public CDOTA_Buff
{
public:
	int32_t chain_length; // 0x1338	
	int32_t attacks_to_destroy; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Windrunner_GaleForce : public CDOTABaseAbility
{
public:
	Vector m_vEndpoint; // 0x578	
	Vector m_vFlowPosition; // 0x584	
	float duration; // 0x590	
	CHandle< CBaseEntity > m_hThinker; // 0x594	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Windrunner_Powershot : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x8]; // 0x578
public:
	GameTime_t m_fStartTime; // 0x580	
	float m_fPower; // 0x584	
	int32_t m_iProjectile; // 0x588	
	float damage_reduction; // 0x58c	
	int32_t arrow_width; // 0x590	
	int32_t powershot_damage; // 0x594	
	float tree_width; // 0x598	
	float slow; // 0x59c	
	float slow_duration; // 0x5a0	
	bool m_bAwardedKillEater; // 0x5a4	
private:
	[[maybe_unused]] uint8_t __pad05a5[0x3]; // 0x5a5
public:
	int32_t m_nHeroesHit; // 0x5a8	
	ParticleIndex_t m_nFXIndex; // 0x5ac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Earthshaker_EnchantTotem : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_HallOfFame_Glow : public CDOTA_Buff
{
public:
	CUtlVector< PlayerID_t > m_vecGlowingPlayerIDs; // 0x1338	
	CUtlVector< PlayerID_t > m_vecGlowingPlayerIDs2; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Pugna_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lone_Druid_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_Regen_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CIngameEvent_NewBloom2019 : public CIngameEvent_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1770
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Aghsfort_Aziyog_Underlord_Portal : public CDOTA_BaseNPC_Additive
{
public:
	CHandle< CBaseEntity > m_hOtherPortal; // 0x1768	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Neutral_SpellImmunity : public CDOTA_Modifier_MagicImmune
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Spark_Of_Courage : public CDOTA_Buff_Item
{
public:
	int32_t damage; // 0x1338	
	int32_t armor; // 0x133c	
	int32_t health_pct; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Eternal_Shroud : public CDOTA_Buff_Item
{
public:
	int32_t bonus_spell_resist; // 0x1338	
	int32_t bonus_strength; // 0x133c	
	int32_t bonus_armor; // 0x1340	
	float bonus_health; // 0x1344	
	int32_t mana_restore_pct; // 0x1348	
	float stack_threshold; // 0x134c	
	float stack_resist; // 0x1350	
	float stack_duration; // 0x1354	
	int32_t max_stacks; // 0x1358	
	float m_flCumulativeDamage; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Tree_Processor : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Broom_Handle : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_PocketRoshan : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_AbyssalBlade : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Samurai_Tabi_Agi : public CDOTA_Buff_Item
{
public:
	int32_t stat_per_tick; // 0x1338	
	float base_interval; // 0x133c	
	int32_t max_tick_count; // 0x1340	
	int32_t bonus_all_stats; // 0x1344	
	int32_t agi_counter_chance; // 0x1348	
	float agi_counter_cooldown; // 0x134c	
	GameTime_t m_flLastCounterTime; // 0x1350	
	int32_t iCurrentTickCount; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Muerta_Gunslinger : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Marci_Guardian_Buff : public CDOTA_Buff
{
public:
	float lifesteal_pct; // 0x1338	
	int32_t bonus_damage; // 0x133c	
	int32_t bonus_attack_range; // 0x1340	
	int32_t max_partner_distance; // 0x1344	
	int32_t max_partner_penalty; // 0x1348	
	int32_t creep_lifesteal_reduction_pct; // 0x134c	
	float m_fLifestealPct; // 0x1350	
	float m_fDamageAbsorbed; // 0x1354	
	bool m_bActive; // 0x1358	
private:
	[[maybe_unused]] uint8_t __pad1359[0x3]; // 0x1359
public:
	ParticleIndex_t m_nFxIndex; // 0x135c	
	CHandle< CBaseEntity > m_hPartner; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dawnbreaker_Solar_Guardian_Cooldown : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_DarkWillow_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Oracle_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EmberSpirit_SlightOfFist_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Treant_EyesInTheForest_Thinker : public CDOTA_Buff
{
public:
	float vision_aoe; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CDOTA_Tree* m_Tree; // 0x1340	
	CHandle< CBaseEntity > m_hTree; // 0x1348	
	ParticleIndex_t m_nFXIndex; // 0x134c	
	bool m_bUpgradedVision; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Shadow_Demon_Disruption : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hDisruptedUnit; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lycan_Shapeshift_Speed : public CDOTA_Buff
{
public:
	int32_t speed; // 0x1338	
	int32_t crit_chance; // 0x133c	
	int32_t crit_multiplier; // 0x1340	
	int32_t health_bonus; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Batrider_StickyNapalm : public CDOTA_Modifier_Stacking_Base
{
public:
	float movement_speed_pct; // 0x1358	
	int32_t turn_rate_pct; // 0x135c	
	int32_t damage; // 0x1360	
	int32_t application_damage; // 0x1364	
	ParticleIndex_t m_nFXIndex; // 0x1368	
	ParticleIndex_t m_nFXStackIndex; // 0x136c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Broodmother_SpawnSpiderite : public CDOTA_Buff
{
public:
	float buff_duration; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Windrunner_Shackleshot : public CDOTABaseAbility
{
public:
	int32_t shackle_count; // 0x578	
	Vector m_vArrowAvgPos; // 0x57c	
	Vector m_vArrowStartPos; // 0x588	
	Vector m_vArrowStartPos2; // 0x594	
	Vector m_vArrowStartPos3; // 0x5a0	
	CHandle< CBaseEntity > m_hTarget; // 0x5ac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SkeletonKing_Reincarnation_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed; // 0x1338	
	int32_t attackslow; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Visage_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cast_Range_250 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1870
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Healer : public CDOTA_BaseNPC_Building
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DarkTrollWarlord_Ensnare : public CDOTA_Modifier_Rooted
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x790
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_bLoop"
// MNetworkVarNames "float m_flFPS"
// MNetworkVarNames "HRenderTextureStrong m_hPositionKeys"
// MNetworkVarNames "HRenderTextureStrong m_hRotationKeys"
// MNetworkVarNames "Vector m_vAnimationBoundsMin"
// MNetworkVarNames "Vector m_vAnimationBoundsMax"
// MNetworkVarNames "float m_flStartTime"
// MNetworkVarNames "float m_flStartFrame"
class CTextureBasedAnimatable : public CBaseModelEntity
{
public:
	// MNetworkEnable
	bool m_bLoop; // 0x758	
private:
	[[maybe_unused]] uint8_t __pad0759[0x3]; // 0x759
public:
	// MNetworkEnable
	float m_flFPS; // 0x75c	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_hPositionKeys; // 0x760	
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCTextureBase > m_hRotationKeys; // 0x768	
	// MNetworkEnable
	Vector m_vAnimationBoundsMin; // 0x770	
	// MNetworkEnable
	Vector m_vAnimationBoundsMax; // 0x77c	
	// MNetworkEnable
	float m_flStartTime; // 0x788	
	// MNetworkEnable
	float m_flStartFrame; // 0x78c	
	
	// Datamap fields:
	// void InputStart; // 0x0
	// void InputStop; // 0x0
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Spell_Amplify : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_PrimalBeast_Onslaught : public CDOTABaseAbility
{
public:
	float max_charge_time; // 0x578	
	float knockback_distance; // 0x57c	
	int32_t knockback_damage; // 0x580	
	int32_t collision_radius; // 0x584	
	int32_t max_distance; // 0x588	
	Vector m_vStartPos; // 0x58c	
	ParticleIndex_t m_nFXIndex; // 0x598	
	int32_t m_nProjectileID; // 0x59c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Legion_Commander_PressTheAttack : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Magnataur_ReversePolarity : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x578	
	Vector m_vPullLocation; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Centaur_Return : public CDOTA_Buff
{
public:
	int32_t return_damage; // 0x1338	
	int32_t return_damage_str; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_GhostWalk_Self : public CDOTA_Modifier_Invisible
{
public:
	int32_t self_slow; // 0x1348	
	int32_t area_of_effect; // 0x134c	
	float aura_fade_time; // 0x1350	
	float health_regen; // 0x1354	
	float mana_regen; // 0x1358	
	float disable_time; // 0x135c	
	GameTime_t m_timeLastDamage; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Alchemist_Corrosive_Weaponry : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_Flag_Trap_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nian_Hurricane : public CDOTABaseAbility
{
public:
	int32_t min_distance; // 0x578	
	int32_t max_distance; // 0x57c	
	int32_t torrent_count; // 0x580	
	float fire_interval; // 0x584	
	float pull_switch_interval; // 0x588	
	float game_time_wind_activation; // 0x58c	
	CountdownTimer m_ctPullTimer; // 0x590	
	CountdownTimer m_ctTimer; // 0x5a8	
	float m_flTiming; // 0x5c0	
	bool m_bForward; // 0x5c4	
	bool m_bUseWind; // 0x5c5	
private:
	[[maybe_unused]] uint8_t __pad05c6[0x2]; // 0x5c6
public:
	ParticleIndex_t m_nFXIndex; // 0x5c8	
	ParticleIndex_t m_nfxIndex_roar; // 0x5cc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_WitchDoctor_ParalyzingCask : public CDOTABaseAbility
{
public:
	int32_t m_iBounces; // 0x578	
	int32_t bounces; // 0x57c	
	int32_t bounce_bonus_damage; // 0x580	
private:
	[[maybe_unused]] uint8_t __pad0584[0x4]; // 0x584
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecHitHeroes; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lich_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_PhantomLancer_SpiritLance : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hLastHitEntity; // 0x578	
	int32_t m_nBounceCount; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Sven_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AntiMage_SpellShield : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7b8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CMarkupVolumeTagged_NavGame : public CMarkupVolumeWithRef
{
public:
	bool m_bFloodFillAttribute; // 0x7b0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x518
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPhysThruster : public CPhysForce
{
public:
	Vector m_localOrigin; // 0x508	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CHandle<CDOTA_BaseNPC> m_hTarget"
class CDOTA_Ability_AghsFort_Capture : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CDOTA_BaseNPC > m_hTarget; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad057c[0x4]; // 0x57c
public:
	CDOTA_Buff* m_pMyBuff; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Kunkka_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Queen_Of_Pain_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cast_Range_125 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Intelligence_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_bStartRecording"
// MNetworkVarNames "CHandle< CDOTA_BaseNPC> m_hHero"
// MNetworkVarNames "CHandle< CDOTAPlayerController> m_hPlayer"
class CDOTA_Hero_Recorder : public CBaseEntity
{
public:
	// MNetworkEnable
	bool m_bStartRecording; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	// MNetworkEnable
	CHandle< CDOTA_BaseNPC > m_hHero; // 0x4ac	
	// MNetworkEnable
	CHandle< CDOTAPlayerController > m_hPlayer; // 0x4b0	
	GameTime_t m_flStartRecordingTime; // 0x4b4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1778
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Venomancer_PlagueWard : public CDOTA_BaseNPC_Additive
{
public:
	QAngle m_angle; // 0x1768	
	int32_t m_iPoseParameterAim; // 0x1774	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Attack_Damage : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x970
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTriggerDota : public CTriggerMultiple
{
public:
	CDotaEntityFilterFlags m_FilterFlags; // 0x950	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Safety_Bubble : public CDOTA_Buff_Item
{
public:
	int32_t m_nDamageAbsorbed; // 0x1338	
	GameTime_t m_timeLastDamage; // 0x133c	
	int32_t bonus_hp_regen; // 0x1340	
	int32_t shield; // 0x1344	
	float restore_time; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Overwhelming_Blink : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "EHANDLE m_hTarget"
class CDOTA_Ability_PluckFamango : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTarget; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad057c[0x4]; // 0x57c
public:
	CDOTA_Buff* m_pMyBuff; // 0x580	
	float famango_rate; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Bloodthorn : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Ancient_Janggo : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Ring_Of_Basilius : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Heart : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_BladeOfAlacrity : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_BootsOfElven : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Gauntlets : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pangolier_LuckyShot : public CDOTA_Buff
{
public:
	int32_t chance_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Terrorblade_Reflection : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DoomBringer_Empty2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Night_Stalker_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_JumpBoots : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_Waiting : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tinker_Keen_Teleport : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hTeleportTarget; // 0x578	
	ParticleIndex_t m_nFXOrigin; // 0x57c	
	ParticleIndex_t m_nFXDestination; // 0x580	
	Vector m_vDestination; // 0x584	
	int32_t m_iMinDistance; // 0x590	
	float m_flBaseTeleportTime; // 0x594	
	float m_flExtraTeleportTime; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_ShadowShaman_MassSerpentWard : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Lancer_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VengefulSpirit_Arcana_Kill_Effect : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nCasterFXIndex; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TeamShowcase_Showcase : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4f8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "string_t m_iszStackName"
// MNetworkVarNames "string_t m_iszOperatorName"
// MNetworkVarNames "string_t m_iszOpvarName"
// MNetworkVarNames "Vector m_vDistanceInnerMins"
// MNetworkVarNames "Vector m_vDistanceInnerMaxs"
// MNetworkVarNames "Vector m_vDistanceOuterMins"
// MNetworkVarNames "Vector m_vDistanceOuterMaxs"
// MNetworkVarNames "int m_nAABBDirection"
class CCitadelSoundOpvarSetOBB : public CBaseEntity
{
public:
	// MNetworkEnable
	CUtlSymbolLarge m_iszStackName; // 0x4a8	
	// MNetworkEnable
	CUtlSymbolLarge m_iszOperatorName; // 0x4b0	
	// MNetworkEnable
	CUtlSymbolLarge m_iszOpvarName; // 0x4b8	
	// MNetworkEnable
	Vector m_vDistanceInnerMins; // 0x4c0	
	// MNetworkEnable
	Vector m_vDistanceInnerMaxs; // 0x4cc	
	// MNetworkEnable
	Vector m_vDistanceOuterMins; // 0x4d8	
	// MNetworkEnable
	Vector m_vDistanceOuterMaxs; // 0x4e4	
	// MNetworkEnable
	int32_t m_nAABBDirection; // 0x4f0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Pangolier_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Vengeful_Spirit_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Templar_Assassin_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1dc0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "Vector m_stolenAbilityColorHSV1"
// MNetworkVarNames "Vector m_stolenAbilityColorHSV2"
// MNetworkVarNames "Vector m_stolenAbilityFXColorHSV"
class CDOTA_Unit_Hero_Rubick : public CDOTA_BaseNPC_Hero
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnAbilityColorChanged"
	Vector m_stolenAbilityColorHSV1; // 0x1d98	
	// MNetworkEnable
	// MNetworkChangeCallback "OnAbilityColorChanged"
	Vector m_stolenAbilityColorHSV2; // 0x1da4	
	// MNetworkEnable
	// MNetworkChangeCallback "OnAbilityColorChanged"
	Vector m_stolenAbilityFXColorHSV; // 0x1db0	
	// MNetworkDisable
	bool m_bHasInitializedAbilityColors; // 0x1dbc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Oakheart : public CDOTA_Buff_Item
{
public:
	int32_t strength; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Princes_Knife : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tome_Of_Knowledge : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_HelmOfTheDominator_2 : public CDOTA_Modifier_Item_HelmOfTheDominator
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dawnbreaker_Celestial_Hammer_Movement : public CDOTA_Buff
{
public:
	int32_t m_nProjectileID; // 0x1338	
	int32_t projectile_speed; // 0x133c	
	int32_t travel_speed_pct; // 0x1340	
	int32_t m_nMaxRange; // 0x1344	
	Vector m_vStartPoint; // 0x1348	
	Vector m_vLastTrailThinkerLocation; // 0x1354	
	Vector m_vEndPointShard; // 0x1360	
	ParticleIndex_t m_nStatusFXIndex; // 0x136c	
	int32_t flare_radius; // 0x1370	
	bool bHasStartedBurning; // 0x1374	
private:
	[[maybe_unused]] uint8_t __pad1375[0x3]; // 0x1375
public:
	float flare_debuff_duration; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Phoenix_Sun_Ray_Blind : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Underlord_Portal_Buff : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1338	
	int32_t bonus_ms; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slark_EssenceShift_Permanent_Buff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x698
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Visage_SummonFamiliars : public CDOTABaseAbility
{
public:
	char szUnitName[260]; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad067c[0x4]; // 0x67c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hExistingUnits; // 0x680	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rubick_FadeBoltDebuff : public CDOTA_Buff
{
public:
	int32_t attack_damage_reduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rubick_FadeBolt : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t damage; // 0x133c	
	int32_t jump_damage_reduction_pct; // 0x1340	
	float jump_delay; // 0x1344	
	int32_t m_iCurJumpCount; // 0x1348	
	Vector m_vCurTargetLoc; // 0x134c	
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Bear_Empty2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lycan_Howl : public CDOTA_Buff
{
public:
	int32_t attack_damage_reduction; // 0x1338	
	int32_t total_attack_damage_reduction; // 0x133c	
	int32_t armor; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_EMP_AD : public CDOTA_Ability_Invoker_EMP
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Night_Stalker_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Firework_Mine : public CDOTA_Buff
{
public:
	int32_t damage_radius; // 0x1338	
	int32_t trigger_radius; // 0x133c	
	int32_t damage; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lion_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Razor_UnstableCurrent_Delayed_Damage : public CDOTA_Buff
{
public:
	float strike_damage; // 0x1338	
	float strike_slow_duration; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Razor_StaticLink : public CDOTA_Buff
{
public:
	float flSmoothness; // 0x1338	
	float drain_duration; // 0x133c	
	int32_t drain_rate; // 0x1340	
	int32_t drain_range; // 0x1344	
	int32_t drain_range_buffer; // 0x1348	
	CHandle< CBaseEntity > m_hTarget; // 0x134c	
	int32_t m_iTotalDrainAmount; // 0x1350	
	int32_t pull_speed; // 0x1354	
	int32_t min_pull_range; // 0x1358	
	ParticleIndex_t m_iLinkIndex; // 0x135c	
	CDOTA_Buff* m_pBuffPositive; // 0x1360	
	CDOTA_Buff* m_pNegative; // 0x1368	
	GameTime_t m_flLastThinkTime; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Lancer_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Drow_Ranger_Glacier_Hilltop_Removal : public CDOTA_Buff
{
public:
	float z_speed_override; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Weaver_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Range_125 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_IngisFatuus : public CDOTA_BaseNPC_Additive
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_SpecialistsArray : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_OgreSealTotem_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Nether_Shawl : public CDOTA_Buff_Item
{
public:
	int32_t bonus_magic_resistance; // 0x1338	
	int32_t bonus_spell_amp; // 0x133c	
	int32_t bonus_armor; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Vambrace : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_MaskOfMadness : public CDOTA_Buff_Item
{
public:
	int32_t lifesteal_percent; // 0x1338	
	int32_t bonus_attack_speed; // 0x133c	
	int32_t bonus_damage; // 0x1340	
	int32_t creep_lifesteal_reduction_pct; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Perseverance : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_EmptyBottle : public CDOTA_Buff_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Marci_Grapple : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_VoidSpirit_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Pangolier_LuckyShot : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_MonkeyKing_Boundless_Strike : public CDOTABaseAbility
{
public:
	int32_t strike_cast_range; // 0x578	
	int32_t strike_radius; // 0x57c	
	ParticleIndex_t m_nFXIndex; // 0x580	
	bool m_bIsAltCastState; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Centaur_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Rubick_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_BountyHunter_WindWalk : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Miniboss_UnyieldingShield : public CDOTA_Buff
{
public:
	int32_t damage_absorb; // 0x1338	
	float regen_per_second; // 0x133c	
	float regen_bonus_per_death; // 0x1340	
	int32_t m_nDamageAbsorbed; // 0x1344	
	GameTime_t m_timeLastTick; // 0x1348	
	ParticleIndex_t nFXIndex; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slardar_Sprint : public CDOTA_Buff
{
public:
	int32_t bonus_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Necrolyte_Sadist : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lich_ChainFrost_OnDeath : public CDOTA_Buff
{
public:
	int32_t should_fire_chain_frost_on_death; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Sven_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AntiMage_ManaBreak_Slow : public CDOTA_Buff
{
public:
	int32_t move_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x508
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFilterModel : public CBaseFilter
{
public:
	CUtlSymbolLarge m_iFilterModel; // 0x500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Crystal_Maiden_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Juggernaut_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Amplify_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a28
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CIngameEvent_Diretide2020 : public CIngameEvent_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_AmoebaBoss_Summoned_Knockback : public CDOTA_Modifier_Knockback
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Angels_Demise : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x630
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_iStoredRuneType"
class CDOTA_Item_Bottomless_Chalice : public CDOTA_Item
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnChaliceStoredRuneChanged"
	int32_t m_iStoredRuneType; // 0x620	
	GameTime_t m_fStoredRuneTime; // 0x624	
	float stored_rune_duration; // 0x628	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Broom_Handle : public CDOTA_Buff_Item
{
public:
	int32_t melee_attack_range; // 0x1338	
	int32_t bonus_armor; // 0x133c	
	int32_t bonus_damage; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Mind_Breaker2 : public CDOTA_Item_Recipe_Mind_Breaker
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Diffusal_Blade2 : public CDOTA_Item_Recipe_Diffusal_Blade
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MaelstromChain : public CDOTA_Buff
{
public:
	int32_t chain_radius; // 0x1338	
	int32_t chain_strikes; // 0x133c	
	int32_t chain_damage; // 0x1340	
	float chain_delay; // 0x1344	
	int32_t m_iCurJumpCount; // 0x1348	
	Vector m_vCurTargetLoc; // 0x134c	
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Sphere : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1338	
	float bonus_health_regen; // 0x133c	
	float bonus_mana_regen; // 0x1340	
	int32_t bonus_damage; // 0x1344	
	float block_cooldown; // 0x1348	
	float upgrade_absorb_duration; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Armlet : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Radiance : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Winter_Wyvern_Winters_Curse : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TrollWarlord_Fervor : public CDOTA_Buff
{
public:
	int32_t attack_speed; // 0x1338	
	int32_t max_stacks; // 0x133c	
	int32_t extra_attack_chance_per_stack; // 0x1340	
	int32_t base_chance; // 0x1344	
	CHandle< CBaseEntity > m_hUnit; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_KeeperOfTheLight_Recall : public CDOTA_Buff
{
public:
	bool m_bWasAttacked; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_NagaSiren_Crit_Passive : public CDOTA_Buff
{
public:
	int32_t chance; // 0x1338	
	int32_t crit; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_Quas : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_Alacrity : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1338	
	int32_t bonus_damage; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Clockwerk_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lion_FingerOfDeath_Delay : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tinker_Rearm : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Jugg_Caster : public CDOTA_Buff
{
public:
	int32_t shard_damage_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Antimage_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Range_325 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x500
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPathTrack : public CPointEntity
{
public:
	CPathTrack* m_pnext; // 0x4a8	
	CPathTrack* m_pprevious; // 0x4b0	
	CPathTrack* m_paltpath; // 0x4b8	
	float m_flRadius; // 0x4c0	
	float m_length; // 0x4c4	
	CUtlSymbolLarge m_altName; // 0x4c8	
	int32_t m_nIterVal; // 0x4d0	
	TrackOrientationType_t m_eOrientationType; // 0x4d4	
	CEntityIOOutput m_OnPass; // 0x4d8	
	
	// Static fields:
	static int32_t &Get_s_nCurrIterVal(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CPathTrack")->GetStaticFields()[0]->m_pInstance);};
	static bool &Get_s_bIsIterating(){return *reinterpret_cast<bool*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CPathTrack")->GetStaticFields()[1]->m_pInstance);};
	
	// Datamap fields:
	// void InputPass; // 0x0
	// void InputEnableAlternatePath; // 0x0
	// void InputDisableAlternatePath; // 0x0
	// void InputToggleAlternatePath; // 0x0
	// void InputEnablePath; // 0x0
	// void InputDisablePath; // 0x0
	// void InputTogglePath; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_TreantMiniboss_NaturesGuise : public CDOTA_Buff
{
public:
	CountdownTimer m_RevealTimer; // 0x1338	
	CountdownTimer m_InvisAttackTimer; // 0x1350	
	CountdownTimer m_CooldownTimer; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_Elemental_Wisp_Tether_Haste : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1338	
	int32_t attack_speed; // 0x133c	
	int32_t health_regen; // 0x1340	
	int32_t status_resist; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifer_Item_Blitz_Knuckles : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Dimensional_Doorway : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Spider_Legs : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement_speed; // 0x1338	
	int32_t turn_rate; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_RingOfAquila_Aura_Bonus : public CDOTA_Buff
{
public:
	int32_t aura_bonus_armor; // 0x1338	
	float aura_mana_regen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tusk_Snowball_Movement_Friendly : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Jakiro : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Warlock_Golem_Permanent_Immolation : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Sven_StormBolt : public CDOTABaseAbility
{
public:
	int32_t vision_radius; // 0x578	
	bool m_bIsAltCastState; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tidehunter_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Agility_20 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x538
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLogicDistanceCheck : public CLogicalEntity
{
public:
	CUtlSymbolLarge m_iszEntityA; // 0x4a8	
	CUtlSymbolLarge m_iszEntityB; // 0x4b0	
	float m_flZone1Distance; // 0x4b8	
	float m_flZone2Distance; // 0x4bc	
	CEntityIOOutput m_InZone1; // 0x4c0	
	CEntityIOOutput m_InZone2; // 0x4e8	
	CEntityIOOutput m_InZone3; // 0x510	
	
	// Datamap fields:
	// void InputCheckDistance; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_TreantMiniboss_NaturesGuise_Invis : public CDOTA_Modifier_Invisible
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_Reward_HPAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Attributes : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Occult_Bracelet_Stack : public CDOTA_Buff
{
public:
	float mana_regen; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mechanical_Arm_Counter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x928
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_NoWardTrigger : public CBaseTrigger
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VoidSpirit_AetherRemnantCreepDamage : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_FurArmy_SoldierHidden : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Oracle_FatesEdict : public CDOTABaseAbility
{
public:
	bool m_bTargetIsAlly; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_EarthSpirit_Petrify : public CDOTABaseAbility
{
public:
	int32_t ally_cast_range; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Bristleback_QuillSpray : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slark_ShadowDance_Passive : public CDOTA_Buff
{
public:
	float activation_delay; // 0x1338	
	float neutral_disable; // 0x133c	
	bool m_bPendingRefresh; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	GameTime_t m_fPendingStateChangeTime; // 0x1344	
	CountdownTimer m_NeutralHitTimer; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1410
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Disruptor_Glimpse : public CDOTA_Buff
{
public:
	Vector m_PositionIndex[18]; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Rubick_FadeBolt : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pugna_NetherBlast_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Riki_SmokeScreenThinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PhantomLancer_Doppelwalk_Illusion : public CDOTA_Buff
{
public:
	float flDamageTaken; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_CrystalMaiden_FreezingField : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DrowRanger_Silence : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Antimage_DampenMagic_Aura : public CDOTA_Buff
{
public:
	int32_t shard_radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Muerta_PartingShot_PhysicalBodyDebuff : public CDOTA_Modifier_Stunned
{
public:
	CHandle< CBaseEntity > m_hSoulEntity; // 0x1338	
	int32_t damage_reduction_percent; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Jungle_Varmint_Dive : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x520
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_bDisabled"
// MNetworkVarNames "int m_nResolutionX"
// MNetworkVarNames "int m_nResolutionY"
// MNetworkVarNames "string_t m_szLayoutFileName"
// MNetworkVarNames "string_t m_RenderAttrName"
// MNetworkVarNames "CHandle< CBaseModelEntity > m_TargetEntities"
// MNetworkVarNames "int m_nTargetChangeCount"
// MNetworkVarNames "string_t m_vecCSSClasses"
class CInfoOffscreenPanoramaTexture : public CPointEntity
{
public:
	// MNetworkEnable
	bool m_bDisabled; // 0x4a8	
private:
	[[maybe_unused]] uint8_t __pad04a9[0x3]; // 0x4a9
public:
	// MNetworkEnable
	int32_t m_nResolutionX; // 0x4ac	
	// MNetworkEnable
	int32_t m_nResolutionY; // 0x4b0	
private:
	[[maybe_unused]] uint8_t __pad04b4[0x4]; // 0x4b4
public:
	// MNetworkEnable
	CUtlSymbolLarge m_szLayoutFileName; // 0x4b8	
	// MNetworkEnable
	CUtlSymbolLarge m_RenderAttrName; // 0x4c0	
	// MNetworkEnable
	CNetworkUtlVectorBase< CHandle< CBaseModelEntity > > m_TargetEntities; // 0x4c8	
	// MNetworkEnable
	int32_t m_nTargetChangeCount; // 0x4e0	
private:
	[[maybe_unused]] uint8_t __pad04e4[0x4]; // 0x4e4
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< CUtlSymbolLarge > m_vecCSSClasses; // 0x4e8	
	CUtlSymbolLarge m_szTargetsName; // 0x500	
	CUtlVector< CHandle< CBaseModelEntity > > m_AdditionalTargetEntities; // 0x508	
	
	// Datamap fields:
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
	// CUtlSymbolLarge InputAddCSSClass; // 0x0
	// CUtlSymbolLarge InputRemoveCSSClass; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ursa_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Riki_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Mana_Break_15 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cleave_130 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Grimstroke_InkCreature : public CDOTA_BaseNPC
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1870
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Effigy_BattleCup : public CDOTA_BaseNPC_Building
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PineCone_ShieldBash_Crit : public CDOTA_Buff
{
public:
	int32_t crit_mult; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_LootDrop_Thinker : public CDOTA_Buff
{
public:
	bool m_bAutoPickup; // 0x1338	
	bool m_bOnlyPlayerHeroPickup; // 0x1339	
	bool m_bCreepHeroPickup; // 0x133a	
	bool m_bAutoUse; // 0x133b	
	bool m_bFlying; // 0x133c	
	bool m_bUseSpawnAnim; // 0x133d	
	bool m_bAutoTeleport; // 0x133e	
private:
	[[maybe_unused]] uint8_t __pad133f[0x1]; // 0x133f
public:
	GameTime_t m_flKnockbackStartTime; // 0x1340	
	GameTime_t m_flKnockbackEndTime; // 0x1344	
	float m_flKnockbackHeight; // 0x1348	
	float m_flInitialHeight; // 0x134c	
	float m_flKnockbackDuration; // 0x1350	
	float m_flEndHeight; // 0x1354	
	Vector m_vStartPos; // 0x1358	
	Vector m_vEndPos; // 0x1364	
	float m_fPickupRadius; // 0x1370	
private:
	[[maybe_unused]] uint8_t __pad1374[0x4]; // 0x1374
public:
	CUtlString m_strTransitionEffect; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Illusionsts_Cape : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Phoenix_FireSpirits : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Elder_Titan_EarthSplitter : public CDOTABaseAbility
{
public:
	int32_t crack_width; // 0x578	
	int32_t crack_distance; // 0x57c	
	int32_t speed; // 0x580	
	int32_t vision_width; // 0x584	
	float crack_time; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Jakiro_Macropyre_Ice_EdgeThinker : public CDOTA_Buff
{
public:
	Vector m_vPathDir; // 0x1338	
	int32_t ice_edge_path_radius; // 0x1344	
	int32_t cast_range; // 0x1348	
	float ice_edge_linger_duration; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TemplarAssassin_Meld : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1338	
	bool launched_attack; // 0x133c	
private:
	[[maybe_unused]] uint8_t __pad133d[0x3]; // 0x133d
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1340	
	int32_t m_nAttackRecord; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DeathProphet_SpiritSiphon_Slow : public CDOTA_Buff
{
public:
	int32_t movement_steal; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Venomancer_Latent_Poison : public CDOTA_Buff
{
public:
	int32_t duration_damage; // 0x1338	
	int32_t movement_slow; // 0x133c	
	int32_t explosion_damage; // 0x1340	
	float explosion_stun_duration; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lion_Voodoo : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Sniper_Headshot : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Puck_DreamCoil_Thinker : public CDOTA_Buff
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hLinkedEntities; // 0x1338	
	int32_t coil_radius; // 0x1350	
	int32_t coil_break_radius; // 0x1354	
	int32_t coil_initial_damage; // 0x1358	
	float coil_stun_duration; // 0x135c	
	float coil_duration; // 0x1360	
	int32_t coil_break_damage; // 0x1364	
	CUtlVector< ParticleIndex_t > m_FXIndex; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AncientRockGolem_Weakening_Aura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_nMode"
// MNetworkVarNames "Vector m_vBoxSize"
// MNetworkVarNames "bool m_bEnabled"
class CInfoVisibilityBox : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x4]; // 0x4a8
public:
	// MNetworkEnable
	int32_t m_nMode; // 0x4ac	
	// MNetworkEnable
	Vector m_vBoxSize; // 0x4b0	
	// MNetworkEnable
	bool m_bEnabled; // 0x4bc	
	
	// Datamap fields:
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_DragonKnight_BreatheFire : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nPreviewFX; // 0x578	
	int32_t start_radius; // 0x57c	
	int32_t end_radius; // 0x580	
	Vector m_vStartPos; // 0x584	
	GameTime_t m_fStartTime; // 0x590	
	float m_fTotalTime; // 0x594	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Treant_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Sand_King_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Sand_King_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lone_Druid_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_100 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Damage_70 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Mana_Break_20 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CIngameEvent_FM2016 : public CIngameEvent_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Riki : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Creep_Irresolute : public CDOTA_Buff
{
public:
	int32_t hero_damage_penalty; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Creature_Venomancer_PoisonNova : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Creature_Full_Avoidance : public CDOTA_Buff
{
public:
	float m_flOriginalAvoidance; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_MaskOfDispair : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Helm_Of_The_Undying : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1338	
	float duration; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_RingOfTarrasque : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Black_King_Bar : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
	int32_t bonus_damage; // 0x133c	
	float duration; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ForceStaff : public CDOTA_Buff
{
public:
	Vector m_vDirection; // 0x1338	
	float m_flEndTime; // 0x1344	
	float m_flCurTime; // 0x1348	
	float push_length; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DarkWillow_ShadowRealm : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_ChaosMeteor_AD : public CDOTA_Ability_Invoker_ChaosMeteor
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_NightStalker_Void : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1338	
	int32_t attackspeed_slow; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Clinkz_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FacelessVoid_Timelock_TimeWalk_Proc_Marker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lion_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Riki_SmokeScreen : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Morphling_Morph_Str : public CDOTA_Buff
{
public:
	int32_t mana_cost; // 0x1338	
	int32_t points_per_tick; // 0x133c	
	float morph_cooldown; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DrowRanger_WaveOfSilence_Buff : public CDOTA_Buff
{
public:
	int32_t bonus_movespeed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Sven_GodsStrength : public CDOTA_Buff
{
public:
	int32_t gods_strength_damage; // 0x1338	
	int32_t bonus_slow_resistance; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BattleCupEffigy : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Filler_Buff_Icon : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoTargetServerOnly : public CServerOnlyPointEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_Ascension_PlasmaField : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Naga_Siren_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bloodseeker_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Lifesteal_20 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x678
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CSoundOpvarSetPathCornerEntity : public CSoundOpvarSetPointEntity
{
private:
	[[maybe_unused]] uint8_t __pad0650[0x18]; // 0x650
public:
	float m_flDistMinSqr; // 0x668	
	float m_flDistMaxSqr; // 0x66c	
	CUtlSymbolLarge m_iszPathCornerEntityName; // 0x670	
	
	// Datamap fields:
	// void CSoundOpvarSetPathCornerEntitySetOpvarThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18e8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_AghsFort_Creature_Batrider : public CDOTA_BaseNPC_Creature
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Creature_Phoenix_Sun : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1338	
	float stun_duration; // 0x133c	
	int32_t max_hero_attacks; // 0x1340	
	int32_t max_hero_attacks_scepter; // 0x1344	
	int32_t max_hero_attacks_required; // 0x1348	
	float caster_life_pct; // 0x134c	
	CHandle< CBaseEntity > m_hSecondaryTarget; // 0x1350	
	int32_t m_iAttackCount; // 0x1354	
	int32_t creep_attacks_count; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Ancient_Perseverance : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Craggy_Coat : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_PocketTower : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_UltimateScepter : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_PlateMail : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Visage_Scepter : public CDOTA_Buff
{
public:
	GameTime_t m_flReadyTime; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SpiritBreaker_ChargeOfDarkness : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1338	
	CHandle< CBaseEntity > m_hTarget; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Clinkz_WindWalk : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hSkeletonSummons; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Rattletrap_Hookshot : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x578	
	Vector m_vProjectileVelocity; // 0x57c	
	bool m_bRetract; // 0x588	
private:
	[[maybe_unused]] uint8_t __pad0589[0xb]; // 0x589
public:
	CHandle< CBaseEntity > m_hSourceCaster; // 0x594	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoCourierSpawnRadiant1 : public CPointEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Kunkka_Tidebringer : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Zuus_Static_Field : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Morphling_AdaptiveStrike_Agi : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Axe_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nevermore_Shadowraze2 : public CDOTA_Ability_Nevermore_Shadowraze
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pudge_Swallow : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Treant_11 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dazzle_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Queen_Of_Pain_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Movement_Speed_65 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1798
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Invoker_Forged_Spirit : public CDOTA_BaseNPC_Creep
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Venomancer : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1770
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_nTargetType"
// MNetworkVarNames "int m_nTargetFlags"
class CDOTA_NPC_WitchDoctor_Ward : public CDOTA_BaseNPC_Additive
{
public:
	// MNetworkEnable
	int32_t m_nTargetType; // 0x1768	
	// MNetworkEnable
	int32_t m_nTargetFlags; // 0x176c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Attack_Base_Damage : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_ManaclesOfPower : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Diadem : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Necronomicon : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
	float bonus_mana_regen; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x648
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_TeleportScroll : public CDOTA_Item
{
public:
	CHandle< CBaseEntity > m_hTeleportTarget; // 0x620	
	ParticleIndex_t m_nFXOrigin; // 0x624	
	ParticleIndex_t m_nFXDestination; // 0x628	
	Vector m_vDestination; // 0x62c	
	int32_t m_iMinDistance; // 0x638	
	float m_flBaseTeleportTime; // 0x63c	
	float m_flExtraTeleportTime; // 0x640	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_NullTalisman : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
	int32_t bonus_agility; // 0x133c	
	int32_t bonus_intellect; // 0x1340	
	float bonus_mana_regen; // 0x1344	
	int32_t bonus_max_mana_percentage; // 0x1348	
	int32_t clock_time; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Snapfire_Magma_Thinker : public CDOTA_Buff
{
public:
	float burn_interval; // 0x1338	
	int32_t impact_radius; // 0x133c	
	int32_t move_slow_pct; // 0x1340	
	float burn_linger_duration; // 0x1344	
	ParticleIndex_t m_nPathEffectIndex; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Phoenix_SupernovaHiding : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Terrorblade_Sunder : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Terrorblade_Demon_Zeal : public CDOTA_Buff
{
public:
	int32_t berserk_bonus_attack_speed; // 0x1338	
	int32_t berserk_bonus_movement_speed; // 0x133c	
	int32_t berserk_bonus_armor; // 0x1340	
	int32_t reflection_pct; // 0x1344	
	int32_t melee_bonus; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Skywrath_Mystic_Flare_Aura_Effect : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Slark_EssenceShift : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Disruptor_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Chen_TestOfFaithTeleport : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Leshrac_Pulse_Nova : public CDOTA_Buff
{
public:
	bool m_bFirst; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0xb]; // 0x1339
public:
	int32_t damage_resistance; // 0x1344	
	int32_t bonus_movespeed; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Roshan_Devotion : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lion_Voodoo : public CDOTA_Modifier_Hexed
{
public:
	int32_t movespeed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Necrolyte_Heartstopper_Aura : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1338	
	bool m_bStackCountChanged; // 0x133c	
private:
	[[maybe_unused]] uint8_t __pad133d[0x3]; // 0x133d
public:
	CUtlVector< GameTime_t > m_fStackExpireTimes; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_HoldoutCullingBlade : public CDOTA_Buff
{
public:
	float m_flTotalTime; // 0x1338	
	float m_flInitialVelocity; // 0x133c	
	Vector m_vStartPosition; // 0x1340	
	Vector m_vTargetHorizontalDirection; // 0x134c	
	float m_flCurrentTimeHoriz; // 0x1358	
	float m_flCurrentTimeVert; // 0x135c	
	bool m_bInterrupted; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1361[0x3]; // 0x1361
public:
	int32_t leap_distance; // 0x1364	
	int32_t leap_radius; // 0x1368	
	float leap_speed; // 0x136c	
	float leap_acceleration; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Earthshaker_Fissure_Stun : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DisableTauntAnimationCancel : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AlphaWolf_CriticalStrike : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Visage_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Templar_Assassin_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Abaddon_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Nyx_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lifestealer_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Lifesteal_12 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Status_Resistance_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'entity2')
// Alignment: 8
// Size: 0x78
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int32 m_nameStringableIndex"
class CEntityIdentity
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x14]; // 0x0
public:
	// MNetworkEnable
	// MNetworkChangeCallback "entityIdentityNameChanged"
	int32_t m_nameStringableIndex; // 0x14	
	CUtlSymbolLarge m_name; // 0x18	
	CUtlSymbolLarge m_designerName; // 0x20	
private:
	[[maybe_unused]] uint8_t __pad0028[0x8]; // 0x28
public:
	uint32_t m_flags; // 0x30	
private:
	[[maybe_unused]] uint8_t __pad0034[0x4]; // 0x34
public:
	// MNetworkDisable
	WorldGroupId_t m_worldGroupId; // 0x38	
	uint32_t m_fDataObjectTypes; // 0x3c	
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	ChangeAccessorFieldPathIndex_t m_PathIndex; // 0x40	
private:
	[[maybe_unused]] uint8_t __pad0042[0x16]; // 0x42
public:
	CEntityIdentity* m_pPrev; // 0x58	
	CEntityIdentity* m_pNext; // 0x60	
	CEntityIdentity* m_pPrevByClass; // 0x68	
	CEntityIdentity* m_pNextByClass; // 0x70	
	
	// Datamap fields:
	// void m_pAttributes; // 0x48
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Skywrath_Mage : public CDOTA_BaseNPC_Hero
{
public:
	bool m_bArcanaEquipped; // 0x1d98	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BlackDrake_MagicAmplification_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x808
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CGunTarget : public CBaseToggle
{
public:
	bool m_on; // 0x7d8	
private:
	[[maybe_unused]] uint8_t __pad07d9[0x3]; // 0x7d9
public:
	CHandle< CBaseEntity > m_hTargetEnt; // 0x7dc	
	CEntityIOOutput m_OnDeath; // 0x7e0	
	
	// Datamap fields:
	// void CGunTargetNext; // 0x0
	// void CGunTargetStart; // 0x0
	// void CGunTargetWait; // 0x0
	// void InputStart; // 0x0
	// void InputStop; // 0x0
	// void InputToggle; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Ascension_MagneticField_Thinker_Evasion : public CDOTA_Buff
{
private:
	[[maybe_unused]] uint8_t __pad1338[0x8]; // 0x1338
public:
	int32_t radius; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Misericorde : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pogo_Stick_Active : public CDOTA_Buff
{
public:
	float m_flTotalTime; // 0x1338	
	float m_flInitialVelocity; // 0x133c	
	Vector m_vStartPosition; // 0x1340	
	Vector m_vTargetHorizontalDirection; // 0x134c	
	float m_flCurrentTimeHoriz; // 0x1358	
	float m_flCurrentTimeVert; // 0x135c	
	bool m_bInterrupted; // 0x1360	
private:
	[[maybe_unused]] uint8_t __pad1361[0x3]; // 0x1361
public:
	int32_t leap_distance; // 0x1364	
	float leap_speed; // 0x1368	
	float leap_acceleration; // 0x136c	
	int32_t leap_radius; // 0x1370	
	float leap_bonus_duration; // 0x1374	
	bool m_bLaunched; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_AsceticCapBuff : public CDOTA_Buff
{
public:
	int32_t status_resistance; // 0x1338	
	int32_t slow_resistance; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Grove_Bow : public CDOTA_Buff_Item
{
public:
	int32_t attack_range_bonus; // 0x1338	
	int32_t attack_speed_bonus; // 0x133c	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Assault_Cuirass_Negative_Armor_Aura : public CDOTA_Buff_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Cyclone : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pangolier_Swashbuckle_Attack : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Legion_Commander_MomentOfCourage : public CDOTA_Buff
{
public:
	int32_t trigger_chance; // 0x1338	
	float buff_duration; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Elder_Titan_NaturalOrder_Spirit : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nyx_Assassin_SpikedCarapace : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_LoneDruid_SpiritBear_Fetch_Damage : public CDOTA_Buff
{
public:
	int32_t max_ticks; // 0x1338	
	float damage; // 0x133c	
	float duration; // 0x1340	
	float tick_rate; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Silencer_LastWord : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Gyrocopter_Rocket_Barrage : public CDOTA_Buff
{
public:
	int32_t rocket_damage; // 0x1338	
	int32_t bonus_movement_speed; // 0x133c	
	int32_t slow_resistance; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Omniknight_GuardianAngel : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Clinkz_SearingArrows : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Furion_Sprout_Blind_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nian_Apocalypse : public CDOTABaseAbility
{
public:
	int32_t area_of_effect; // 0x578	
	ParticleIndex_t m_nfxIndex_roar; // 0x57c	
	float fire_interval; // 0x580	
	float delay; // 0x584	
	float target_range; // 0x588	
private:
	[[maybe_unused]] uint8_t __pad058c[0x4]; // 0x58c
public:
	CountdownTimer m_ctTimer; // 0x590	
	float m_flTiming; // 0x5a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_WitchDoctor_MaledictDoT : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tidehunter_SmashAttack : public CDOTA_Buff
{
public:
	int32_t attack_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AntiMage_ManaBreak : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CSoundEventParameter : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x8]; // 0x4a8
public:
	CUtlSymbolLarge m_iszParamName; // 0x4b0	
	float m_flFloatValue; // 0x4b8	
	
	// Datamap fields:
	// uint64_t InputSetEventGuid; // 0x0
	// CUtlSymbolLarge InputSetParamName; // 0x0
	// float InputSetFloatValue; // 0x0
	// void m_nGUID; // 0x4a8
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Healing_Campfire : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Treant_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Mirana_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Mirana_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Nevermore_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Sand_King : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Kunkka_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Faceless_Void_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ancient_Apparition_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ForestTrollHighPriest_ManaAura_Bonus : public CDOTA_Buff
{
public:
	float mana_regen; // 0x1338	
	int32_t allow_multiple; // 0x133c	
	int32_t m_nAttributes; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x780
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float m_flLastSpawnTime"
// MNetworkVarNames "float m_flNextSpawnTime"
// MNetworkVarNames "bool m_bNextRuneIsWater"
class CDOTA_Item_RuneSpawner_Powerup : public CBaseAnimatingActivity
{
public:
	CUtlSymbolLarge m_szPosition; // 0x768	
	// MNetworkEnable
	float m_flLastSpawnTime; // 0x770	
	// MNetworkEnable
	float m_flNextSpawnTime; // 0x774	
	// MNetworkEnable
	bool m_bNextRuneIsWater; // 0x778	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Wizard_Glass : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Vanguard : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Dagon_Upgraded3 : public CDOTA_Item_Dagon_Upgraded
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PrimalBeast_Onslaught_Movement : public CDOTA_Buff
{
public:
	float tick_interval; // 0x1338	
	float charge_speed; // 0x133c	
	float movement_turn_rate; // 0x1340	
	int32_t knockback_radius; // 0x1344	
	float knockback_distance; // 0x1348	
	int32_t knockback_damage; // 0x134c	
	int32_t m_nEnemyHeroesHit; // 0x1350	
	float m_flFacingTarget; // 0x1354	
	ParticleIndex_t m_nFXIndex; // 0x1358	
private:
	[[maybe_unused]] uint8_t __pad135c[0x4]; // 0x135c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hHitEntities; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Terrorblade_Metamorphosis : public CDOTABaseAbility
{
public:
	bool m_bBlockMetamorph; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Slark_Fish_Bait : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_NagaSiren_SongOfTheSiren_Healing_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t m_nAffectedAllies; // 0x133c	
	CUtlVector< CHandle< CBaseEntity > > m_vhAffectedHeroes; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Rubick_Hidden3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ChaosKnight_Phantasm_Illusion_Shard : public CDOTA_Modifier_ChaosKnight_Phantasm_Illusion
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Shadow_Demon_Disruption_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ForgedSpirit_MeltingStrike : public CDOTA_Buff
{
public:
	float duration; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_NightStalker_Darkness : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_TemplarAssassin_PsiBlades : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Pugna_Decrepify : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tidehunter_ArmOfTheDeep : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x578	
	float duration; // 0x590	
	int32_t speed; // 0x594	
	float damage; // 0x598	
	float range; // 0x59c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Kunkka_Torrent_Storm : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Sven_Stormbolt_Hide : public CDOTA_Buff
{
public:
	int32_t m_nHandle; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Spawnlord_Aura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x798
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CSimpleMarkupVolumeTagged : public CMarkupVolumeTagged
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_Ascension_Silence : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nPreviewFX; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Spirit_Breaker_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Range_275 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Base_Damage_20 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Corruption_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_275 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_800 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CIngameEvent_FM2015 : public CIngameEvent_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x868
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTANewPlayerPoolGameMode : public CDOTABaseGameMode
{
public:
	int32_t m_nHighestLevelInCurrentGame; // 0x7c8	
private:
	[[maybe_unused]] uint8_t __pad07cc[0x4c]; // 0x7cc
public:
	CUtlVector< float32 > m_ExtraMeleeCreepTimes; // 0x818	
	CUtlVector< float32 > m_ExtraRangedCreepTimes; // 0x830	
	CUtlVector< float32 > m_ExtraSiegeCreepTimes; // 0x848	
	bool m_bInOvertime; // 0x860	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Undying_Tombstone : public CDOTA_BaseNPC_Additive
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FelBeast_Haunt : public CDOTA_Buff
{
public:
	int32_t damage_per_second; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SatyrSoulstealer_ManaBurn : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ghost_FrostAttack : public CDOTA_Buff
{
public:
	float duration; // 0x1338	
	int32_t movespeed_slow; // 0x133c	
	int32_t attackspeed_slow; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_Aziyog_Underlord_Portal_FX : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nPortalAmbientFX; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_RockGolem_Avalanche_Stun : public CDOTA_Modifier_Stunned
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x780
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float m_flLastSpawnTime"
// MNetworkVarNames "float m_flNextSpawnTime"
class CDOTA_Item_RuneSpawner_XP : public CBaseAnimatingActivity
{
public:
	CUtlSymbolLarge m_szPosition; // 0x768	
	int32_t m_nDotaTeam; // 0x770	
	// MNetworkEnable
	float m_flLastSpawnTime; // 0x774	
	// MNetworkEnable
	float m_flNextSpawnTime; // 0x778	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Roshans_Banner_HP : public CDOTA_Buff
{
public:
	int32_t health; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Slime_Vial : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Gloves_Of_Travel : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Infused_Raindrop : public CDOTA_Buff_Item
{
public:
	float mana_regen; // 0x1338	
	float bonus_armor; // 0x133c	
	int32_t bonus_magical_armor; // 0x1340	
	int32_t magic_damage_block; // 0x1344	
	int32_t min_damage; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_VitalityBooster : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Elder_Titan_EarthSplitter_Thinker : public CDOTA_Buff
{
public:
	int32_t crack_width; // 0x1338	
	int32_t damage_pct; // 0x133c	
	float slow_duration; // 0x1340	
	float slow_duration_scepter; // 0x1344	
	CDOTA_Buff* m_pParentModifier; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tusk_WalrusPunch : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bristleback_ViscousNasalGoo : public CDOTA_Buff
{
public:
	float base_armor; // 0x1338	
	float armor_per_stack; // 0x133c	
	int32_t base_move_slow; // 0x1340	
	int32_t move_slow_per_stack; // 0x1344	
	int32_t stack_limit; // 0x1348	
	ParticleIndex_t m_nFXStackIndex; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CHandle< CBaseEntity> m_hTarget"
class CDOTA_Ability_Wisp_Tether : public CDOTABaseAbility
{
private:
	[[maybe_unused]] uint8_t __pad0578[0x10]; // 0x578
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTarget; // 0x588	
	Vector m_vProjectileLocation; // 0x58c	
	bool m_bProjectileActive; // 0x598	
private:
	[[maybe_unused]] uint8_t __pad0599[0x3]; // 0x599
public:
	int32_t latch_distance; // 0x59c	
	int32_t m_iProjectileIndex; // 0x5a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Treant_NaturesGrasp_Latch_Thinker : public CDOTA_Buff
{
public:
	int32_t latch_range; // 0x1338	
	int32_t latch_vision; // 0x133c	
	float initial_latch_delay; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x8]; // 0x1344
public:
	bool m_bBonus; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lycan_FeralImpulse_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Obsidian_Destroyer_EssenceAura : public CDOTA_Buff
{
public:
	int32_t bonus_mana; // 0x1338	
	int32_t radius; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Viper_ViperStrike_Slow : public CDOTA_Buff
{
public:
	int32_t bonus_movement_speed; // 0x1338	
	int32_t bonus_attack_speed; // 0x133c	
	int32_t damage; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Beastmaster_InnerBeast : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Roshan_Teleport : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndexStart; // 0x578	
	ParticleIndex_t m_nFXIndexEnd; // 0x57c	
	ParticleIndex_t m_nFXIndexEndTeam; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Enigma_BlackHole : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hThinker; // 0x578	
	CHandle< CBaseEntity > m_hThinker2; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lich_FrostAura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bane_Nightmare_Invulnerable : public CDOTA_Modifier_Invulnerable
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tutorial_Disable_Healing : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Treant_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Earthshaker : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Riki_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PolarFurbolgUrsaWarrior_ThunderClap : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1338	
	int32_t attackspeed_slow; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13b8
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ContextualTips : public CDOTA_Buff
{
public:
	bool m_bAllEnemiesBots; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	GameTime_t m_flGloblLastTipSendTime; // 0x133c	
	GameTime_t m_flLastEnemyHeroDamageTime; // 0x1340	
	GameTime_t m_flLastEnemyHeroVisibleTime; // 0x1344	
	
	// Static fields:
	static float &Get_k_flParentDamageTrackingWindow(){return *reinterpret_cast<float*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_Modifier_ContextualTips")->GetStaticFields()[0]->m_pInstance);};
	static float &Get_k_flGlobalTipCooldown(){return *reinterpret_cast<float*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_Modifier_ContextualTips")->GetStaticFields()[1]->m_pInstance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x778
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CScriptNavBlocker : public CFuncNavBlocker
{
public:
	Vector m_vExtent; // 0x768	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x770
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CConstraintAnchor : public CBaseAnimatingActivity
{
public:
	float m_massScale; // 0x768	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Heavy_Blade : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Mind_Breaker : public CDOTA_Buff_Item
{
public:
	int32_t magic_damage; // 0x1338	
	int32_t attack_speed; // 0x133c	
	float duration; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_SuperBlinkDagger : public CDOTA_Modifier_Item_BlinkDagger
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_BootsOfTravel_2 : public CDOTA_Modifier_Item_BootsOfTravel
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Grimstroke_InkCreature : public CDOTABaseAbility
{
public:
	float spawn_time; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tusk_WalrusPunch_AirTime : public CDOTA_Buff
{
public:
	int32_t hp_threshold; // 0x1338	
	float m_flStartZ; // 0x133c	
	float m_flCurTime; // 0x1340	
	float m_flOldPitch; // 0x1344	
	QAngle m_qRotation; // 0x1348	
	int32_t m_nRotations; // 0x1354	
	Vector m_vDirection; // 0x1358	
	float m_flEndTime; // 0x1364	
	float air_time; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Slark_Depth_Shroud : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Brewmaster_PermanentImmolation_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_Tornado_AD : public CDOTA_Ability_Invoker_Tornado
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Batrider_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pugna_NetherWard_Aura : public CDOTA_Buff
{
public:
	float mana_regen; // 0x1338	
	float spell_damage_reduction; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nian_Frenzy : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
	int32_t damage_radius; // 0x133c	
	int32_t stun_radius; // 0x1340	
	float dive_distance; // 0x1344	
	float initial_rise_time; // 0x1348	
	float right_swipe_time; // 0x134c	
	float left_swipe_time; // 0x1350	
	float knockdown_duration; // 0x1354	
	float stun_duration; // 0x1358	
	int32_t m_nTickCounter; // 0x135c	
	CUtlVector< CHandle< CBaseEntity > > m_hEnemies; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Kunkka_XMarksTheSpot : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hThinker; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lina_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Bloodseeker_Thirst : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Drow_Ranger_Multishot : public CDOTA_Buff
{
public:
	int32_t m_iArrowCount; // 0x1338	
	Vector m_vOriginalTarget; // 0x133c	
	int32_t arrow_width; // 0x1348	
	float arrow_speed; // 0x134c	
	float arrow_range_multiplier; // 0x1350	
	int32_t wave_count; // 0x1354	
	int32_t arrow_count_per_wave; // 0x1358	
	int32_t arrow_angle; // 0x135c	
	int32_t m_iLoopCount; // 0x1360	
	float m_flInterval; // 0x1364	
	float m_flCycleDelay; // 0x1368	
	float m_flTimeWaste; // 0x136c	
	GameTime_t m_flExpectedTime; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SandKing_SandStorm : public CDOTA_Modifier_PersistentInvisibility
{
public:
	int32_t sand_storm_radius; // 0x1348	
	int32_t sand_storm_damage; // 0x134c	
	float damage_tick_rate; // 0x1350	
	GameTime_t m_flLastDamageTime; // 0x1354	
	ParticleIndex_t m_nSandStormParticleIndex1; // 0x1358	
	ParticleIndex_t m_nSandStormParticleIndex2; // 0x135c	
private:
	[[maybe_unused]] uint8_t __pad1360[0x8]; // 0x1360
public:
	CHandle< CBaseEntity > m_hThinker; // 0x1368	
	int32_t sand_storm_move_speed; // 0x136c	
	Vector vecSpawnPos; // 0x1370	
	int32_t m_iExplosionQuadrant; // 0x137c	
	int32_t m_iExplosionDistance; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TrueSightFoW : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_HillTroll_Rally : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_SatyrSoulstealer_ManaBurn : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > hNeutralTarget; // 0x578	
	GameTime_t m_flTimeBuffer; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_EnragedWildkin_Hurricane : public CDOTABaseAbility
{
public:
	float distance; // 0x578	
	Vector m_vEndpoint; // 0x57c	
	Vector m_vDashPosition; // 0x588	
	Vector m_vFacePosition; // 0x594	
	Vector m_vTravelDir; // 0x5a0	
	float m_fTravelDistance; // 0x5ac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tornado_Tempest : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bounty_Hunter_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Doom_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bane_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Shadow_Demon_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Winter_Wyvern_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tinker_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Slark_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Gold_Income_60 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Treant : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BlueDragonspawnSorcerer_Evasion : public CDOTA_Buff
{
public:
	int32_t evasion_chance_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x798
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CMarkupVolumeTagged_Nav : public CMarkupVolumeTagged
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Avianas_Feather : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Ceremonial_Robe : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Cheese : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_SangeAndYasha : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_UltimateScepter_2 : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_RodOfAtos_Debuff : public CDOTA_Modifier_Rooted
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VoidSpirit_AstralStep_Debuff : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXStackIndex; // 0x1338	
	int32_t movement_slow_pct; // 0x133c	
	int32_t pop_damage; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Terrorblade_Metamorphosis : public CDOTA_Buff
{
public:
	float base_attack_time; // 0x1338	
	int32_t bonus_range; // 0x133c	
	int32_t m_iOriginalAttackCapabilities; // 0x1340	
	int32_t bonus_damage; // 0x1344	
	int32_t speed_loss; // 0x1348	
	int32_t attack_projectile_speed_bonus; // 0x134c	
	CUtlSymbolLarge m_iszRangedAttackEffect; // 0x1350	
	CUtlSymbolLarge m_iszOriginalRangedAttackEffect; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Legion_Commander_OverwhelmingOdds : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Treant_NaturesGuise_NearTreeDisplay : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Brewmaster_ThunderClap : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Spectre_SpectralDagger : public CDOTABaseAbility
{
public:
	float dagger_path_duration; // 0x578	
	float hero_path_duration; // 0x57c	
	float m_fCreateInterval; // 0x580	
	GameTime_t m_fLastCreate; // 0x584	
	Vector m_vecLastPosition; // 0x588	
	bool m_bIsTrackingProjectile; // 0x594	
private:
	[[maybe_unused]] uint8_t __pad0595[0x3]; // 0x595
public:
	CUtlVector< CHandle< CBaseEntity > > m_hTrackingProjectileHits; // 0x598	
	CUtlVector< CHandle< CBaseEntity > > m_hUnitsHit; // 0x5b0	
	bool m_bIsThinkHit; // 0x5c8	
private:
	[[maybe_unused]] uint8_t __pad05c9[0x3]; // 0x5c9
public:
	CHandle< CBaseEntity > m_hTrackingTarget; // 0x5cc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Clockwerk_RocketFlare_Thinker : public CDOTA_Buff
{
public:
	float radius; // 0x1338	
	float duration; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Roshan_DevotionAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lion_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa20
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInstancedSceneEntity : public CSceneEntity
{
public:
	CHandle< CBaseEntity > m_hOwner; // 0xa08	
	bool m_bHadOwner; // 0xa0c	
private:
	[[maybe_unused]] uint8_t __pad0a0d[0x3]; // 0xa0d
public:
	float m_flPostSpeakDelay; // 0xa10	
	float m_flPreDelay; // 0xa14	
	bool m_bIsBackground; // 0xa18	
	bool m_bRemoveOnCompletion; // 0xa19	
private:
	[[maybe_unused]] uint8_t __pad0a1a[0x2]; // 0xa1a
public:
	CHandle< CBaseEntity > m_hTarget; // 0xa1c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dragon_Knight_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Abaddon_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x760
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLightEnvironmentEntity : public CLightDirectionalEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_MP_Regen : public CDOTA_Buff
{
public:
	float value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Fortitude_Ring_Active : public CDOTA_Buff
{
public:
	int32_t damage_reduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Titan_Sliver : public CDOTA_Buff_Item
{
public:
	int32_t base_attack_damage; // 0x1338	
	int32_t magic_resistance; // 0x133c	
	int32_t status_resistance; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Enchanted_Mango : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Orb_of_Venom : public CDOTA_Buff_Item
{
public:
	int32_t poison_movement_speed_melee; // 0x1338	
	int32_t poison_movement_speed_range; // 0x133c	
	float poison_duration; // 0x1340	
	float poison_damage_melee; // 0x1344	
	float poison_damage_range; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Skadi : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1338	
	int32_t bonus_health; // 0x133c	
	int32_t bonus_mana; // 0x1340	
	float cold_duration; // 0x1344	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_SobiMask : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Quarterstaff : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_PhaseBoots : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement_speed; // 0x1338	
	int32_t bonus_damage_melee; // 0x133c	
	int32_t bonus_damage_range; // 0x1340	
	int32_t damage_block_melee; // 0x1344	
	int32_t damage_block_ranged; // 0x1348	
	int32_t block_chance; // 0x134c	
	int32_t bonus_attack_speed; // 0x1350	
	int32_t bonus_armor; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mars_ArenaOfBlood_Marker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Phoenix_IcarusDive : public CDOTABaseAbility
{
public:
	int32_t hp_cost_perc; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_TrollWarlord_Whirling_Axes_Melee : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hAxes; // 0x578	
	int32_t m_nAxeIdx; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Rubick_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Alchemist_AcidSpray_Thinker : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
	int32_t armor_allies; // 0x133c	
	int32_t radius; // 0x1340	
	ParticleIndex_t m_nFXIndex; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Huskar_Life_Break_Taunt : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hZombieTarget; // 0x1338	
	bool m_bDidSetAttackTarget; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Furion_WrathOfNature_BuffCounter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_CrystalMaiden_FreezingField_Tracker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_BookIntelligence : public CDOTA_Item_Book
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4c8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLogicActiveAutosave : public CLogicAutosave
{
public:
	int32_t m_TriggerHitPoints; // 0x4b8	
	float m_flTimeToTrigger; // 0x4bc	
	GameTime_t m_flStartTime; // 0x4c0	
	float m_flDangerousTime; // 0x4c4	
	
	// Datamap fields:
	// void CLogicActiveAutosaveSaveThink; // 0x0
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Venomancer_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ogre_Magi_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Armor_30 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_GhostScepter : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1dc0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "DotaTreeId_t m_nTreeDisguise"
// MNetworkVarNames "DotaTreeId_t m_nPerchedTree"
class CDOTA_Unit_Hero_MonkeyKing : public CDOTA_BaseNPC_Hero
{
public:
	bool mb_MonkeyHasArcana; // 0x1d98	
private:
	[[maybe_unused]] uint8_t __pad1d99[0x3]; // 0x1d99
public:
	// MNetworkEnable
	uint32_t m_nTreeDisguise; // 0x1d9c	
	// MNetworkEnable
	uint32_t m_nPerchedTree; // 0x1da0	
	Vector m_vLastPos; // 0x1da4	
	bool m_bIsOnCloud; // 0x1db0	
private:
	[[maybe_unused]] uint8_t __pad1db1[0x3]; // 0x1db1
public:
	float m_fTotalDistOnCloud; // 0x1db4	
	float m_fTotalDistoffCloud; // 0x1db8	
	float m_fBackOnCloudThresh; // 0x1dbc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17b8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_VisageFamiliar : public CDOTA_BaseNPC_Creep
{
public:
	CountdownTimer ctTimer; // 0x1798	
	ParticleIndex_t m_nFXAmbient; // 0x17b0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Ogre_Magi : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Necrolyte : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7f8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CBaseFlexAlias_funCBaseFlex : public CBaseFlex
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9d8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CScriptTriggerHurt : public CTriggerHurt
{
public:
	Vector m_vExtent; // 0x9c8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PudgeMiniboss_HatefulStrike : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
	int32_t maxhp_percent_damage; // 0x133c	
	int32_t every_n_attacks; // 0x1340	
	bool crit_active; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Harpoon : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_InvisibilityEdge : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1338	
	int32_t bonus_damage; // 0x133c	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dawnbreaker_Celestial_Hammer_Thinker : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Underlord : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EarthSpirit_Polarization_Damage_Timer : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Elder_Titan_NaturalOrder_Armor : public CDOTA_Buff
{
public:
	int32_t armor_reduction_pct; // 0x1338	
	float m_flArmorReduction; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x690
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "char m_ActivityModifier"
// MNetworkVarNames "float m_fStolenCastPoint"
class CDOTA_Ability_Rubick_SpellSteal : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	char m_ActivityModifier[256]; // 0x578	
	// MNetworkEnable
	float m_fStolenCastPoint; // 0x678	
	CHandle< CBaseEntity > m_hStealTarget; // 0x67c	
	CHandle< CDOTABaseAbility > m_hStealAbility; // 0x680	
	ParticleIndex_t m_nFXIndex; // 0x684	
	int32_t m_hProjectile; // 0x688	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Treant_LifeBomb : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x578	
	CHandle< CBaseEntity > m_hRMine; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Brewmaster_DrunkenHaze : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1338	
	int32_t miss_chance; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_TemplarAssassin_Refraction : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Tidehunter_Gush : public CDOTABaseAbility
{
public:
	int32_t gush_damage; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tiny_Tree_Channel : public CDOTA_Buff
{
public:
	int32_t tree_grab_radius; // 0x1338	
	int32_t splash_radius; // 0x133c	
	int32_t speed; // 0x1340	
	float interval; // 0x1344	
	Vector m_vPos; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Axe_BattleHunger : public CDOTABaseAbility
{
public:
	int32_t damage_per_second; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Mirana_Leap : public CDOTABaseAbility
{
public:
	bool m_bIsVectorTargeted; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad0579[0x3]; // 0x579
public:
	Vector m_vEndpoint; // 0x57c	
	Vector m_vLandPosition; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Mirana_Starfall : public CDOTABaseAbility
{
public:
	int32_t damage; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Juggernaut_Omnislash : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pudge_Dismember : public CDOTA_Buff
{
public:
	int32_t dismember_damage; // 0x1338	
	float strength_damage; // 0x133c	
	int32_t m_nTicks; // 0x1340	
	int32_t m_nMaxTicks; // 0x1344	
	float m_flTickRate; // 0x1348	
	float animation_rate; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Turbo_Courier_Invulnerable : public CDOTA_Modifier_Invulnerable
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4e0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CMathColorBlend : public CLogicalEntity
{
public:
	float m_flInMin; // 0x4a8	
	float m_flInMax; // 0x4ac	
	Color m_OutColor1; // 0x4b0	
	Color m_OutColor2; // 0x4b4	
	CEntityOutputTemplate< Color > m_OutValue; // 0x4b8	
	
	// Datamap fields:
	// float InputValue; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x530
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "string_t m_iszOverlayNames"
// MNetworkVarNames "float32 m_flOverlayTimes"
// MNetworkVarNames "GameTime_t m_flStartTime"
// MNetworkVarNames "int32 m_iDesiredOverlay"
// MNetworkVarNames "bool m_bIsActive"
class CEnvScreenOverlay : public CPointEntity
{
public:
	// MNetworkEnable
	CUtlSymbolLarge m_iszOverlayNames[10]; // 0x4a8	
	// MNetworkEnable
	// MNetworkBitCount "11"
	// MNetworkMinValue "-1,000000"
	// MNetworkMaxValue "63,000000"
	float m_flOverlayTimes[10]; // 0x4f8	
	// MNetworkEnable
	GameTime_t m_flStartTime; // 0x520	
	// MNetworkEnable
	int32_t m_iDesiredOverlay; // 0x524	
	// MNetworkEnable
	bool m_bIsActive; // 0x528	
	
	// Datamap fields:
	// void InputStartOverlay; // 0x0
	// void InputStopOverlay; // 0x0
	// int32_t InputSwitchOverlay; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_Ascension_Firefly : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Nyx_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_NPC_TechiesMines : public CDOTA_BaseNPC_Additive
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ForestTrollHighPriest_HealAmp_Bonus : public CDOTA_Buff
{
public:
	float heal_amp; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_TreantMiniboss_NaturesGuise_Root : public CDOTA_Buff
{
public:
	float m_iEntangleDamage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seasonal_TI9_Shovel_Pudgling : public CDOTA_Buff
{
public:
	GameTime_t m_flStartTime; // 0x1338	
	int32_t m_nActionCount; // 0x133c	
	Vector m_vecStartingPos; // 0x1340	
	Vector m_vecDestinationOffset; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Harpoon_EchoSabre_Component : public CDOTA_Buff_Item
{
public:
	float slow_duration; // 0x1338	
	int32_t bonus_attack_speed; // 0x133c	
	bool bonus_speed; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	float passive_cooldown; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Iron_Talon : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_OrchidMalevolence_Debuff : public CDOTA_Buff
{
public:
	float silence_damage_percent; // 0x1338	
	float m_flDamageTaken; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Samurai_Tabi_Int : public CDOTA_Buff_Item
{
public:
	int32_t stat_per_tick; // 0x1338	
	float base_interval; // 0x133c	
	int32_t max_tick_count; // 0x1340	
	float int_damage_interval; // 0x1344	
	float int_damage_range; // 0x1348	
	float int_damage; // 0x134c	
	int32_t iCurrentTickCount; // 0x1350	
	int32_t int_max_targets; // 0x1354	
	GameTime_t m_flNextHit; // 0x1358	
	int32_t bonus_all_stats; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Grimstroke_SpiritWalk_Buff : public CDOTA_Buff
{
public:
	GameTime_t m_fStartTime; // 0x1338	
	int32_t m_nHeroTickDamageApplied; // 0x133c	
	GameTime_t m_fLastEffectsTime; // 0x1340	
	int32_t radius; // 0x1344	
	float buff_duration; // 0x1348	
	float debuff_duration; // 0x134c	
	int32_t max_damage; // 0x1350	
	float max_stun; // 0x1354	
	int32_t movespeed_bonus_pct; // 0x1358	
	int32_t damage_per_tick; // 0x135c	
	float tick_rate; // 0x1360	
	float max_threshold_duration; // 0x1364	
	int32_t shard_bonus_damage_pct; // 0x1368	
	int32_t shard_heal_pct; // 0x136c	
	float shard_creep_penalty; // 0x1370	
	bool m_bIsReflection; // 0x1374	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Disruptor_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "EHANDLE m_hShackleTarget"
class CDOTA_Ability_ShadowShaman_Shackles : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hShackleTarget; // 0x578	
	ParticleIndex_t nShackleFXIndex; // 0x57c	
	CUtlVector< CHandle< CBaseEntity > > hWardList; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Windrunner_Windrun_Slow : public CDOTA_Buff
{
public:
	float enemy_movespeed_bonus_pct; // 0x1338	
	float scepter_movespeed_bonus_pct; // 0x133c	
	int32_t scepter_blind; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Kunkka_GhostShip : public CDOTABaseAbility
{
public:
	float buff_duration; // 0x578	
	float stun_duration; // 0x57c	
	int32_t ghostship_width; // 0x580	
	int32_t ghostship_width_scepter; // 0x584	
	Vector m_vFinalDestination; // 0x588	
	Vector m_vStartingPoint; // 0x594	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Zuus_Heavenly_Jump : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Bane_NightmareEnd : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BaseBlocker_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x948
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkExcludeByUserGroup "m_flCycle"
// MNetworkExcludeByName "m_flAnimTime"
// MNetworkExcludeByUserGroup "m_flPoseParameter"
// MNetworkExcludeByUserGroup "overlay_vars"
// MNetworkExcludeByName "m_flexWeight"
// MNetworkExcludeByName "m_blinktoggle"
// MNetworkExcludeByName "m_vLookTargetPosition"
// MNetworkExcludeByName "m_baseLayer.m_hSequence"
// MNetworkExcludeByName "m_nForceBone"
// MNetworkExcludeByName "m_vecForce"
// MNetworkExcludeByName "m_nHitboxSet"
// MNetworkExcludeByName "m_flEncodedController"
// MNetworkExcludeByName "m_flSimulationTime"
// MNetworkExcludeByName "m_angRotation"
// MNetworkExcludeByName "m_vecOrigin"
// MNetworkExcludeByName "m_cellX"
// MNetworkExcludeByName "m_cellY"
// MNetworkExcludeByName "m_cellZ"
// MNetworkExcludeByName "m_vecSpecifiedSurroundingMaxs"
// MNetworkExcludeByName "m_vecSpecifiedSurroundingMins"
// MNetworkExcludeByName "m_vecMaxs"
// MNetworkExcludeByName "m_vecMins"
// MNetworkExcludeByName "m_hOwnerEntity"
// MNetworkExcludeByName "m_hParent"
// MNetworkExcludeByName "m_flCreateTime"
// MNetworkExcludeByName "CAttributeManager::m_hOuter"
// MNetworkExcludeByName "VPhysicsCollisionAttribute_t::m_nEntityId"
// MNetworkExcludeByName "VPhysicsCollisionAttribute_t::m_nOwnerId"
// MNetworkExcludeByName "VPhysicsCollisionAttribute_t::m_nHierarchyId"
// MNetworkExcludeByName "CEconItemView::m_iInventoryPosition"
// MNetworkVarNames "bool m_bOwnerModelChanged"
// MNetworkVarNames "bool m_bIsGeneratingEconItem"
// MNetworkVarNames "bool m_bIsItemVisibleOnGeneratedEntity"
// MNetworkVarNames "bool m_bHideWearableButDrawAdditionalWearables"
// MNetworkVarNames "CHandle< CBaseAnimating> m_hAdditionalWearable"
class CDOTAWearableItem : public CEconWearable
{
public:
	// MNetworkEnable
	bool m_bOwnerModelChanged; // 0x940	
	// MNetworkEnable
	bool m_bIsGeneratingEconItem; // 0x941	
	// MNetworkEnable
	bool m_bIsItemVisibleOnGeneratedEntity; // 0x942	
	// MNetworkEnable
	// MNetworkChangeCallback "OnHideWearableButDrawAdditionalWearablesChanged"
	bool m_bHideWearableButDrawAdditionalWearables; // 0x943	
	// MNetworkEnable
	CHandle< CBaseAnimatingActivity > m_hAdditionalWearable; // 0x944	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Brewmaster_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Intelligence_20 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Movement_Speed_20 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Tinker : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "DOTACustomHeroPickRulesPhase_t m_Phase"
// MNetworkVarNames "int32 m_nNumBansPerTeam"
// MNetworkVarNames "GameTime_t m_flEnterTime"
class CDOTACustomGameHeroPickRules : public CDOTABaseCustomHeroPickRules
{
public:
	// MNetworkEnable
	DOTACustomHeroPickRulesPhase_t m_Phase; // 0x4a8	
	// MNetworkEnable
	int32_t m_nNumBansPerTeam; // 0x4ac	
	// MNetworkEnable
	GameTime_t m_flEnterTime; // 0x4b0	
	int32_t m_nNumHeroesPicked; // 0x4b4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Omniknight : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1398
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Seasonal_Summon_TI11_Balloon_Thinker : public CDOTA_Buff
{
public:
	float speed; // 0x1338	
	int32_t min_distance_before_bounce; // 0x133c	
	float drag; // 0x1340	
	float max_height; // 0x1344	
	float max_vertical_move_time; // 0x1348	
	float bounce_turn_angle; // 0x134c	
	float bounce_turn_angle_tree; // 0x1350	
	float bounce_delay; // 0x1354	
	int32_t max_bounces; // 0x1358	
	float max_model_scale; // 0x135c	
	float power_growth_exponent; // 0x1360	
	Vector m_vLastPos; // 0x1364	
	Vector m_vDir; // 0x1370	
	float m_flSpeed; // 0x137c	
	float m_flDistRemaining; // 0x1380	
	float m_flTreeTimeRemaining; // 0x1384	
	int32_t m_nTimesBounced; // 0x1388	
	float m_flModelScale; // 0x138c	
	CHandle< CBaseEntity > m_hLastHit; // 0x1390	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_Enrage : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Light_Collector : public CDOTA_Buff_Item
{
public:
	bool m_bActive; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	int32_t health_regen; // 0x133c	
	int32_t mana_regen; // 0x1340	
	int32_t radius; // 0x1344	
	int32_t movespeed_pct; // 0x1348	
	int32_t penalty; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Vengeances_Shadow : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Disperser_Movespeed_Buff : public CDOTA_Buff
{
public:
	int32_t movement_speed_buff_rate; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Necronomicon_3 : public CDOTA_Item_Recipe_Necronomicon
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_EagleEye : public CDOTA_Buff_Item
{
public:
	int32_t radius; // 0x1338	
	int32_t bonus_agi; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Urn_Of_Shadows : public CDOTA_Buff_Item
{
public:
	float mana_regen; // 0x1338	
	int32_t bonus_all_stats; // 0x133c	
	float bonus_armor; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_PlaneswalkersCloak : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Hoodwink_AcornShotBounces : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AbyssalUnderlord_Dark_Portal : public CDOTABaseAbility
{
public:
	float duration; // 0x578	
	float distance_from_fountain; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_KeeperOfTheLight_ManaLeak : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Beastmaster_CallOfTheWild_Hawk : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_HawkList; // 0x578	
	float m_flRotation; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Courier_GoToEnemySecretShop : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lion_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Slardar_Sprint : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Sniper_Shrapnel_Thinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	bool m_bExploded; // 0x133c	
	bool m_bGrantedGem; // 0x133d	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_WitchDoctor_DeathWard_Voodoo_Switcheroo_AttackSpeedReduction : public CDOTA_Buff
{
public:
	int32_t attack_speed_reduction; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TrueSightAll : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_BlackDragon_SplashAttack : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CHandle< CBaseEntity> m_hScepterIllusion"
class CDOTA_Ability_VengefulSpirit_Command_Aura : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnScepterIllusionChanged"
	CHandle< CBaseEntity > m_hScepterIllusion; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Aghsfort_TempBuff_CorpseExplosion : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Spirit_Breaker_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Agility_30 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int16 m_nRadiantCheers"
// MNetworkVarNames "int16 m_nDireCheers"
// MNetworkVarNames "int16 m_nRadiantPremiumCheers"
// MNetworkVarNames "int16 m_nDirePremiumCheers"
// MNetworkVarNames "ECrowdLevel m_nRadiantCrowdLevel"
// MNetworkVarNames "ECrowdLevel m_nDireCrowdLevel"
class CDOTACheers : public CBaseEntity
{
public:
	// MNetworkEnable
	int16_t m_nRadiantCheers; // 0x4a8	
	// MNetworkEnable
	int16_t m_nDireCheers; // 0x4aa	
	// MNetworkEnable
	int16_t m_nRadiantPremiumCheers; // 0x4ac	
	// MNetworkEnable
	int16_t m_nDirePremiumCheers; // 0x4ae	
	// MNetworkEnable
	ECrowdLevel m_nRadiantCrowdLevel; // 0x4b0	
	// MNetworkEnable
	ECrowdLevel m_nDireCrowdLevel; // 0x4b4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_Aziyog_Underlord_Portal_Warp_Channel : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nfxTargetTp; // 0x1338	
	ParticleIndex_t m_nfxTargetTp2; // 0x133c	
	ParticleIndex_t m_nfxAmbientFx; // 0x1340	
	ParticleIndex_t m_nfxPortal1; // 0x1344	
	ParticleIndex_t m_nfxPortal2; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad134c[0x8]; // 0x134c
public:
	CHandle< CBaseEntity > m_hPortal; // 0x1354	
	Vector m_vStartPosition; // 0x1358	
	float m_flTotalTime; // 0x1364	
	float m_flElapsedTimePortion; // 0x1368	
	float animation_rate; // 0x136c	
	int32_t stop_distance; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Magus_Minimus : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1338	
	int32_t bonus_intellect; // 0x133c	
	float damage_per_burn; // 0x1340	
	int32_t feedback_mana_burn; // 0x1344	
	int32_t feedback_mana_burn_illusion_melee; // 0x1348	
	int32_t feedback_mana_burn_illusion_ranged; // 0x134c	
	int32_t aura_radius; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Medallion_Of_Courage : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1338	
	float bonus_mana_regen_pct; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_WraithPact : public CDOTA_Item
{
public:
	CHandle< CBaseEntity > m_hWard; // 0x620	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_ForceStaff : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_GreaterCritical : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_PointBooster : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Elder_Titan_MoveSpirit : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slark_EssenceShift : public CDOTA_Modifier_Stacking_Base
{
public:
	int32_t agi_gain; // 0x1358	
	float duration; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_IceWall : public CDOTA_Ability_Invoker_InvokedBase
{
public:
	Vector m_vStartPosition; // 0x588	
	Vector m_vEndPosition; // 0x594	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Batrider_Flamebreak_Knockback : public CDOTA_Modifier_Knockback
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Beastmaster_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Courier_Shield : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Necrolyte_ReapersScythe : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Windrunner_Windrun_Invis : public CDOTA_Modifier_Invisible
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Puck_Coiled : public CDOTA_Buff
{
public:
	Vector m_vCastLocation; // 0x1338	
	int32_t coil_rapid_fire_z_offset; // 0x1344	
	float coil_rapid_fire_rate; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Drow_Ranger_Glacier_Hilltop_Aura : public CDOTA_Buff
{
public:
	int32_t shard_width; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pudge_Swallow_Hide : public CDOTA_Buff
{
public:
	float order_lock_duration; // 0x1338	
	GameTime_t m_fOrderLockDone; // 0x133c	
	int32_t m_nFXIndex; // 0x1340	
	float shard_regen_pct; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Bane_BrainSap : public CDOTABaseAbility
{
public:
	int32_t brain_sap_damage; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Nevermore_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Respawn_Reduction_50 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_Regen_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x9d8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkUserGroupProxy "CDOTAPlayerPawn"
// MNetworkExcludeByName "m_angRotation"
// MNetworkExcludeByName "m_flAnimTime"
// MNetworkExcludeByUserGroup "m_flCycle"
// MNetworkExcludeByName "m_flPlaybackRate"
// MNetworkExcludeByName "m_flPoseParameter"
// MNetworkExcludeByName "m_flSimulationTime"
// MNetworkExcludeByName "m_baseLayer.m_hSequence"
// MNetworkExcludeByName "m_vecVelocity"
// MNetworkExcludeByName "m_flexWeight"
// MNetworkExcludeByUserGroup "overlay_vars"
// MNetworkExcludeByName "m_nTickBase"
// MNetworkUserGroupProxy "CDOTAPlayerPawn"
// MNetworkOverride "m_vecOrigin CGameSceneNode"
// MNetworkOverride "m_cellX CNetworkOriginCellCoordQuantizedVector"
// MNetworkOverride "m_cellY CNetworkOriginCellCoordQuantizedVector"
// MNetworkOverride "m_cellZ CNetworkOriginCellCoordQuantizedVector"
// MNetworkOverride "m_vecX CNetworkOriginCellCoordQuantizedVector"
// MNetworkOverride "m_vecY CNetworkOriginCellCoordQuantizedVector"
// MNetworkOverride "m_vecZ CNetworkOriginCellCoordQuantizedVector"
// MNetworkVarTypeOverride "CDOTAPlayer_CameraServices m_pCameraServices"
// MNetworkIncludeByName "m_pCameraServices"
// MNetworkVarTypeOverride "CDOTAPlayer_MovementServices m_pMovementServices"
// MNetworkIncludeByName "m_pMovementServices"
class CDOTAPlayerPawn : public CBasePlayerPawn
{
public:
	// Datamap fields:
	// CDOTAPlayer_CameraServices m_pCameraServices; // 0x8c8
	// CDOTAPlayer_MovementServices m_pMovementServices; // 0x8d0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mutation_DeathExplosionDelayed : public CDOTA_Buff
{
public:
	int32_t m_iDamageBase; // 0x1338	
	int32_t m_iDamagePerLevel; // 0x133c	
	int32_t m_iRadius; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x968
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "HPostProcessingStrong m_hPostSettings"
// MNetworkVarNames "float m_flFadeDuration"
// MNetworkVarNames "float m_flMinLogExposure"
// MNetworkVarNames "float m_flMaxLogExposure"
// MNetworkVarNames "float m_flMinExposure"
// MNetworkVarNames "float m_flMaxExposure"
// MNetworkVarNames "float m_flExposureCompensation"
// MNetworkVarNames "float m_flExposureFadeSpeedUp"
// MNetworkVarNames "float m_flExposureFadeSpeedDown"
// MNetworkVarNames "float m_flTonemapEVSmoothingRange"
// MNetworkVarNames "bool m_bMaster"
// MNetworkVarNames "bool m_bExposureControl"
class CPostProcessingVolume : public CBaseTrigger
{
private:
	[[maybe_unused]] uint8_t __pad0928[0x10]; // 0x928
public:
	// MNetworkEnable
	CStrongHandle< InfoForResourceTypeCPostProcessingResource > m_hPostSettings; // 0x938	
	// MNetworkEnable
	float m_flFadeDuration; // 0x940	
	// MNetworkEnable
	float m_flMinLogExposure; // 0x944	
	// MNetworkEnable
	float m_flMaxLogExposure; // 0x948	
	// MNetworkEnable
	float m_flMinExposure; // 0x94c	
	// MNetworkEnable
	float m_flMaxExposure; // 0x950	
	// MNetworkEnable
	float m_flExposureCompensation; // 0x954	
	// MNetworkEnable
	float m_flExposureFadeSpeedUp; // 0x958	
	// MNetworkEnable
	float m_flExposureFadeSpeedDown; // 0x95c	
	// MNetworkEnable
	float m_flTonemapEVSmoothingRange; // 0x960	
	// MNetworkEnable
	bool m_bMaster; // 0x964	
	// MNetworkEnable
	bool m_bExposureControl; // 0x965	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_ExplosiveBarrel : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nPreviewFX; // 0x1338	
	int32_t radius; // 0x133c	
	int32_t damage; // 0x1340	
	int32_t vision_radius; // 0x1344	
	float vision_duration; // 0x1348	
	int32_t model_scale; // 0x134c	
	bool bExploding; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1351[0x3]; // 0x1351
public:
	float stun_duration; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_TempBuff_CorpseExplosion_Aura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Witches_Switch : public CDOTA_Buff_Item
{
public:
	float bonus_health_regen; // 0x1338	
	float bonus_mana_regen; // 0x133c	
	int32_t bonus_armor; // 0x1340	
	int32_t aura_radius; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_WandOfSanctitude : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Bullwhip : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Overwhelming_Blink_Debuff : public CDOTA_Buff
{
public:
	float caster_strength; // 0x1338	
	int32_t movement_slow; // 0x133c	
	int32_t attack_slow; // 0x1340	
	float damage_pct_over_time; // 0x1344	
	float m_flTickDamage; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Veil_Of_Discord : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_PlateMail : public CDOTA_Buff_Item
{
public:
	int32_t bonus_armor; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Marci_Grapple_StunDuration : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Oracle : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Bristleback_ViscousNasalGoo : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Visage_SummonFamiliars_StoneForm_Buff : public CDOTA_Buff
{
public:
	float hp_regen; // 0x1338	
	int32_t stun_radius; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_IceWall_SlowDebuff : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Unique_Beastmaster_5 : public CDOTA_Buff
{
public:
	int32_t bonus_ms; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_ShadowShaman_EtherShock : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Razor_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5e0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Drow_Ranger_Glacier : public CDOTABaseAbility
{
public:
	int32_t shard_width; // 0x578	
	int32_t shard_count; // 0x57c	
	float shard_duration; // 0x580	
	float shard_angle_step; // 0x584	
	int32_t shard_distance; // 0x588	
	Vector m_vSpawnOrigin; // 0x58c	
	Vector m_vDirection; // 0x598	
private:
	[[maybe_unused]] uint8_t __pad05a4[0x4]; // 0x5a4
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecShards; // 0x5a8	
private:
	[[maybe_unused]] uint8_t __pad05c0[0x8]; // 0x5c0
public:
	CDOTABaseAbility* m_pIceShardsStop; // 0x5c8	
private:
	[[maybe_unused]] uint8_t __pad05d0[0x8]; // 0x5d0
public:
	ParticleIndex_t m_nFXIndex; // 0x5d8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Shadowraze_Counter : public CDOTA_Buff
{
public:
	float shadowraze_cooldown; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_DragonPotion : public CDOTA_Buff_Item
{
public:
	int32_t m_iOriginalAttackCapabilities; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlSymbolLarge m_iszRangedAttackEffect; // 0x1340	
	int32_t bonus_movement_speed; // 0x1348	
	int32_t bonus_attack_damage; // 0x134c	
	int32_t bonus_attack_range; // 0x1350	
	int32_t attack_projectile_speed; // 0x1354	
	int32_t magic_resistance; // 0x1358	
	int32_t model_scale; // 0x135c	
	int32_t skin_number; // 0x1360	
	bool flying_movement; // 0x1364	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x778
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "float32 m_flLightScale"
// MNetworkVarNames "float32 m_Radius"
class CSpotlightEnd : public CBaseModelEntity
{
public:
	// MNetworkEnable
	float m_flLightScale; // 0x758	
	// MNetworkEnable
	float m_Radius; // 0x75c	
	Vector m_vSpotlightDir; // 0x760	
	Vector m_vSpotlightOrg; // 0x76c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x648
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_Ravage_Potion : public CDOTA_Item
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hEntsHit; // 0x620	
	int32_t damage; // 0x638	
	float duration; // 0x63c	
	float spend_charge_delay; // 0x640	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Visage_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Spectre : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Status_Resistance_15 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_Regen_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Fallen_Sky : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
	int32_t bonus_intellect; // 0x133c	
	float bonus_health_regen; // 0x1340	
	float bonus_mana_regen; // 0x1344	
	float blink_damage_cooldown; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Fallen_Sky : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Ballista : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Solar_Crest_Armor_Reduction : public CDOTA_Buff
{
public:
	int32_t target_armor; // 0x1338	
	int32_t target_attack_speed; // 0x133c	
	int32_t target_movement_speed; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Orb_of_Venom_Slow : public CDOTA_Buff
{
public:
	float duration; // 0x1338	
	float slow; // 0x133c	
	float damage; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Buckler : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_UltimateScepter_Consumed_Alchemist : public CDOTA_Modifier_Item_UltimateScepter_Consumed
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
	int32_t bonus_all_stats; // 0x133c	
	int32_t bonus_health; // 0x1340	
	int32_t bonus_mana; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_SpearCooldown : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mars_GodsRebuke_Crit : public CDOTA_Buff
{
public:
	int32_t crit_mult; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_KeeperOfTheLight_SpiritForm : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Disruptor_StaticStormMute : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Chen_HandOfGod : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rattletrap_Hookshot : public CDOTA_Buff
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_hDamaged; // 0x1338	
	CHandle< CBaseEntity > m_hTarget; // 0x1350	
	Vector m_vStartPosition; // 0x1354	
private:
	[[maybe_unused]] uint8_t __pad1360[0x8]; // 0x1360
public:
	int32_t speed; // 0x1368	
	float stun_radius; // 0x136c	
	float damage; // 0x1370	
	float duration; // 0x1374	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Luna_Lunar_Grace : public CDOTA_Buff
{
public:
	int32_t attack_speed; // 0x1338	
	float night_multiplier; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Courier_DequeuePickupFromStash : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Greevil_Miniboss_Red_Earthshock : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_Summon_CNY_Balloon : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Venomancer_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Pugna_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ancient_Apparition_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Arc_Warden_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Lifesteal_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Spell_Amplify_11 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Range_300 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Intelligence_30 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_Regen_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Speed_225 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x38
// MNetworkNoBase
// 
// MNetworkVarNames "PlayerID_t m_nPlayerID"
// MNetworkVarNames "int m_nQueryID"
// MNetworkVarNames "int m_nQueryRank"
// MNetworkVarNames "int m_nMultiQueryID"
class CDOTA_CombatLogQueryProgress
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x28]; // 0x0
public:
	// MNetworkEnable
	PlayerID_t m_nPlayerID; // 0x28	
	// MNetworkEnable
	int32_t m_nQueryID; // 0x2c	
	// MNetworkEnable
	int32_t m_nQueryRank; // 0x30	
	// MNetworkEnable
	int32_t m_nMultiQueryID; // 0x34	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Brewmaster_PrimalStorm : public CDOTA_BaseNPC_Creep
{
public:
	ParticleIndex_t m_nFXStormAmbient1; // 0x1798	
	ParticleIndex_t m_nFXStormAmbient2; // 0x179c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_EnragedWildkin_ToughnessAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x978
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CTriggerDetectExplosion : public CBaseTrigger
{
private:
	[[maybe_unused]] uint8_t __pad0928[0x28]; // 0x928
public:
	CEntityIOOutput m_OnDetectedExplosion; // 0x950	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_SuperBlinkDagger : public CDOTA_Item_BlinkDagger
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Circlet : public CDOTA_Buff_Item
{
public:
	int32_t bonus_all_stats; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Muerta_PierceTheVeil : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hoodwink_Scurry_Active : public CDOTA_Buff
{
public:
	int32_t movement_speed_pct; // 0x1338	
	int32_t attack_range; // 0x133c	
	int32_t cast_range; // 0x1340	
	float m_flTreeDuration; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slark_EssenceShift_Buff : public CDOTA_Modifier_Stacking_Multiple_Buff_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ChaosKnight_Chaos_Strike : public CDOTA_Buff
{
public:
	float creep_multiplier; // 0x1338	
	float creep_lifesteal_reduction_pct; // 0x133c	
	int32_t crit_min; // 0x1340	
	int32_t crit_max; // 0x1344	
	int32_t lifesteal; // 0x1348	
	float chance; // 0x134c	
	int32_t m_nNextCrit; // 0x1350	
private:
	[[maybe_unused]] uint8_t __pad1354[0x4]; // 0x1354
public:
	CUtlVector< int16 > m_vCritRecords; // 0x1358	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Clinkz_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Life_Stealer_Feast : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Furion_WrathOfNature_Buff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Windrunner_Windrun_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Zeus_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13a0
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Illusion : public CDOTA_Buff
{
public:
	int32_t outgoing_damage; // 0x1338	
	int32_t outgoing_damage_structure; // 0x133c	
	int32_t outgoing_damage_roshan; // 0x1340	
	int32_t incoming_damage; // 0x1344	
	int32_t bounty_base; // 0x1348	
	int32_t bounty_growth; // 0x134c	
	CUtlString m_strIllusionType; // 0x1350	
	char m_szIllusionLabel[64]; // 0x1358	
	bool m_bHidden; // 0x1398	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_CentaurKhan_EnduranceAura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4b0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CSoundStackSave : public CLogicalEntity
{
public:
	CUtlSymbolLarge m_iszStackName; // 0x4a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Riki_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Invoker_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Respawn_Reduction_35 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Range_100 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Greevil_Miniboss_Yellow_Surge : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Wildkin_Tornado : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Light_Collector_Blind : public CDOTA_Buff
{
public:
	int32_t miss_rate; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_WandOfSanctitude : public CDOTA_Buff_Item
{
public:
	int32_t all_stats; // 0x1338	
	int32_t cast_range_bonus; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Sorcerers_Staff : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Silver_Edge_WindWalk : public CDOTA_Modifier_Invisible
{
public:
	int32_t windwalk_bonus_damage; // 0x1348	
	int32_t windwalk_movement_speed; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_MaskOfDeath : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_TranquilBoots2 : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement_speed; // 0x1338	
	int32_t broken_movement_speed; // 0x133c	
	int32_t bonus_armor; // 0x1340	
	int32_t bonus_health_regen; // 0x1344	
	int32_t break_threshold; // 0x1348	
	int32_t break_time; // 0x134c	
	int32_t break_count; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_DarkWillow_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Winter_Wyvern_Arctic_Burn_Slow : public CDOTA_Buff
{
public:
	float percent_damage; // 0x1338	
	int32_t move_slow; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AbyssalUnderlord_PitOfMalice_Ensnare : public CDOTA_Modifier_Rooted
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Skywrath_Mage_Shard_Bonus_Counter : public CDOTA_Buff
{
public:
	int32_t bonus_intelligence; // 0x1338	
	float bonus_armor; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SpiritBreaker_ChargeOfDarknessTarget : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
	CEntityIndex m_iChargeTargetEntityIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Rattletrap_RocketFlare : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecEnemyHeroesInFog; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Warlock_Upheaval_Ally : public CDOTA_Buff
{
public:
	int32_t m_iAttackSpeed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Slardar_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Sniper_Concussive_Grenade : public CDOTABaseAbility
{
public:
	int32_t m_iProjectile; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tiny_Tree_Channel_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tutorial_SpeechBubble : public CDOTA_Buff
{
public:
	bool m_bFacePlayer; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x88
// Has VTable
// MClassHasEntityLimitedDataDesc
class ConstraintSoundInfo
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// -> m_prevSample - 0x8
	// -> m_fPrevSampleTime - 0x14
	// -> m_fIdealSampleRate - 0x18
	VelocitySampler m_vSampler; // 0x8	
private:
	[[maybe_unused]] uint8_t __pad001c[0x4]; // 0x1c
public:
	// -> eKeypoints - 0x28
	// -> m_keyPoints[2] - 0x2c
	// -> m_reversalSoundThresholds[3] - 0x34
	SimpleConstraintSoundProfile m_soundProfile; // 0x20	
	Vector m_forwardAxis; // 0x40	
private:
	[[maybe_unused]] uint8_t __pad004c[0x4]; // 0x4c
public:
	CUtlSymbolLarge m_iszTravelSoundFwd; // 0x50	
	CUtlSymbolLarge m_iszTravelSoundBack; // 0x58	
private:
	[[maybe_unused]] uint8_t __pad0060[0x8]; // 0x60
public:
	CUtlSymbolLarge m_iszReversalSounds[3]; // 0x68	
	bool m_bPlayTravelSound; // 0x80	
	bool m_bPlayReversalSound; // 0x81	
	
	// Datamap fields:
	// CUtlSymbolLarge m_iszReversalSounds[0]; // 0x68
	// CUtlSymbolLarge m_iszReversalSounds[1]; // 0x70
	// CUtlSymbolLarge m_iszReversalSounds[2]; // 0x78
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_AghsFort_RefresherOrb_Shard : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_UpgradedBarricade : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Monkey_King_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Gyrocopter_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xb0
// Has VTable
// 
// MNetworkVarNames "int m_nInitiatingPlayerID"
// MNetworkVarNames "int m_PingWheelMessageID"
// MNetworkVarNames "float m_flActiveUntilTime"
// MNetworkVarNames "Vector2D m_vLocation"
// MNetworkVarNames "int m_nPingedEntityEntIndex"
// MNetworkVarNames "int m_nID"
// MNetworkVarNames "PingConfirmationIconType m_IconType"
// MNetworkVarNames "int m_nAgreeState"
struct PingConfirmationState_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	int32_t m_nInitiatingPlayerID; // 0x30	
	// MNetworkEnable
	int32_t m_PingWheelMessageID; // 0x34	
	// MNetworkEnable
	float m_flActiveUntilTime; // 0x38	
	// MNetworkEnable
	Vector2D m_vLocation; // 0x3c	
	// MNetworkEnable
	int32_t m_nPingedEntityEntIndex; // 0x44	
	// MNetworkEnable
	int32_t m_nID; // 0x48	
	// MNetworkEnable
	PingConfirmationIconType m_IconType; // 0x4c	
	// MNetworkEnable
	int32_t m_nAgreeState[24]; // 0x50	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xc8
// Has VTable
class CSingleplayRules : public CGameRules
{
public:
	bool m_bSinglePlayerGameEnding; // 0xc0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x508
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFilterProximity : public CBaseFilter
{
public:
	float m_flRadius; // 0x500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MuertaReleaseEvent_RemoveGravestone : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nParticleIndex; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVector< ParticleIndex_t >* m_pActiveGravestones; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_731_Teaser_Thinker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mutation_DeathExplosion_TeamAura : public CDOTA_Modifier_Mutation_DeathExplosion_Aura
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x948
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Tiny_ScepterTree : public CDOTAWearableItem
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1388
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aghsfort_Elemental_Wisp_Tether : public CDOTA_Buff
{
public:
	bool m_bInManaGained; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	CHandle< CBaseEntity > m_hTarget; // 0x133c	
	CUtlVector< CHandle< CBaseEntity > > hStunnedEntities; // 0x1340	
	float slow_duration; // 0x1358	
	int32_t movespeed; // 0x135c	
	int32_t self_bonus; // 0x1360	
	bool m_bIsInRange; // 0x1364	
private:
	[[maybe_unused]] uint8_t __pad1365[0x3]; // 0x1365
public:
	int32_t radius; // 0x1368	
	int32_t latch_distance; // 0x136c	
	float m_flHealthHealed; // 0x1370	
	float m_flManaHealed; // 0x1374	
	float tether_heal_amp; // 0x1378	
	GameTime_t m_flHealMessageTime; // 0x137c	
	GameTime_t m_flManaMessageTime; // 0x1380	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Clumsy_Net_Ensnare : public CDOTA_Modifier_Rooted
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Necronomicon_Archer_AoE : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CHandle< CBaseEntity> m_hAbilitySoulEntity"
class CDOTA_Ability_Muerta_PartingShot : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hAbilitySoulEntity; // 0x578	
	CHandle< CBaseEntity > m_hTarget; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VoidSpirit_AstralStep_Caster : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Oracle_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_KeeperOfTheLight_BlindingLight : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nyx_Assassin_Impale : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x578	
	int32_t width; // 0x590	
	float duration; // 0x594	
	int32_t length; // 0x598	
	int32_t speed; // 0x59c	
	Vector vOriginalCast; // 0x5a0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Undying_Tombstone_Death_Trigger : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_ChaosKnight_Chaos_Bolt : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > hAlreadyHitList; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Brewmaster_DrunkenHaze : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lion_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Sniper_Headshot_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tiny_Toss : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
	float m_flPredictedTotalTime; // 0x133c	
	Vector m_vStartPosition; // 0x1340	
	float m_flCurrentTimeHoriz; // 0x134c	
	float m_flCurrentTimeVert; // 0x1350	
	bool m_bHorizontalMotionInterrupted; // 0x1354	
	bool m_bDamageApplied; // 0x1355	
	bool m_bTargetTeleported; // 0x1356	
private:
	[[maybe_unused]] uint8_t __pad1357[0x1]; // 0x1357
public:
	Vector m_vHorizontalVelocity; // 0x1358	
	Vector m_vLastKnownTargetPosition; // 0x1364	
	float m_flInitialVelocityZ; // 0x1370	
	bool m_bDone; // 0x1374	
private:
	[[maybe_unused]] uint8_t __pad1375[0x3]; // 0x1375
public:
	int32_t radius; // 0x1378	
	int32_t toss_damage; // 0x137c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Greevil_Miniboss_Black_Nightmare : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_TI11_CongaLine : public CDOTABaseAbility
{
public:
	float max_duration; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Mirana_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Agility_25 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x40
// Has VTable
// MNetworkAssumeNotNetworkable
class CPlayer_ItemServices : public CPlayerPawnComponent
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Roshans_Banner_Effect : public CDOTA_Buff
{
public:
	int32_t damage_bonus; // 0x1338	
	int32_t hp_bonus; // 0x133c	
	int32_t model_scale; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Dagon2 : public CDOTA_Item_Recipe_Dagon
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dawnbreaker_Solar_Guardian_After_Land : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Legion_Commander_PressTheAttack_Immunity : public CDOTA_Modifier_DebuffImmune
{
public:
	int32_t model_scale; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Wisp_Tether_Spell_Lifesteal : public CDOTA_Buff
{
public:
	float shard_bonus_spell_lifesteal; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_LoneDruid_SpiritBear_Entangle : public CDOTA_Buff
{
public:
	int32_t entangle_chance; // 0x1338	
	int32_t hero_entangle_chance; // 0x133c	
	float hero_duration; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Brewmaster_CinderBrew : public CDOTA_Buff
{
public:
	int32_t movement_slow; // 0x1338	
	bool m_bIgniteActive; // 0x133c	
private:
	[[maybe_unused]] uint8_t __pad133d[0x3]; // 0x133d
public:
	float m_flDamagePerTick; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DragonKnight_Fireball : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Sniper_Shrapnel_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Zuus_ArcLightning : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_PhantomLancer_Juxtapose : public CDOTA_Buff
{
public:
	int32_t proc_chance_pct; // 0x1338	
	int32_t illusion_proc_chance_pct; // 0x133c	
	int32_t max_illusions; // 0x1340	
	float illusion_duration; // 0x1344	
	int32_t illusion_damage_out_pct; // 0x1348	
	int32_t illusion_damage_in_pct; // 0x134c	
	int32_t shard_bonus_illusions; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AncientApparition_IceVortexThinker : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t movement_speed_pct; // 0x133c	
	int32_t spell_resist_pct; // 0x1340	
	ParticleIndex_t m_nFXIndex; // 0x1344	
	CUtlVector< CHandle< CBaseEntity > > m_hChilledEntities; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_BookOfStrength : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bonus_Armor : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x770
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkExcludeByName "m_flAnimTime"
// MNetworkExcludeByUserGroup "m_flCycle"
// MNetworkExcludeByName "m_flPoseParameter"
// MNetworkExcludeByName "m_flSimulationTime"
class CDOTA_Item_DeathGoldDropped : public CBaseAnimatingActivity
{
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_Regen_15 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDotaQuestBase : public CBaseEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Earth_Spirit_Stone : public CDOTA_BaseNPC
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_IceShaman_IncendiaryBomb : public CDOTA_Buff
{
public:
	int32_t burn_damage; // 0x1338	
	int32_t building_damage_pct; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Cloak_Of_Flames : public CDOTA_Buff_Item
{
public:
	int32_t armor; // 0x1338	
	int32_t magic_resistance; // 0x133c	
	int32_t radius; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Cloak_Of_Flames : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Ocean_Heart : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Arcane_Boots : public CDOTA_Buff_Item
{
public:
	int32_t bonus_movement; // 0x1338	
	int32_t bonus_mana; // 0x133c	
	int32_t aura_radius; // 0x1340	
	float mana_regen; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Snapfire_LilShredder_Attack : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Earth_Spirit_StoneCaller_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Elder_Titan_ReturnSpirit : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Medusa_ManaShield : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Slark_DarkPact : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Meepo_Earthbind : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Chaos_Knight_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Jakiro_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer_12 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Furion_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CInfoCourierSpawnDire5 : public CPointEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Slardar_Amplify_Damage : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Riki_Permanent_Invisibility : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_FlagBearer_Creep_Aura_Effect : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CMathCounter : public CLogicalEntity
{
public:
	float m_flMin; // 0x4a8	
	float m_flMax; // 0x4ac	
	bool m_bHitMin; // 0x4b0	
	bool m_bHitMax; // 0x4b1	
	bool m_bDisabled; // 0x4b2	
private:
	[[maybe_unused]] uint8_t __pad04b3[0x5]; // 0x4b3
public:
	CEntityOutputTemplate< float32 > m_OutValue; // 0x4b8	
	CEntityOutputTemplate< float32 > m_OnGetValue; // 0x4e0	
	CEntityIOOutput m_OnHitMin; // 0x508	
	CEntityIOOutput m_OnHitMax; // 0x530	
	CEntityIOOutput m_OnChangedFromMin; // 0x558	
	CEntityIOOutput m_OnChangedFromMax; // 0x580	
	
	// Datamap fields:
	// float InputAdd; // 0x0
	// float InputDivide; // 0x0
	// float InputMultiply; // 0x0
	// float InputSetValue; // 0x0
	// float InputSetValueNoFire; // 0x0
	// float InputSubtract; // 0x0
	// float InputSetHitMax; // 0x0
	// float InputSetHitMin; // 0x0
	// void InputGetValue; // 0x0
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
	// int32_t startvalue; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4e8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "string_t m_worldName"
// MNetworkVarNames "string_t m_layerName"
// MNetworkVarNames "bool m_bWorldLayerVisible"
// MNetworkVarNames "bool m_bEntitiesSpawned"
class CInfoWorldLayer : public CBaseEntity
{
public:
	CEntityIOOutput m_pOutputOnEntitiesSpawned; // 0x4a8	
	// MNetworkEnable
	CUtlSymbolLarge m_worldName; // 0x4d0	
	// MNetworkEnable
	CUtlSymbolLarge m_layerName; // 0x4d8	
	// MNetworkEnable
	bool m_bWorldLayerVisible; // 0x4e0	
	// MNetworkEnable
	bool m_bEntitiesSpawned; // 0x4e1	
	bool m_bCreateAsChildSpawnGroup; // 0x4e2	
private:
	[[maybe_unused]] uint8_t __pad04e3[0x1]; // 0x4e3
public:
	uint32_t m_hLayerSpawnGroup; // 0x4e4	
	
	// Datamap fields:
	// void ShowWorldLayer; // 0x0
	// void HideWorldLayer; // 0x0
	// void SpawnEntities; // 0x0
	// void DestroyEntities; // 0x0
	// void ShowWorldLayerAndSpawnEntities; // 0x0
	// void HideWorldLayerAndDestroyEntities; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Strength_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Intelligence_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_LoneDruid : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_DragonKnight : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x638
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Tier2Token : public CDOTA_Item_TierToken
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FelBeast_Haunt_OnDeath : public CDOTA_Buff
{
public:
	int32_t projectile_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_RockGolem_Avalanche : public CDOTA_Buff
{
public:
	CUtlVector< CDOTA_BaseNPC* > m_pHeroesHit; // 0x1338	
	int32_t radius; // 0x1350	
	float total_duration; // 0x1354	
	float stun_duration; // 0x1358	
	int32_t tick_count; // 0x135c	
	int32_t m_damage; // 0x1360	
	int32_t m_nTicks; // 0x1364	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Movement_Speed : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Blood_Grenade : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_GreatFamango : public CDOTA_Item_Famango
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mars_Bulwark_Soldier_Thinker : public CDOTA_Buff
{
public:
	GameTime_t m_NextAttack; // 0x1338	
	int32_t soldier_offset; // 0x133c	
	int32_t soldier_count; // 0x1340	
	int32_t forward_angle; // 0x1344	
	int32_t knockback_distance; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad134c[0x4]; // 0x134c
public:
	CUtlVector< CHandle< CBaseEntity > > m_hAllSoldiers; // 0x1350	
	GameTime_t m_flLastStationaryTime; // 0x1368	
	Vector m_vLastStationaryPosition; // 0x136c	
	float stationary_attack_delay; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Rubick_NullField : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Ogre_Magi_DumbLuck : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Brewmaster_Void_Astral_Pull : public CDOTABaseAbility
{
public:
	int32_t pull_speed; // 0x578	
	int32_t pull_distance; // 0x57c	
	Vector m_vTargetPos; // 0x580	
	Vector m_vEndpoint; // 0x58c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Broodmother_SpawnSpideriteDebuff : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hParentSpider; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Courier_Burst : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Courier_ReturnStashItems : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Fissure_Rooted : public CDOTA_Modifier_Rooted
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Bane_Nightmare_AttackSpeed_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_attack_speed; // 0x1338	
	CHandle< CBaseEntity > m_hTarget; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FountainAuraBuff : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tower_Armor_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_armor; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x598
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Wisp_Spirits : public CDOTABaseAbility
{
public:
	CUtlVector< sSpiritDef > m_SpiritDefs; // 0x578	
	int32_t m_nWispDirection; // 0x590	
	int32_t spirit_amount; // 0x594	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Vengeful_Spirit_9 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Techies : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x538
// Has VTable
// 
// MNetworkVarNames "int m_iReliableGold"
// MNetworkVarNames "int m_iUnreliableGold"
// MNetworkVarNames "int m_iStartingPosition"
// MNetworkVarNames "int m_iTotalEarnedGold"
// MNetworkVarNames "int m_iTotalEarnedXP"
// MNetworkVarNames "int m_iSharedGold"
// MNetworkVarNames "int m_iHeroKillGold"
// MNetworkVarNames "int m_iCreepKillGold"
// MNetworkVarNames "int m_iNeutralKillGold"
// MNetworkVarNames "int m_iCourierGold"
// MNetworkVarNames "int m_iBountyGold"
// MNetworkVarNames "int m_iRoshanGold"
// MNetworkVarNames "int m_iBuildingGold"
// MNetworkVarNames "int m_iOtherGold"
// MNetworkVarNames "int m_iComebackGold"
// MNetworkVarNames "int m_iExperimentalGold"
// MNetworkVarNames "int m_iExperimental2Gold"
// MNetworkVarNames "int m_iCreepDenyGold"
// MNetworkVarNames "int m_iTPScrollsPurchased"
// MNetworkVarNames "float m_flCustomStats"
// MNetworkVarNames "int m_iIncomeGold"
// MNetworkVarNames "int m_iWardKillGold"
// MNetworkVarNames "int m_iAbilityGold"
// MNetworkVarNames "int m_iNetWorth"
// MNetworkVarNames "int m_iDenyCount"
// MNetworkVarNames "int m_iLastHitCount"
// MNetworkVarNames "int m_iLastHitStreak"
// MNetworkVarNames "int m_iLastHitMultikill"
// MNetworkVarNames "int m_iNearbyCreepDeathCount"
// MNetworkVarNames "int m_iClaimedDenyCount"
// MNetworkVarNames "int m_iClaimedMissCount"
// MNetworkVarNames "int m_iMissCount"
// MNetworkVarNames "int m_nPossibleHeroSelection"
// MNetworkVarNames "uint16 m_iMetaLevel"
// MNetworkVarNames "uint16 m_iMetaExperience"
// MNetworkVarNames "uint16 m_iMetaExperienceAwarded"
// MNetworkVarNames "GameTime_t m_flBuybackCooldownTime"
// MNetworkVarNames "GameTime_t m_flBuybackGoldLimitTime"
// MNetworkVarNames "float m_flBuybackCostTime"
// MNetworkVarNames "float m_flCustomBuybackCooldown"
// MNetworkVarNames "float m_fStuns"
// MNetworkVarNames "float m_fHealing"
// MNetworkVarNames "float m_fRegeneratedHealth"
// MNetworkVarNames "int m_iTowerKills"
// MNetworkVarNames "int m_iRoshanKills"
// MNetworkVarNames "EHANDLE m_hCameraTarget"
// MNetworkVarNames "EHANDLE m_hOverrideSelectionEntity"
// MNetworkVarNames "int m_iObserverWardsPlaced"
// MNetworkVarNames "int m_iSentryWardsPlaced"
// MNetworkVarNames "int m_iCreepsStacked"
// MNetworkVarNames "int m_iCampsStacked"
// MNetworkVarNames "int m_iRunePickups"
// MNetworkVarNames "int m_iGoldSpentOnSupport"
// MNetworkVarNames "int m_iHeroDamage"
// MNetworkVarNames "int m_iTowerDamage"
// MNetworkVarNames "int m_iWardsPurchased"
// MNetworkVarNames "int m_iWardsDestroyed"
// MNetworkVarNames "CDOTA_UnitInventory m_PreGameInventory"
// MNetworkVarNames "int m_nKillsPerOpposingTeamMember"
// MNetworkVarNames "AbilityID_t m_iSuggestedAbilities"
// MNetworkVarNames "float m_fSuggestedAbilityWeights"
// MNetworkVarNames "AbilityID_t m_iSuggestedPregameItems"
// MNetworkVarNames "AbilityID_t m_iSuggestedItemSequences"
// MNetworkVarNames "WeightedAbilitySuggestion_t m_iSuggestedWeightedItems"
// MNetworkVarNames "WeightedAbilitySuggestion_t m_iSuggestedTopNItems"
// MNetworkVarNames "WeightedAbilitySuggestion_t m_iSuggestedNeutralItems"
// MNetworkVarNames "uint32 m_iSuggestedHeroes"
// MNetworkVarNames "float m_flSuggestedHeroesWeights"
// MNetworkVarNames "int m_iDamageByTypeReceivedPreReduction"
// MNetworkVarNames "int m_iDamageByTypeReceivedPostReduction"
// MNetworkVarNames "int m_iOutgoingDamageByTypePreReduction"
// MNetworkVarNames "int m_iOutgoingDamageByTypePostReduction"
// MNetworkVarNames "OverworldTokenID_t m_uSelectedOverworldTokenRewards"
// MNetworkVarNames "int m_iCommandsIssued"
// MNetworkVarNames "int m_iGoldSpentOnConsumables"
// MNetworkVarNames "int m_iGoldSpentOnItems"
// MNetworkVarNames "int m_iGoldSpentOnBuybacks"
// MNetworkVarNames "int m_iGoldLostToDeath"
// MNetworkVarNames "bool m_bIsNewPlayer"
// MNetworkVarNames "bool m_bIsGuidePlayer"
// MNetworkVarNames "uint64 m_iPlayerSteamID"
// MNetworkVarNames "int m_iSmokesUsed"
// MNetworkVarNames "int m_iNeutralTokensFound"
// MNetworkVarNames "int m_iWatchersTaken"
// MNetworkVarNames "int m_iLotusesTaken"
// MNetworkVarNames "int m_iTormentorKills"
// MNetworkVarNames "int m_iCourierKills"
struct DataTeamPlayer_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	// MNetworkPriority "48"
	int32_t m_iReliableGold; // 0x30	
	// MNetworkEnable
	// MNetworkPriority "48"
	int32_t m_iUnreliableGold; // 0x34	
	// MNetworkEnable
	// MNetworkChangeCallback "OnStartingPositionsChanged"
	int32_t m_iStartingPosition; // 0x38	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iTotalEarnedGold; // 0x3c	
	// MNetworkEnable
	int32_t m_iTotalEarnedXP; // 0x40	
	// MNetworkEnable
	int32_t m_iSharedGold; // 0x44	
	// MNetworkEnable
	int32_t m_iHeroKillGold; // 0x48	
	// MNetworkEnable
	int32_t m_iCreepKillGold; // 0x4c	
	// MNetworkEnable
	int32_t m_iNeutralKillGold; // 0x50	
	// MNetworkEnable
	int32_t m_iCourierGold; // 0x54	
	// MNetworkEnable
	int32_t m_iBountyGold; // 0x58	
	// MNetworkEnable
	int32_t m_iRoshanGold; // 0x5c	
	// MNetworkEnable
	int32_t m_iBuildingGold; // 0x60	
	// MNetworkEnable
	int32_t m_iOtherGold; // 0x64	
	// MNetworkEnable
	int32_t m_iComebackGold; // 0x68	
	// MNetworkEnable
	int32_t m_iExperimentalGold; // 0x6c	
	// MNetworkEnable
	int32_t m_iExperimental2Gold; // 0x70	
	// MNetworkEnable
	int32_t m_iCreepDenyGold; // 0x74	
	// MNetworkEnable
	int32_t m_iTPScrollsPurchased; // 0x78	
	// MNetworkEnable
	float m_flCustomStats; // 0x7c	
	// MNetworkEnable
	int32_t m_iIncomeGold; // 0x80	
	// MNetworkEnable
	int32_t m_iWardKillGold; // 0x84	
	// MNetworkEnable
	int32_t m_iAbilityGold; // 0x88	
	// MNetworkEnable
	int32_t m_iNetWorth; // 0x8c	
	// MNetworkEnable
	int32_t m_iDenyCount; // 0x90	
	// MNetworkEnable
	int32_t m_iLastHitCount; // 0x94	
	// MNetworkEnable
	int32_t m_iLastHitStreak; // 0x98	
	// MNetworkEnable
	int32_t m_iLastHitMultikill; // 0x9c	
	// MNetworkEnable
	int32_t m_iNearbyCreepDeathCount; // 0xa0	
	// MNetworkEnable
	int32_t m_iClaimedDenyCount; // 0xa4	
	// MNetworkEnable
	int32_t m_iClaimedMissCount; // 0xa8	
	// MNetworkEnable
	int32_t m_iMissCount; // 0xac	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSelectionDirty"
	int32_t m_nPossibleHeroSelection; // 0xb0	
	// MNetworkEnable
	uint16_t m_iMetaLevel; // 0xb4	
	// MNetworkEnable
	uint16_t m_iMetaExperience; // 0xb6	
	// MNetworkEnable
	uint16_t m_iMetaExperienceAwarded; // 0xb8	
private:
	[[maybe_unused]] uint8_t __pad00ba[0x2]; // 0xba
public:
	// MNetworkEnable
	GameTime_t m_flBuybackCooldownTime; // 0xbc	
	// MNetworkEnable
	GameTime_t m_flBuybackGoldLimitTime; // 0xc0	
	// MNetworkEnable
	float m_flBuybackCostTime; // 0xc4	
	// MNetworkEnable
	float m_flCustomBuybackCooldown; // 0xc8	
	// MNetworkEnable
	float m_fStuns; // 0xcc	
	// MNetworkEnable
	float m_fHealing; // 0xd0	
	// MNetworkEnable
	float m_fRegeneratedHealth; // 0xd4	
	// MNetworkEnable
	int32_t m_iTowerKills; // 0xd8	
	// MNetworkEnable
	int32_t m_iRoshanKills; // 0xdc	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hCameraTarget; // 0xe0	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hOverrideSelectionEntity; // 0xe4	
	// MNetworkEnable
	int32_t m_iObserverWardsPlaced; // 0xe8	
	// MNetworkEnable
	int32_t m_iSentryWardsPlaced; // 0xec	
	// MNetworkEnable
	int32_t m_iCreepsStacked; // 0xf0	
	// MNetworkEnable
	int32_t m_iCampsStacked; // 0xf4	
	// MNetworkEnable
	int32_t m_iRunePickups; // 0xf8	
	// MNetworkEnable
	int32_t m_iGoldSpentOnSupport; // 0xfc	
	// MNetworkEnable
	int32_t m_iHeroDamage; // 0x100	
	// MNetworkEnable
	int32_t m_iTowerDamage; // 0x104	
	// MNetworkEnable
	int32_t m_iWardsPurchased; // 0x108	
	// MNetworkEnable
	int32_t m_iWardsDestroyed; // 0x10c	
	// MNetworkEnable
	// -> m_SharedCooldownList - 0x118
	// -> m_hItems[19] - 0x130
	// -> m_bItemQueried[21] - 0x17c
	// -> m_iParity - 0x194
	// -> m_hInventoryParent - 0x198
	// -> m_bIsActive - 0x19c
	// -> m_bStashEnabled - 0x19d
	// -> m_hTransientCastItem - 0x1a0
	CDOTA_UnitInventory m_PreGameInventory; // 0x110	
	// MNetworkEnable
	int32_t m_nKillsPerOpposingTeamMember[24]; // 0x1e8	
	// MNetworkEnable
	AbilityID_t m_iSuggestedAbilities[5]; // 0x248	
	// MNetworkEnable
	float m_fSuggestedAbilityWeights[5]; // 0x25c	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSuggestedItemsChanged"
	AbilityID_t m_iSuggestedPregameItems[15]; // 0x270	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSuggestedItemsChanged"
	AbilityID_t m_iSuggestedItemSequences[30]; // 0x2ac	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSuggestedItemsChanged"
	WeightedAbilitySuggestion_t m_iSuggestedWeightedItems[15]; // 0x324	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSuggestedItemsChanged"
	WeightedAbilitySuggestion_t m_iSuggestedTopNItems[3]; // 0x39c	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSuggestedItemsChanged"
	WeightedAbilitySuggestion_t m_iSuggestedNeutralItems[25]; // 0x3b4	
	// MNetworkEnable
	uint32_t m_iSuggestedHeroes[10]; // 0x47c	
	// MNetworkEnable
	float m_flSuggestedHeroesWeights[10]; // 0x4a4	
	// MNetworkEnable
	int32_t m_iDamageByTypeReceivedPreReduction[3]; // 0x4cc	
	// MNetworkEnable
	int32_t m_iDamageByTypeReceivedPostReduction[3]; // 0x4d8	
	// MNetworkEnable
	int32_t m_iOutgoingDamageByTypePreReduction[3]; // 0x4e4	
	// MNetworkEnable
	int32_t m_iOutgoingDamageByTypePostReduction[3]; // 0x4f0	
	// MNetworkEnable
	OverworldTokenID_t m_uSelectedOverworldTokenRewards[3]; // 0x4fc	
private:
	[[maybe_unused]] uint8_t __pad04ff[0x1]; // 0x4ff
public:
	// MNetworkEnable
	int32_t m_iCommandsIssued; // 0x500	
	// MNetworkEnable
	int32_t m_iGoldSpentOnConsumables; // 0x504	
	// MNetworkEnable
	int32_t m_iGoldSpentOnItems; // 0x508	
	// MNetworkEnable
	int32_t m_iGoldSpentOnBuybacks; // 0x50c	
	// MNetworkEnable
	int32_t m_iGoldLostToDeath; // 0x510	
	// MNetworkEnable
	bool m_bIsNewPlayer; // 0x514	
	// MNetworkEnable
	bool m_bIsGuidePlayer; // 0x515	
private:
	[[maybe_unused]] uint8_t __pad0516[0x2]; // 0x516
public:
	// MNetworkEnable
	// MNetworkEncoder "fixed64"
	// MNetworkChangeCallback "OnPlayerSteamIDsChanged"
	uint64_t m_iPlayerSteamID; // 0x518	
	// MNetworkEnable
	int32_t m_iSmokesUsed; // 0x520	
	// MNetworkEnable
	int32_t m_iNeutralTokensFound; // 0x524	
	// MNetworkEnable
	int32_t m_iWatchersTaken; // 0x528	
	// MNetworkEnable
	int32_t m_iLotusesTaken; // 0x52c	
	// MNetworkEnable
	int32_t m_iTormentorKills; // 0x530	
	// MNetworkEnable
	int32_t m_iCourierKills; // 0x534	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_AbyssalUnderlord : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Elder_Titan : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mutation_Treecutter_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Evasion : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Urn_Of_Shadows : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Oracle_FalsePromise : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Undying_Decay_BuffCounter : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Beastmaster_DrumsOfSlom : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1338	
	int32_t radius; // 0x133c	
	int32_t max_stacks; // 0x1340	
	float base_damage; // 0x1344	
	int32_t heal_pct; // 0x1348	
	int32_t creep_heal_pct; // 0x134c	
	int32_t iCurrentAttacksAtMinInterval; // 0x1350	
	float stack_decay_time; // 0x1354	
	float max_drum_hit_interval; // 0x1358	
	float min_drum_hit_interval; // 0x135c	
	GameTime_t m_flLastStackChangeTime; // 0x1360	
	GameTime_t m_flLastDrumHitTime; // 0x1364	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Beastmaster_WildAxes : public CDOTABaseAbility
{
public:
	int32_t axe_damage; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Riki_Backstab : public CDOTA_Modifier_PersistentInvisibility
{
public:
	int32_t backstab_angle; // 0x1348	
	int32_t cleave; // 0x134c	
	float damage_multiplier; // 0x1350	
	float bonus_xp_kill; // 0x1354	
	float bonus_xp_assist; // 0x1358	
	bool m_bBackstab; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AntiMage_Counterspell_Passive : public CDOTA_Buff
{
public:
	int32_t magic_resistance; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4e0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLogicLineToEntity : public CLogicalEntity
{
public:
	CEntityOutputTemplate< Vector > m_Line; // 0x4a8	
	CUtlSymbolLarge m_SourceName; // 0x4d0	
	CHandle< CBaseEntity > m_StartEntity; // 0x4d8	
	CHandle< CBaseEntity > m_EndEntity; // 0x4dc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Bane_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Gold_lvl20_l : public CDOTA_Ability_Special_Bonus_Gold_Ability_Draft
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xef38
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "PlayerResourcePlayerTeamData_t m_vecPlayerTeamData"
// MNetworkVarNames "PlayerResourcePlayerData_t m_vecPlayerData"
// MNetworkVarNames "PlayerResourceBroadcasterData_t m_vecBrodcasterData"
// MNetworkVarNames "uint32 m_vecEventsForDisplay"
// MNetworkVarNames "int8 m_nPrimaryEventIndex"
class CDOTA_PlayerResource : public CBaseEntity
{
public:
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< PlayerResourcePlayerTeamData_t > m_vecPlayerTeamData; // 0x4a8	
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< PlayerResourcePlayerData_t > m_vecPlayerData; // 0x4f8	
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< PlayerResourceBroadcasterData_t > m_vecBrodcasterData; // 0x548	
	// MNetworkEnable
	CNetworkUtlVectorBase< uint32 > m_vecEventsForDisplay; // 0x598	
	// MNetworkEnable
	int8_t m_nPrimaryEventIndex; // 0x5b0	
private:
	[[maybe_unused]] uint8_t __pad05b1[0x13]; // 0x5b1
public:
	CHandle< CBaseEntity > m_playerIDToPlayer[64]; // 0x5c4	
private:
	[[maybe_unused]] uint8_t __pad06c4[0x244]; // 0x6c4
public:
	CUtlVector< sPendingTreeRemoval > m_vecPendingTreeRemovals; // 0x908	
	CUtlVector< sPendingTreeModelChange > m_vecPendingTreeModelChanges; // 0x920	
	float m_flClaimedFarm[24]; // 0x938	
	float m_flEarnedCreepFarm[24]; // 0x998	
	int32_t m_iScaledPlayerDamage[24]; // 0x9f8	
	int32_t m_iScaledTowerDamage[24]; // 0xa58	
	int32_t m_iScaledHealing[24]; // 0xab8	
	int32_t m_iSupportAbilityValue[24]; // 0xb18	
	int32_t m_nNumMouseClickCastOrders[24]; // 0xb78	
	float m_flTimeWithUnspentSkillPoints[24]; // 0xbd8	
	int32_t m_iRawPlayerDamage[24]; // 0xc38	
	int32_t m_iRawTowerDamage[24]; // 0xc98	
	int32_t m_iRawHealing[24]; // 0xcf8	
	int32_t m_iRawPlayerDamageReceivedPreReduction[3][24]; // 0xd58	
	int32_t m_iRawPlayerDamageReceivedPostReduction[3][24]; // 0xe78	
	int32_t m_iTotalPlayerDamageMatrix[24][24]; // 0xf98	
	int32_t m_iRawPlayerDamageMatrix[24][24]; // 0x1898	
	int32_t m_iAssistsMatrix[24][24]; // 0x2198	
	int32_t m_iTimeLastSeen[24]; // 0x2a98	
	int32_t m_iTotalDisconnectedTime[24]; // 0x2af8	
	double m_dTimeLastRecieved[24]; // 0x2b58	
	int32_t m_iGoldBonusEarned[24]; // 0x2c18	
	int32_t m_iExperimentalGoldEarned[24]; // 0x2c78	
	int32_t m_iExperimental2GoldEarned[24]; // 0x2cd8	
	int32_t m_iCreepDenyGoldEarned[24]; // 0x2d38	
	int32_t m_iTPScrollsPurchased[24]; // 0x2d98	
private:
	[[maybe_unused]] uint8_t __pad2df8[0x240]; // 0x2df8
public:
	int32_t m_iAegisPickups[24]; // 0x3038	
	int32_t m_iTeleportsUsed[24]; // 0x3098	
	int32_t m_iNumConsumablesPurchased[24]; // 0x30f8	
	int32_t m_iNumItemsPurchased[24]; // 0x3158	
	CUtlVector< PurchasedItem_t > m_vecItemsPurchased[24]; // 0x31b8	
	float m_flTimeOfLastItemPurchase[24]; // 0x33f8	
	float m_flTimeOfLastConsumablePurchase[24]; // 0x3458	
	float m_flTimeOfLastDeath[24]; // 0x34b8	
	int32_t m_iTowerDamageTaken[24]; // 0x3518	
	int32_t m_iCreepDamageTaken[24]; // 0x3578	
	int32_t m_iHeroDamageTaken[24]; // 0x35d8	
	int32_t m_iTotalTowerDamageTaken[24]; // 0x3638	
	int32_t m_iTotalCreepDamageTaken[24]; // 0x3698	
	int32_t m_iTotalHeroDamageTaken[24]; // 0x36f8	
private:
	[[maybe_unused]] uint8_t __pad3758[0x240]; // 0x3758
public:
	int32_t m_iRank[24]; // 0x3998	
	bool m_bRankCalibrated[24]; // 0x39f8	
	bool m_bLowPriority[24]; // 0x3a10	
	int32_t m_nWins[24]; // 0x3a28	
	int32_t m_nLosses[24]; // 0x3a88	
	int32_t m_nSmurfCategory[24]; // 0x3ae8	
	bool m_bWasHeroPickDotaPlusSuggestion[24]; // 0x3b48	
	GameTime_t m_flLastActiveTime[24]; // 0x3b60	
	float m_flIdleTime[24]; // 0x3bc0	
	bool m_bLoggedInElsewhere[24]; // 0x3c20	
	bool m_bPlayerLoadedCompletely[64]; // 0x3c38	
	int32_t m_iDisconnectionReason[64]; // 0x3c78	
private:
	[[maybe_unused]] uint8_t __pad3d78[0x600]; // 0x3d78
public:
	uint64_t m_SelectedGuide[64]; // 0x4378	
	bool m_bIsUsingPlusGuide[64]; // 0x4578	
	uint32_t m_vecPredictedRanks[64]; // 0x45b8	
private:
	[[maybe_unused]] uint8_t __pad46b8[0xc00]; // 0x46b8
public:
	uint32_t m_unLastRadiantFortPct; // 0x52b8	
	uint32_t m_unLastDireFortPct; // 0x52bc	
	int32_t m_iCustomTeamAssignments[24]; // 0x52c0	
	CUtlVector< float32 > m_vecPlayerLevelUpTimes[24]; // 0x5320	
	int32_t m_iManaSpent[64][6]; // 0x5560	
	int32_t m_iNeutralOption[64][6][6]; // 0x5b60	
	bool m_bLeaverAlreadyDetected; // 0x7f60	
private:
	[[maybe_unused]] uint8_t __pad7f61[0x427]; // 0x7f61
public:
	CUtlVector< TimedKillEvent_t > m_TimedKillList; // 0x8388	
	CUtlVector< TimedKillEvent_t > m_TimedAssistList; // 0x83a0	
	CUtlVector< TimedKillEvent_t > m_TimedDeathList; // 0x83b8	
	uint32_t m_unLastHeroPickOrder; // 0x83d0	
	int32_t m_iBountyGoldEarned[24]; // 0x83d4	
	int32_t m_iRangeCreepUpgradeGoldEarned[24]; // 0x8434	
	int32_t m_iObserverWardsDestroyed[24]; // 0x8494	
	int32_t m_iReliableGoldEarned[24]; // 0x84f4	
	int32_t m_iGoldLossPrevented[24]; // 0x8554	
private:
	[[maybe_unused]] uint8_t __pad85b4[0x5c]; // 0x85b4
public:
	CUtlVector< CHandle< CDOTA_Unit_Courier > > m_hTeamCouriers[15]; // 0x8610	
	CUtlVector< CHandle< CDOTA_Unit_Courier > > m_hPlayerCouriers[64]; // 0x8778	
	float m_flAvailableLaneGold[15]; // 0x8d78	
private:
	[[maybe_unused]] uint8_t __pad8db4[0x4]; // 0x8db4
public:
	CUtlVector< DamageShareEvent_t > m_DamageShareList[24]; // 0x8db8	
	DamageShareEvent_t m_AbsorbedDamageRollup[24][25]; // 0x8ff8	
	AbilityID_t m_playerAbilityUpgradeOrder[24][25]; // 0xac18	
	int32_t m_playerAbilityUpgradeTimes[24][25]; // 0xb578	
	int32_t m_playerAbilityUpgradeCount[24]; // 0xbed8	
private:
	[[maybe_unused]] uint8_t __padbf38[0x40]; // 0xbf38
public:
	int32_t m_fullUpdateCount[64]; // 0xbf78	
	int32_t m_iCouriersDeployed[24]; // 0xc078	
	int32_t m_iCouriersPotentiallyKilled[24]; // 0xc0d8	
	int32_t m_iCommandsIssued[24]; // 0xc138	
	uint32_t m_hHeroSpawnGroup[24]; // 0xc198	
private:
	[[maybe_unused]] uint8_t __padc1f8[0x17c0]; // 0xc1f8
public:
	float m_fNextLaneDetectionUpdate; // 0xd9b8	
	float m_fNextTimedHeroStatsUpdate; // 0xd9bc	
private:
	[[maybe_unused]] uint8_t __padd9c0[0x2a0]; // 0xd9c0
public:
	bool m_bInitializedLaneWaypoints; // 0xdc60	
private:
	[[maybe_unused]] uint8_t __paddc61[0x757]; // 0xdc61
public:
	uint32_t m_nLastWardSuggestionBuildingState; // 0xe3b8	
	uint32_t m_nLastWardSuggestionUpdateNum; // 0xe3bc	
	bool m_bLastWardSuggestionRoshanAlive; // 0xe3c0	
	bool m_bDoFinalPregameSuggestion[10]; // 0xe3c1	
private:
	[[maybe_unused]] uint8_t __pade3cb[0x1]; // 0xe3cb
public:
	float m_fNextCreepDistanceUpdate; // 0xe3cc	
	float m_fCreepDistanceSafe[15]; // 0xe3d0	
	float m_fCreepDistanceMid[15]; // 0xe40c	
	float m_fCreepDistanceOff[15]; // 0xe448	
	GameTime_t m_fLastSuggestionTime; // 0xe484	
	bool m_bHasRevealedAnonymizedEnemyPlayerInfo; // 0xe488	
private:
	[[maybe_unused]] uint8_t __pade489[0x607]; // 0xe489
public:
	PlayerID_t m_nRequestedBotPlayerID; // 0xea90	
	float m_fNextCombatLogLocationUpdateTime; // 0xea94	
	float m_fNextAPMUpdateTime; // 0xea98	
private:
	[[maybe_unused]] uint8_t __padea9c[0x4]; // 0xea9c
public:
	CUtlVector< uint32 > m_vecPendingPlayerResourceRequests; // 0xeaa0	
	int32_t m_iRampages[24]; // 0xeab8	
	int32_t m_iTripleKills[24]; // 0xeb18	
	int32_t m_iCouriersKilled[24]; // 0xeb78	
	int32_t m_iAegisesSnatched[24]; // 0xebd8	
	int32_t m_iCheesesEaten[24]; // 0xec38	
	int32_t m_iRapiersPurchased[24]; // 0xec98	
	float m_flPushingDamage[24]; // 0xecf8	
	int32_t m_iRoshanKillsNight[24]; // 0xed58	
	int32_t m_iRoshanKillsDay[24]; // 0xedb8	
	int32_t m_iPortalsUsed[24]; // 0xee18	
	int32_t m_iWisdomRunesGained[24]; // 0xee78	
	int32_t m_iShieldRunesGained[24]; // 0xeed8	
	
	// Static fields:
	static uint64_t &Get_s_unLobbySteamID(){return *reinterpret_cast<uint64_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_PlayerResource")->GetStaticFields()[0]->m_pInstance);};
	static uint64_t &Get_s_unLobbyPartyID(){return *reinterpret_cast<uint64_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_PlayerResource")->GetStaticFields()[1]->m_pInstance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1a20
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CIngameEvent_WM2016 : public CIngameEvent_Base
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xc0
// Has VTable
// Is Abstract
class CMultiplayRules : public CGameRules
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Beastmaster_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1770
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Phantom_Assassin_GroundDagger : public CDOTA_BaseNPC_Additive
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1768	
	
	// Static fields:
	static char* &Get_PARTICLE_SPAWN(){return *reinterpret_cast<char**>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_BaseNPC_Phantom_Assassin_GroundDagger")->GetStaticFields()[0]->m_pInstance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_GraniteGolem_HPAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Effigy_AghsFort : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_TreantMiniboss_NaturesGuise_NearTreeDisplay : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_All_Stats : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Arcane_Blink : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Diadem : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Slippers : public CDOTA_Buff_Item
{
public:
	int32_t bonus_agility; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dawnbreaker_Converge : public CDOTA_Buff
{
public:
	int32_t move_slow; // 0x1338	
	int32_t burn_damage; // 0x133c	
	float burn_interval; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_GodsRebuke_ExtraCrit : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1380
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pangolier_GyroshellBounce : public CDOTA_Buff
{
public:
	Vector m_vLoc; // 0x1338	
	float m_flPredictedTotalTime; // 0x1344	
	Vector m_vStartPosition; // 0x1348	
	float m_flCurrentTimeHoriz; // 0x1354	
	float m_flCurrentTimeVert; // 0x1358	
	bool m_bHorizontalMotionInterrupted; // 0x135c	
	bool m_bTargetTeleported; // 0x135d	
private:
	[[maybe_unused]] uint8_t __pad135e[0x2]; // 0x135e
public:
	Vector m_vHorizontalVelocity; // 0x1360	
	Vector m_vLastKnownTargetPosition; // 0x136c	
	float m_flInitialVelocityZ; // 0x1378	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Shredder_Reactive_Armor : public CDOTA_Buff
{
public:
	int32_t stack_limit; // 0x1338	
	float stack_duration; // 0x133c	
	int32_t stacks_per_hero_attack; // 0x1340	
	GameTime_t m_flStackDieTime; // 0x1344	
	ParticleIndex_t m_pFXIndex[4]; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13a8
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TrollWarlord_Whirling_Axes_Melee : public CDOTA_Buff
{
public:
	int32_t damage; // 0x1338	
	int32_t hit_radius; // 0x133c	
	int32_t axe_movement_speed; // 0x1340	
	float whirl_duration; // 0x1344	
	float max_range; // 0x1348	
	float blind_duration; // 0x134c	
	float m_flRotation; // 0x1350	
	float m_flAxeRadius; // 0x1354	
	GameTime_t m_flWhirlDieTime; // 0x1358	
	float m_bPiercesMagicImmunity; // 0x135c	
	int32_t m_nSwapIndex; // 0x1360	
	bool m_bReturning; // 0x1364	
private:
	[[maybe_unused]] uint8_t __pad1365[0x3]; // 0x1365
public:
	ParticleIndex_t m_nAxeFXIndex[2]; // 0x1368	
	int32_t m_nHeroesHitForRelic; // 0x1370	
private:
	[[maybe_unused]] uint8_t __pad1374[0x4]; // 0x1374
public:
	CUtlVector< CHandle< CBaseEntity > > hitEntities; // 0x1378	
	CUtlVector< CHandle< CBaseEntity > > m_hAxes; // 0x1390	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_LoneDruid_TrueForm : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Brewmaster_Pulverize : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Gyrocopter_Homing_Missile : public CDOTABaseAbility
{
public:
	CHandle< CDOTABaseAbility > m_hSourceAbility; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Furion_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_DragonKnight_ElderDragonForm : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Death_Prophet_Slow : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_CallOfTheWild_Boar_Poison : public CDOTA_Modifier_CallOfTheWild_Boar_PoisonBase
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Beastmaster_CallOfTheWild_Boar : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CEnvCubemapBox : public CEnvCubemap
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_Creature_Venomancer_PoisonNova : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXPreview; // 0x578	
	int32_t radius; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AghsFort_Creature_Impale : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nPreviewFX; // 0x578	
	int32_t width; // 0x57c	
	float duration; // 0x580	
	int32_t length; // 0x584	
	int32_t speed; // 0x588	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lifestealer_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ogre_Magi_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Speed_80 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Gold_lvl15_l : public CDOTA_Ability_Special_Bonus_Gold_Ability_Draft
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x508
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "bool m_bVotingClosed"
// MNetworkVarNames "bool m_bAllPredictionsFinished"
// MNetworkVarNames "InGamePredictionData_t m_vecPredictions"
// MNetworkVarNames "LeagueID_t m_nLeagueID"
class CDOTAInGamePredictionState : public CBaseEntity
{
public:
	// MNetworkEnable
	bool m_bVotingClosed; // 0x4a8	
	// MNetworkEnable
	// MNetworkChangeCallback "OnAllPredictionsFinished"
	bool m_bAllPredictionsFinished; // 0x4a9	
private:
	[[maybe_unused]] uint8_t __pad04aa[0x6]; // 0x4aa
public:
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< InGamePredictionData_t > m_vecPredictions; // 0x4b0	
	// MNetworkEnable
	LeagueID_t m_nLeagueID; // 0x500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x6e0
// Has VTable
// Construct allowed
// MNetworkNoBase
// MNetworkAssumeNotNetworkable
// 
// MNetworkIncludeByUserGroup "Origin"
// MNetworkVarNames "float32 m_flFadeInDuration"
// MNetworkVarNames "float32 m_flFadeOutDuration"
// MNetworkVarNames "float32 m_flMaxWeight"
// MNetworkVarNames "bool m_bEnabled"
// MNetworkVarNames "bool m_bMaster"
// MNetworkVarNames "bool m_bClientSide"
// MNetworkVarNames "bool m_bExclusive"
// MNetworkVarNames "float32 m_MinFalloff"
// MNetworkVarNames "float32 m_MaxFalloff"
// MNetworkVarNames "float32 m_flCurWeight"
// MNetworkVarNames "char m_netlookupFilename"
class CColorCorrection : public CBaseEntity
{
public:
	// MNetworkEnable
	float m_flFadeInDuration; // 0x4a8	
	// MNetworkEnable
	float m_flFadeOutDuration; // 0x4ac	
	float m_flStartFadeInWeight; // 0x4b0	
	float m_flStartFadeOutWeight; // 0x4b4	
	GameTime_t m_flTimeStartFadeIn; // 0x4b8	
	GameTime_t m_flTimeStartFadeOut; // 0x4bc	
	// MNetworkEnable
	float m_flMaxWeight; // 0x4c0	
	bool m_bStartDisabled; // 0x4c4	
	// MNetworkEnable
	bool m_bEnabled; // 0x4c5	
	// MNetworkEnable
	bool m_bMaster; // 0x4c6	
	// MNetworkEnable
	bool m_bClientSide; // 0x4c7	
	// MNetworkEnable
	bool m_bExclusive; // 0x4c8	
private:
	[[maybe_unused]] uint8_t __pad04c9[0x3]; // 0x4c9
public:
	// MNetworkEnable
	float m_MinFalloff; // 0x4cc	
	// MNetworkEnable
	float m_MaxFalloff; // 0x4d0	
	// MNetworkEnable
	float m_flCurWeight; // 0x4d4	
	// MNetworkEnable
	char m_netlookupFilename[512]; // 0x4d8	
	CUtlSymbolLarge m_lookupFilename; // 0x6d8	
	
	// Datamap fields:
	// void CColorCorrectionFadeInThink; // 0x0
	// void CColorCorrectionFadeOutThink; // 0x0
	// void m_netlookupFilename; // 0x4d8
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
	// float InputSetFadeInDuration; // 0x0
	// float InputSetFadeOutDuration; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Shredder : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Pudge : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Agility : public CDOTA_Buff
{
public:
	int32_t value; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Disperser_Evasion_Buff : public CDOTA_Buff
{
public:
	int32_t purge_bonus_miss_rate; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Buckler : public CDOTA_Buff_Item
{
public:
	bool m_bAppliesToCreeps; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	int32_t bonus_aoe_radius; // 0x133c	
	float armor; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Mantle : public CDOTA_Buff_Item
{
public:
	int32_t bonus_intellect; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Visage_Silent_As_The_Grave : public CDOTA_Modifier_Invisible
{
public:
	bool m_bHasMadeAttack; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SpiritBreaker_GreaterBash : public CDOTA_Buff
{
public:
	int32_t chance_pct; // 0x1338	
	float damage; // 0x133c	
	float movespeed_duration; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Chen_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Chen_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Broodmother_StickySnare_Root : public CDOTA_Buff
{
public:
	float damage_per_second; // 0x1338	
	bool m_bFirstSecond; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Omniknight_Marty : public CDOTA_Buff
{
public:
	int32_t base_strength; // 0x1338	
	int32_t base_hpregen; // 0x133c	
	int32_t strength_bonus; // 0x1340	
	int32_t nDebuffAmount; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DarkSeer_Surge_Trail_Thinker : public CDOTA_Buff
{
public:
	int32_t trail_radius; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Furion_Sprout_Damage_Aura : public CDOTA_Buff
{
public:
	ParticleIndex_t m_nFXIndex; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Sniper_Assassinate_Crit : public CDOTA_Buff
{
public:
	int32_t scepter_crit_damage; // 0x1338	
	int32_t scatter_damage_pct; // 0x133c	
	bool is_secondary; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x558
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CSoundEventEntityAlias_snd_event_point : public CSoundEventEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Phoenix_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Alchemist_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Alchemist : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Tusk_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Base_Damage_15 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1
// Has Trivial Constructor
// Has Trivial Destructor
// 
// MPulseProvideFeatureTag "PulseEntities"
// MPulseLibraryBindings
class CBaseEntityAPI
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x1]; // 0x0
public:
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1878
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Underlord_Portal : public CDOTA_BaseNPC_Building
{
public:
	CHandle< CBaseEntity > m_hOtherPortal; // 0x1870	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_TutorialNPCBlocker : public CDOTA_Buff
{
public:
	Vector m_vecStart; // 0x1338	
	Vector m_vecEnd; // 0x1344	
	Vector m_vecCenter; // 0x1350	
	ParticleIndex_t m_nFXIndex; // 0x135c	
	bool m_bHidden; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Swift_Blink_Buff : public CDOTA_Buff
{
public:
	int32_t bonus_movement; // 0x1338	
	int32_t bonus_agi_active; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Havoc_Hammer : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t bonus_strength; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_MeteorHammer_Land : public CDOTA_Buff
{
public:
	int32_t impact_radius; // 0x1338	
	float land_time; // 0x133c	
	float burn_duration; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Silver_Edge : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Necronomicon_Level2 : public CDOTA_Item_Necronomicon
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_ObserverWard : public CDOTA_Buff_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pangolier_HeartPiercer_Debuff : public CDOTA_Buff
{
public:
	int32_t slow_pct; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Clinkz_Strafe : public CDOTA_Buff
{
public:
	int32_t attack_speed_bonus; // 0x1338	
	int32_t attack_range_bonus; // 0x133c	
	int32_t archer_attack_speed_pct; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Leshrac_Diabolic_Edict : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Viper_ViperStrike : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Animation_RightClawSwipe : public CDOTA_Ability_Animation_Attack
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Enigma_MidnightPulse : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Kunkka_Tidebringer_Slow : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x158
// Has VTable
class CDOTABehaviorCommandMoveToPosition
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	Vector m_vPosition; // 0x148	
	bool m_bDirectional; // 0x154	
	bool m_bRelative; // 0x155	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_PudgeMiniboss_HatefulStrike : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cast_Range_100 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_SpiritBreaker : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "uint8 m_unCurrentArcanaKillStreak"
// MNetworkVarNames "uint8 m_unBestArcanaKillStreak"
// MNetworkVarNames "PlayerID_t m_nVictimPlayerID"
// MNetworkVarNames "bool m_bArcanaKillstreakRecordBroken"
class CDOTA_Unit_Hero_Spectre : public CDOTA_BaseNPC_Hero
{
public:
	bool m_bArcanaKillstreakCompleted; // 0x1d98	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSpectreArcanaProgressChanged"
	uint8_t m_unCurrentArcanaKillStreak; // 0x1d99	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSpectreArcanaProgressChanged"
	uint8_t m_unBestArcanaKillStreak; // 0x1d9a	
private:
	[[maybe_unused]] uint8_t __pad1d9b[0x1]; // 0x1d9b
public:
	// MNetworkEnable
	// MNetworkChangeCallback "OnSpectreArcanaProgressChanged"
	PlayerID_t m_nVictimPlayerID; // 0x1d9c	
	// MNetworkEnable
	// MNetworkChangeCallback "OnSpectreArcanaProgressChanged"
	bool m_bArcanaKillstreakRecordBroken; // 0x1da0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_Ascension_MagneticField_Evasion : public CDOTA_Buff
{
public:
	int32_t evasion_chance; // 0x1338	
	int32_t radius; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Giants_Ring_Visual : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_IcarusWingsBuff : public CDOTA_Buff_Item
{
public:
	int32_t status_resistance; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Aether_Lens : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_WraithBand : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Oracle_RainOfDestiny_Aura : public CDOTA_Buff
{
public:
	float damage; // 0x1338	
	int32_t radius; // 0x133c	
	ParticleIndex_t m_nFXIndex; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Techies_Arcana_DamageListener : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Centaur_DoubleEdge : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXIndex; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Keeper_of_the_Light_13 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Undying_Tombstone : public CDOTABaseAbility
{
public:
	CUtlVector< CHandle< CBaseEntity > > m_vZombies; // 0x578	
	CHandle< CBaseEntity > hTombstone; // 0x590	
	int32_t radius; // 0x594	
	float duration; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Broodmother_PoisonSting : public CDOTA_Buff
{
public:
	float duration; // 0x1338	
	float duration_hero; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Enchantress_NaturesAttendants : public CDOTA_Buff
{
public:
	float heal_interval; // 0x1338	
	float heal; // 0x133c	
	int32_t radius; // 0x1340	
	int32_t wisp_count; // 0x1344	
	int32_t movespeed; // 0x1348	
	ParticleIndex_t m_nWispFXIndex; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Beastmaster_CallOfTheWild_Hawk : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hOwner; // 0x1338	
	int32_t attack_radius; // 0x133c	
	GameTime_t m_flLastAttack; // 0x1340	
	float roaming_seconds_per_rotation; // 0x1344	
	int32_t roaming_radius; // 0x1348	
	float attack_interval; // 0x134c	
	int32_t min_move_speed; // 0x1350	
	int32_t max_move_speed; // 0x1354	
	int32_t m_iPreviousHawkCount; // 0x1358	
	float m_flRotation; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Razor_EyeOfTheStorm_Armor : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Axe_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Nevermore_Requiem : public CDOTABaseAbility
{
public:
	int32_t requiem_line_width_start; // 0x578	
	int32_t requiem_line_width_end; // 0x57c	
	int32_t m_nCachedSouls; // 0x580	
	ParticleIndex_t m_nFXIndex; // 0x584	
	int32_t m_nKilleater_nLines; // 0x588	
private:
	[[maybe_unused]] uint8_t __pad058c[0x4]; // 0x58c
public:
	CUtlVector< CHandle< CBaseEntity > > m_vecHeroesReqd; // 0x590	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Bane_Nightmare : public CDOTABaseAbility
{
public:
	int32_t m_nNightmareSwapCount; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Aghsfort_BootsOfTravel_2 : public CDOTA_Item_Aghsfort_BootsOfTravel
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Ancient_Apparition_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Exp_Boost_10 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Cast_Range_350 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x510
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPointPrefab : public CServerOnlyPointEntity
{
public:
	CUtlSymbolLarge m_targetMapName; // 0x4a8	
	CUtlSymbolLarge m_forceWorldGroupID; // 0x4b0	
	CUtlSymbolLarge m_associatedRelayTargetName; // 0x4b8	
	bool m_fixupNames; // 0x4c0	
	bool m_bLoadDynamic; // 0x4c1	
private:
	[[maybe_unused]] uint8_t __pad04c2[0x2]; // 0x4c2
public:
	CHandle< CPointPrefab > m_associatedRelayEntity; // 0x4c4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1770
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Announcer_Killing_Spree : public CDOTA_Unit_Announcer
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18e0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_nEncounterType"
// MNetworkVarNames "bool m_bIsEliteEncounter"
// MNetworkVarNames "bool m_bIsAscensionLevelPicker"
// MNetworkVarNames "string_t m_strEncounterName"
// MNetworkVarNames "string_t m_strAscensionAbilities"
// MNetworkVarNames "EHANDLE m_hEffigy"
// MNetworkVarNames "CHandle<CBaseAnimating> m_hRoomGate"
// MNetworkVarNames "bool m_bIsBeingChanneled"
// MNetworkVarNames "float m_flGoalCaptureProgress"
class CDOTA_BaseNPC_AghsFort_Watch_Tower : public CDOTA_BaseNPC_Building
{
private:
	[[maybe_unused]] uint8_t __pad1870[0x10]; // 0x1870
public:
	int32_t m_nOptionNumber; // 0x1880	
	float m_flMovePlayersRadius; // 0x1884	
	CDOTA_BaseNPC_AghsFort_Watch_Tower::ExitDirection_t m_nExitDirection; // 0x1888	
	Vector m_vExitLocation; // 0x188c	
	int32_t m_nPathSelectedID; // 0x1898	
	// MNetworkEnable
	int32_t m_nEncounterType; // 0x189c	
	// MNetworkEnable
	bool m_bIsEliteEncounter; // 0x18a0	
	// MNetworkEnable
	bool m_bIsAscensionLevelPicker; // 0x18a1	
private:
	[[maybe_unused]] uint8_t __pad18a2[0x6]; // 0x18a2
public:
	// MNetworkEnable
	CUtlSymbolLarge m_strEncounterName; // 0x18a8	
	// MNetworkEnable
	CUtlSymbolLarge m_strAscensionAbilities; // 0x18b0	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hEffigy; // 0x18b8	
	int32_t m_nDepth; // 0x18bc	
	CHandle< CDOTA_BaseNPC_Effigy_AghsFort > m_hPedestal; // 0x18c0	
	CHandle< CBaseEntity > m_hParticleSystem; // 0x18c4	
private:
	[[maybe_unused]] uint8_t __pad18c8[0x8]; // 0x18c8
public:
	// MNetworkEnable
	CHandle< CBaseAnimatingActivity > m_hRoomGate; // 0x18d0	
	// MNetworkEnable
	bool m_bIsBeingChanneled; // 0x18d4	
private:
	[[maybe_unused]] uint8_t __pad18d5[0x3]; // 0x18d5
public:
	// MNetworkEnable
	float m_flGoalCaptureProgress; // 0x18d8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tornado_Tempest_Debuff : public CDOTA_Buff
{
public:
	int32_t movespeed_slow; // 0x1338	
	int32_t attackspeed_slow; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Ascension_Bulwark : public CDOTA_Buff
{
public:
	float physical_damage_reduction; // 0x1338	
	float physical_damage_reduction_side; // 0x133c	
	float forward_angle; // 0x1340	
	float side_angle; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_TiaraOfSelemene : public CDOTA_Buff_Item
{
public:
	float bonus_mana_regen; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_WandOfTheBrine : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Paintball_Debuff : public CDOTA_Buff
{
public:
	int32_t dps; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Witch_Blade : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Ninja_Gear : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Assault_Cuirass : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1338	
	int32_t bonus_armor; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_RodOfAtos : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_CloudRun : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Magnataur_Shockwave_Erupt : public CDOTA_Buff
{
public:
	int32_t scepter_width; // 0x1338	
	float scepter_duration; // 0x133c	
	bool play_particle; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	Vector m_vStart; // 0x1344	
	Vector m_vEnd; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Brewmaster_PrimalSplit : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
	CHandle< CBaseEntity > m_hSecondaryTarget; // 0x133c	
	CHandle< CBaseEntity > m_hTertiaryTarget; // 0x1340	
	CHandle< CBaseEntity > m_hFourthTarget; // 0x1344	
	CHandle< CBaseEntity > m_hReturnBrewling; // 0x1348	
	int32_t m_nFXIndex; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Alchemist_GoblinsGreed : public CDOTA_Buff
{
public:
	CUtlVector< GameTime_t > m_DeathList; // 0x1338	
	float damage; // 0x1350	
	float duration; // 0x1354	
	int32_t bonus_gold; // 0x1358	
	int32_t bonus_bonus_gold; // 0x135c	
	int32_t bonus_gold_cap; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rattletrap_Cog_Immune : public CDOTA_Modifier_DebuffImmune
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Beastmaster_DrumsOfSlom_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Sniper_Assassinate : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_CDOTA_Modifier_CrystalMaiden_IceRink_Movement_Ricochet : public CDOTA_Buff
{
public:
	float m_flStartZ; // 0x1338	
	float m_flCurTime; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_StormSpirit_Overload_Passive : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nevermore_Presence : public CDOTA_Buff
{
public:
	int32_t presence_armor_reduction; // 0x1338	
	int32_t bonus_armor_per_stack; // 0x133c	
	bool m_bWasHidden; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_StackedNeutral : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Luna_1 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Elder_Titan : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Sniper_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Agility_15 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Movement_Speed_100 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_175 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5758
// Has VTable
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_nRuneCycle"
// MNetworkVarNames "int m_iMiscHeroPickCounter"
// MNetworkVarNames "CHandle< CBaseEntity> m_hEndGameCinematicEntity"
// MNetworkVarNames "CHandle< CDOTA_BaseNPC> m_hOverlayHealthBarUnit"
// MNetworkVarNames "int m_nOverlayHealthBarType"
// MNetworkVarNames "bool m_bIsInCinematicMode"
// MNetworkVarNames "bool m_bFreeCourierMode"
// MNetworkVarNames "uint32 m_unFanfareGoodGuys"
// MNetworkVarNames "uint32 m_unFanfareBadGuys"
// MNetworkVarNames "int m_nGameState"
// MNetworkVarNames "DOTA_HeroPickState m_nHeroPickState"
// MNetworkVarNames "bool m_bAlternateHeroGridsEnabled"
// MNetworkVarNames "GameTime_t m_flStateTransitionTime"
// MNetworkVarNames "float m_flOverride_dota_hero_selection_time"
// MNetworkVarNames "float m_flOverride_dota_pregame_time"
// MNetworkVarNames "float m_flOverride_dota_postgame_time"
// MNetworkVarNames "float m_flOverride_dota_strategy_time"
// MNetworkVarNames "float m_flOverride_dota_team_showcase_duration"
// MNetworkVarNames "float m_flOverride_dota_rune_spawn_time"
// MNetworkVarNames "float m_flShowcaseTime"
// MNetworkVarNames "float m_flNeutralInitialSpawnOffset"
// MNetworkVarNames "int m_iGameMode"
// MNetworkVarNames "CHandle< CBaseEntity> m_hGameModeEntity"
// MNetworkVarNames "CHandle< CBaseEntity> m_hCustomHeroPickRulesEntity"
// MNetworkVarNames "GameTime_t m_flHeroPickStateTransitionTime"
// MNetworkVarNames "uint64 m_iPlayerIDsInControl"
// MNetworkVarNames "bool m_bSameHeroSelectionEnabled"
// MNetworkVarNames "bool m_bUseCustomHeroXPValue"
// MNetworkVarNames "bool m_bUseBaseGoldBountyOnHeroes"
// MNetworkVarNames "bool m_bUseUniversalShopMode"
// MNetworkVarNames "bool m_bHideKillMessageHeaders"
// MNetworkVarNames "float m_flHeroMinimapIconScale"
// MNetworkVarNames "float m_flCreepMinimapIconScale"
// MNetworkVarNames "bool m_bCreepSpawningEnabled"
// MNetworkVarNames "float m_flRuneMinimapIconScale"
// MNetworkVarNames "char m_CustomVictoryMessage"
// MNetworkVarNames "float m_flCustomGameEndDelay"
// MNetworkVarNames "float m_flCustomGameSetupAutoLaunchDelay"
// MNetworkVarNames "float m_flCustomGameSetupTimeout"
// MNetworkVarNames "float m_flCustomVictoryMessageDuration"
// MNetworkVarNames "float m_flHeroSelectPenaltyTime"
// MNetworkVarNames "bool m_bCustomGameSetupAutoLaunchEnabled"
// MNetworkVarNames "bool m_bCustomGameTeamSelectionLocked"
// MNetworkVarNames "bool m_bCustomGameEnablePickRules"
// MNetworkVarNames "bool m_bCustomGameAllowHeroPickMusic"
// MNetworkVarNames "bool m_bCustomGameAllowMusicAtGameStart"
// MNetworkVarNames "bool m_bCustomGameAllowBattleMusic"
// MNetworkVarNames "bool m_bCustomGameDisableIK"
// MNetworkVarNames "bool m_bCustomGameAllowSecondaryAbilitiesOnOtherUnits"
// MNetworkVarNames "int m_iCMModePickBanOrder"
// MNetworkVarNames "int m_iCDModePickBanOrder"
// MNetworkVarNames "int m_nGGTeam"
// MNetworkVarNames "GameTime_t m_flGGEndsAtTime"
// MNetworkVarNames "bool m_bGGCalled"
// MNetworkVarNames "bool m_bWhiteListEnabled"
// MNetworkVarNames "uint64 m_bItemWhiteList"
// MNetworkVarNames "int m_nLastHitUIMode"
// MNetworkVarNames "bool m_bHUDTimerTutorialMode"
// MNetworkVarNames "float m_fExtraTimeRemaining"
// MNetworkVarNames "bool m_bHeroRespawnEnabled"
// MNetworkVarNames "bool m_bIsRandomingEnabled"
// MNetworkVarNames "PlayerID_t m_iCaptainPlayerIDs"
// MNetworkVarNames "int m_BannedHeroes"
// MNetworkVarNames "int m_SelectedHeroes"
// MNetworkVarNames "int m_iActiveTeam"
// MNetworkVarNames "int m_iStartingTeam"
// MNetworkVarNames "int m_iPenaltyLevelRadiant"
// MNetworkVarNames "int m_iPenaltyLevelDire"
// MNetworkVarNames "bool m_bIsLoadingScenario"
// MNetworkVarNames "int m_vecNewBannedHeroes"
// MNetworkVarNames "int m_vecWhitelistedHeroes"
// MNetworkVarNames "int m_vecBlacklistedHeroes"
// MNetworkVarNames "bool m_bHideBlacklistedHeroes"
// MNetworkVarNames "int m_nSeriesType"
// MNetworkVarNames "int m_nRadiantSeriesWins"
// MNetworkVarNames "int m_nDireSeriesWins"
// MNetworkVarNames "CHeroesPerPlayer m_vecAvailableHerosPerPlayerID"
// MNetworkVarNames "CHeroesPerPlayer m_vecLockedHerosByPlayerID"
// MNetworkVarNames "CHeroesPerPlayer m_vecDisabledRandomHerosByPlayerID"
// MNetworkVarNames "int m_iGoodTomeCount"
// MNetworkVarNames "int m_iBadTomeCount"
// MNetworkVarNames "GameTime_t m_flPreGameStartTime"
// MNetworkVarNames "GameTime_t m_flGameStartTime"
// MNetworkVarNames "GameTime_t m_flGameEndTime"
// MNetworkVarNames "float m_flGameLoadTime"
// MNetworkVarNames "int m_iCustomGameScore"
// MNetworkVarNames "int m_nCustomGameDifficulty"
// MNetworkVarNames "GameTime_t m_fGoodGlyphCooldown"
// MNetworkVarNames "GameTime_t m_fBadGlyphCooldown"
// MNetworkVarNames "GameTime_t m_flGlyphCooldowns"
// MNetworkVarNames "GameTime_t m_fGoodRadarCooldown"
// MNetworkVarNames "GameTime_t m_fBadRadarCooldown"
// MNetworkVarNames "GameTime_t m_flRadarCooldowns"
// MNetworkVarNames "int m_iGoodRadarCharges"
// MNetworkVarNames "int m_iBadRadarCharges"
// MNetworkVarNames "int m_iRadarCharges"
// MNetworkVarNames "float m_flOutpostTimes"
// MNetworkVarNames "bool m_bIsNightstalkerNight"
// MNetworkVarNames "bool m_bIsTemporaryNight"
// MNetworkVarNames "bool m_bIsTemporaryDay"
// MNetworkVarNames "int m_nRiverType"
// MNetworkVarNames "PlayerID_t m_nTeamFeaturedPlayerID"
// MNetworkVarNames "item_definition_index_t m_nTeamVersusScreen"
// MNetworkVarNames "CDOTA_ItemStockInfo m_vecItemStockInfo"
// MNetworkVarNames "DOTA_AssassinMinigameNetworkState m_AssassinMiniGameNetData"
// MNetworkVarNames "int m_nGameWinner"
// MNetworkVarNames "MatchID_t m_unMatchID64"
// MNetworkVarNames "bool m_bMatchSignoutComplete"
// MNetworkVarNames "CHandle< CBaseEntity> m_hSideShop1"
// MNetworkVarNames "CHandle< CBaseEntity> m_hSideShop2"
// MNetworkVarNames "CHandle< CBaseEntity> m_hSecretShop1"
// MNetworkVarNames "CHandle< CBaseEntity> m_hSecretShop2"
// MNetworkVarNames "EHANDLE m_hTeamFountains"
// MNetworkVarNames "EHANDLE m_hTeamForts"
// MNetworkVarNames "EHANDLE m_hTeamShops"
// MNetworkVarNames "CHandle< CBaseEntity> m_hAnnouncerGood"
// MNetworkVarNames "CHandle< CBaseEntity> m_hAnnouncerBad"
// MNetworkVarNames "CHandle< CBaseEntity> m_hAnnouncerSpectator"
// MNetworkVarNames "CHandle< CBaseEntity> m_hAnnouncerGood_KillingSpree"
// MNetworkVarNames "CHandle< CBaseEntity> m_hAnnouncerBad_KillingSpree"
// MNetworkVarNames "CHandle< CBaseEntity> m_hAnnouncerSpectator_KillingSpree"
// MNetworkVarNames "bool m_arrTier1TowerDestroyed"
// MNetworkVarNames "bool m_arrTier2TowerDestroyed"
// MNetworkVarNames "bool m_arrTier3TowerDestroyed"
// MNetworkVarNames "bool m_bTier1TowerDestroyed"
// MNetworkVarNames "bool m_bTier2TowerDestroyed"
// MNetworkVarNames "bool m_bTier3TowerDestroyed"
// MNetworkVarNames "int m_iNetTimeOfDay"
// MNetworkVarNames "int m_nLoadedPlayers"
// MNetworkVarNames "int m_nExpectedPlayers"
// MNetworkVarNames "int m_iMinimapDebugGridState"
// MNetworkVarNames "int m_iFoWFrameNumber"
// MNetworkVarNames "Vector m_vWeatherWindDirection"
// MNetworkVarNames "int m_vecRequiredPlaytestHeroesStorage"
// MNetworkVarNames "int m_vecRecommendedPlaytestHeroesStorage"
// MNetworkVarNames "bool m_bAllRequiredPlaytestHeroesPicked"
// MNetworkVarNames "int m_nLastPlaytestPickPhase"
// MNetworkVarNames "byte m_BotDebugPushLane"
// MNetworkVarNames "byte m_BotDebugDefendLane"
// MNetworkVarNames "byte m_BotDebugFarmLane"
// MNetworkVarNames "byte m_BotDebugRoam"
// MNetworkVarNames "EHANDLE m_hBotDebugRoamTarget"
// MNetworkVarNames "byte m_BotDebugRoshan"
// MNetworkVarNames "ERoshanSpawnPhase m_nRoshanRespawnPhase"
// MNetworkVarNames "GameTime_t m_flRoshanRespawnPhaseEndTime"
// MNetworkVarNames "CDOTA_AbilityDraftAbilityState m_AbilityDraftAbilities"
// MNetworkVarNames "bool m_bAbilityDraftCurrentPlayerHasPicked"
// MNetworkVarNames "int m_nAbilityDraftPlayerTracker"
// MNetworkVarNames "int m_nAbilityDraftRoundNumber"
// MNetworkVarNames "int m_nAbilityDraftAdvanceSteps"
// MNetworkVarNames "int m_nAbilityDraftPhase"
// MNetworkVarNames "int m_nAbilityDraftHeroesChosen"
// MNetworkVarNames "bool m_bIsPlayerDraft"
// MNetworkVarNames "DOTA_PlayerDraftState m_ePlayerDraftState"
// MNetworkVarNames "uint8 m_vecPlayerDraftPickOrder"
// MNetworkVarNames "int m_nPlayerDraftPick"
// MNetworkVarNames "int m_nPlayerDraftActiveTeam"
// MNetworkVarNames "float m_flPlayerDraftTimeBank"
// MNetworkVarNames "int m_nAllDraftPhase"
// MNetworkVarNames "bool m_bAllDraftRadiantFirst"
// MNetworkVarNames "bool m_bAllowOverrideVPK"
// MNetworkVarNames "int m_nARDMHeroesRemaining"
// MNetworkVarNames "bool m_bExperimentalGameplay"
// MNetworkVarNames "uint32 m_lobbyType"
// MNetworkVarNames "LeagueID_t m_lobbyLeagueID"
// MNetworkVarNames "char m_lobbyGameName"
// MNetworkVarNames "CHeroStatueLiked m_vecHeroStatueLiked"
// MNetworkVarNames "int m_CustomGameTeamMaxPlayers"
// MNetworkVarNames "int m_iMutations"
// MNetworkVarNames "CHandle<CIngameEvent_Base> m_vecIngameEvents"
// MNetworkVarNames "int8 m_nPrimaryIngameEventIndex"
// MNetworkVarNames "bool m_bOfrendaEnabled"
// MNetworkVarNames "NeutralSpawnBoxes_t m_NeutralSpawnBoxes"
// MNetworkVarNames "RegionTriggerBoxes_t m_RegionTriggerBoxes"
class CDOTAGameRules : public CMultiplayRules
{
private:
	[[maybe_unused]] uint8_t __pad00c0[0x50]; // 0xc0
public:
	// MNetworkEnable
	int32_t m_nRuneCycle; // 0x110	
private:
	[[maybe_unused]] uint8_t __pad0114[0x4]; // 0x114
public:
	double m_flPauseTime; // 0x118	
	PlayerID_t m_pausingPlayerId; // 0x120	
	PlayerID_t m_unpausingPlayerId; // 0x124	
	float m_fPauseRawTime; // 0x128	
	float m_fPauseCurTime; // 0x12c	
	float m_fUnpauseRawTime; // 0x130	
	float m_fUnpauseCurTime; // 0x134	
	int32_t m_nPausesRemaining[64]; // 0x138	
	float m_nLastPauseTime[64]; // 0x238	
private:
	[[maybe_unused]] uint8_t __pad0338[0x8]; // 0x338
public:
	// MNetworkEnable
	int32_t m_iMiscHeroPickCounter; // 0x340	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hEndGameCinematicEntity; // 0x344	
	CountdownTimer m_EndGameCinematicTimer; // 0x348	
	// MNetworkEnable
	CHandle< CDOTA_BaseNPC > m_hOverlayHealthBarUnit; // 0x360	
	// MNetworkEnable
	int32_t m_nOverlayHealthBarType; // 0x364	
	// MNetworkEnable
	// MNetworkChangeCallback "OnCinematicModeChanged"
	bool m_bIsInCinematicMode; // 0x368	
	bool m_bIsInClientSideCinematicMode; // 0x369	
	// MNetworkEnable
	bool m_bFreeCourierMode; // 0x36a	
private:
	[[maybe_unused]] uint8_t __pad036b[0x1]; // 0x36b
public:
	int32_t m_nStartingGold; // 0x36c	
	int32_t m_nGoldPerTick; // 0x370	
	float m_flGoldTickTime; // 0x374	
	bool m_bEnableSuggestAbilities; // 0x378	
	bool m_bEnableSuggestItems; // 0x379	
private:
	[[maybe_unused]] uint8_t __pad037a[0x1e]; // 0x37a
public:
	// MNetworkEnable
	uint32_t m_unFanfareGoodGuys; // 0x398	
	// MNetworkEnable
	uint32_t m_unFanfareBadGuys; // 0x39c	
	GameTime_t m_flFanfareTime; // 0x3a0	
	bool m_bSpeechUseSpawnInsteadOfRespawnConcept; // 0x3a4	
	bool m_bSpeechSendTeamSpeaksToSpectators; // 0x3a5	
	bool m_bIgnoreLobbyTeamsInCustomGames; // 0x3a6	
private:
	[[maybe_unused]] uint8_t __pad03a7[0x1]; // 0x3a7
public:
	int32_t m_nCustomGameBansPerTeam; // 0x3a8	
	int32_t m_iFOWDefeatedTempViewer; // 0x3ac	
private:
	[[maybe_unused]] uint8_t __pad03b0[0x48]; // 0x3b0
public:
	// MNetworkEnable
	int32_t m_nGameState; // 0x3f8	
	// MNetworkEnable
	DOTA_HeroPickState m_nHeroPickState; // 0x3fc	
	// MNetworkEnable
	bool m_bAlternateHeroGridsEnabled; // 0x400	
private:
	[[maybe_unused]] uint8_t __pad0401[0x3]; // 0x401
public:
	// MNetworkEnable
	GameTime_t m_flStateTransitionTime; // 0x404	
	// MNetworkEnable
	float m_flOverride_dota_hero_selection_time; // 0x408	
	// MNetworkEnable
	float m_flOverride_dota_pregame_time; // 0x40c	
	// MNetworkEnable
	float m_flOverride_dota_postgame_time; // 0x410	
	// MNetworkEnable
	float m_flOverride_dota_strategy_time; // 0x414	
	// MNetworkEnable
	float m_flOverride_dota_team_showcase_duration; // 0x418	
	// MNetworkEnable
	float m_flOverride_dota_rune_spawn_time; // 0x41c	
	// MNetworkEnable
	float m_flShowcaseTime[15]; // 0x420	
	// MNetworkEnable
	float m_flNeutralInitialSpawnOffset; // 0x45c	
	float m_flOverride_dota_tree_regrow_time; // 0x460	
	// MNetworkEnable
	int32_t m_iGameMode; // 0x464	
	// MNetworkEnable
	// MNetworkChangeCallback "OnGameModeEntityChanged"
	CHandle< CBaseEntity > m_hGameModeEntity; // 0x468	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hCustomHeroPickRulesEntity; // 0x46c	
	// MNetworkEnable
	GameTime_t m_flHeroPickStateTransitionTime; // 0x470	
private:
	[[maybe_unused]] uint8_t __pad0474[0x4]; // 0x474
public:
	// MNetworkEnable
	// MNetworkEncoder "fixed64"
	uint64_t m_iPlayerIDsInControl; // 0x478	
	// MNetworkEnable
	bool m_bSameHeroSelectionEnabled; // 0x480	
	// MNetworkEnable
	bool m_bUseCustomHeroXPValue; // 0x481	
	// MNetworkEnable
	bool m_bUseBaseGoldBountyOnHeroes; // 0x482	
	// MNetworkEnable
	bool m_bUseUniversalShopMode; // 0x483	
	// MNetworkEnable
	bool m_bHideKillMessageHeaders; // 0x484	
private:
	[[maybe_unused]] uint8_t __pad0485[0x3]; // 0x485
public:
	// MNetworkEnable
	float m_flHeroMinimapIconScale; // 0x488	
	// MNetworkEnable
	float m_flCreepMinimapIconScale; // 0x48c	
	// MNetworkEnable
	bool m_bCreepSpawningEnabled; // 0x490	
private:
	[[maybe_unused]] uint8_t __pad0491[0x3]; // 0x491
public:
	// MNetworkEnable
	float m_flRuneMinimapIconScale; // 0x494	
	// MNetworkEnable
	char m_CustomVictoryMessage[256]; // 0x498	
	// MNetworkEnable
	float m_flCustomGameEndDelay; // 0x598	
	// MNetworkEnable
	float m_flCustomGameSetupAutoLaunchDelay; // 0x59c	
	// MNetworkEnable
	float m_flCustomGameSetupTimeout; // 0x5a0	
	// MNetworkEnable
	float m_flCustomVictoryMessageDuration; // 0x5a4	
	// MNetworkEnable
	float m_flHeroSelectPenaltyTime; // 0x5a8	
	// MNetworkEnable
	bool m_bCustomGameSetupAutoLaunchEnabled; // 0x5ac	
	// MNetworkEnable
	bool m_bCustomGameTeamSelectionLocked; // 0x5ad	
	// MNetworkEnable
	bool m_bCustomGameEnablePickRules; // 0x5ae	
	// MNetworkEnable
	bool m_bCustomGameAllowHeroPickMusic; // 0x5af	
	// MNetworkEnable
	bool m_bCustomGameAllowMusicAtGameStart; // 0x5b0	
	// MNetworkEnable
	bool m_bCustomGameAllowBattleMusic; // 0x5b1	
	// MNetworkEnable
	bool m_bCustomGameDisableIK; // 0x5b2	
	// MNetworkEnable
	bool m_bCustomGameAllowSecondaryAbilitiesOnOtherUnits; // 0x5b3	
	// MNetworkEnable
	int32_t m_iCMModePickBanOrder; // 0x5b4	
	// MNetworkEnable
	int32_t m_iCDModePickBanOrder; // 0x5b8	
	// MNetworkEnable
	int32_t m_nGGTeam; // 0x5bc	
	// MNetworkEnable
	GameTime_t m_flGGEndsAtTime; // 0x5c0	
	// MNetworkEnable
	bool m_bGGCalled; // 0x5c4	
	// MNetworkEnable
	bool m_bWhiteListEnabled; // 0x5c5	
private:
	[[maybe_unused]] uint8_t __pad05c6[0x2]; // 0x5c6
public:
	// MNetworkEnable
	// MNetworkEncoder "fixed64"
	// MNetworkChangeCallback "OnWhitelistChanged"
	uint64_t m_bItemWhiteList[4]; // 0x5c8	
	// MNetworkEnable
	int32_t m_nLastHitUIMode; // 0x5e8	
	// MNetworkEnable
	bool m_bHUDTimerTutorialMode; // 0x5ec	
private:
	[[maybe_unused]] uint8_t __pad05ed[0x3]; // 0x5ed
public:
	CountdownTimer m_HeroPickMiscTimer; // 0x5f0	
	CountdownTimer m_ExtraTimeTimer; // 0x608	
	// MNetworkEnable
	float m_fExtraTimeRemaining[2]; // 0x620	
	// MNetworkEnable
	bool m_bHeroRespawnEnabled; // 0x628	
	// MNetworkEnable
	bool m_bIsRandomingEnabled; // 0x629	
private:
	[[maybe_unused]] uint8_t __pad062a[0x6]; // 0x62a
public:
	CUtlVector< int32 > m_HeroPickPhaseBitfield; // 0x630	
	bool m_bHasSwapped[64]; // 0x648	
	// MNetworkEnable
	PlayerID_t m_iCaptainPlayerIDs[2]; // 0x688	
	// MNetworkEnable
	int32_t m_BannedHeroes[24]; // 0x690	
	// MNetworkEnable
	int32_t m_SelectedHeroes[24]; // 0x6f0	
	// MNetworkEnable
	int32_t m_iActiveTeam; // 0x750	
	// MNetworkEnable
	int32_t m_iStartingTeam; // 0x754	
	// MNetworkEnable
	int32_t m_iPenaltyLevelRadiant; // 0x758	
	// MNetworkEnable
	int32_t m_iPenaltyLevelDire; // 0x75c	
	// MNetworkEnable
	bool m_bIsLoadingScenario; // 0x760	
private:
	[[maybe_unused]] uint8_t __pad0761[0x7]; // 0x761
public:
	CUtlVector< int32 > m_vecBanNominatedHeroes; // 0x768	
	// MNetworkEnable
	CNetworkUtlVectorBase< int32 > m_vecNewBannedHeroes; // 0x780	
	// MNetworkEnable
	CNetworkUtlVectorBase< int32 > m_vecWhitelistedHeroes; // 0x798	
	// MNetworkEnable
	CNetworkUtlVectorBase< int32 > m_vecBlacklistedHeroes; // 0x7b0	
	// MNetworkEnable
	bool m_bHideBlacklistedHeroes; // 0x7c8	
private:
	[[maybe_unused]] uint8_t __pad07c9[0x3]; // 0x7c9
public:
	// MNetworkEnable
	int32_t m_nSeriesType; // 0x7cc	
	// MNetworkEnable
	int32_t m_nRadiantSeriesWins; // 0x7d0	
	// MNetworkEnable
	int32_t m_nDireSeriesWins; // 0x7d4	
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< CHeroesPerPlayer > m_vecAvailableHerosPerPlayerID; // 0x7d8	
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< CHeroesPerPlayer > m_vecLockedHerosByPlayerID; // 0x848	
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< CHeroesPerPlayer > m_vecDisabledRandomHerosByPlayerID; // 0x8b8	
	int32_t m_CustomGameForceSelectHero[24]; // 0x928	
	float m_flGoldTime; // 0x988	
	float m_flXPTime; // 0x98c	
	GameTime_t m_flCreepSpawntime; // 0x990	
	float m_flAnnounceStartTime; // 0x994	
	// MNetworkEnable
	int32_t m_iGoodTomeCount; // 0x998	
	// MNetworkEnable
	int32_t m_iBadTomeCount; // 0x99c	
	// MNetworkEnable
	GameTime_t m_flPreGameStartTime; // 0x9a0	
	// MNetworkEnable
	GameTime_t m_flGameStartTime; // 0x9a4	
	// MNetworkEnable
	GameTime_t m_flGameEndTime; // 0x9a8	
	// MNetworkEnable
	float m_flGameLoadTime; // 0x9ac	
	// MNetworkEnable
	int32_t m_iCustomGameScore[2]; // 0x9b0	
	// MNetworkEnable
	int32_t m_nCustomGameDifficulty; // 0x9b8	
	bool m_bEnemyModifiersEnabled; // 0x9bc	
private:
	[[maybe_unused]] uint8_t __pad09bd[0x3]; // 0x9bd
public:
	int32_t m_iWaves; // 0x9c0	
	int32_t m_iCreepUpgradeState; // 0x9c4	
	// MNetworkEnable
	GameTime_t m_fGoodGlyphCooldown; // 0x9c8	
	// MNetworkEnable
	GameTime_t m_fBadGlyphCooldown; // 0x9cc	
	// MNetworkEnable
	GameTime_t m_flGlyphCooldowns[15]; // 0x9d0	
	// MNetworkEnable
	GameTime_t m_fGoodRadarCooldown; // 0xa0c	
	// MNetworkEnable
	GameTime_t m_fBadRadarCooldown; // 0xa10	
	// MNetworkEnable
	GameTime_t m_flRadarCooldowns[15]; // 0xa14	
	// MNetworkEnable
	int32_t m_iGoodRadarCharges; // 0xa50	
	// MNetworkEnable
	int32_t m_iBadRadarCharges; // 0xa54	
	// MNetworkEnable
	int32_t m_iRadarCharges[15]; // 0xa58	
	// MNetworkEnable
	float m_flOutpostTimes[24]; // 0xa94	
	// MNetworkEnable
	bool m_bIsNightstalkerNight; // 0xaf4	
	// MNetworkEnable
	bool m_bIsTemporaryNight; // 0xaf5	
	// MNetworkEnable
	bool m_bIsTemporaryDay; // 0xaf6	
private:
	[[maybe_unused]] uint8_t __pad0af7[0x1]; // 0xaf7
public:
	// MNetworkEnable
	int32_t m_nRiverType; // 0xaf8	
	// MNetworkEnable
	PlayerID_t m_nTeamFeaturedPlayerID[15]; // 0xafc	
	// MNetworkEnable
	item_definition_index_t m_nTeamVersusScreen[15]; // 0xb38	
	float m_flGoldRedistributeTime; // 0xb74	
	int32_t m_nGoldToRedistribute[2]; // 0xb78	
	GameTime_t m_flNextPreGameThink; // 0xb80	
	GameTime_t m_flNextAllDraftGoldThink; // 0xb84	
	double m_flTimeEnteredState; // 0xb88	
	uint32_t m_unRiverAccountID; // 0xb90	
private:
	[[maybe_unused]] uint8_t __pad0b94[0x4]; // 0xb94
public:
	itemid_t m_ulRiverItemID; // 0xb98	
private:
	[[maybe_unused]] uint8_t __pad0ba0[0x40]; // 0xba0
public:
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< CDOTA_ItemStockInfo > m_vecItemStockInfo; // 0xbe0	
	// MNetworkEnable
	// -> nAssassinState - 0xc58
	// -> nVictimHeroID - 0xc5a
	DOTA_AssassinMinigameNetworkState m_AssassinMiniGameNetData; // 0xc50	
	// MNetworkEnable
	int32_t m_nGameWinner; // 0xc60	
private:
	[[maybe_unused]] uint8_t __pad0c64[0x4]; // 0xc64
public:
	// MNetworkEnable
	MatchID_t m_unMatchID64; // 0xc68	
	// MNetworkEnable
	bool m_bMatchSignoutComplete; // 0xc70	
private:
	[[maybe_unused]] uint8_t __pad0c71[0x3]; // 0xc71
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hSideShop1; // 0xc74	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hSideShop2; // 0xc78	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hSecretShop1; // 0xc7c	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hSecretShop2; // 0xc80	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTeamFountains[15]; // 0xc84	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTeamForts[15]; // 0xcc0	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hTeamShops[15]; // 0xcfc	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hAnnouncerGood; // 0xd38	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hAnnouncerBad; // 0xd3c	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hAnnouncerSpectator; // 0xd40	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hAnnouncerGood_KillingSpree; // 0xd44	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hAnnouncerBad_KillingSpree; // 0xd48	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hAnnouncerSpectator_KillingSpree; // 0xd4c	
	// MNetworkEnable
	bool m_arrTier1TowerDestroyed[15]; // 0xd50	
	// MNetworkEnable
	bool m_arrTier2TowerDestroyed[15]; // 0xd5f	
	// MNetworkEnable
	bool m_arrTier3TowerDestroyed[15]; // 0xd6e	
	// MNetworkEnable
	bool m_bTier1TowerDestroyed; // 0xd7d	
	// MNetworkEnable
	bool m_bTier2TowerDestroyed; // 0xd7e	
	// MNetworkEnable
	bool m_bTier3TowerDestroyed; // 0xd7f	
	float m_fTimeOfDay; // 0xd80	
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iNetTimeOfDay; // 0xd84	
	// MNetworkEnable
	int32_t m_nLoadedPlayers; // 0xd88	
	// MNetworkEnable
	int32_t m_nExpectedPlayers; // 0xd8c	
private:
	[[maybe_unused]] uint8_t __pad0d90[0x8]; // 0xd90
public:
	// MNetworkEnable
	int32_t m_iMinimapDebugGridState; // 0xd98	
private:
	[[maybe_unused]] uint8_t __pad0d9c[0x7c]; // 0xd9c
public:
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_iFoWFrameNumber; // 0xe18	
	// MNetworkEnable
	Vector m_vWeatherWindDirection; // 0xe1c	
	KeyValues* m_pKVPostGameTable; // 0xe28	
	KeyValues* m_pKVEventMatchMetadata; // 0xe30	
	KeyValues* m_pKVEventSignout; // 0xe38	
private:
	[[maybe_unused]] uint8_t __pad0e40[0x58]; // 0xe40
public:
	// MNetworkEnable
	int32_t m_vecRequiredPlaytestHeroesStorage[24]; // 0xe98	
	// MNetworkEnable
	int32_t m_vecRecommendedPlaytestHeroesStorage[24]; // 0xef8	
	// MNetworkEnable
	bool m_bAllRequiredPlaytestHeroesPicked; // 0xf58	
private:
	[[maybe_unused]] uint8_t __pad0f59[0x3]; // 0xf59
public:
	// MNetworkEnable
	int32_t m_nLastPlaytestPickPhase; // 0xf5c	
	int32_t m_nCustomGameFowTeamCount; // 0xf60	
	bool m_bUseAlternateABRules; // 0xf64	
	bool m_bLobbyIsAssociatedWithGame; // 0xf65	
private:
	[[maybe_unused]] uint8_t __pad0f66[0x2]; // 0xf66
public:
	CountdownTimer m_BotDebugTimer; // 0xf68	
	// MNetworkEnable
	// MNetworkPriority "48"
	uint8_t m_BotDebugPushLane[18]; // 0xf80	
	// MNetworkEnable
	uint8_t m_BotDebugDefendLane[18]; // 0xf92	
	// MNetworkEnable
	uint8_t m_BotDebugFarmLane[6]; // 0xfa4	
	// MNetworkEnable
	uint8_t m_BotDebugRoam[8]; // 0xfaa	
private:
	[[maybe_unused]] uint8_t __pad0fb2[0x2]; // 0xfb2
public:
	// MNetworkEnable
	CHandle< CBaseEntity > m_hBotDebugRoamTarget[2]; // 0xfb4	
	// MNetworkEnable
	uint8_t m_BotDebugRoshan[2]; // 0xfbc	
private:
	[[maybe_unused]] uint8_t __pad0fbe[0x2]; // 0xfbe
public:
	// MNetworkEnable
	ERoshanSpawnPhase m_nRoshanRespawnPhase; // 0xfc0	
	// MNetworkEnable
	GameTime_t m_flRoshanRespawnPhaseEndTime; // 0xfc4	
	// MNetworkEnable
	// MNetworkTypeAlias "CDOTA_AbilityDraftAbilityState[MAX_ABILITY_DRAFT_ABILITIES]"
	CUtlVectorEmbeddedNetworkVar< CDOTA_AbilityDraftAbilityState > m_AbilityDraftAbilities; // 0xfc8	
	// MNetworkEnable
	bool m_bAbilityDraftCurrentPlayerHasPicked; // 0x1038	
private:
	[[maybe_unused]] uint8_t __pad1039[0x3]; // 0x1039
public:
	// MNetworkEnable
	int32_t m_nAbilityDraftPlayerTracker; // 0x103c	
	// MNetworkEnable
	int32_t m_nAbilityDraftRoundNumber; // 0x1040	
	// MNetworkEnable
	int32_t m_nAbilityDraftAdvanceSteps; // 0x1044	
	// MNetworkEnable
	int32_t m_nAbilityDraftPhase; // 0x1048	
	// MNetworkEnable
	// MNetworkChangeCallback "OnAbilityDraftHeroesChanged"
	int32_t m_nAbilityDraftHeroesChosen[13]; // 0x104c	
	// MNetworkEnable
	bool m_bIsPlayerDraft; // 0x1080	
private:
	[[maybe_unused]] uint8_t __pad1081[0x3]; // 0x1081
public:
	// MNetworkEnable
	DOTA_PlayerDraftState m_ePlayerDraftState; // 0x1084	
	// MNetworkEnable
	CNetworkUtlVectorBase< uint8 > m_vecPlayerDraftPickOrder; // 0x1088	
	// MNetworkEnable
	int32_t m_nPlayerDraftPick; // 0x10a0	
	// MNetworkEnable
	int32_t m_nPlayerDraftActiveTeam; // 0x10a4	
	// MNetworkEnable
	float m_flPlayerDraftTimeBank[2]; // 0x10a8	
	CUtlVector< KeyValues* > m_vecARDMHeroes[2]; // 0x10b0	
	int32_t m_nARDMHeroesPrecached; // 0x10e0	
	float m_fLastARDMPrecache; // 0x10e4	
	// MNetworkEnable
	int32_t m_nAllDraftPhase; // 0x10e8	
	// MNetworkEnable
	bool m_bAllDraftRadiantFirst; // 0x10ec	
	// MNetworkEnable
	bool m_bAllowOverrideVPK; // 0x10ed	
private:
	[[maybe_unused]] uint8_t __pad10ee[0x2]; // 0x10ee
public:
	// MNetworkEnable
	int32_t m_nARDMHeroesRemaining[2]; // 0x10f0	
	CUtlVector< CHandle< CDOTA_BaseNPC_Pet > > m_hGlobalPetList; // 0x10f8	
private:
	[[maybe_unused]] uint8_t __pad1110[0x50]; // 0x1110
public:
	int32_t m_nRadiantRoshanKills; // 0x1160	
	int32_t m_nDireRoshanKills; // 0x1164	
	int32_t m_nRoshanKillsDay; // 0x1168	
	int32_t m_nRoshanKillsNight; // 0x116c	
	int32_t m_nTormentorKills; // 0x1170	
	int32_t m_nOutpostCaptures; // 0x1174	
private:
	[[maybe_unused]] uint8_t __pad1178[0xc]; // 0x1178
public:
	int32_t m_nDistanceCalculations; // 0x1184	
	bool m_bLaneVictoryPredicted; // 0x1188	
private:
	[[maybe_unused]] uint8_t __pad1189[0x7]; // 0x1189
public:
	CUtlOrderedMap< PlayerID_t, int32 > m_mapSuccessfulSmokes; // 0x1190	
private:
	[[maybe_unused]] uint8_t __pad11b8[0x10]; // 0x11b8
public:
	// MNetworkEnable
	bool m_bExperimentalGameplay; // 0x11c8	
private:
	[[maybe_unused]] uint8_t __pad11c9[0x1f]; // 0x11c9
public:
	CUtlVector< HeroPickRecord_t > m_vecHeroPickRecord; // 0x11e8	
private:
	[[maybe_unused]] uint8_t __pad1200[0x28]; // 0x1200
public:
	CUtlVector< HeroDeathRecord_t > m_vecHeroDeathRecord; // 0x1228	
private:
	[[maybe_unused]] uint8_t __pad1240[0x18]; // 0x1240
public:
	CUtlVector< CHandle< CBaseEntity > > m_BadResultPositionTriggers; // 0x1258	
	CUtlVector< CHandle< CBaseEntity > > m_RoshanPositionTriggers; // 0x1270	
	CUtlVector< HeroPickRecord_t > m_vecAllDraftHeroPickRecord; // 0x1288	
	CUtlOrderedMap< PlayerID_t, CUtlVector< AbilityID_t > > m_vecAbilityDraftOrder; // 0x12a0	
private:
	[[maybe_unused]] uint8_t __pad12c8[0x18]; // 0x12c8
public:
	int32_t m_nAllDraftHeroPickCollisionsThisPhase; // 0x12e0	
private:
	[[maybe_unused]] uint8_t __pad12e4[0x4]; // 0x12e4
public:
	CUtlVector< CHandle< CBaseEntity > > m_hRuneSpawners; // 0x12e8	
	CUtlVector< CHandle< CBaseEntity > > m_hBountyRuneSpawners; // 0x1300	
	CUtlVector< CHandle< CBaseEntity > > m_hXPRuneSpawners; // 0x1318	
	CUtlVector< CHandle< CBaseEntity > > m_hNeutralSpawners[2]; // 0x1330	
	int32_t m_iPreviousRune1; // 0x1360	
	int32_t m_iPreviousRune2; // 0x1364	
	CUtlVector< int32 > m_vecAvailableRunes; // 0x1368	
	float m_fNextPowerupRuneSpawnTime; // 0x1380	
	float m_fNextBountyRuneSpawnTime; // 0x1384	
	float m_fNextBountyRunePrepTime; // 0x1388	
	float m_fNextXPRuneSpawnTime; // 0x138c	
	bool m_aNeutralChoicesLoaded[5]; // 0x1390	
	bool m_bFirstPowerupRune; // 0x1395	
	bool m_bFirstBountyRune; // 0x1396	
	bool m_bFilterMoreGold; // 0x1397	
	bool m_bAllowOutpostXP; // 0x1398	
private:
	[[maybe_unused]] uint8_t __pad1399[0x3]; // 0x1399
public:
	CHandle< CBaseEntity > m_hRoshanSpawner; // 0x139c	
	int32_t m_iPreviousSpectators; // 0x13a0	
	uint32_t m_nMaxSpectators; // 0x13a4	
	CUtlVector< CHandle< CBaseEntity > > m_hDroppedItems; // 0x13a8	
	CUtlVector< CHandle< CBaseEntity > > m_hWards; // 0x13c0	
	CHandle< CBaseEntity > m_hGameEvents; // 0x13d8	
private:
	[[maybe_unused]] uint8_t __pad13dc[0x1c]; // 0x13dc
public:
	CUtlVector< CHandle< CBaseEntity > > m_Towers; // 0x13f8	
	CUtlVector< CHandle< CDOTA_BaseNPC_Tower > > m_TeamTowers[10]; // 0x1410	
	CUtlVector< CHandle< CBaseEntity > > m_Outposts; // 0x1500	
	CUtlVector< Vector > m_TeamTowerPositions[10]; // 0x1518	
	CUtlVector< int32 > m_TeamTowerLevels[10]; // 0x1608	
	CUtlVector< int32 > m_TeamTowerLanes[10]; // 0x16f8	
	CUtlVector< CHandle< CDOTA_BaseNPC_Building > > m_TeamBarracks[10]; // 0x17e8	
	CUtlVector< CHandle< CDOTA_BaseNPC_Building > > m_TeamShrines[10]; // 0x18d8	
	CountdownTimer m_TempDayTimer; // 0x19c8	
	CountdownTimer m_TempNightTimer; // 0x19e0	
	CountdownTimer m_NightstalkerNightTimer; // 0x19f8	
	CountdownTimer m_TempRiverTimer; // 0x1a10	
	bool m_bUseLenientAFK[2]; // 0x1a28	
	bool m_bFirstBlood; // 0x1a2a	
private:
	[[maybe_unused]] uint8_t __pad1a2b[0x1]; // 0x1a2b
public:
	int32_t m_nFirstBloodTime; // 0x1a2c	
	CountdownTimer m_CheckIdleTimer; // 0x1a30	
	PlayerID_t m_nAnnounceHeroPickRadiantPlayerID; // 0x1a48	
	PlayerID_t m_nAnnounceHeroPickDirePlayerID; // 0x1a4c	
	CUtlString m_pszLastUsedAbility[64]; // 0x1a50	
	CUtlVector< CDOTA_ReconnectInfo > m_reconnectinfos; // 0x1c50	
	CUtlVector< CHandle< CBaseEntity > > m_hEnemyCreepsInBase[10]; // 0x1c68	
	bool m_bTeamHasAbandonedPlayer[10]; // 0x1d58	
	bool m_bLobbyHasLeaverDetected; // 0x1d62	
	bool m_bGameIsForcedSafeToLeave; // 0x1d63	
	bool m_bLobbyHasDicardMatchResults; // 0x1d64	
private:
	[[maybe_unused]] uint8_t __pad1d65[0x3]; // 0x1d65
public:
	int32_t m_iGameEndReason; // 0x1d68	
	bool m_bNotifiedPlayerLeaverStatus[64]; // 0x1d6c	
	bool m_bUploadedReplay; // 0x1dac	
private:
	[[maybe_unused]] uint8_t __pad1dad[0x3]; // 0x1dad
public:
	float m_flLobbyWaitTime; // 0x1db0	
	bool m_bGameWasLoaded; // 0x1db4	
private:
	[[maybe_unused]] uint8_t __pad1db5[0x3]; // 0x1db5
public:
	int32_t m_nLoadPauseFrameCount; // 0x1db8	
private:
	[[maybe_unused]] uint8_t __pad1dbc[0x4]; // 0x1dbc
public:
	double m_flStateFallbackTransitionTime; // 0x1dc0	
	// -> m_duration - 0x1dd0
	// -> m_timestamp - 0x1dd4
	// -> m_timescale - 0x1dd8
	EngineCountdownTimer m_timerFinishReplay; // 0x1dc8	
	CUtlVector< GameChatLogEntry_t > m_vecChatLog; // 0x1de0	
private:
	[[maybe_unused]] uint8_t __pad1df8[0x2658]; // 0x1df8
public:
	bool m_bFatalErrorAbortGame; // 0x4450	
	bool m_bFillEmptySlotsWithBots; // 0x4451	
private:
	[[maybe_unused]] uint8_t __pad4452[0x2]; // 0x4452
public:
	uint32_t m_dotaMapSpawnGroup; // 0x4454	
private:
	[[maybe_unused]] uint8_t __pad4458[0x28]; // 0x4458
public:
	// MNetworkEnable
	uint32_t m_lobbyType; // 0x4480	
	// MNetworkEnable
	LeagueID_t m_lobbyLeagueID; // 0x4484	
	// MNetworkEnable
	char m_lobbyGameName[256]; // 0x4488	
	// MNetworkEnable
	// MNetworkChangeCallback "OnHeroStatueLiked"
	CUtlVectorEmbeddedNetworkVar< CHeroStatueLiked > m_vecHeroStatueLiked; // 0x4588	
	// MNetworkEnable
	int32_t m_CustomGameTeamMaxPlayers[15]; // 0x45f8	
private:
	[[maybe_unused]] uint8_t __pad4634[0x44]; // 0x4634
public:
	// MNetworkEnable
	int32_t m_iMutations[5]; // 0x4678	
private:
	[[maybe_unused]] uint8_t __pad468c[0x4]; // 0x468c
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< CHandle< CIngameEvent_Base > > m_vecIngameEvents; // 0x4690	
	// MNetworkEnable
	int8_t m_nPrimaryIngameEventIndex; // 0x46a8	
private:
	[[maybe_unused]] uint8_t __pad46a9[0x3]; // 0x46a9
public:
	uint32_t m_nOfrendaPledges; // 0x46ac	
	uint32_t m_nRadiantOfrendas; // 0x46b0	
	uint32_t m_nDireOfrendas; // 0x46b4	
	// MNetworkEnable
	bool m_bOfrendaEnabled; // 0x46b8	
private:
	[[maybe_unused]] uint8_t __pad46b9[0x7]; // 0x46b9
public:
	CUtlVector< sMuertaPartingShotSoulDef > m_vecMuertaPartingShotSouls; // 0x46c0	
private:
	[[maybe_unused]] uint8_t __pad46d8[0x18]; // 0x46d8
public:
	// MNetworkEnable
	CNetworkUtlVectorBase< NeutralSpawnBoxes_t > m_NeutralSpawnBoxes; // 0x46f0	
	// MNetworkEnable
	CNetworkUtlVectorBase< RegionTriggerBoxes_t > m_RegionTriggerBoxes; // 0x4708	
	double m_flLastItemSuggestionRequestTime[15]; // 0x4720	
private:
	[[maybe_unused]] uint8_t __pad4798[0xfb8]; // 0x4798
public:
	double m_flLastPerfSampleTime; // 0x5750	
	
	// Static fields:
	static int32_t &Get_s_GameStateTransitionsIndex(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTAGameRules")->GetStaticFields()[0]->m_pInstance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x7e0
// Has VTable
// Construct disallowed
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "CBaseAnimGraphController m_animationController"
class CBodyComponentBaseAnimGraph : public CBodyComponentSkeletonInstance
{
public:
	// MNetworkEnable
	CBaseAnimGraphController m_animationController; // 0x460	
	
	// Static fields:
	static EntComponentInfo_t &Get_s_EntComponentInfo(){return *reinterpret_cast<EntComponentInfo_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponentBaseAnimGraph")->GetStaticFields()[0]->m_pInstance);};
	static int32_t &Get_entity_component_error_class_decl_says_contained_but_impl_is_referenced(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CBodyComponentBaseAnimGraph")->GetStaticFields()[1]->m_pInstance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_VindicatorsAxe : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_speed; // 0x1338	
	int32_t bonus_damage; // 0x133c	
	int32_t bonus_armor; // 0x1340	
	int32_t bonus_slow_resist; // 0x1344	
	ParticleIndex_t m_nFxIndex; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Eternal_Shroud_Barrier : public CDOTA_Buff
{
public:
	int32_t barrier_block; // 0x1338	
	int32_t barrier_amount; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1390
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dawnbreaker_Fire_Wreath_Caster : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1338	
	int32_t shard_movement_penalty; // 0x133c	
	int32_t swipe_radius; // 0x1340	
	int32_t swipe_damage; // 0x1344	
	int32_t smash_radius; // 0x1348	
	int32_t smash_damage; // 0x134c	
	int32_t m_nCurrentSpeed; // 0x1350	
	float flSwipeInterval; // 0x1354	
	GameTime_t m_flNextHit; // 0x1358	
	int32_t iCurrentAttack; // 0x135c	
	int32_t total_attacks; // 0x1360	
	float smash_stun_duration; // 0x1364	
	float sweep_stun_duration; // 0x1368	
	bool m_bHasCompletedMove; // 0x136c	
private:
	[[maybe_unused]] uint8_t __pad136d[0x3]; // 0x136d
public:
	float duration; // 0x1370	
	Vector m_vTargetHorizontalDirection; // 0x1374	
	int32_t smash_distance_from_hero; // 0x1380	
	float animation_rate; // 0x1384	
	float turn_rate; // 0x1388	
	float m_flFacingTarget; // 0x138c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hoodwink_HuntersQuiver : public CDOTA_Buff
{
public:
	int32_t bonus_attack_range; // 0x1338	
	int32_t max_stacks; // 0x133c	
	float debuff_duration; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Hoodwink_Sharpshooter_Recoil : public CDOTA_Buff
{
public:
	float recoil_duration; // 0x1338	
	int32_t recoil_height; // 0x133c	
	int32_t recoil_distance; // 0x1340	
	float m_flStartZ; // 0x1344	
	float m_flCurTime; // 0x1348	
	float m_flJumpDuration; // 0x134c	
	float m_flJumpHeight; // 0x1350	
	Vector m_vTargetHorizontalDirection; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Visage_GraveChill_Debuff : public CDOTA_Buff
{
public:
	int32_t movespeed_bonus; // 0x1338	
	int32_t attackspeed_bonus; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_KeeperOfTheLight_SpiritFormIlluminateEnd : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Obsidian_Destroyer_AstralImprisonment : public CDOTABaseAbility
{
public:
	CHandle< CBaseEntity > m_hImprisonedUnit; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Enchantress_Little_Friends_Kill_Credit : public CDOTA_Buff
{
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Life_Stealer_Open_Wounds : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FacelessVoid_Chronosphere : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_SandKing_Epicenter : public CDOTABaseAbility
{
public:
	ParticleIndex_t m_nFXEpicenterIndex; // 0x578	
	ParticleIndex_t m_nFXIndex; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nevermore_Necromastery_Fear : public CDOTA_Modifier_Nevermore_Requiem_Fear
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_KoboldTunneler_Prospecting : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CGameGibManager : public CBaseEntity
{
private:
	[[maybe_unused]] uint8_t __pad04a8[0x20]; // 0x4a8
public:
	bool m_bAllowNewGibs; // 0x4c8	
private:
	[[maybe_unused]] uint8_t __pad04c9[0x3]; // 0x4c9
public:
	int32_t m_iCurrentMaxPieces; // 0x4cc	
	int32_t m_iMaxPieces; // 0x4d0	
	int32_t m_iLastFrame; // 0x4d4	
	
	// Datamap fields:
	// int32_t InputSetMaxPieces; // 0x0
	// int32_t InputSetMaxPiecesDX8; // 0x0
	// void m_LRU; // 0x4a8
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Naga_Siren : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Invoker_8 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Invoker_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Evasion_50 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1900
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Trap_Ward : public CDOTA_BaseNPC_Creature
{
public:
	CUtlSymbolLarge m_iszDefaultAnim; // 0x18e8	
	Vector m_vTrapTargetLocal; // 0x18f0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xad8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CRagdollPropAlias_physics_prop_ragdoll : public CRagdollProp
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_AghsFort_BossWinterWyvern_Cold_Embrace_Thinker : public CDOTA_Buff
{
public:
	int32_t freeze_radius; // 0x1338	
	int32_t freeze_damage; // 0x133c	
	float freeze_debuff_duration; // 0x1340	
	float freeze_delay; // 0x1344	
	ParticleIndex_t m_nFXIndex; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1378
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Harpoon : public CDOTA_Buff_Item
{
public:
	int32_t bonus_chance; // 0x1338	
	int32_t bonus_chance_damage; // 0x133c	
	int32_t bonus_strength; // 0x1340	
	int32_t bonus_agility; // 0x1344	
	int32_t bonus_intellect; // 0x1348	
	float bonus_mana_regen; // 0x134c	
	int32_t bonus_damage; // 0x1350	
	int32_t bonus_speed; // 0x1354	
	CUtlVector< int16 > m_InFlightProcAttackRecords; // 0x1358	
	int32_t m_nBonusProcAttackRecord; // 0x1370	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Aghanims_Shard : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_PoorMansShield : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FlaskHealing : public CDOTA_Buff
{
public:
	int32_t health_regen; // 0x1338	
	int32_t break_on_hero_damage; // 0x133c	
	float m_fHealingDone; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlString m_sAbilityClassname; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Marci_Unleash_FlurryCooldown : public CDOTA_Buff
{
public:
	int32_t charges_per_flurry; // 0x1338	
	float time_between_flurries; // 0x133c	
	float recovery_fixed_attack_rate; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pangolier_Gyroshell_Ricochet : public CDOTA_Buff
{
public:
	float m_flStartZ; // 0x1338	
	float m_flCurTime; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Oracle_PurifyingFlames : public CDOTABaseAbility
{
public:
	bool m_bTargetIsAlly; // 0x578	
private:
	[[maybe_unused]] uint8_t __pad0579[0x3]; // 0x579
public:
	CHandle< CBaseEntity > m_hRecentTarget; // 0x57c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Special_Bonus_Unique_Elder_Titan_4 : public CDOTA_Modifier_MagicImmune
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Shredder_Flamethrower : public CDOTA_Buff
{
public:
	int32_t length; // 0x1338	
	int32_t width; // 0x133c	
	int32_t damage_per_second; // 0x1340	
	ParticleIndex_t m_nBeamFXIndex; // 0x1344	
	CHandle< CBaseEntity > m_hBeamEnd; // 0x1348	
	GameTime_t m_flLastHit; // 0x134c	
	CUtlVector< CBaseEntity* > m_vecBurningTrees; // 0x1350	
	CHandle< CBaseEntity > m_hTreeFireThinker; // 0x1368	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Wisp_Relocate_Thinker : public CDOTA_Buff
{
public:
	float cast_delay; // 0x1338	
	ParticleIndex_t m_nFXIndexEndTeam; // 0x133c	
	ParticleIndex_t m_nFXIndexChannel; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Alchemist_ChemicalRage : public CDOTA_Buff
{
public:
	float base_attack_time; // 0x1338	
	int32_t bonus_health; // 0x133c	
	int32_t bonus_health_regen; // 0x1340	
	float bonus_mana_regen; // 0x1344	
	int32_t bonus_movespeed; // 0x1348	
	ParticleIndex_t m_nFXAlchemistCRIndex; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_QueenOfPain_SonicWave_Effect : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tiny_Toss_ChargeCounter : public CDOTA_Modifier_LegacyChargeCounter
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Kunkka_GhostShip_DamageAbsorb : public CDOTA_Buff
{
public:
	int32_t m_iAccumulatedDamage; // 0x1338	
	int32_t movespeed_bonus; // 0x133c	
	float ghostship_absorb; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Juggernaut_BladeFury : public CDOTABaseAbility
{
public:
	int32_t blade_fury_damage_per_tick; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4a8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFuncPropRespawnZone : public CBaseEntity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Range_75 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Strength_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Movement_Speed_60 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Attack_Speed_45 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x13f8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_DataRadiant : public CDOTA_DataNonSpectator
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x860
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFuncTrackAuto : public CFuncTrackChange
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Slime_Vial_Spill_Debuff : public CDOTA_Buff
{
public:
	int32_t spill_movement_speed; // 0x1338	
	int32_t spill_attack_speed; // 0x133c	
	int32_t spill_self_bonus_armor; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_LanceOfPursuit : public CDOTA_Buff_Item
{
public:
	int32_t bonus_mana; // 0x1338	
	int32_t bonus_strength; // 0x133c	
	int32_t backstab_damage; // 0x1340	
	int32_t backstab_angle; // 0x1344	
	float slow_duration; // 0x1348	
	bool m_bBackstab; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MonkeyKing_FurArmy_Soldier : public CDOTA_Buff
{
public:
	Vector m_vTargetPos; // 0x1338	
	Vector m_vDirection; // 0x1344	
	int32_t move_speed; // 0x1350	
	CHandle< CBaseEntity > m_hThinker; // 0x1354	
	bool m_bIsInPosition; // 0x1358	
private:
	[[maybe_unused]] uint8_t __pad1359[0x3]; // 0x1359
public:
	ParticleIndex_t m_nFXIndex; // 0x135c	
	bool m_bAutoSpawn; // 0x1360	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Phoenix_Sun : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1338	
	float stun_duration; // 0x133c	
	int32_t max_hero_attacks; // 0x1340	
	int32_t max_hero_attacks_scepter; // 0x1344	
	int32_t max_hero_attacks_required; // 0x1348	
	CHandle< CBaseEntity > m_hSecondaryTarget; // 0x134c	
	int32_t m_iAttackCount; // 0x1350	
	int32_t creep_attacks_count; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Techies_Minefield_Sign_Thinker : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1338	
	float trigger_radius; // 0x133c	
	float minefield_duration; // 0x1340	
	bool m_bTriggered; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tusk_Tag_Team_Attack_Slow : public CDOTA_Buff
{
public:
	int32_t attack_speed_slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Rubick_NullField_Effect : public CDOTA_Buff
{
public:
	int32_t magic_damage_reduction_pct; // 0x1338	
	bool m_bWasHidden; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_IceWall_AD : public CDOTA_Ability_Invoker_IceWall
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x588
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Invoker_Alacrity_AD : public CDOTA_Ability_Invoker_Alacrity
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Phantom_Lancer_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_SkeletonKing_Reincarnation_Scepter : public CDOTA_Buff
{
public:
	float scepter_duration; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Sven_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// Is Abstract
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_PolarFurbolgUrsaWarrior_ThunderClap : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_KoboldTaskmaster_SpeedAura : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4e0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CEnvSpark : public CPointEntity
{
public:
	float m_flDelay; // 0x4a8	
	int32_t m_nMagnitude; // 0x4ac	
	int32_t m_nTrailLength; // 0x4b0	
	int32_t m_nType; // 0x4b4	
	CEntityIOOutput m_OnSpark; // 0x4b8	
	
	// Datamap fields:
	// void CEnvSparkSparkThink; // 0x0
	// void InputStartSpark; // 0x0
	// void InputStopSpark; // 0x0
	// void InputToggleSpark; // 0x0
	// void InputSparkOnce; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Storm_Spirit_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Monkey_King_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x40
// Has VTable
// Is Abstract
// MNetworkAssumeNotNetworkable
class CPlayer_AutoaimServices : public CPlayerPawnComponent
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Tusk : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x820
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFuncTrain : public CBasePlatTrain
{
public:
	CHandle< CBaseEntity > m_hCurrentTarget; // 0x800	
	bool m_activated; // 0x804	
private:
	[[maybe_unused]] uint8_t __pad0805[0x3]; // 0x805
public:
	CHandle< CBaseEntity > m_hEnemy; // 0x808	
	float m_flBlockDamage; // 0x80c	
	GameTime_t m_flNextBlockTime; // 0x810	
private:
	[[maybe_unused]] uint8_t __pad0814[0x4]; // 0x814
public:
	CUtlSymbolLarge m_iszLastTarget; // 0x818	
	
	// Datamap fields:
	// void CFuncTrainWait; // 0x0
	// void CFuncTrainNext; // 0x0
	// void InputToggle; // 0x0
	// void InputStart; // 0x0
	// void InputStop; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Healing_Campfire_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Psychic_Headband : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_LesserCritical : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5b8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_VoidSpirit_AetherRemnant : public CDOTABaseAbility
{
public:
	int32_t start_radius; // 0x578	
	int32_t end_radius; // 0x57c	
	int32_t remnant_watch_distance; // 0x580	
	int32_t projectile_speed; // 0x584	
private:
	[[maybe_unused]] uint8_t __pad0588[0x8]; // 0x588
public:
	Vector m_vDashPosition; // 0x590	
	Vector m_vFacePosition; // 0x59c	
	Vector m_vEndpoint; // 0x5a8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Tusk_Snowball_Target : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Alchemist_Corrosive_Weaponry_Debuff : public CDOTA_Buff
{
public:
	int32_t slow_per_stack; // 0x1338	
	float status_resist_per_stack; // 0x133c	
	float chemical_rage_bonus; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer_11 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_TemplarAssassin_SelfTrap : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Courier_Morph : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Slardar_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Lich_Chain_Frost_Thinker : public CDOTA_Buff
{
public:
	int32_t m_nDamageToHeroes; // 0x1338	
	int32_t m_nHeroesKilled; // 0x133c	
	int32_t m_nJumps; // 0x1340	
	bool m_bFirstJump; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1345[0x3]; // 0x1345
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1348	
	CHandle< CBaseEntity > m_hAvoidTarget; // 0x134c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x580
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Lina_LagunaBlade : public CDOTABaseAbility
{
public:
	int32_t m_iDamage; // 0x578	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1368
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DrowRanger_WaveOfSilence_Knockback : public CDOTA_Modifier_Knockback
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Silencer_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Agility_14 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_MP_Regen_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_MapTree : public CDOTA_BinaryObject
{
public:
	// Datamap fields:
	// void InputCutDown; // 0x0
	// void InputCutDownForever; // 0x0
	// void InputGrowBack; // 0x0
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1798
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Beastmaster_Boar : public CDOTA_Unit_Hero_Beastmaster_Beasts
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_HillTroll_RallyAura : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mutation_Cooldown_Reduction_Team_Aura : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Faerie_Fire : public CDOTA_Buff_Item
{
public:
	int32_t bonus_damage; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Recipe_Moonshard : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Desolator : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Crimson_Guard : public CDOTA_Buff_Item
{
public:
	int32_t bonus_health; // 0x1338	
	float bonus_health_regen; // 0x133c	
	float bonus_armor; // 0x1340	
	int32_t block_damage_ranged; // 0x1344	
	int32_t block_damage_melee; // 0x1348	
	int32_t block_chance; // 0x134c	
	int32_t bonus_aoe_radius; // 0x1350	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Muerta_TheCalling_Invulnerable : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mars_Scepter_Damage_Tracker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DarkWillow_ShadowRealm_FadeTime : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Elder_Titan_EchoStomp_Spirit : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Skywrath_Mage_Arcane_Bolt : public CDOTABaseAbility
{
public:
	int32_t bolt_vision; // 0x578	
	float vision_duration; // 0x57c	
	float m_flDamage; // 0x580	
	int32_t m_nFXIndex; // 0x584	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Rubick_Hidden2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_FacelessVoid_Timelock_Basic_Proc_Marker : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Necrolyte_Sadist_Aura_Effect : public CDOTA_Buff
{
public:
	int32_t movement_speed; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Invoker_DeafeningBlast_Disarm : public CDOTA_Modifier_Disarmed
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_HeroStatuePedestal : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x550
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CNavLinkAreaEntity : public CPointEntity
{
public:
	float m_flWidth; // 0x4a8	
	Vector m_vLocatorOffset; // 0x4ac	
	QAngle m_qLocatorAnglesOffset; // 0x4b8	
private:
	[[maybe_unused]] uint8_t __pad04c4[0x4]; // 0x4c4
public:
	CUtlSymbolLarge m_strMovementForward; // 0x4c8	
	CUtlSymbolLarge m_strMovementReverse; // 0x4d0	
	int32_t m_nNavLinkIdForward; // 0x4d8	
	int32_t m_nNavLinkIdReverse; // 0x4dc	
	bool m_bEnabled; // 0x4e0	
private:
	[[maybe_unused]] uint8_t __pad04e1[0x7]; // 0x4e1
public:
	CUtlSymbolLarge m_strFilterName; // 0x4e8	
	CHandle< CBaseFilter > m_hFilter; // 0x4f0	
private:
	[[maybe_unused]] uint8_t __pad04f4[0x4]; // 0x4f4
public:
	CEntityIOOutput m_OnNavLinkStart; // 0x4f8	
	CEntityIOOutput m_OnNavLinkFinish; // 0x520	
	bool m_bIsTerminus; // 0x548	
	
	// Datamap fields:
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x880
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFuncMoveLinearAlias_momentary_door : public CFuncMoveLinear
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x520
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CCommentaryAuto : public CBaseEntity
{
public:
	CEntityIOOutput m_OnCommentaryNewGame; // 0x4a8	
	CEntityIOOutput m_OnCommentaryMidGame; // 0x4d0	
	CEntityIOOutput m_OnCommentaryMultiplayerSpawn; // 0x4f8	
	
	// Datamap fields:
	// void InputMultiplayerSpawned; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Legion_Commander_2 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Invoker_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Lifesteal_18 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xe0
// Has VTable
// 
// MNetworkVarNames "uint32 m_iEventID"
// MNetworkVarNames "uint32 m_iEventPoints"
// MNetworkVarNames "uint32 m_iEventPremiumPoints"
// MNetworkVarNames "uint32 m_iEventEffectsMask"
// MNetworkVarNames "uint16 m_iEventRanks"
// MNetworkVarNames "bool m_bIsEventOwned"
// MNetworkVarNames "TeamID_t m_iFavoriteTeam"
// MNetworkVarNames "uint16 m_iFavoriteTeamQuality"
// MNetworkVarNames "uint8 m_iAvailableSalutes"
// MNetworkVarNames "uint8 m_iSaluteAmountIndex"
// MNetworkVarNames "uint32 m_iEventWagerStreak"
// MNetworkVarNames "uint8 m_iEventTeleportFXLevel"
// MNetworkVarNames "int m_nCandyPointsReason"
// MNetworkVarNames "PlayerResourcePlayerPeriodicResourceData_t m_vecPeriodicResources"
// MNetworkVarNames "uint8 m_iObsoleteSaluteAmounts"
// MNetworkVarNames "uint32 m_iObsoleteEventArcanaPeriodicResourceRemaining"
// MNetworkVarNames "uint32 m_iObsoleteEventArcanaPeriodicResourceMax"
// MNetworkVarNames "uint32 m_iObsoleteEventWagerTokensRemaining"
// MNetworkVarNames "uint32 m_iObsoleteEventWagerTokensMax"
// MNetworkVarNames "uint32 m_iObsoleteEventBountiesRemaining"
// MNetworkVarNames "uint32 m_iObsoleteRankWagersAvailable"
// MNetworkVarNames "uint32 m_iObsoleteRankWagersMax"
// MNetworkVarNames "uint32 m_iObsoleteEventPointAdjustmentsRemaining"
struct PlayerResourcePlayerEventData_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x30]; // 0x0
public:
	// MNetworkEnable
	uint32_t m_iEventID; // 0x30	
	// MNetworkEnable
	uint32_t m_iEventPoints; // 0x34	
	// MNetworkEnable
	uint32_t m_iEventPremiumPoints; // 0x38	
	// MNetworkEnable
	uint32_t m_iEventEffectsMask; // 0x3c	
	// MNetworkEnable
	uint16_t m_iEventRanks; // 0x40	
	// MNetworkEnable
	bool m_bIsEventOwned; // 0x42	
private:
	[[maybe_unused]] uint8_t __pad0043[0x1]; // 0x43
public:
	// MNetworkEnable
	uint32_t m_iFavoriteTeam; // 0x44	
	// MNetworkEnable
	uint16_t m_iFavoriteTeamQuality; // 0x48	
	// MNetworkEnable
	uint8_t m_iAvailableSalutes; // 0x4a	
	// MNetworkEnable
	uint8_t m_iSaluteAmountIndex; // 0x4b	
	// MNetworkEnable
	uint32_t m_iEventWagerStreak; // 0x4c	
	// MNetworkEnable
	uint8_t m_iEventTeleportFXLevel; // 0x50	
private:
	[[maybe_unused]] uint8_t __pad0051[0x3]; // 0x51
public:
	// MNetworkEnable
	int32_t m_nCandyPointsReason[5]; // 0x54	
	// MNetworkEnable
	CUtlVectorEmbeddedNetworkVar< PlayerResourcePlayerPeriodicResourceData_t > m_vecPeriodicResources; // 0x68	
	// MNetworkEnable
	// MNetworkAlias "m_iSaluteAmounts"
	uint8_t m_iObsoleteSaluteAmounts; // 0xb8	
private:
	[[maybe_unused]] uint8_t __pad00b9[0x3]; // 0xb9
public:
	// MNetworkEnable
	// MNetworkAlias "m_iEventArcanaPeriodicResourceRemaining"
	uint32_t m_iObsoleteEventArcanaPeriodicResourceRemaining; // 0xbc	
	// MNetworkEnable
	// MNetworkAlias "m_iEventArcanaPeriodicResourceMax"
	uint32_t m_iObsoleteEventArcanaPeriodicResourceMax; // 0xc0	
	// MNetworkEnable
	// MNetworkAlias "m_iEventWagerTokensRemaining"
	uint32_t m_iObsoleteEventWagerTokensRemaining; // 0xc4	
	// MNetworkEnable
	// MNetworkAlias "m_iEventWagerTokensMax"
	uint32_t m_iObsoleteEventWagerTokensMax; // 0xc8	
	// MNetworkEnable
	// MNetworkAlias "m_iEventBountiesRemaining"
	uint32_t m_iObsoleteEventBountiesRemaining; // 0xcc	
	// MNetworkEnable
	// MNetworkAlias "m_iRankWagersAvailable"
	uint32_t m_iObsoleteRankWagersAvailable; // 0xd0	
	// MNetworkEnable
	// MNetworkAlias "m_iRankWagersMax"
	uint32_t m_iObsoleteRankWagersMax; // 0xd4	
	// MNetworkEnable
	// MNetworkAlias "m_iEventPointAdjustmentsRemaining"
	uint32_t m_iObsoleteEventPointAdjustmentsRemaining; // 0xd8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18e8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_AghsFort_Creature_DragonKnight : public CDOTA_BaseNPC_Creature
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1768
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_TemplarAssassin_PsionicTrap : public CDOTA_BaseNPC
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_MudGolem_CloakAura_Bonus : public CDOTA_Buff
{
public:
	int32_t bonus_magical_armor; // 0x1338	
	int32_t bonus_magical_armor_creeps; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Occult_Bracelet : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Orb_Of_Destruction_Debuff : public CDOTA_Buff
{
public:
	int32_t armor_reduction; // 0x1338	
	int32_t slow_melee; // 0x133c	
	int32_t slow_range; // 0x1340	
	bool bCasterRanged; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Enchanted_Mango : public CDOTA_Buff_Item
{
public:
	float hp_regen; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dawnbreaker_Luminosity : public CDOTA_Buff
{
public:
	bool m_bAppliesToCreeps; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	int32_t attack_count; // 0x133c	
	bool m_bShouldIncrement; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Winter_Wyvern_Winters_Curse : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hZombieTarget; // 0x1338	
	CHandle< CBaseEntity > m_hDesiredTarget; // 0x133c	
	int32_t damage_reduction; // 0x1340	
	int32_t damage_amplification; // 0x1344	
	int32_t bonus_attack_speed; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Abaddon_Borrowed_Time_Damage_Redirect : public CDOTA_Buff
{
public:
	float m_fDamageTaken; // 0x1338	
	int32_t ally_threshold_scepter; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Disruptor_4 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Disruptor_StaticStorm : public CDOTA_Buff
{
public:
	int32_t miss_rate; // 0x1338	
	int32_t movement_speed_reduction; // 0x133c	
	int32_t attack_speed_reduction; // 0x1340	
	bool m_bHasScepter; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Disruptor_Thunder_Strike_Speed : public CDOTA_Buff
{
public:
	int32_t shard_movement_speed_bonus; // 0x1338	
	int32_t shard_attack_speed_bonus; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Brewmaster_Primal_Split_Cancel : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Dark_Seer_6 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Enigma_BlackHole_Pull : public CDOTA_Buff
{
public:
	int32_t pull_speed; // 0x1338	
	int32_t radius; // 0x133c	
	int32_t damage; // 0x1340	
	float tick_rate; // 0x1344	
	float pull_rotate_speed; // 0x1348	
	float animation_rate; // 0x134c	
	float scepter_pct_damage; // 0x1350	
	GameTime_t m_flDamageTick; // 0x1354	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Enigma_DemonicConversion : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Windrunner_Windrun : public CDOTA_Buff
{
public:
	int32_t radius; // 0x1338	
	int32_t scepter_radius; // 0x133c	
	int32_t movespeed_bonus_pct; // 0x1340	
	bool m_bDispellable; // 0x1344	
private:
	[[maybe_unused]] uint8_t __pad1345[0x3]; // 0x1345
public:
	int32_t physical_damage_pct; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Axe_BatleHunger_Self_Movespeed : public CDOTA_Buff
{
public:
	int32_t speed_bonus; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5e8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_AncientApparition_IceBlast : public CDOTABaseAbility
{
public:
	CountdownTimer m_PathTimer; // 0x578	
	Vector m_vTarget; // 0x590	
	Vector m_vStartPos; // 0x59c	
	Vector m_vLastTempViewer; // 0x5a8	
	int32_t m_iTrackerProjectile; // 0x5b4	
	int32_t path_radius; // 0x5b8	
	int32_t radius_min; // 0x5bc	
	int32_t radius_max; // 0x5c0	
	float radius_grow; // 0x5c4	
	float frostbite_duration; // 0x5c8	
	int32_t target_sight_radius; // 0x5cc	
	CUtlVector< CHandle< CBaseEntity > > m_hFrostbittenEntities; // 0x5d0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Plus_HighFive : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Seasonal_Summon_Dragon : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Lycan_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Troll_Warlord : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Spectre_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Gold_lvl10_l : public CDOTA_Ability_Special_Bonus_Gold_Ability_Draft
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Meepo_Earthbind : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1798
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "PlayerID_t m_nSoleControllingPlayer"
// MNetworkVarNames "GameTime_t m_flRespawnTime"
// MNetworkVarNames "ScoutState_t m_nScoutState"
// MNetworkVarNames "CHandle< CBaseEntity> m_hScoutStateEntity"
class CDOTA_Unit_Scout : public CDOTA_BaseNPC_Additive
{
public:
	bool m_bUnitRespawned; // 0x1768	
private:
	[[maybe_unused]] uint8_t __pad1769[0x3]; // 0x1769
public:
	// MNetworkEnable
	PlayerID_t m_nSoleControllingPlayer; // 0x176c	
	// MNetworkEnable
	GameTime_t m_flRespawnTime; // 0x1770	
	// MNetworkEnable
	ScoutState_t m_nScoutState; // 0x1774	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hScoutStateEntity; // 0x1778	
private:
	[[maybe_unused]] uint8_t __pad177c[0x4]; // 0x177c
public:
	CUtlString m_strScoutModel; // 0x1780	
	Vector m_vSpawnLocation; // 0x1788	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1870
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_NeutralItemStash : public CDOTA_BaseNPC_Building
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_ForestTrollHighPriest_HealAutocast : public CDOTA_Buff
{
public:
	int32_t health; // 0x1338	
	CHandle< CBaseEntity > m_hHealTarget; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_GnollAssassin_EnvenomedWeapon_Poison : public CDOTA_Buff
{
public:
	int32_t damage_per_second; // 0x1338	
	int32_t regen_reduction; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_Enchanted_Quiver : public CDOTA_Buff_Item
{
public:
	int32_t bonus_attack_range; // 0x1338	
	int32_t bonus_damage; // 0x133c	
	int32_t active_bonus_attack_range; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1344[0x4]; // 0x1344
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1348	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1338
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Manta : public CDOTA_Buff
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_AbyssalBlade : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Butterfly : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x620
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Perseverance : public CDOTA_Item
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Centaur_7 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Troll_Warlord_Rampage : public CDOTA_Buff
{
public:
	int32_t attack_speed; // 0x1338	
	int32_t status_resistance; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1350
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Brewmaster_Cyclone : public CDOTA_Modifier_Cyclone
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1358
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Obsidian_Destroyer_ArcaneOrb : public CDOTA_Buff
{
public:
	float mana_pool_damage_pct; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad133c[0x4]; // 0x133c
public:
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1360
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Enchantress_Little_Friends_Aura : public CDOTA_Buff
{
public:
	CHandle< CBaseEntity > m_hTarget; // 0x1338	
	int32_t m_nAlliesTaunted; // 0x133c	
	bool m_bRelicTriggered; // 0x1340	
private:
	[[maybe_unused]] uint8_t __pad1341[0x3]; // 0x1341
public:
	int32_t radius; // 0x1344	
	int32_t damage_amplification; // 0x1348	
	int32_t damage_reduction; // 0x134c	
	float root_base_duration; // 0x1350	
	float root_per_target; // 0x1354	
	float max_root; // 0x1358	
	GameTime_t m_flLastSeen; // 0x135c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Dazzle_Poison_Touch_Self : public CDOTA_Buff
{
public:
	int32_t attack_range_bonus; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Mirana_Starfall_Scepter_Thinker : public CDOTA_Buff
{
public:
	float interval_scepter; // 0x1338	
	bool bInBufferTime; // 0x133c	
private:
	[[maybe_unused]] uint8_t __pad133d[0x3]; // 0x133d
public:
	int32_t damage; // 0x1340	
	GameTime_t m_flLastApplyTime; // 0x1344	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Nevermore_Requiem_Slow : public CDOTA_Buff
{
public:
	int32_t requiem_reduction_ms; // 0x1338	
	int32_t requiem_reduction_mres; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4d8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CLogicMeasureMovement : public CLogicalEntity
{
public:
	CUtlSymbolLarge m_strMeasureTarget; // 0x4a8	
	CUtlSymbolLarge m_strMeasureReference; // 0x4b0	
	CUtlSymbolLarge m_strTargetReference; // 0x4b8	
	CHandle< CBaseEntity > m_hMeasureTarget; // 0x4c0	
	CHandle< CBaseEntity > m_hMeasureReference; // 0x4c4	
	CHandle< CBaseEntity > m_hTarget; // 0x4c8	
	CHandle< CBaseEntity > m_hTargetReference; // 0x4cc	
	float m_flScale; // 0x4d0	
	int32_t m_nMeasureType; // 0x4d4	
	
	// Datamap fields:
	// CUtlSymbolLarge InputSetMeasureTarget; // 0x0
	// CUtlSymbolLarge InputSetMeasureReference; // 0x0
	// CUtlSymbolLarge InputSetTarget; // 0x0
	// CUtlSymbolLarge InputSetTargetReference; // 0x0
	// float InputSetTargetScale; // 0x0
	// void InputEnable; // 0x0
	// void InputDisable; // 0x0
	// void CLogicMeasureMovementMeasureThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Winter_Wyvern_3 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_SandKing : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x628
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Item_Safety_Bubble : public CDOTA_Item
{
public:
	bool m_bUnequipped; // 0x620	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1348
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_MaskOfDispair : public CDOTA_Buff_Item
{
public:
	int32_t bonus_strength; // 0x1338	
	float bonus_armor; // 0x133c	
	int32_t spell_lifesteal; // 0x1340	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Havoc_Hammer_Slow : public CDOTA_Buff
{
public:
	int32_t slow; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Item_RingOfAquila_Aura : public CDOTA_Buff_Item
{
public:
	bool m_bAppliesToCreeps; // 0x1338	
private:
	[[maybe_unused]] uint8_t __pad1339[0x3]; // 0x1339
public:
	int32_t aura_radius; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x590
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Hoodwink_Bushwhack : public CDOTABaseAbility
{
public:
	int32_t trap_radius; // 0x578	
	int32_t m_nProjectileHandle; // 0x57c	
	ParticleIndex_t m_nFXIndex; // 0x580	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Pangolier_HeartPiercer : public CDOTA_Buff
{
public:
	float debuff_delay; // 0x1338	
	int32_t chance_pct; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1370
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Medusa_StoneGaze_Facing : public CDOTA_Buff
{
public:
	float face_duration; // 0x1338	
	float stone_duration; // 0x133c	
	float duration; // 0x1340	
	float vision_cone; // 0x1344	
	float m_flAccumulatedTime; // 0x1348	
private:
	[[maybe_unused]] uint8_t __pad134c[0x4]; // 0x134c
public:
	CountdownTimer ctFacing; // 0x1350	
	bool m_bAlreadyStoned; // 0x1368	
private:
	[[maybe_unused]] uint8_t __pad1369[0x3]; // 0x1369
public:
	ParticleIndex_t m_nFXIndex; // 0x136c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5a0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "Vector m_vStartLocation"
class CDOTA_Ability_Rubick_Telekinesis : public CDOTABaseAbility
{
public:
	// MNetworkEnable
	Vector m_vStartLocation; // 0x578	
	Vector m_vLandLocation; // 0x584	
	GameTime_t m_flStartTime; // 0x590	
private:
	[[maybe_unused]] uint8_t __pad0594[0x4]; // 0x594
public:
	CDOTA_BaseNPC* m_pTarget; // 0x598	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_LoneDruid_TrueForm_BattleCry : public CDOTA_Buff
{
public:
	int32_t bonus_damage; // 0x1338	
	int32_t bonus_armor; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_LoneDruid_SpiritBear_Defender : public CDOTA_Buff
{
public:
	int32_t damage_share; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DarkSeer_Normal_Punch_Illusion : public CDOTA_Buff
{
public:
	int32_t replica_scale; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_Leshrac_Split_Earth_Thinker : public CDOTA_Buff
{
public:
	int32_t m_iCount; // 0x1338	
	ParticleIndex_t m_nFXIndex; // 0x133c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1340
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_VengefulSpirit_Command_Aura : public CDOTA_Buff
{
public:
	int32_t aura_radius; // 0x1338	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1390
// Has VTable
// MNetworkAssumeNotNetworkable
class CDOTA_Modifier_DrowRanger_Marksmanship : public CDOTA_Buff
{
public:
	int32_t chance; // 0x1338	
	ParticleIndex_t m_nFxIndex; // 0x133c	
	CUtlVector< int16 > m_InFlightAttackRecords; // 0x1340	
	CUtlVector< int16 > m_GlacialInFlightAttackRecords; // 0x1358	
	int32_t bonus_factor; // 0x1370	
	int32_t disable_range; // 0x1374	
	int32_t agility_range; // 0x1378	
	int32_t bonus_damage; // 0x137c	
	int32_t split_count; // 0x1380	
	int32_t split_range; // 0x1384	
	bool m_bGlacialAttack; // 0x1388	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Juggernaut_HealingWard : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_GnollAssassin_EnvenomedWeapon : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x178
// Has VTable
class CDOTABehaviorCommandPatrol
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x68]; // 0x0
public:
	CDOTABehaviorMoveTo m_MoveTo; // 0x68	
	Vector m_vOrderPosition; // 0x148	
private:
	[[maybe_unused]] uint8_t __pad0154[0x4]; // 0x154
public:
	CUtlVector< Vector > m_vPatrolPoints; // 0x158	
	int32_t m_nCurrentTargetIndex; // 0x170	
	int32_t m_nDirection; // 0x174	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_UpheavalUrn_Reincarnation : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_Unique_Weaver_5 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x578
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Ability_Special_Bonus_HP_350 : public CDOTABaseAbility
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x50
// Has VTable
// Construct allowed
// 
// MNetworkVarNames "CTransform m_Transforms"
// MNetworkVarNames "EHANDLE m_hOwner"
struct PhysicsRagdollPose_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkDisable
	// MNetworkChangeAccessorFieldPathIndex
	CNetworkVarChainer __m_pChainEntity; // 0x8	
	// MNetworkEnable
	// MNetworkChangeCallback "OnTransformChanged"
	CNetworkUtlVectorBase< CTransform > m_Transforms; // 0x30	
	// MNetworkEnable
	CHandle< CBaseEntity > m_hOwner; // 0x48	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8
// Has Trivial Destructor
struct Relationship_t
{
public:
	Disposition_t disposition; // 0x0	
	int32_t priority; // 0x4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
// Has VTable
// Is Abstract
// Has Trivial Destructor
class CVerticalMotionController
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x10]; // 0x0
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
struct GameChatLogEntry_t
{
public:
	int32_t m_nTeam; // 0x0	
	PlayerID_t m_nPlayerID; // 0x4	
	CUtlString m_sText; // 0x8	
	GameTime_t m_flGameTime; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
// Has VTable
// Is Abstract
// Has Trivial Destructor
class CHorizontalMotionController
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x10]; // 0x0
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4
// Has Trivial Constructor
// Has Trivial Destructor
struct AISound_t
{
public:
	uint16_t nType; // 0x0	
	uint16_t nFlags; // 0x2	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x60
class CResponseQueue
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x48]; // 0x0
public:
	CUtlVector< CAI_Expresser* > m_ExpresserTargets; // 0x48	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x40
// Has Trivial Destructor
struct lerpdata_t
{
public:
	CHandle< CBaseEntity > m_hEnt; // 0x0	
	MoveType_t m_MoveType; // 0x4	
private:
	[[maybe_unused]] uint8_t __pad0005[0x3]; // 0x5
public:
	GameTime_t m_flStartTime; // 0x8	
	Vector m_vecStartOrigin; // 0xc	
private:
	[[maybe_unused]] uint8_t __pad0018[0x8]; // 0x18
public:
	Quaternion m_qStartRot; // 0x20	
	ParticleIndex_t m_nFXIndex; // 0x30	
	
	// Datamap fields:
	// void m_nSound; // 0x34
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x6c0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPhysHinge : public CPhysConstraint
{
private:
	[[maybe_unused]] uint8_t __pad0520[0x8]; // 0x520
public:
	// -> m_vSampler - 0x530
	// -> m_soundProfile - 0x548
	// -> m_forwardAxis - 0x568
	// -> m_iszTravelSoundFwd - 0x578
	// -> m_iszTravelSoundBack - 0x580
	// -> m_iszReversalSounds[3] - 0x590
	// -> m_bPlayTravelSound - 0x5a8
	// -> m_bPlayReversalSound - 0x5a9
	ConstraintSoundInfo m_soundInfo; // 0x528	
	CEntityIOOutput m_NotifyMinLimitReached; // 0x5b0	
	CEntityIOOutput m_NotifyMaxLimitReached; // 0x5d8	
	bool m_bAtMinLimit; // 0x600	
	bool m_bAtMaxLimit; // 0x601	
private:
	[[maybe_unused]] uint8_t __pad0602[0x2]; // 0x602
public:
	constraint_hingeparams_t m_hinge; // 0x604	
	float m_hingeFriction; // 0x644	
	float m_systemLoadScale; // 0x648	
	bool m_bIsAxisLocal; // 0x64c	
private:
	[[maybe_unused]] uint8_t __pad064d[0x3]; // 0x64d
public:
	float m_flMinRotation; // 0x650	
	float m_flMaxRotation; // 0x654	
	float m_flInitialRotation; // 0x658	
	float m_flMotorFrequency; // 0x65c	
	float m_flMotorDampingRatio; // 0x660	
	float m_flAngleSpeed; // 0x664	
	float m_flAngleSpeedThreshold; // 0x668	
private:
	[[maybe_unused]] uint8_t __pad066c[0x4]; // 0x66c
public:
	CEntityIOOutput m_OnStartMoving; // 0x670	
	CEntityIOOutput m_OnStopMoving; // 0x698	
	
	// Datamap fields:
	// Vector m_hinge.worldPosition; // 0x604
	// Vector m_hinge.worldAxisDirection; // 0x610
	// float InputSetMotorTargetAngle; // 0x0
	// float InputSetVelocity; // 0x0
	// float InputSetHingeFriction; // 0x0
	// float InputSetMinLimit; // 0x0
	// float InputSetMaxLimit; // 0x0
	// void CPhysHingeSoundThink; // 0x0
	// void CPhysHingeLimitThink; // 0x0
	// void CPhysHingeMoveThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xc
// Has Trivial Destructor
struct DamageShareEvent_t
{
public:
	float m_flOriginalDamage; // 0x0	
	float m_flTakenDamage; // 0x4	
	PlayerID_t m_nPlayerID; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8
// Has VTable
class INextBotEventResponder
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has VTable
// Is Abstract
class INextBotComponent : public INextBotEventResponder
{
public:
	GameTime_t m_lastUpdateTime; // 0x8	
	float m_curInterval; // 0xc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has Trivial Destructor
struct ResponseContext_t
{
public:
	CUtlSymbolLarge m_iszName; // 0x0	
	CUtlSymbolLarge m_iszValue; // 0x8	
	GameTime_t m_fExpirationTime; // 0x10	
};

// Registered binary: server.dll (project 'navlib')
// Alignment: 8
// Size: 0x70
// Has VTable
// Is Abstract
class CNavVolume
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x70]; // 0x0
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xc
// Has Trivial Destructor
struct TimedKillEvent_t
{
public:
	int32_t m_nKillTime; // 0x0	
	float m_flKillValue; // 0x4	
	PlayerID_t m_nPlayerID; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has VTable
// Is Abstract
// Has Trivial Destructor
class CObstructionObject
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x10]; // 0x0
public:
	int32_t m_nObstructionProperties; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 4
// Size: 0x68
// Has Trivial Destructor
// Construct allowed
// 
// MGetKV3ClassDefaults
class CGameScriptedMoveData
{
public:
	Vector m_vAccumulatedRootMotion; // 0x0	
	Vector m_vDest; // 0xc	
	Vector m_vSrc; // 0x18	
	QAngle m_angSrc; // 0x24	
	QAngle m_angDst; // 0x30	
	QAngle m_angCurrent; // 0x3c	
	float m_flAngRate; // 0x48	
	float m_flDuration; // 0x4c	
	GameTime_t m_flStartTime; // 0x50	
	bool m_bActive; // 0x54	
	bool m_bTeleportOnEnd; // 0x55	
	bool m_bIgnoreRotation; // 0x56	
private:
	[[maybe_unused]] uint8_t __pad0057[0x1]; // 0x57
public:
	ScriptedMoveType_t m_nType; // 0x58	
	bool m_bSuccess; // 0x5c	
private:
	[[maybe_unused]] uint8_t __pad005d[0x3]; // 0x5d
public:
	ForcedCrouchState_t m_nForcedCrouchState; // 0x60	
	bool m_bIgnoreCollisions; // 0x64	
};

// Registered binary: server.dll (project 'navlib')
// Alignment: 8
// Size: 0x80
// Has VTable
class CNavVolumeSphere : public CNavVolume
{
public:
	Vector m_vCenter; // 0x70	
	float m_flRadius; // 0x7c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x60
// Has VTable
class CAI_Expresser
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x38]; // 0x0
public:
	GameTime_t m_flStopTalkTime; // 0x38	
	GameTime_t m_flStopTalkTimeWithoutDelay; // 0x3c	
	GameTime_t m_flBlockedTalkTime; // 0x40	
	int32_t m_voicePitch; // 0x44	
	GameTime_t m_flLastTimeAcceptedSpeak; // 0x48	
	bool m_bAllowSpeakingInterrupts; // 0x4c	
	bool m_bConsiderSceneInvolvementAsSpeech; // 0x4d	
private:
	[[maybe_unused]] uint8_t __pad004e[0x2]; // 0x4e
public:
	int32_t m_nLastSpokenPriority; // 0x50	
private:
	[[maybe_unused]] uint8_t __pad0054[0x4]; // 0x54
public:
	CBaseFlex* m_pOuter; // 0x58	
	
	// Datamap fields:
	// void m_pSink; // 0x8
	// void m_ConceptHistories; // 0x10
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xc
// Has Trivial Destructor
class sPendingTreeRemoval
{
public:
	int32_t nTeam; // 0x0	
	int32_t nIndex; // 0x4	
	GameTime_t fTimestamp; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x6c0
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPhysHingeAlias_phys_hinge_local : public CPhysHinge
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x60
class sAcquireHistory
{
public:
	AbilityID_t m_nAbilityID; // 0x0	
	int32_t m_nLevel; // 0x4	
	int32_t m_nGold; // 0x8	
	int32_t m_nNetWorth; // 0xc	
	int32_t m_bCombinedItem; // 0x10	
	float m_fGameTime; // 0x14	
	CUtlVector< AbilityID_t > m_vecItemList; // 0x18	
	CUtlVector< AbilityID_t > m_vecTalentSkilledList; // 0x30	
	CUtlVector< AbilityID_t > m_vecAvailableNeutralItemList; // 0x48	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x64
// Has Trivial Constructor
// Has Trivial Destructor
struct dynpitchvol_t : public dynpitchvol_base_t
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has Trivial Destructor
class CHeadLookParams
{
public:
	CHeadLookParams::HeadLookPriority_t m_LookPriority; // 0x0	
	float m_flLookDuration; // 0x4	
	INextBotReply* m_pReplyWhenAimed; // 0x8	
	char* m_pReasonStr; // 0x10	
	bool m_bWaitForSteady; // 0x18	
private:
	[[maybe_unused]] uint8_t __pad0019[0x3]; // 0x19
public:
	float m_flEaseInTime; // 0x1c	
	
	// Static fields:
	static CHeadLookParams &Get_ms_Defaults(){return *reinterpret_cast<CHeadLookParams*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CHeadLookParams")->GetStaticFields()[0]->m_pInstance);};
};

// Registered binary: server.dll (project 'navlib')
// Alignment: 8
// Size: 0x98
// Has VTable
class CNavVolumeVector : public CNavVolume
{
private:
	[[maybe_unused]] uint8_t __pad0070[0x8]; // 0x70
public:
	bool m_bHasBeenPreFiltered; // 0x78	
};

// Registered binary: server.dll (project 'navlib')
// Alignment: 8
// Size: 0x10
// Has Trivial Destructor
struct NavGravity_t
{
public:
	Vector m_vGravity; // 0x0	
	bool m_bDefault; // 0xc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4f8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CEnvShake : public CPointEntity
{
public:
	CUtlSymbolLarge m_limitToEntity; // 0x4a8	
	float m_Amplitude; // 0x4b0	
	float m_Frequency; // 0x4b4	
	float m_Duration; // 0x4b8	
	float m_Radius; // 0x4bc	
	GameTime_t m_stopTime; // 0x4c0	
	GameTime_t m_nextShake; // 0x4c4	
	float m_currentAmp; // 0x4c8	
	Vector m_maxForce; // 0x4cc	
private:
	[[maybe_unused]] uint8_t __pad04d8[0x8]; // 0x4d8
public:
	CPhysicsShake m_shakeCallback; // 0x4e0	
	
	// Datamap fields:
	// void m_pShakeController; // 0x4d8
	// void InputStartShake; // 0x0
	// void InputStopShake; // 0x0
	// float InputAmplitude; // 0x0
	// float InputFrequency; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x5d8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPhysSlideConstraint : public CPhysConstraint
{
private:
	[[maybe_unused]] uint8_t __pad0520[0x8]; // 0x520
public:
	Vector m_axisEnd; // 0x528	
	float m_slideFriction; // 0x534	
	float m_systemLoadScale; // 0x538	
	float m_initialOffset; // 0x53c	
	bool m_bEnableLinearConstraint; // 0x540	
	bool m_bEnableAngularConstraint; // 0x541	
private:
	[[maybe_unused]] uint8_t __pad0542[0x2]; // 0x542
public:
	float m_flMotorFrequency; // 0x544	
	float m_flMotorDampingRatio; // 0x548	
	bool m_bUseEntityPivot; // 0x54c	
private:
	[[maybe_unused]] uint8_t __pad054d[0x3]; // 0x54d
public:
	// -> m_vSampler - 0x558
	// -> m_soundProfile - 0x570
	// -> m_forwardAxis - 0x590
	// -> m_iszTravelSoundFwd - 0x5a0
	// -> m_iszTravelSoundBack - 0x5a8
	// -> m_iszReversalSounds[3] - 0x5b8
	// -> m_bPlayTravelSound - 0x5d0
	// -> m_bPlayReversalSound - 0x5d1
	ConstraintSoundInfo m_soundInfo; // 0x550	
	
	// Datamap fields:
	// float InputSetOffset; // 0x0
	// float InputSetVelocity; // 0x0
	// float InputSetSlideFriction; // 0x0
	// void CPhysSlideConstraintSoundThink; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x34
// Has Trivial Destructor
class CSound
{
public:
	CHandle< CBaseEntity > m_hOwner; // 0x0	
	CHandle< CBaseEntity > m_hTarget; // 0x4	
	int32_t m_iVolume; // 0x8	
	float m_flOcclusionScale; // 0xc	
	// -> nType - 0x10
	// -> nFlags - 0x12
	AISound_t m_Sound; // 0x10	
	int32_t m_iNextAudible; // 0x14	
	GameTime_t m_flExpireTime; // 0x18	
	int16_t m_iNext; // 0x1c	
	bool m_bNoExpirationTime; // 0x1e	
private:
	[[maybe_unused]] uint8_t __pad001f[0x1]; // 0x1f
public:
	int32_t m_ownerChannelIndex; // 0x20	
	Vector m_vecOrigin; // 0x24	
	bool m_bHasOwner; // 0x30	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x60
// Has VTable
class CCommentarySystem
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x11]; // 0x0
public:
	bool m_bCommentaryConvarsChanging; // 0x11	
	bool m_bCommentaryEnabledMidGame; // 0x12	
private:
	[[maybe_unused]] uint8_t __pad0013[0x1]; // 0x13
public:
	GameTime_t m_flNextTeleportTime; // 0x14	
	int32_t m_iTeleportStage; // 0x18	
	bool m_bCheatState; // 0x1c	
	bool m_bIsFirstSpawnGroupToLoad; // 0x1d	
private:
	[[maybe_unused]] uint8_t __pad001e[0x1a]; // 0x1e
public:
	CHandle< CPointCommentaryNode > m_hCurrentNode; // 0x38	
	CHandle< CPointCommentaryNode > m_hActiveCommentaryNode; // 0x3c	
	CHandle< CPointCommentaryNode > m_hLastCommentaryNode; // 0x40	
private:
	[[maybe_unused]] uint8_t __pad0044[0x4]; // 0x44
public:
	CUtlVector< CHandle< CPointCommentaryNode > > m_vecNodes; // 0x48	
	
	// Datamap fields:
	// void m_ModifiedConvars; // 0x20
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8
// Has VTable
// Has Trivial Destructor
class INextBotReply
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x14
// Has Trivial Destructor
struct NianDamageTaken_t
{
public:
	int32_t nDamage; // 0x0	
	PlayerID_t nPlayerID; // 0x4	
	Vector vPos; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x28
struct ItemDropData_t
{
public:
	CUtlVector< CUtlString > sItemNames; // 0x0	
	float flChance; // 0x18	
	int32_t nReqLevel; // 0x1c	
	bool bMustBeChampion; // 0x20	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x17b8
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_BaseNPC_Creep_Siege : public CDOTA_BaseNPC_Creep_Lane
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1f0
struct ConceptHistory_t
{
public:
	float timeSpoken; // 0x0	
	CRR_Response m_response; // 0x8	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has VTable
class CGameChoreoServices : public IChoreoServices
{
public:
	CHandle< CBaseAnimGraph > m_hOwner; // 0x8	
	CHandle< CScriptedSequence > m_hScriptedSequence; // 0xc	
	IChoreoServices::ScriptState_t m_scriptState; // 0x10	
	IChoreoServices::ChoreoState_t m_choreoState; // 0x14	
	GameTime_t m_flTimeStartedState; // 0x18	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x90
// Has VTable
class CLocomotionBase : public INextBotComponent
{
private:
	[[maybe_unused]] uint8_t __pad0020[0x50]; // 0x20
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has VTable
// Is Abstract
// MDisableDataDescValidation
// MNetworkAssumeNotNetworkable
class CDOTA_ActionRunner
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	// MNetworkDisable
	CModifierParams* m_pEventContext; // 0x8	
	// MNetworkDisable
	CDOTA_BaseNPC* m_pCaster; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xc
// Has Trivial Constructor
// Has Trivial Destructor
struct TimedTeamStats_t
{
public:
	uint32_t m_nTime; // 0x0	
	uint16_t m_nEnemyTowerStatus; // 0x4	
	uint16_t m_nEnemyBarracksStatus; // 0x6	
	uint8_t m_nEnemyTowersKilled; // 0x8	
	uint8_t m_nEnemyBarracksKilled; // 0x9	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
// Has Trivial Destructor
struct magnetted_objects_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	CHandle< CBaseEntity > hEntity; // 0x8	
};

// Registered binary: server.dll (project 'navlib')
// Alignment: 8
// Size: 0x18
// Construct allowed
// 
// MVDataRoot
// MGetKV3ClassDefaults
class CNavHullPresetVData
{
public:
	// MPropertyFriendlyName "Nav Hulls"
	// MPropertyDescription "List of nav hulls belonging to this preset."
	// MPropertyAttributeEditor "VDataChoice( scripts/nav_hulls.vdata )"
	CUtlVector< CUtlString > m_vecNavHulls; // 0x0	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Magnataur : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x8
// Has Trivial Constructor
// Has Trivial Destructor
struct PurchasedItem_t
{
public:
	int32_t nItemID; // 0x0	
	float flPurchaseTime; // 0x4	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has VTable
// Has Trivial Destructor
struct locksound_t
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	CUtlSymbolLarge sLockedSound; // 0x8	
	CUtlSymbolLarge sUnlockedSound; // 0x10	
	GameTime_t flwaitSound; // 0x18	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has VTable
// Has Trivial Destructor
class CSmoothFunc
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	float m_flSmoothAmplitude; // 0x8	
	float m_flSmoothBias; // 0xc	
	float m_flSmoothDuration; // 0x10	
	float m_flSmoothRemainingTime; // 0x14	
	int32_t m_nSmoothDir; // 0x18	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xa
// Has Trivial Destructor
struct HullFlags_t
{
public:
	bool m_bHull_Human; // 0x0	
	bool m_bHull_SmallCentered; // 0x1	
	bool m_bHull_WideHuman; // 0x2	
	bool m_bHull_Tiny; // 0x3	
	bool m_bHull_Medium; // 0x4	
	bool m_bHull_TinyCentered; // 0x5	
	bool m_bHull_Large; // 0x6	
	bool m_bHull_LargeCentered; // 0x7	
	bool m_bHull_MediumTall; // 0x8	
	bool m_bHull_Small; // 0x9	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x4f8
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPhysMotor : public CLogicalEntity
{
public:
	CUtlSymbolLarge m_nameAttach; // 0x4a8	
	CHandle< CBaseEntity > m_hAttachedObject; // 0x4b0	
	float m_spinUp; // 0x4b4	
	float m_additionalAcceleration; // 0x4b8	
	float m_angularAcceleration; // 0x4bc	
	GameTime_t m_lastTime; // 0x4c0	
private:
	[[maybe_unused]] uint8_t __pad04c4[0x14]; // 0x4c4
public:
	// -> m_speed - 0x4e0
	// -> m_maxTorque - 0x4e4
	// -> m_axis - 0x4e8
	// -> m_inertiaFactor - 0x4f4
	CMotorController m_motor; // 0x4d8	
	
	// Datamap fields:
	// float InputSetTargetSpeed; // 0x0
	// void InputTurnOn; // 0x0
	// void InputTurnOff; // 0x0
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
class sPendingTreeModelChange
{
public:
	int32_t nTeam; // 0x0	
	int32_t nIndex; // 0x4	
	CUtlString strModel; // 0x8	
	int32_t nChangeToken; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x520
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CFilterDotaEntities : public CBaseFilter
{
public:
	CDotaEntityFilterFlags m_FilterFlags; // 0x500	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x518
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CPhysTorque : public CPhysForce
{
public:
	Vector m_axis; // 0x508	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1d98
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
class CDOTA_Unit_Hero_Bane : public CDOTA_BaseNPC_Hero
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x34
// Has Trivial Destructor
struct CreatureAbilityData_t
{
public:
	CHandle< CBaseEntity > hAbility; // 0x0	
	bool bIsDamage; // 0x4	
	bool bIsDebuff; // 0x5	
	bool bIsStun; // 0x6	
	bool bIsAOE; // 0x7	
	bool bIsLinear; // 0x8	
	bool bUseOnCreeps; // 0x9	
	bool bIsHeal; // 0xa	
	bool bIsBuff; // 0xb	
	bool bUseSelfishly; // 0xc	
	bool bCanHelpOthersEscape; // 0xd	
	bool bUseOnTrees; // 0xe	
	bool bUseOnStrongestAlly; // 0xf	
	int32_t nUseAtHealthPercent; // 0x10	
	int32_t nRadius; // 0x14	
	int32_t nMinimumTargets; // 0x18	
	int32_t nMaximumTargets; // 0x1c	
	int32_t nMinimumHP; // 0x20	
	int32_t nMinimumRange; // 0x24	
	float flInitialCooldownMin; // 0x28	
	float flInitialCooldownMax; // 0x2c	
	CreatureAbilityType nAbilityType; // 0x30	
};

// Registered binary: server.dll (project 'navlib')
// Alignment: 8
// Size: 0x18
// Has Trivial Destructor
class Extent
{
public:
	Vector lo; // 0x0	
	Vector hi; // 0xc	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has VTable
class IBody : public INextBotComponent
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x70
// Has VTable
class CAI_ExpresserWithFollowup : public CAI_Expresser
{
public:
	ResponseFollowup* m_pPostponedFollowup; // 0x60	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xd8
// Has VTable
class CNavVolumeMarkupVolume : public CNavVolume
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has VTable
class IIntention : public INextBotComponent
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x78
// Has VTable
class CMultiplayer_Expresser : public CAI_ExpresserWithFollowup
{
public:
	bool m_bAllowMultipleScenes; // 0x70	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x18
// Has Trivial Constructor
// Has Trivial Destructor
struct CreatureStateData_t
{
public:
	char* pszName; // 0x0	
	float flAggression; // 0x8	
	float flAvoidance; // 0xc	
	float flSupport; // 0x10	
	float flRoamDistance; // 0x14	
};

// Registered binary: server.dll (project 'navlib')
// Alignment: 4
// Size: 0x2c
// Has Trivial Destructor
// Construct allowed
// 
// MVDataRoot
// MGetKV3ClassDefaults
class CNavHullVData
{
public:
	// MPropertyFriendlyName "Enabled"
	// MPropertyDescription "Is this agent enabled for generation? ( will result in 0 nav areas for this agent if not )."
	bool m_bAgentEnabled; // 0x0	
	// MPropertyFriendlyName "Radius"
	// MPropertyDescription "Radius of navigating agent capsule."
	float m_agentRadius; // 0x4	
	// MPropertyFriendlyName "Height"
	// MPropertyDescription "Height of navigating agent capsule."
	float m_agentHeight; // 0x8	
	// MPropertyFriendlyName "Enable Short Height"
	// MPropertyDescription "Enable shorter navigating agent capsules ( e.g. crouch ) in addition to regular height capsules."
	bool m_agentShortHeightEnabled; // 0xc	
private:
	[[maybe_unused]] uint8_t __pad000d[0x3]; // 0xd
public:
	// MPropertyFriendlyName "Short height"
	// MPropertyDescription "Short Height of navigating agent capsules if enabled."
	float m_agentShortHeight; // 0x10	
	// MPropertyFriendlyName "Max Climb"
	// MPropertyDescription "Max vertical offset that the agent simply ignores and walks over."
	float m_agentMaxClimb; // 0x14	
	// MPropertyFriendlyName "Max Slope"
	// MPropertyDescription "Max ground slope to be considered walkable."
	int32_t m_agentMaxSlope; // 0x18	
	// MPropertyFriendlyName "Max Jump Down Distance"
	// MPropertyDescription "Max vertical offset at which to create a jump connection ( possibly one-way )."
	float m_agentMaxJumpDownDist; // 0x1c	
	// MPropertyFriendlyName "Max Horizontal Jump Distance"
	// MPropertyDescription "Max horizontal offset over which to create a jump connection ( actually a parameter into the true threshold function )."
	float m_agentMaxJumpHorizDistBase; // 0x20	
	// MPropertyFriendlyName "Max Jump Up Distance"
	// MPropertyDescription "Max vertical offset at which to make a jump connection two-way."
	float m_agentMaxJumpUpDist; // 0x24	
	// MPropertyFriendlyName "Border Erosion"
	// MPropertyDescription "Border erosion in voxel units ( -1 to use default value based on agent radius )."
	int32_t m_agentBorderErosion; // 0x28	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x14
// Has Trivial Destructor
struct SoundOpvarTraceResult_t
{
public:
	Vector vPos; // 0x0	
	bool bDidHit; // 0xc	
private:
	[[maybe_unused]] uint8_t __pad000d[0x3]; // 0xd
public:
	float flDistSqrToCenter; // 0x10	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x98
// Has VTable
// Is Abstract
class CNavVolumeCalculatedVector : public CNavVolume
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x1da0
// Has VTable
// Construct allowed
// MClassHasEntityLimitedDataDesc
// MNetworkAssumeNotNetworkable
// 
// MNetworkVarNames "int m_nTargetAngle"
class CDOTA_Unit_Hero_Windrunner : public CDOTA_BaseNPC_Hero
{
public:
	// MNetworkEnable
	// MNetworkPriority "32"
	int32_t m_nTargetAngle; // 0x1d98	
	ParticleIndex_t m_nFXDeath; // 0x1d9c	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x230
class CResponseQueue::CDeferredResponse
{
private:
	[[maybe_unused]] uint8_t __pad0000[0x8]; // 0x0
public:
	CResponseCriteriaSet m_contexts; // 0x8	
	float m_fDispatchTime; // 0x30	
	CHandle< CBaseEntity > m_hIssuer; // 0x34	
private:
	[[maybe_unused]] uint8_t __pad0038[0x8]; // 0x38
public:
	CRR_Response m_response; // 0x40	
	bool m_bResponseValid; // 0x228	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0xb8
// Has VTable
class CNavVolumeBreadthFirstSearch : public CNavVolumeCalculatedVector
{
private:
	[[maybe_unused]] uint8_t __pad0098[0x8]; // 0x98
public:
	Vector m_vStartPos; // 0xa0	
	float m_flSearchDist; // 0xac	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x540
// Has VTable
// Construct allowed
// MNetworkAssumeNotNetworkable
class CAmbientGeneric : public CPointEntity
{
public:
	float m_radius; // 0x4a8	
	float m_flMaxRadius; // 0x4ac	
	soundlevel_t m_iSoundLevel; // 0x4b0	
	dynpitchvol_t m_dpv; // 0x4b4	
	bool m_fActive; // 0x518	
	bool m_fLooping; // 0x519	
private:
	[[maybe_unused]] uint8_t __pad051a[0x6]; // 0x51a
public:
	CUtlSymbolLarge m_iszSound; // 0x520	
	CUtlSymbolLarge m_sSourceEntName; // 0x528	
	CHandle< CBaseEntity > m_hSoundSource; // 0x530	
	CEntityIndex m_nSoundSourceEntIndex; // 0x534	
	
	// Datamap fields:
	// void m_nGUID; // 0x538
	// void CAmbientGenericRampThink; // 0x0
	// void InputPlaySound; // 0x0
	// void InputStopSound; // 0x0
	// void InputToggleSound; // 0x0
	// float InputPitch; // 0x0
	// float InputVolume; // 0x0
	// float InputFadeIn; // 0x0
	// float InputFadeOut; // 0x0
	// int32_t fadein; // 0x7fffffff
	// int32_t fadeout; // 0x7fffffff
	// int32_t fadeinsecs; // 0x7fffffff
	// int32_t fadeoutsecs; // 0x7fffffff
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x20
// Has VTable
// Is Abstract
// MNetworkAssumeNotNetworkable
class CDOTA_Tree : public CObstructionObject
{
public:
	bool m_bStanding; // 0x18	
	bool m_bSpecialConsume; // 0x19	
	bool m_bSpecialToxic; // 0x1a	
	bool m_bSpecialPathing; // 0x1b	
	uint32_t m_unOccluderID; // 0x1c	
	
	// Static fields:
	static int32_t &Get_s_nNextChangeToken(){return *reinterpret_cast<int32_t*>(interfaces::g_schema->FindTypeScopeForModule("server.dll")->FindDeclaredClass("CDOTA_Tree")->GetStaticFields()[0]->m_pInstance);};
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
// Has Trivial Destructor
struct WearableData_t
{
public:
	item_definition_index_t nItemDef; // 0x0	
	int32_t nSkin; // 0x4	
	int32_t nGroup; // 0x8	
	CHandle< CBaseEntity > hWearable; // 0xc	
};

// Registered binary: server.dll (project 'navlib')
// Alignment: 8
// Size: 0x98
// Has VTable
class CNavVolumeAll : public CNavVolumeVector
{
public:
	// No schema binary for binding
};

// Registered binary: server.dll (project 'navlib')
// Alignment: 8
// Size: 0x88
// Has VTable
class CNavVolumeSphericalShell : public CNavVolumeSphere
{
public:
	float m_flRadiusInner; // 0x80	
};

// Registered binary: server.dll (project 'server')
// Alignment: 8
// Size: 0x10
// Has Trivial Destructor
struct RelationshipOverride_t : public Relationship_t
{
public:
	CHandle< CBaseEntity > entity; // 0x8	
	Class_T classType; // 0xc	
};

